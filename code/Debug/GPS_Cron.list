
GPS_Cron.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a388  080000b8  080000b8  000100b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000748  0800a440  0800a440  0001a440  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800ab88  0800ab88  000202a8  2**0
                  CONTENTS
  4 .ARM          00000000  0800ab88  0800ab88  000202a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800ab88  0800ab88  000202a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800ab88  0800ab88  0001ab88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800ab8c  0800ab8c  0001ab8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002a8  20000000  0800ab90  00020000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  9 .bss          00000130  200002a8  0800ae38  000202a8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003d8  0800ae38  000203d8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000202a8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000eef8  00000000  00000000  000202d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003377  00000000  00000000  0002f1c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000691d  00000000  00000000  0003253f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000008b0  00000000  00000000  00038e60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001448  00000000  00000000  00039710  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001851a  00000000  00000000  0003ab58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000fb17  00000000  00000000  00053072  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00088e0a  00000000  00000000  00062b89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000eb993  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002da8  00000000  00000000  000eb9e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	200002a8 	.word	0x200002a8
 80000d8:	00000000 	.word	0x00000000
 80000dc:	0800a414 	.word	0x0800a414

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	200002ac 	.word	0x200002ac
 80000fc:	0800a414 	.word	0x0800a414

08000100 <strcmp>:
 8000100:	7802      	ldrb	r2, [r0, #0]
 8000102:	780b      	ldrb	r3, [r1, #0]
 8000104:	2a00      	cmp	r2, #0
 8000106:	d003      	beq.n	8000110 <strcmp+0x10>
 8000108:	3001      	adds	r0, #1
 800010a:	3101      	adds	r1, #1
 800010c:	429a      	cmp	r2, r3
 800010e:	d0f7      	beq.n	8000100 <strcmp>
 8000110:	1ad0      	subs	r0, r2, r3
 8000112:	4770      	bx	lr

08000114 <strlen>:
 8000114:	2300      	movs	r3, #0
 8000116:	5cc2      	ldrb	r2, [r0, r3]
 8000118:	3301      	adds	r3, #1
 800011a:	2a00      	cmp	r2, #0
 800011c:	d1fb      	bne.n	8000116 <strlen+0x2>
 800011e:	1e58      	subs	r0, r3, #1
 8000120:	4770      	bx	lr
	...

08000124 <__gnu_thumb1_case_uqi>:
 8000124:	b402      	push	{r1}
 8000126:	4671      	mov	r1, lr
 8000128:	0849      	lsrs	r1, r1, #1
 800012a:	0049      	lsls	r1, r1, #1
 800012c:	5c09      	ldrb	r1, [r1, r0]
 800012e:	0049      	lsls	r1, r1, #1
 8000130:	448e      	add	lr, r1
 8000132:	bc02      	pop	{r1}
 8000134:	4770      	bx	lr
 8000136:	46c0      	nop			; (mov r8, r8)

08000138 <__gnu_thumb1_case_shi>:
 8000138:	b403      	push	{r0, r1}
 800013a:	4671      	mov	r1, lr
 800013c:	0849      	lsrs	r1, r1, #1
 800013e:	0040      	lsls	r0, r0, #1
 8000140:	0049      	lsls	r1, r1, #1
 8000142:	5e09      	ldrsh	r1, [r1, r0]
 8000144:	0049      	lsls	r1, r1, #1
 8000146:	448e      	add	lr, r1
 8000148:	bc03      	pop	{r0, r1}
 800014a:	4770      	bx	lr

0800014c <__udivsi3>:
 800014c:	2200      	movs	r2, #0
 800014e:	0843      	lsrs	r3, r0, #1
 8000150:	428b      	cmp	r3, r1
 8000152:	d374      	bcc.n	800023e <__udivsi3+0xf2>
 8000154:	0903      	lsrs	r3, r0, #4
 8000156:	428b      	cmp	r3, r1
 8000158:	d35f      	bcc.n	800021a <__udivsi3+0xce>
 800015a:	0a03      	lsrs	r3, r0, #8
 800015c:	428b      	cmp	r3, r1
 800015e:	d344      	bcc.n	80001ea <__udivsi3+0x9e>
 8000160:	0b03      	lsrs	r3, r0, #12
 8000162:	428b      	cmp	r3, r1
 8000164:	d328      	bcc.n	80001b8 <__udivsi3+0x6c>
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d30d      	bcc.n	8000188 <__udivsi3+0x3c>
 800016c:	22ff      	movs	r2, #255	; 0xff
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	ba12      	rev	r2, r2
 8000172:	0c03      	lsrs	r3, r0, #16
 8000174:	428b      	cmp	r3, r1
 8000176:	d302      	bcc.n	800017e <__udivsi3+0x32>
 8000178:	1212      	asrs	r2, r2, #8
 800017a:	0209      	lsls	r1, r1, #8
 800017c:	d065      	beq.n	800024a <__udivsi3+0xfe>
 800017e:	0b03      	lsrs	r3, r0, #12
 8000180:	428b      	cmp	r3, r1
 8000182:	d319      	bcc.n	80001b8 <__udivsi3+0x6c>
 8000184:	e000      	b.n	8000188 <__udivsi3+0x3c>
 8000186:	0a09      	lsrs	r1, r1, #8
 8000188:	0bc3      	lsrs	r3, r0, #15
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x46>
 800018e:	03cb      	lsls	r3, r1, #15
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b83      	lsrs	r3, r0, #14
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x52>
 800019a:	038b      	lsls	r3, r1, #14
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b43      	lsrs	r3, r0, #13
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x5e>
 80001a6:	034b      	lsls	r3, r1, #13
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0b03      	lsrs	r3, r0, #12
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x6a>
 80001b2:	030b      	lsls	r3, r1, #12
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0ac3      	lsrs	r3, r0, #11
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x76>
 80001be:	02cb      	lsls	r3, r1, #11
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a83      	lsrs	r3, r0, #10
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x82>
 80001ca:	028b      	lsls	r3, r1, #10
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a43      	lsrs	r3, r0, #9
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x8e>
 80001d6:	024b      	lsls	r3, r1, #9
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	0a03      	lsrs	r3, r0, #8
 80001de:	428b      	cmp	r3, r1
 80001e0:	d301      	bcc.n	80001e6 <__udivsi3+0x9a>
 80001e2:	020b      	lsls	r3, r1, #8
 80001e4:	1ac0      	subs	r0, r0, r3
 80001e6:	4152      	adcs	r2, r2
 80001e8:	d2cd      	bcs.n	8000186 <__udivsi3+0x3a>
 80001ea:	09c3      	lsrs	r3, r0, #7
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xa8>
 80001f0:	01cb      	lsls	r3, r1, #7
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0983      	lsrs	r3, r0, #6
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xb4>
 80001fc:	018b      	lsls	r3, r1, #6
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0943      	lsrs	r3, r0, #5
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xc0>
 8000208:	014b      	lsls	r3, r1, #5
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	0903      	lsrs	r3, r0, #4
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xcc>
 8000214:	010b      	lsls	r3, r1, #4
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	08c3      	lsrs	r3, r0, #3
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xd8>
 8000220:	00cb      	lsls	r3, r1, #3
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0883      	lsrs	r3, r0, #2
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xe4>
 800022c:	008b      	lsls	r3, r1, #2
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	0843      	lsrs	r3, r0, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d301      	bcc.n	800023c <__udivsi3+0xf0>
 8000238:	004b      	lsls	r3, r1, #1
 800023a:	1ac0      	subs	r0, r0, r3
 800023c:	4152      	adcs	r2, r2
 800023e:	1a41      	subs	r1, r0, r1
 8000240:	d200      	bcs.n	8000244 <__udivsi3+0xf8>
 8000242:	4601      	mov	r1, r0
 8000244:	4152      	adcs	r2, r2
 8000246:	4610      	mov	r0, r2
 8000248:	4770      	bx	lr
 800024a:	e7ff      	b.n	800024c <__udivsi3+0x100>
 800024c:	b501      	push	{r0, lr}
 800024e:	2000      	movs	r0, #0
 8000250:	f000 f8f0 	bl	8000434 <__aeabi_idiv0>
 8000254:	bd02      	pop	{r1, pc}
 8000256:	46c0      	nop			; (mov r8, r8)

08000258 <__aeabi_uidivmod>:
 8000258:	2900      	cmp	r1, #0
 800025a:	d0f7      	beq.n	800024c <__udivsi3+0x100>
 800025c:	e776      	b.n	800014c <__udivsi3>
 800025e:	4770      	bx	lr

08000260 <__divsi3>:
 8000260:	4603      	mov	r3, r0
 8000262:	430b      	orrs	r3, r1
 8000264:	d47f      	bmi.n	8000366 <__divsi3+0x106>
 8000266:	2200      	movs	r2, #0
 8000268:	0843      	lsrs	r3, r0, #1
 800026a:	428b      	cmp	r3, r1
 800026c:	d374      	bcc.n	8000358 <__divsi3+0xf8>
 800026e:	0903      	lsrs	r3, r0, #4
 8000270:	428b      	cmp	r3, r1
 8000272:	d35f      	bcc.n	8000334 <__divsi3+0xd4>
 8000274:	0a03      	lsrs	r3, r0, #8
 8000276:	428b      	cmp	r3, r1
 8000278:	d344      	bcc.n	8000304 <__divsi3+0xa4>
 800027a:	0b03      	lsrs	r3, r0, #12
 800027c:	428b      	cmp	r3, r1
 800027e:	d328      	bcc.n	80002d2 <__divsi3+0x72>
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d30d      	bcc.n	80002a2 <__divsi3+0x42>
 8000286:	22ff      	movs	r2, #255	; 0xff
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	ba12      	rev	r2, r2
 800028c:	0c03      	lsrs	r3, r0, #16
 800028e:	428b      	cmp	r3, r1
 8000290:	d302      	bcc.n	8000298 <__divsi3+0x38>
 8000292:	1212      	asrs	r2, r2, #8
 8000294:	0209      	lsls	r1, r1, #8
 8000296:	d065      	beq.n	8000364 <__divsi3+0x104>
 8000298:	0b03      	lsrs	r3, r0, #12
 800029a:	428b      	cmp	r3, r1
 800029c:	d319      	bcc.n	80002d2 <__divsi3+0x72>
 800029e:	e000      	b.n	80002a2 <__divsi3+0x42>
 80002a0:	0a09      	lsrs	r1, r1, #8
 80002a2:	0bc3      	lsrs	r3, r0, #15
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x4c>
 80002a8:	03cb      	lsls	r3, r1, #15
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b83      	lsrs	r3, r0, #14
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x58>
 80002b4:	038b      	lsls	r3, r1, #14
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b43      	lsrs	r3, r0, #13
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x64>
 80002c0:	034b      	lsls	r3, r1, #13
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0b03      	lsrs	r3, r0, #12
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x70>
 80002cc:	030b      	lsls	r3, r1, #12
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0ac3      	lsrs	r3, r0, #11
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x7c>
 80002d8:	02cb      	lsls	r3, r1, #11
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a83      	lsrs	r3, r0, #10
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x88>
 80002e4:	028b      	lsls	r3, r1, #10
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a43      	lsrs	r3, r0, #9
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0x94>
 80002f0:	024b      	lsls	r3, r1, #9
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	0a03      	lsrs	r3, r0, #8
 80002f8:	428b      	cmp	r3, r1
 80002fa:	d301      	bcc.n	8000300 <__divsi3+0xa0>
 80002fc:	020b      	lsls	r3, r1, #8
 80002fe:	1ac0      	subs	r0, r0, r3
 8000300:	4152      	adcs	r2, r2
 8000302:	d2cd      	bcs.n	80002a0 <__divsi3+0x40>
 8000304:	09c3      	lsrs	r3, r0, #7
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xae>
 800030a:	01cb      	lsls	r3, r1, #7
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0983      	lsrs	r3, r0, #6
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xba>
 8000316:	018b      	lsls	r3, r1, #6
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0943      	lsrs	r3, r0, #5
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xc6>
 8000322:	014b      	lsls	r3, r1, #5
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	0903      	lsrs	r3, r0, #4
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xd2>
 800032e:	010b      	lsls	r3, r1, #4
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	08c3      	lsrs	r3, r0, #3
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xde>
 800033a:	00cb      	lsls	r3, r1, #3
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0883      	lsrs	r3, r0, #2
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xea>
 8000346:	008b      	lsls	r3, r1, #2
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	0843      	lsrs	r3, r0, #1
 800034e:	428b      	cmp	r3, r1
 8000350:	d301      	bcc.n	8000356 <__divsi3+0xf6>
 8000352:	004b      	lsls	r3, r1, #1
 8000354:	1ac0      	subs	r0, r0, r3
 8000356:	4152      	adcs	r2, r2
 8000358:	1a41      	subs	r1, r0, r1
 800035a:	d200      	bcs.n	800035e <__divsi3+0xfe>
 800035c:	4601      	mov	r1, r0
 800035e:	4152      	adcs	r2, r2
 8000360:	4610      	mov	r0, r2
 8000362:	4770      	bx	lr
 8000364:	e05d      	b.n	8000422 <__divsi3+0x1c2>
 8000366:	0fca      	lsrs	r2, r1, #31
 8000368:	d000      	beq.n	800036c <__divsi3+0x10c>
 800036a:	4249      	negs	r1, r1
 800036c:	1003      	asrs	r3, r0, #32
 800036e:	d300      	bcc.n	8000372 <__divsi3+0x112>
 8000370:	4240      	negs	r0, r0
 8000372:	4053      	eors	r3, r2
 8000374:	2200      	movs	r2, #0
 8000376:	469c      	mov	ip, r3
 8000378:	0903      	lsrs	r3, r0, #4
 800037a:	428b      	cmp	r3, r1
 800037c:	d32d      	bcc.n	80003da <__divsi3+0x17a>
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d312      	bcc.n	80003aa <__divsi3+0x14a>
 8000384:	22fc      	movs	r2, #252	; 0xfc
 8000386:	0189      	lsls	r1, r1, #6
 8000388:	ba12      	rev	r2, r2
 800038a:	0a03      	lsrs	r3, r0, #8
 800038c:	428b      	cmp	r3, r1
 800038e:	d30c      	bcc.n	80003aa <__divsi3+0x14a>
 8000390:	0189      	lsls	r1, r1, #6
 8000392:	1192      	asrs	r2, r2, #6
 8000394:	428b      	cmp	r3, r1
 8000396:	d308      	bcc.n	80003aa <__divsi3+0x14a>
 8000398:	0189      	lsls	r1, r1, #6
 800039a:	1192      	asrs	r2, r2, #6
 800039c:	428b      	cmp	r3, r1
 800039e:	d304      	bcc.n	80003aa <__divsi3+0x14a>
 80003a0:	0189      	lsls	r1, r1, #6
 80003a2:	d03a      	beq.n	800041a <__divsi3+0x1ba>
 80003a4:	1192      	asrs	r2, r2, #6
 80003a6:	e000      	b.n	80003aa <__divsi3+0x14a>
 80003a8:	0989      	lsrs	r1, r1, #6
 80003aa:	09c3      	lsrs	r3, r0, #7
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x154>
 80003b0:	01cb      	lsls	r3, r1, #7
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0983      	lsrs	r3, r0, #6
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x160>
 80003bc:	018b      	lsls	r3, r1, #6
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0943      	lsrs	r3, r0, #5
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x16c>
 80003c8:	014b      	lsls	r3, r1, #5
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	0903      	lsrs	r3, r0, #4
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x178>
 80003d4:	010b      	lsls	r3, r1, #4
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	08c3      	lsrs	r3, r0, #3
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x184>
 80003e0:	00cb      	lsls	r3, r1, #3
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	0883      	lsrs	r3, r0, #2
 80003e8:	428b      	cmp	r3, r1
 80003ea:	d301      	bcc.n	80003f0 <__divsi3+0x190>
 80003ec:	008b      	lsls	r3, r1, #2
 80003ee:	1ac0      	subs	r0, r0, r3
 80003f0:	4152      	adcs	r2, r2
 80003f2:	d2d9      	bcs.n	80003a8 <__divsi3+0x148>
 80003f4:	0843      	lsrs	r3, r0, #1
 80003f6:	428b      	cmp	r3, r1
 80003f8:	d301      	bcc.n	80003fe <__divsi3+0x19e>
 80003fa:	004b      	lsls	r3, r1, #1
 80003fc:	1ac0      	subs	r0, r0, r3
 80003fe:	4152      	adcs	r2, r2
 8000400:	1a41      	subs	r1, r0, r1
 8000402:	d200      	bcs.n	8000406 <__divsi3+0x1a6>
 8000404:	4601      	mov	r1, r0
 8000406:	4663      	mov	r3, ip
 8000408:	4152      	adcs	r2, r2
 800040a:	105b      	asrs	r3, r3, #1
 800040c:	4610      	mov	r0, r2
 800040e:	d301      	bcc.n	8000414 <__divsi3+0x1b4>
 8000410:	4240      	negs	r0, r0
 8000412:	2b00      	cmp	r3, #0
 8000414:	d500      	bpl.n	8000418 <__divsi3+0x1b8>
 8000416:	4249      	negs	r1, r1
 8000418:	4770      	bx	lr
 800041a:	4663      	mov	r3, ip
 800041c:	105b      	asrs	r3, r3, #1
 800041e:	d300      	bcc.n	8000422 <__divsi3+0x1c2>
 8000420:	4240      	negs	r0, r0
 8000422:	b501      	push	{r0, lr}
 8000424:	2000      	movs	r0, #0
 8000426:	f000 f805 	bl	8000434 <__aeabi_idiv0>
 800042a:	bd02      	pop	{r1, pc}

0800042c <__aeabi_idivmod>:
 800042c:	2900      	cmp	r1, #0
 800042e:	d0f8      	beq.n	8000422 <__divsi3+0x1c2>
 8000430:	e716      	b.n	8000260 <__divsi3>
 8000432:	4770      	bx	lr

08000434 <__aeabi_idiv0>:
 8000434:	4770      	bx	lr
 8000436:	46c0      	nop			; (mov r8, r8)

08000438 <__aeabi_cdrcmple>:
 8000438:	4684      	mov	ip, r0
 800043a:	0010      	movs	r0, r2
 800043c:	4662      	mov	r2, ip
 800043e:	468c      	mov	ip, r1
 8000440:	0019      	movs	r1, r3
 8000442:	4663      	mov	r3, ip
 8000444:	e000      	b.n	8000448 <__aeabi_cdcmpeq>
 8000446:	46c0      	nop			; (mov r8, r8)

08000448 <__aeabi_cdcmpeq>:
 8000448:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800044a:	f001 fd75 	bl	8001f38 <__ledf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	d401      	bmi.n	8000456 <__aeabi_cdcmpeq+0xe>
 8000452:	2100      	movs	r1, #0
 8000454:	42c8      	cmn	r0, r1
 8000456:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000458 <__aeabi_dcmpeq>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 fcc5 	bl	8001de8 <__eqdf2>
 800045e:	4240      	negs	r0, r0
 8000460:	3001      	adds	r0, #1
 8000462:	bd10      	pop	{r4, pc}

08000464 <__aeabi_dcmplt>:
 8000464:	b510      	push	{r4, lr}
 8000466:	f001 fd67 	bl	8001f38 <__ledf2>
 800046a:	2800      	cmp	r0, #0
 800046c:	db01      	blt.n	8000472 <__aeabi_dcmplt+0xe>
 800046e:	2000      	movs	r0, #0
 8000470:	bd10      	pop	{r4, pc}
 8000472:	2001      	movs	r0, #1
 8000474:	bd10      	pop	{r4, pc}
 8000476:	46c0      	nop			; (mov r8, r8)

08000478 <__aeabi_dcmple>:
 8000478:	b510      	push	{r4, lr}
 800047a:	f001 fd5d 	bl	8001f38 <__ledf2>
 800047e:	2800      	cmp	r0, #0
 8000480:	dd01      	ble.n	8000486 <__aeabi_dcmple+0xe>
 8000482:	2000      	movs	r0, #0
 8000484:	bd10      	pop	{r4, pc}
 8000486:	2001      	movs	r0, #1
 8000488:	bd10      	pop	{r4, pc}
 800048a:	46c0      	nop			; (mov r8, r8)

0800048c <__aeabi_dcmpgt>:
 800048c:	b510      	push	{r4, lr}
 800048e:	f001 fced 	bl	8001e6c <__gedf2>
 8000492:	2800      	cmp	r0, #0
 8000494:	dc01      	bgt.n	800049a <__aeabi_dcmpgt+0xe>
 8000496:	2000      	movs	r0, #0
 8000498:	bd10      	pop	{r4, pc}
 800049a:	2001      	movs	r0, #1
 800049c:	bd10      	pop	{r4, pc}
 800049e:	46c0      	nop			; (mov r8, r8)

080004a0 <__aeabi_dcmpge>:
 80004a0:	b510      	push	{r4, lr}
 80004a2:	f001 fce3 	bl	8001e6c <__gedf2>
 80004a6:	2800      	cmp	r0, #0
 80004a8:	da01      	bge.n	80004ae <__aeabi_dcmpge+0xe>
 80004aa:	2000      	movs	r0, #0
 80004ac:	bd10      	pop	{r4, pc}
 80004ae:	2001      	movs	r0, #1
 80004b0:	bd10      	pop	{r4, pc}
 80004b2:	46c0      	nop			; (mov r8, r8)

080004b4 <__aeabi_d2uiz>:
 80004b4:	b570      	push	{r4, r5, r6, lr}
 80004b6:	2200      	movs	r2, #0
 80004b8:	4b0c      	ldr	r3, [pc, #48]	; (80004ec <__aeabi_d2uiz+0x38>)
 80004ba:	0004      	movs	r4, r0
 80004bc:	000d      	movs	r5, r1
 80004be:	f7ff ffef 	bl	80004a0 <__aeabi_dcmpge>
 80004c2:	2800      	cmp	r0, #0
 80004c4:	d104      	bne.n	80004d0 <__aeabi_d2uiz+0x1c>
 80004c6:	0020      	movs	r0, r4
 80004c8:	0029      	movs	r1, r5
 80004ca:	f002 fbb5 	bl	8002c38 <__aeabi_d2iz>
 80004ce:	bd70      	pop	{r4, r5, r6, pc}
 80004d0:	4b06      	ldr	r3, [pc, #24]	; (80004ec <__aeabi_d2uiz+0x38>)
 80004d2:	2200      	movs	r2, #0
 80004d4:	0020      	movs	r0, r4
 80004d6:	0029      	movs	r1, r5
 80004d8:	f001 fffe 	bl	80024d8 <__aeabi_dsub>
 80004dc:	f002 fbac 	bl	8002c38 <__aeabi_d2iz>
 80004e0:	2380      	movs	r3, #128	; 0x80
 80004e2:	061b      	lsls	r3, r3, #24
 80004e4:	469c      	mov	ip, r3
 80004e6:	4460      	add	r0, ip
 80004e8:	e7f1      	b.n	80004ce <__aeabi_d2uiz+0x1a>
 80004ea:	46c0      	nop			; (mov r8, r8)
 80004ec:	41e00000 	.word	0x41e00000

080004f0 <__aeabi_d2lz>:
 80004f0:	b570      	push	{r4, r5, r6, lr}
 80004f2:	0005      	movs	r5, r0
 80004f4:	000c      	movs	r4, r1
 80004f6:	2200      	movs	r2, #0
 80004f8:	2300      	movs	r3, #0
 80004fa:	0028      	movs	r0, r5
 80004fc:	0021      	movs	r1, r4
 80004fe:	f7ff ffb1 	bl	8000464 <__aeabi_dcmplt>
 8000502:	2800      	cmp	r0, #0
 8000504:	d108      	bne.n	8000518 <__aeabi_d2lz+0x28>
 8000506:	0028      	movs	r0, r5
 8000508:	0021      	movs	r1, r4
 800050a:	f000 f80f 	bl	800052c <__aeabi_d2ulz>
 800050e:	0002      	movs	r2, r0
 8000510:	000b      	movs	r3, r1
 8000512:	0010      	movs	r0, r2
 8000514:	0019      	movs	r1, r3
 8000516:	bd70      	pop	{r4, r5, r6, pc}
 8000518:	2380      	movs	r3, #128	; 0x80
 800051a:	061b      	lsls	r3, r3, #24
 800051c:	18e1      	adds	r1, r4, r3
 800051e:	0028      	movs	r0, r5
 8000520:	f000 f804 	bl	800052c <__aeabi_d2ulz>
 8000524:	2300      	movs	r3, #0
 8000526:	4242      	negs	r2, r0
 8000528:	418b      	sbcs	r3, r1
 800052a:	e7f2      	b.n	8000512 <__aeabi_d2lz+0x22>

0800052c <__aeabi_d2ulz>:
 800052c:	b570      	push	{r4, r5, r6, lr}
 800052e:	2200      	movs	r2, #0
 8000530:	4b0b      	ldr	r3, [pc, #44]	; (8000560 <__aeabi_d2ulz+0x34>)
 8000532:	000d      	movs	r5, r1
 8000534:	0004      	movs	r4, r0
 8000536:	f001 fd63 	bl	8002000 <__aeabi_dmul>
 800053a:	f7ff ffbb 	bl	80004b4 <__aeabi_d2uiz>
 800053e:	0006      	movs	r6, r0
 8000540:	f002 fbe0 	bl	8002d04 <__aeabi_ui2d>
 8000544:	2200      	movs	r2, #0
 8000546:	4b07      	ldr	r3, [pc, #28]	; (8000564 <__aeabi_d2ulz+0x38>)
 8000548:	f001 fd5a 	bl	8002000 <__aeabi_dmul>
 800054c:	0002      	movs	r2, r0
 800054e:	000b      	movs	r3, r1
 8000550:	0020      	movs	r0, r4
 8000552:	0029      	movs	r1, r5
 8000554:	f001 ffc0 	bl	80024d8 <__aeabi_dsub>
 8000558:	f7ff ffac 	bl	80004b4 <__aeabi_d2uiz>
 800055c:	0031      	movs	r1, r6
 800055e:	bd70      	pop	{r4, r5, r6, pc}
 8000560:	3df00000 	.word	0x3df00000
 8000564:	41f00000 	.word	0x41f00000

08000568 <__aeabi_l2d>:
 8000568:	b570      	push	{r4, r5, r6, lr}
 800056a:	0006      	movs	r6, r0
 800056c:	0008      	movs	r0, r1
 800056e:	f002 fb99 	bl	8002ca4 <__aeabi_i2d>
 8000572:	2200      	movs	r2, #0
 8000574:	4b06      	ldr	r3, [pc, #24]	; (8000590 <__aeabi_l2d+0x28>)
 8000576:	f001 fd43 	bl	8002000 <__aeabi_dmul>
 800057a:	000d      	movs	r5, r1
 800057c:	0004      	movs	r4, r0
 800057e:	0030      	movs	r0, r6
 8000580:	f002 fbc0 	bl	8002d04 <__aeabi_ui2d>
 8000584:	002b      	movs	r3, r5
 8000586:	0022      	movs	r2, r4
 8000588:	f000 fdfc 	bl	8001184 <__aeabi_dadd>
 800058c:	bd70      	pop	{r4, r5, r6, pc}
 800058e:	46c0      	nop			; (mov r8, r8)
 8000590:	41f00000 	.word	0x41f00000

08000594 <__aeabi_fadd>:
 8000594:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000596:	46c6      	mov	lr, r8
 8000598:	0243      	lsls	r3, r0, #9
 800059a:	0a5b      	lsrs	r3, r3, #9
 800059c:	024e      	lsls	r6, r1, #9
 800059e:	0045      	lsls	r5, r0, #1
 80005a0:	004f      	lsls	r7, r1, #1
 80005a2:	00da      	lsls	r2, r3, #3
 80005a4:	0fc4      	lsrs	r4, r0, #31
 80005a6:	469c      	mov	ip, r3
 80005a8:	0a70      	lsrs	r0, r6, #9
 80005aa:	4690      	mov	r8, r2
 80005ac:	b500      	push	{lr}
 80005ae:	0e2d      	lsrs	r5, r5, #24
 80005b0:	0e3f      	lsrs	r7, r7, #24
 80005b2:	0fc9      	lsrs	r1, r1, #31
 80005b4:	09b6      	lsrs	r6, r6, #6
 80005b6:	428c      	cmp	r4, r1
 80005b8:	d04b      	beq.n	8000652 <__aeabi_fadd+0xbe>
 80005ba:	1bea      	subs	r2, r5, r7
 80005bc:	2a00      	cmp	r2, #0
 80005be:	dd36      	ble.n	800062e <__aeabi_fadd+0x9a>
 80005c0:	2f00      	cmp	r7, #0
 80005c2:	d061      	beq.n	8000688 <__aeabi_fadd+0xf4>
 80005c4:	2dff      	cmp	r5, #255	; 0xff
 80005c6:	d100      	bne.n	80005ca <__aeabi_fadd+0x36>
 80005c8:	e0ad      	b.n	8000726 <__aeabi_fadd+0x192>
 80005ca:	2380      	movs	r3, #128	; 0x80
 80005cc:	04db      	lsls	r3, r3, #19
 80005ce:	431e      	orrs	r6, r3
 80005d0:	2a1b      	cmp	r2, #27
 80005d2:	dc00      	bgt.n	80005d6 <__aeabi_fadd+0x42>
 80005d4:	e0d3      	b.n	800077e <__aeabi_fadd+0x1ea>
 80005d6:	2001      	movs	r0, #1
 80005d8:	4643      	mov	r3, r8
 80005da:	1a18      	subs	r0, r3, r0
 80005dc:	0143      	lsls	r3, r0, #5
 80005de:	d400      	bmi.n	80005e2 <__aeabi_fadd+0x4e>
 80005e0:	e08c      	b.n	80006fc <__aeabi_fadd+0x168>
 80005e2:	0180      	lsls	r0, r0, #6
 80005e4:	0987      	lsrs	r7, r0, #6
 80005e6:	0038      	movs	r0, r7
 80005e8:	f002 fc82 	bl	8002ef0 <__clzsi2>
 80005ec:	3805      	subs	r0, #5
 80005ee:	4087      	lsls	r7, r0
 80005f0:	4285      	cmp	r5, r0
 80005f2:	dc00      	bgt.n	80005f6 <__aeabi_fadd+0x62>
 80005f4:	e0b6      	b.n	8000764 <__aeabi_fadd+0x1d0>
 80005f6:	1a2d      	subs	r5, r5, r0
 80005f8:	48b3      	ldr	r0, [pc, #716]	; (80008c8 <__aeabi_fadd+0x334>)
 80005fa:	4038      	ands	r0, r7
 80005fc:	0743      	lsls	r3, r0, #29
 80005fe:	d004      	beq.n	800060a <__aeabi_fadd+0x76>
 8000600:	230f      	movs	r3, #15
 8000602:	4003      	ands	r3, r0
 8000604:	2b04      	cmp	r3, #4
 8000606:	d000      	beq.n	800060a <__aeabi_fadd+0x76>
 8000608:	3004      	adds	r0, #4
 800060a:	0143      	lsls	r3, r0, #5
 800060c:	d400      	bmi.n	8000610 <__aeabi_fadd+0x7c>
 800060e:	e078      	b.n	8000702 <__aeabi_fadd+0x16e>
 8000610:	1c6a      	adds	r2, r5, #1
 8000612:	2dfe      	cmp	r5, #254	; 0xfe
 8000614:	d065      	beq.n	80006e2 <__aeabi_fadd+0x14e>
 8000616:	0180      	lsls	r0, r0, #6
 8000618:	0a43      	lsrs	r3, r0, #9
 800061a:	469c      	mov	ip, r3
 800061c:	b2d2      	uxtb	r2, r2
 800061e:	4663      	mov	r3, ip
 8000620:	05d0      	lsls	r0, r2, #23
 8000622:	4318      	orrs	r0, r3
 8000624:	07e4      	lsls	r4, r4, #31
 8000626:	4320      	orrs	r0, r4
 8000628:	bc80      	pop	{r7}
 800062a:	46b8      	mov	r8, r7
 800062c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800062e:	2a00      	cmp	r2, #0
 8000630:	d035      	beq.n	800069e <__aeabi_fadd+0x10a>
 8000632:	1b7a      	subs	r2, r7, r5
 8000634:	2d00      	cmp	r5, #0
 8000636:	d000      	beq.n	800063a <__aeabi_fadd+0xa6>
 8000638:	e0af      	b.n	800079a <__aeabi_fadd+0x206>
 800063a:	4643      	mov	r3, r8
 800063c:	2b00      	cmp	r3, #0
 800063e:	d100      	bne.n	8000642 <__aeabi_fadd+0xae>
 8000640:	e0a7      	b.n	8000792 <__aeabi_fadd+0x1fe>
 8000642:	1e53      	subs	r3, r2, #1
 8000644:	2a01      	cmp	r2, #1
 8000646:	d100      	bne.n	800064a <__aeabi_fadd+0xb6>
 8000648:	e12f      	b.n	80008aa <__aeabi_fadd+0x316>
 800064a:	2aff      	cmp	r2, #255	; 0xff
 800064c:	d069      	beq.n	8000722 <__aeabi_fadd+0x18e>
 800064e:	001a      	movs	r2, r3
 8000650:	e0aa      	b.n	80007a8 <__aeabi_fadd+0x214>
 8000652:	1be9      	subs	r1, r5, r7
 8000654:	2900      	cmp	r1, #0
 8000656:	dd70      	ble.n	800073a <__aeabi_fadd+0x1a6>
 8000658:	2f00      	cmp	r7, #0
 800065a:	d037      	beq.n	80006cc <__aeabi_fadd+0x138>
 800065c:	2dff      	cmp	r5, #255	; 0xff
 800065e:	d062      	beq.n	8000726 <__aeabi_fadd+0x192>
 8000660:	2380      	movs	r3, #128	; 0x80
 8000662:	04db      	lsls	r3, r3, #19
 8000664:	431e      	orrs	r6, r3
 8000666:	291b      	cmp	r1, #27
 8000668:	dc00      	bgt.n	800066c <__aeabi_fadd+0xd8>
 800066a:	e0b0      	b.n	80007ce <__aeabi_fadd+0x23a>
 800066c:	2001      	movs	r0, #1
 800066e:	4440      	add	r0, r8
 8000670:	0143      	lsls	r3, r0, #5
 8000672:	d543      	bpl.n	80006fc <__aeabi_fadd+0x168>
 8000674:	3501      	adds	r5, #1
 8000676:	2dff      	cmp	r5, #255	; 0xff
 8000678:	d033      	beq.n	80006e2 <__aeabi_fadd+0x14e>
 800067a:	2301      	movs	r3, #1
 800067c:	4a93      	ldr	r2, [pc, #588]	; (80008cc <__aeabi_fadd+0x338>)
 800067e:	4003      	ands	r3, r0
 8000680:	0840      	lsrs	r0, r0, #1
 8000682:	4010      	ands	r0, r2
 8000684:	4318      	orrs	r0, r3
 8000686:	e7b9      	b.n	80005fc <__aeabi_fadd+0x68>
 8000688:	2e00      	cmp	r6, #0
 800068a:	d100      	bne.n	800068e <__aeabi_fadd+0xfa>
 800068c:	e083      	b.n	8000796 <__aeabi_fadd+0x202>
 800068e:	1e51      	subs	r1, r2, #1
 8000690:	2a01      	cmp	r2, #1
 8000692:	d100      	bne.n	8000696 <__aeabi_fadd+0x102>
 8000694:	e0d8      	b.n	8000848 <__aeabi_fadd+0x2b4>
 8000696:	2aff      	cmp	r2, #255	; 0xff
 8000698:	d045      	beq.n	8000726 <__aeabi_fadd+0x192>
 800069a:	000a      	movs	r2, r1
 800069c:	e798      	b.n	80005d0 <__aeabi_fadd+0x3c>
 800069e:	27fe      	movs	r7, #254	; 0xfe
 80006a0:	1c6a      	adds	r2, r5, #1
 80006a2:	4217      	tst	r7, r2
 80006a4:	d000      	beq.n	80006a8 <__aeabi_fadd+0x114>
 80006a6:	e086      	b.n	80007b6 <__aeabi_fadd+0x222>
 80006a8:	2d00      	cmp	r5, #0
 80006aa:	d000      	beq.n	80006ae <__aeabi_fadd+0x11a>
 80006ac:	e0b7      	b.n	800081e <__aeabi_fadd+0x28a>
 80006ae:	4643      	mov	r3, r8
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	d100      	bne.n	80006b6 <__aeabi_fadd+0x122>
 80006b4:	e0f3      	b.n	800089e <__aeabi_fadd+0x30a>
 80006b6:	2200      	movs	r2, #0
 80006b8:	2e00      	cmp	r6, #0
 80006ba:	d0b0      	beq.n	800061e <__aeabi_fadd+0x8a>
 80006bc:	1b98      	subs	r0, r3, r6
 80006be:	0143      	lsls	r3, r0, #5
 80006c0:	d400      	bmi.n	80006c4 <__aeabi_fadd+0x130>
 80006c2:	e0fa      	b.n	80008ba <__aeabi_fadd+0x326>
 80006c4:	4643      	mov	r3, r8
 80006c6:	000c      	movs	r4, r1
 80006c8:	1af0      	subs	r0, r6, r3
 80006ca:	e797      	b.n	80005fc <__aeabi_fadd+0x68>
 80006cc:	2e00      	cmp	r6, #0
 80006ce:	d100      	bne.n	80006d2 <__aeabi_fadd+0x13e>
 80006d0:	e0c8      	b.n	8000864 <__aeabi_fadd+0x2d0>
 80006d2:	1e4a      	subs	r2, r1, #1
 80006d4:	2901      	cmp	r1, #1
 80006d6:	d100      	bne.n	80006da <__aeabi_fadd+0x146>
 80006d8:	e0ae      	b.n	8000838 <__aeabi_fadd+0x2a4>
 80006da:	29ff      	cmp	r1, #255	; 0xff
 80006dc:	d023      	beq.n	8000726 <__aeabi_fadd+0x192>
 80006de:	0011      	movs	r1, r2
 80006e0:	e7c1      	b.n	8000666 <__aeabi_fadd+0xd2>
 80006e2:	2300      	movs	r3, #0
 80006e4:	22ff      	movs	r2, #255	; 0xff
 80006e6:	469c      	mov	ip, r3
 80006e8:	e799      	b.n	800061e <__aeabi_fadd+0x8a>
 80006ea:	21fe      	movs	r1, #254	; 0xfe
 80006ec:	1c6a      	adds	r2, r5, #1
 80006ee:	4211      	tst	r1, r2
 80006f0:	d077      	beq.n	80007e2 <__aeabi_fadd+0x24e>
 80006f2:	2aff      	cmp	r2, #255	; 0xff
 80006f4:	d0f5      	beq.n	80006e2 <__aeabi_fadd+0x14e>
 80006f6:	0015      	movs	r5, r2
 80006f8:	4446      	add	r6, r8
 80006fa:	0870      	lsrs	r0, r6, #1
 80006fc:	0743      	lsls	r3, r0, #29
 80006fe:	d000      	beq.n	8000702 <__aeabi_fadd+0x16e>
 8000700:	e77e      	b.n	8000600 <__aeabi_fadd+0x6c>
 8000702:	08c3      	lsrs	r3, r0, #3
 8000704:	2dff      	cmp	r5, #255	; 0xff
 8000706:	d00e      	beq.n	8000726 <__aeabi_fadd+0x192>
 8000708:	025b      	lsls	r3, r3, #9
 800070a:	0a5b      	lsrs	r3, r3, #9
 800070c:	469c      	mov	ip, r3
 800070e:	b2ea      	uxtb	r2, r5
 8000710:	e785      	b.n	800061e <__aeabi_fadd+0x8a>
 8000712:	2e00      	cmp	r6, #0
 8000714:	d007      	beq.n	8000726 <__aeabi_fadd+0x192>
 8000716:	2280      	movs	r2, #128	; 0x80
 8000718:	03d2      	lsls	r2, r2, #15
 800071a:	4213      	tst	r3, r2
 800071c:	d003      	beq.n	8000726 <__aeabi_fadd+0x192>
 800071e:	4210      	tst	r0, r2
 8000720:	d101      	bne.n	8000726 <__aeabi_fadd+0x192>
 8000722:	000c      	movs	r4, r1
 8000724:	0003      	movs	r3, r0
 8000726:	2b00      	cmp	r3, #0
 8000728:	d0db      	beq.n	80006e2 <__aeabi_fadd+0x14e>
 800072a:	2080      	movs	r0, #128	; 0x80
 800072c:	03c0      	lsls	r0, r0, #15
 800072e:	4318      	orrs	r0, r3
 8000730:	0240      	lsls	r0, r0, #9
 8000732:	0a43      	lsrs	r3, r0, #9
 8000734:	469c      	mov	ip, r3
 8000736:	22ff      	movs	r2, #255	; 0xff
 8000738:	e771      	b.n	800061e <__aeabi_fadd+0x8a>
 800073a:	2900      	cmp	r1, #0
 800073c:	d0d5      	beq.n	80006ea <__aeabi_fadd+0x156>
 800073e:	1b7a      	subs	r2, r7, r5
 8000740:	2d00      	cmp	r5, #0
 8000742:	d160      	bne.n	8000806 <__aeabi_fadd+0x272>
 8000744:	4643      	mov	r3, r8
 8000746:	2b00      	cmp	r3, #0
 8000748:	d024      	beq.n	8000794 <__aeabi_fadd+0x200>
 800074a:	1e53      	subs	r3, r2, #1
 800074c:	2a01      	cmp	r2, #1
 800074e:	d073      	beq.n	8000838 <__aeabi_fadd+0x2a4>
 8000750:	2aff      	cmp	r2, #255	; 0xff
 8000752:	d0e7      	beq.n	8000724 <__aeabi_fadd+0x190>
 8000754:	001a      	movs	r2, r3
 8000756:	2a1b      	cmp	r2, #27
 8000758:	dc00      	bgt.n	800075c <__aeabi_fadd+0x1c8>
 800075a:	e085      	b.n	8000868 <__aeabi_fadd+0x2d4>
 800075c:	2001      	movs	r0, #1
 800075e:	003d      	movs	r5, r7
 8000760:	1980      	adds	r0, r0, r6
 8000762:	e785      	b.n	8000670 <__aeabi_fadd+0xdc>
 8000764:	2320      	movs	r3, #32
 8000766:	003a      	movs	r2, r7
 8000768:	1b45      	subs	r5, r0, r5
 800076a:	0038      	movs	r0, r7
 800076c:	3501      	adds	r5, #1
 800076e:	40ea      	lsrs	r2, r5
 8000770:	1b5d      	subs	r5, r3, r5
 8000772:	40a8      	lsls	r0, r5
 8000774:	1e43      	subs	r3, r0, #1
 8000776:	4198      	sbcs	r0, r3
 8000778:	2500      	movs	r5, #0
 800077a:	4310      	orrs	r0, r2
 800077c:	e73e      	b.n	80005fc <__aeabi_fadd+0x68>
 800077e:	2320      	movs	r3, #32
 8000780:	0030      	movs	r0, r6
 8000782:	1a9b      	subs	r3, r3, r2
 8000784:	0031      	movs	r1, r6
 8000786:	4098      	lsls	r0, r3
 8000788:	40d1      	lsrs	r1, r2
 800078a:	1e43      	subs	r3, r0, #1
 800078c:	4198      	sbcs	r0, r3
 800078e:	4308      	orrs	r0, r1
 8000790:	e722      	b.n	80005d8 <__aeabi_fadd+0x44>
 8000792:	000c      	movs	r4, r1
 8000794:	0003      	movs	r3, r0
 8000796:	0015      	movs	r5, r2
 8000798:	e7b4      	b.n	8000704 <__aeabi_fadd+0x170>
 800079a:	2fff      	cmp	r7, #255	; 0xff
 800079c:	d0c1      	beq.n	8000722 <__aeabi_fadd+0x18e>
 800079e:	2380      	movs	r3, #128	; 0x80
 80007a0:	4640      	mov	r0, r8
 80007a2:	04db      	lsls	r3, r3, #19
 80007a4:	4318      	orrs	r0, r3
 80007a6:	4680      	mov	r8, r0
 80007a8:	2a1b      	cmp	r2, #27
 80007aa:	dd51      	ble.n	8000850 <__aeabi_fadd+0x2bc>
 80007ac:	2001      	movs	r0, #1
 80007ae:	000c      	movs	r4, r1
 80007b0:	003d      	movs	r5, r7
 80007b2:	1a30      	subs	r0, r6, r0
 80007b4:	e712      	b.n	80005dc <__aeabi_fadd+0x48>
 80007b6:	4643      	mov	r3, r8
 80007b8:	1b9f      	subs	r7, r3, r6
 80007ba:	017b      	lsls	r3, r7, #5
 80007bc:	d42b      	bmi.n	8000816 <__aeabi_fadd+0x282>
 80007be:	2f00      	cmp	r7, #0
 80007c0:	d000      	beq.n	80007c4 <__aeabi_fadd+0x230>
 80007c2:	e710      	b.n	80005e6 <__aeabi_fadd+0x52>
 80007c4:	2300      	movs	r3, #0
 80007c6:	2400      	movs	r4, #0
 80007c8:	2200      	movs	r2, #0
 80007ca:	469c      	mov	ip, r3
 80007cc:	e727      	b.n	800061e <__aeabi_fadd+0x8a>
 80007ce:	2320      	movs	r3, #32
 80007d0:	0032      	movs	r2, r6
 80007d2:	0030      	movs	r0, r6
 80007d4:	40ca      	lsrs	r2, r1
 80007d6:	1a59      	subs	r1, r3, r1
 80007d8:	4088      	lsls	r0, r1
 80007da:	1e43      	subs	r3, r0, #1
 80007dc:	4198      	sbcs	r0, r3
 80007de:	4310      	orrs	r0, r2
 80007e0:	e745      	b.n	800066e <__aeabi_fadd+0xda>
 80007e2:	2d00      	cmp	r5, #0
 80007e4:	d14a      	bne.n	800087c <__aeabi_fadd+0x2e8>
 80007e6:	4643      	mov	r3, r8
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	d063      	beq.n	80008b4 <__aeabi_fadd+0x320>
 80007ec:	2200      	movs	r2, #0
 80007ee:	2e00      	cmp	r6, #0
 80007f0:	d100      	bne.n	80007f4 <__aeabi_fadd+0x260>
 80007f2:	e714      	b.n	800061e <__aeabi_fadd+0x8a>
 80007f4:	0030      	movs	r0, r6
 80007f6:	4440      	add	r0, r8
 80007f8:	0143      	lsls	r3, r0, #5
 80007fa:	d400      	bmi.n	80007fe <__aeabi_fadd+0x26a>
 80007fc:	e77e      	b.n	80006fc <__aeabi_fadd+0x168>
 80007fe:	4b32      	ldr	r3, [pc, #200]	; (80008c8 <__aeabi_fadd+0x334>)
 8000800:	3501      	adds	r5, #1
 8000802:	4018      	ands	r0, r3
 8000804:	e77a      	b.n	80006fc <__aeabi_fadd+0x168>
 8000806:	2fff      	cmp	r7, #255	; 0xff
 8000808:	d08c      	beq.n	8000724 <__aeabi_fadd+0x190>
 800080a:	2380      	movs	r3, #128	; 0x80
 800080c:	4641      	mov	r1, r8
 800080e:	04db      	lsls	r3, r3, #19
 8000810:	4319      	orrs	r1, r3
 8000812:	4688      	mov	r8, r1
 8000814:	e79f      	b.n	8000756 <__aeabi_fadd+0x1c2>
 8000816:	4643      	mov	r3, r8
 8000818:	000c      	movs	r4, r1
 800081a:	1af7      	subs	r7, r6, r3
 800081c:	e6e3      	b.n	80005e6 <__aeabi_fadd+0x52>
 800081e:	4642      	mov	r2, r8
 8000820:	2a00      	cmp	r2, #0
 8000822:	d000      	beq.n	8000826 <__aeabi_fadd+0x292>
 8000824:	e775      	b.n	8000712 <__aeabi_fadd+0x17e>
 8000826:	2e00      	cmp	r6, #0
 8000828:	d000      	beq.n	800082c <__aeabi_fadd+0x298>
 800082a:	e77a      	b.n	8000722 <__aeabi_fadd+0x18e>
 800082c:	2380      	movs	r3, #128	; 0x80
 800082e:	03db      	lsls	r3, r3, #15
 8000830:	2400      	movs	r4, #0
 8000832:	469c      	mov	ip, r3
 8000834:	22ff      	movs	r2, #255	; 0xff
 8000836:	e6f2      	b.n	800061e <__aeabi_fadd+0x8a>
 8000838:	0030      	movs	r0, r6
 800083a:	4440      	add	r0, r8
 800083c:	2501      	movs	r5, #1
 800083e:	0143      	lsls	r3, r0, #5
 8000840:	d400      	bmi.n	8000844 <__aeabi_fadd+0x2b0>
 8000842:	e75b      	b.n	80006fc <__aeabi_fadd+0x168>
 8000844:	2502      	movs	r5, #2
 8000846:	e718      	b.n	800067a <__aeabi_fadd+0xe6>
 8000848:	4643      	mov	r3, r8
 800084a:	2501      	movs	r5, #1
 800084c:	1b98      	subs	r0, r3, r6
 800084e:	e6c5      	b.n	80005dc <__aeabi_fadd+0x48>
 8000850:	2320      	movs	r3, #32
 8000852:	4644      	mov	r4, r8
 8000854:	4640      	mov	r0, r8
 8000856:	40d4      	lsrs	r4, r2
 8000858:	1a9a      	subs	r2, r3, r2
 800085a:	4090      	lsls	r0, r2
 800085c:	1e43      	subs	r3, r0, #1
 800085e:	4198      	sbcs	r0, r3
 8000860:	4320      	orrs	r0, r4
 8000862:	e7a4      	b.n	80007ae <__aeabi_fadd+0x21a>
 8000864:	000d      	movs	r5, r1
 8000866:	e74d      	b.n	8000704 <__aeabi_fadd+0x170>
 8000868:	2320      	movs	r3, #32
 800086a:	4641      	mov	r1, r8
 800086c:	4640      	mov	r0, r8
 800086e:	40d1      	lsrs	r1, r2
 8000870:	1a9a      	subs	r2, r3, r2
 8000872:	4090      	lsls	r0, r2
 8000874:	1e43      	subs	r3, r0, #1
 8000876:	4198      	sbcs	r0, r3
 8000878:	4308      	orrs	r0, r1
 800087a:	e770      	b.n	800075e <__aeabi_fadd+0x1ca>
 800087c:	4642      	mov	r2, r8
 800087e:	2a00      	cmp	r2, #0
 8000880:	d100      	bne.n	8000884 <__aeabi_fadd+0x2f0>
 8000882:	e74f      	b.n	8000724 <__aeabi_fadd+0x190>
 8000884:	2e00      	cmp	r6, #0
 8000886:	d100      	bne.n	800088a <__aeabi_fadd+0x2f6>
 8000888:	e74d      	b.n	8000726 <__aeabi_fadd+0x192>
 800088a:	2280      	movs	r2, #128	; 0x80
 800088c:	03d2      	lsls	r2, r2, #15
 800088e:	4213      	tst	r3, r2
 8000890:	d100      	bne.n	8000894 <__aeabi_fadd+0x300>
 8000892:	e748      	b.n	8000726 <__aeabi_fadd+0x192>
 8000894:	4210      	tst	r0, r2
 8000896:	d000      	beq.n	800089a <__aeabi_fadd+0x306>
 8000898:	e745      	b.n	8000726 <__aeabi_fadd+0x192>
 800089a:	0003      	movs	r3, r0
 800089c:	e743      	b.n	8000726 <__aeabi_fadd+0x192>
 800089e:	2e00      	cmp	r6, #0
 80008a0:	d090      	beq.n	80007c4 <__aeabi_fadd+0x230>
 80008a2:	000c      	movs	r4, r1
 80008a4:	4684      	mov	ip, r0
 80008a6:	2200      	movs	r2, #0
 80008a8:	e6b9      	b.n	800061e <__aeabi_fadd+0x8a>
 80008aa:	4643      	mov	r3, r8
 80008ac:	000c      	movs	r4, r1
 80008ae:	1af0      	subs	r0, r6, r3
 80008b0:	3501      	adds	r5, #1
 80008b2:	e693      	b.n	80005dc <__aeabi_fadd+0x48>
 80008b4:	4684      	mov	ip, r0
 80008b6:	2200      	movs	r2, #0
 80008b8:	e6b1      	b.n	800061e <__aeabi_fadd+0x8a>
 80008ba:	2800      	cmp	r0, #0
 80008bc:	d000      	beq.n	80008c0 <__aeabi_fadd+0x32c>
 80008be:	e71d      	b.n	80006fc <__aeabi_fadd+0x168>
 80008c0:	2300      	movs	r3, #0
 80008c2:	2400      	movs	r4, #0
 80008c4:	469c      	mov	ip, r3
 80008c6:	e6aa      	b.n	800061e <__aeabi_fadd+0x8a>
 80008c8:	fbffffff 	.word	0xfbffffff
 80008cc:	7dffffff 	.word	0x7dffffff

080008d0 <__aeabi_fdiv>:
 80008d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008d2:	464f      	mov	r7, r9
 80008d4:	4646      	mov	r6, r8
 80008d6:	46d6      	mov	lr, sl
 80008d8:	0245      	lsls	r5, r0, #9
 80008da:	b5c0      	push	{r6, r7, lr}
 80008dc:	0047      	lsls	r7, r0, #1
 80008de:	1c0c      	adds	r4, r1, #0
 80008e0:	0a6d      	lsrs	r5, r5, #9
 80008e2:	0e3f      	lsrs	r7, r7, #24
 80008e4:	0fc6      	lsrs	r6, r0, #31
 80008e6:	2f00      	cmp	r7, #0
 80008e8:	d100      	bne.n	80008ec <__aeabi_fdiv+0x1c>
 80008ea:	e070      	b.n	80009ce <__aeabi_fdiv+0xfe>
 80008ec:	2fff      	cmp	r7, #255	; 0xff
 80008ee:	d100      	bne.n	80008f2 <__aeabi_fdiv+0x22>
 80008f0:	e075      	b.n	80009de <__aeabi_fdiv+0x10e>
 80008f2:	00eb      	lsls	r3, r5, #3
 80008f4:	2580      	movs	r5, #128	; 0x80
 80008f6:	04ed      	lsls	r5, r5, #19
 80008f8:	431d      	orrs	r5, r3
 80008fa:	2300      	movs	r3, #0
 80008fc:	4699      	mov	r9, r3
 80008fe:	469a      	mov	sl, r3
 8000900:	3f7f      	subs	r7, #127	; 0x7f
 8000902:	0260      	lsls	r0, r4, #9
 8000904:	0a43      	lsrs	r3, r0, #9
 8000906:	4698      	mov	r8, r3
 8000908:	0063      	lsls	r3, r4, #1
 800090a:	0e1b      	lsrs	r3, r3, #24
 800090c:	0fe4      	lsrs	r4, r4, #31
 800090e:	2b00      	cmp	r3, #0
 8000910:	d04e      	beq.n	80009b0 <__aeabi_fdiv+0xe0>
 8000912:	2bff      	cmp	r3, #255	; 0xff
 8000914:	d046      	beq.n	80009a4 <__aeabi_fdiv+0xd4>
 8000916:	4642      	mov	r2, r8
 8000918:	00d0      	lsls	r0, r2, #3
 800091a:	2280      	movs	r2, #128	; 0x80
 800091c:	04d2      	lsls	r2, r2, #19
 800091e:	4302      	orrs	r2, r0
 8000920:	4690      	mov	r8, r2
 8000922:	2200      	movs	r2, #0
 8000924:	3b7f      	subs	r3, #127	; 0x7f
 8000926:	0031      	movs	r1, r6
 8000928:	1aff      	subs	r7, r7, r3
 800092a:	464b      	mov	r3, r9
 800092c:	4061      	eors	r1, r4
 800092e:	b2c9      	uxtb	r1, r1
 8000930:	4313      	orrs	r3, r2
 8000932:	2b0f      	cmp	r3, #15
 8000934:	d900      	bls.n	8000938 <__aeabi_fdiv+0x68>
 8000936:	e0b5      	b.n	8000aa4 <__aeabi_fdiv+0x1d4>
 8000938:	486e      	ldr	r0, [pc, #440]	; (8000af4 <__aeabi_fdiv+0x224>)
 800093a:	009b      	lsls	r3, r3, #2
 800093c:	58c3      	ldr	r3, [r0, r3]
 800093e:	469f      	mov	pc, r3
 8000940:	2300      	movs	r3, #0
 8000942:	4698      	mov	r8, r3
 8000944:	0026      	movs	r6, r4
 8000946:	4645      	mov	r5, r8
 8000948:	4692      	mov	sl, r2
 800094a:	4653      	mov	r3, sl
 800094c:	2b02      	cmp	r3, #2
 800094e:	d100      	bne.n	8000952 <__aeabi_fdiv+0x82>
 8000950:	e089      	b.n	8000a66 <__aeabi_fdiv+0x196>
 8000952:	2b03      	cmp	r3, #3
 8000954:	d100      	bne.n	8000958 <__aeabi_fdiv+0x88>
 8000956:	e09e      	b.n	8000a96 <__aeabi_fdiv+0x1c6>
 8000958:	2b01      	cmp	r3, #1
 800095a:	d018      	beq.n	800098e <__aeabi_fdiv+0xbe>
 800095c:	003b      	movs	r3, r7
 800095e:	337f      	adds	r3, #127	; 0x7f
 8000960:	2b00      	cmp	r3, #0
 8000962:	dd69      	ble.n	8000a38 <__aeabi_fdiv+0x168>
 8000964:	076a      	lsls	r2, r5, #29
 8000966:	d004      	beq.n	8000972 <__aeabi_fdiv+0xa2>
 8000968:	220f      	movs	r2, #15
 800096a:	402a      	ands	r2, r5
 800096c:	2a04      	cmp	r2, #4
 800096e:	d000      	beq.n	8000972 <__aeabi_fdiv+0xa2>
 8000970:	3504      	adds	r5, #4
 8000972:	012a      	lsls	r2, r5, #4
 8000974:	d503      	bpl.n	800097e <__aeabi_fdiv+0xae>
 8000976:	4b60      	ldr	r3, [pc, #384]	; (8000af8 <__aeabi_fdiv+0x228>)
 8000978:	401d      	ands	r5, r3
 800097a:	003b      	movs	r3, r7
 800097c:	3380      	adds	r3, #128	; 0x80
 800097e:	2bfe      	cmp	r3, #254	; 0xfe
 8000980:	dd00      	ble.n	8000984 <__aeabi_fdiv+0xb4>
 8000982:	e070      	b.n	8000a66 <__aeabi_fdiv+0x196>
 8000984:	01ad      	lsls	r5, r5, #6
 8000986:	0a6d      	lsrs	r5, r5, #9
 8000988:	b2d8      	uxtb	r0, r3
 800098a:	e002      	b.n	8000992 <__aeabi_fdiv+0xc2>
 800098c:	000e      	movs	r6, r1
 800098e:	2000      	movs	r0, #0
 8000990:	2500      	movs	r5, #0
 8000992:	05c0      	lsls	r0, r0, #23
 8000994:	4328      	orrs	r0, r5
 8000996:	07f6      	lsls	r6, r6, #31
 8000998:	4330      	orrs	r0, r6
 800099a:	bce0      	pop	{r5, r6, r7}
 800099c:	46ba      	mov	sl, r7
 800099e:	46b1      	mov	r9, r6
 80009a0:	46a8      	mov	r8, r5
 80009a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009a4:	4643      	mov	r3, r8
 80009a6:	2b00      	cmp	r3, #0
 80009a8:	d13f      	bne.n	8000a2a <__aeabi_fdiv+0x15a>
 80009aa:	2202      	movs	r2, #2
 80009ac:	3fff      	subs	r7, #255	; 0xff
 80009ae:	e003      	b.n	80009b8 <__aeabi_fdiv+0xe8>
 80009b0:	4643      	mov	r3, r8
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d12d      	bne.n	8000a12 <__aeabi_fdiv+0x142>
 80009b6:	2201      	movs	r2, #1
 80009b8:	0031      	movs	r1, r6
 80009ba:	464b      	mov	r3, r9
 80009bc:	4061      	eors	r1, r4
 80009be:	b2c9      	uxtb	r1, r1
 80009c0:	4313      	orrs	r3, r2
 80009c2:	2b0f      	cmp	r3, #15
 80009c4:	d834      	bhi.n	8000a30 <__aeabi_fdiv+0x160>
 80009c6:	484d      	ldr	r0, [pc, #308]	; (8000afc <__aeabi_fdiv+0x22c>)
 80009c8:	009b      	lsls	r3, r3, #2
 80009ca:	58c3      	ldr	r3, [r0, r3]
 80009cc:	469f      	mov	pc, r3
 80009ce:	2d00      	cmp	r5, #0
 80009d0:	d113      	bne.n	80009fa <__aeabi_fdiv+0x12a>
 80009d2:	2304      	movs	r3, #4
 80009d4:	4699      	mov	r9, r3
 80009d6:	3b03      	subs	r3, #3
 80009d8:	2700      	movs	r7, #0
 80009da:	469a      	mov	sl, r3
 80009dc:	e791      	b.n	8000902 <__aeabi_fdiv+0x32>
 80009de:	2d00      	cmp	r5, #0
 80009e0:	d105      	bne.n	80009ee <__aeabi_fdiv+0x11e>
 80009e2:	2308      	movs	r3, #8
 80009e4:	4699      	mov	r9, r3
 80009e6:	3b06      	subs	r3, #6
 80009e8:	27ff      	movs	r7, #255	; 0xff
 80009ea:	469a      	mov	sl, r3
 80009ec:	e789      	b.n	8000902 <__aeabi_fdiv+0x32>
 80009ee:	230c      	movs	r3, #12
 80009f0:	4699      	mov	r9, r3
 80009f2:	3b09      	subs	r3, #9
 80009f4:	27ff      	movs	r7, #255	; 0xff
 80009f6:	469a      	mov	sl, r3
 80009f8:	e783      	b.n	8000902 <__aeabi_fdiv+0x32>
 80009fa:	0028      	movs	r0, r5
 80009fc:	f002 fa78 	bl	8002ef0 <__clzsi2>
 8000a00:	2776      	movs	r7, #118	; 0x76
 8000a02:	1f43      	subs	r3, r0, #5
 8000a04:	409d      	lsls	r5, r3
 8000a06:	2300      	movs	r3, #0
 8000a08:	427f      	negs	r7, r7
 8000a0a:	4699      	mov	r9, r3
 8000a0c:	469a      	mov	sl, r3
 8000a0e:	1a3f      	subs	r7, r7, r0
 8000a10:	e777      	b.n	8000902 <__aeabi_fdiv+0x32>
 8000a12:	4640      	mov	r0, r8
 8000a14:	f002 fa6c 	bl	8002ef0 <__clzsi2>
 8000a18:	4642      	mov	r2, r8
 8000a1a:	1f43      	subs	r3, r0, #5
 8000a1c:	409a      	lsls	r2, r3
 8000a1e:	2376      	movs	r3, #118	; 0x76
 8000a20:	425b      	negs	r3, r3
 8000a22:	4690      	mov	r8, r2
 8000a24:	1a1b      	subs	r3, r3, r0
 8000a26:	2200      	movs	r2, #0
 8000a28:	e77d      	b.n	8000926 <__aeabi_fdiv+0x56>
 8000a2a:	23ff      	movs	r3, #255	; 0xff
 8000a2c:	2203      	movs	r2, #3
 8000a2e:	e77a      	b.n	8000926 <__aeabi_fdiv+0x56>
 8000a30:	000e      	movs	r6, r1
 8000a32:	20ff      	movs	r0, #255	; 0xff
 8000a34:	2500      	movs	r5, #0
 8000a36:	e7ac      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000a38:	2001      	movs	r0, #1
 8000a3a:	1ac0      	subs	r0, r0, r3
 8000a3c:	281b      	cmp	r0, #27
 8000a3e:	dca6      	bgt.n	800098e <__aeabi_fdiv+0xbe>
 8000a40:	379e      	adds	r7, #158	; 0x9e
 8000a42:	002a      	movs	r2, r5
 8000a44:	40bd      	lsls	r5, r7
 8000a46:	40c2      	lsrs	r2, r0
 8000a48:	1e6b      	subs	r3, r5, #1
 8000a4a:	419d      	sbcs	r5, r3
 8000a4c:	4315      	orrs	r5, r2
 8000a4e:	076b      	lsls	r3, r5, #29
 8000a50:	d004      	beq.n	8000a5c <__aeabi_fdiv+0x18c>
 8000a52:	230f      	movs	r3, #15
 8000a54:	402b      	ands	r3, r5
 8000a56:	2b04      	cmp	r3, #4
 8000a58:	d000      	beq.n	8000a5c <__aeabi_fdiv+0x18c>
 8000a5a:	3504      	adds	r5, #4
 8000a5c:	016b      	lsls	r3, r5, #5
 8000a5e:	d544      	bpl.n	8000aea <__aeabi_fdiv+0x21a>
 8000a60:	2001      	movs	r0, #1
 8000a62:	2500      	movs	r5, #0
 8000a64:	e795      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000a66:	20ff      	movs	r0, #255	; 0xff
 8000a68:	2500      	movs	r5, #0
 8000a6a:	e792      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000a6c:	2580      	movs	r5, #128	; 0x80
 8000a6e:	2600      	movs	r6, #0
 8000a70:	20ff      	movs	r0, #255	; 0xff
 8000a72:	03ed      	lsls	r5, r5, #15
 8000a74:	e78d      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000a76:	2300      	movs	r3, #0
 8000a78:	4698      	mov	r8, r3
 8000a7a:	2080      	movs	r0, #128	; 0x80
 8000a7c:	03c0      	lsls	r0, r0, #15
 8000a7e:	4205      	tst	r5, r0
 8000a80:	d009      	beq.n	8000a96 <__aeabi_fdiv+0x1c6>
 8000a82:	4643      	mov	r3, r8
 8000a84:	4203      	tst	r3, r0
 8000a86:	d106      	bne.n	8000a96 <__aeabi_fdiv+0x1c6>
 8000a88:	4645      	mov	r5, r8
 8000a8a:	4305      	orrs	r5, r0
 8000a8c:	026d      	lsls	r5, r5, #9
 8000a8e:	0026      	movs	r6, r4
 8000a90:	20ff      	movs	r0, #255	; 0xff
 8000a92:	0a6d      	lsrs	r5, r5, #9
 8000a94:	e77d      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000a96:	2080      	movs	r0, #128	; 0x80
 8000a98:	03c0      	lsls	r0, r0, #15
 8000a9a:	4305      	orrs	r5, r0
 8000a9c:	026d      	lsls	r5, r5, #9
 8000a9e:	20ff      	movs	r0, #255	; 0xff
 8000aa0:	0a6d      	lsrs	r5, r5, #9
 8000aa2:	e776      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000aa4:	4642      	mov	r2, r8
 8000aa6:	016b      	lsls	r3, r5, #5
 8000aa8:	0150      	lsls	r0, r2, #5
 8000aaa:	4283      	cmp	r3, r0
 8000aac:	d219      	bcs.n	8000ae2 <__aeabi_fdiv+0x212>
 8000aae:	221b      	movs	r2, #27
 8000ab0:	2500      	movs	r5, #0
 8000ab2:	3f01      	subs	r7, #1
 8000ab4:	2601      	movs	r6, #1
 8000ab6:	001c      	movs	r4, r3
 8000ab8:	006d      	lsls	r5, r5, #1
 8000aba:	005b      	lsls	r3, r3, #1
 8000abc:	2c00      	cmp	r4, #0
 8000abe:	db01      	blt.n	8000ac4 <__aeabi_fdiv+0x1f4>
 8000ac0:	4298      	cmp	r0, r3
 8000ac2:	d801      	bhi.n	8000ac8 <__aeabi_fdiv+0x1f8>
 8000ac4:	1a1b      	subs	r3, r3, r0
 8000ac6:	4335      	orrs	r5, r6
 8000ac8:	3a01      	subs	r2, #1
 8000aca:	2a00      	cmp	r2, #0
 8000acc:	d1f3      	bne.n	8000ab6 <__aeabi_fdiv+0x1e6>
 8000ace:	1e5a      	subs	r2, r3, #1
 8000ad0:	4193      	sbcs	r3, r2
 8000ad2:	431d      	orrs	r5, r3
 8000ad4:	003b      	movs	r3, r7
 8000ad6:	337f      	adds	r3, #127	; 0x7f
 8000ad8:	000e      	movs	r6, r1
 8000ada:	2b00      	cmp	r3, #0
 8000adc:	dd00      	ble.n	8000ae0 <__aeabi_fdiv+0x210>
 8000ade:	e741      	b.n	8000964 <__aeabi_fdiv+0x94>
 8000ae0:	e7aa      	b.n	8000a38 <__aeabi_fdiv+0x168>
 8000ae2:	221a      	movs	r2, #26
 8000ae4:	2501      	movs	r5, #1
 8000ae6:	1a1b      	subs	r3, r3, r0
 8000ae8:	e7e4      	b.n	8000ab4 <__aeabi_fdiv+0x1e4>
 8000aea:	01ad      	lsls	r5, r5, #6
 8000aec:	2000      	movs	r0, #0
 8000aee:	0a6d      	lsrs	r5, r5, #9
 8000af0:	e74f      	b.n	8000992 <__aeabi_fdiv+0xc2>
 8000af2:	46c0      	nop			; (mov r8, r8)
 8000af4:	0800a44c 	.word	0x0800a44c
 8000af8:	f7ffffff 	.word	0xf7ffffff
 8000afc:	0800a48c 	.word	0x0800a48c

08000b00 <__aeabi_fmul>:
 8000b00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b02:	464f      	mov	r7, r9
 8000b04:	4646      	mov	r6, r8
 8000b06:	46d6      	mov	lr, sl
 8000b08:	0244      	lsls	r4, r0, #9
 8000b0a:	0045      	lsls	r5, r0, #1
 8000b0c:	b5c0      	push	{r6, r7, lr}
 8000b0e:	0a64      	lsrs	r4, r4, #9
 8000b10:	1c0f      	adds	r7, r1, #0
 8000b12:	0e2d      	lsrs	r5, r5, #24
 8000b14:	0fc6      	lsrs	r6, r0, #31
 8000b16:	2d00      	cmp	r5, #0
 8000b18:	d100      	bne.n	8000b1c <__aeabi_fmul+0x1c>
 8000b1a:	e08d      	b.n	8000c38 <__aeabi_fmul+0x138>
 8000b1c:	2dff      	cmp	r5, #255	; 0xff
 8000b1e:	d100      	bne.n	8000b22 <__aeabi_fmul+0x22>
 8000b20:	e092      	b.n	8000c48 <__aeabi_fmul+0x148>
 8000b22:	2300      	movs	r3, #0
 8000b24:	2080      	movs	r0, #128	; 0x80
 8000b26:	4699      	mov	r9, r3
 8000b28:	469a      	mov	sl, r3
 8000b2a:	00e4      	lsls	r4, r4, #3
 8000b2c:	04c0      	lsls	r0, r0, #19
 8000b2e:	4304      	orrs	r4, r0
 8000b30:	3d7f      	subs	r5, #127	; 0x7f
 8000b32:	0278      	lsls	r0, r7, #9
 8000b34:	0a43      	lsrs	r3, r0, #9
 8000b36:	4698      	mov	r8, r3
 8000b38:	007b      	lsls	r3, r7, #1
 8000b3a:	0e1b      	lsrs	r3, r3, #24
 8000b3c:	0fff      	lsrs	r7, r7, #31
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d100      	bne.n	8000b44 <__aeabi_fmul+0x44>
 8000b42:	e070      	b.n	8000c26 <__aeabi_fmul+0x126>
 8000b44:	2bff      	cmp	r3, #255	; 0xff
 8000b46:	d100      	bne.n	8000b4a <__aeabi_fmul+0x4a>
 8000b48:	e086      	b.n	8000c58 <__aeabi_fmul+0x158>
 8000b4a:	4642      	mov	r2, r8
 8000b4c:	00d0      	lsls	r0, r2, #3
 8000b4e:	2280      	movs	r2, #128	; 0x80
 8000b50:	3b7f      	subs	r3, #127	; 0x7f
 8000b52:	18ed      	adds	r5, r5, r3
 8000b54:	2300      	movs	r3, #0
 8000b56:	04d2      	lsls	r2, r2, #19
 8000b58:	4302      	orrs	r2, r0
 8000b5a:	4690      	mov	r8, r2
 8000b5c:	469c      	mov	ip, r3
 8000b5e:	0031      	movs	r1, r6
 8000b60:	464b      	mov	r3, r9
 8000b62:	4079      	eors	r1, r7
 8000b64:	1c68      	adds	r0, r5, #1
 8000b66:	2b0f      	cmp	r3, #15
 8000b68:	d81c      	bhi.n	8000ba4 <__aeabi_fmul+0xa4>
 8000b6a:	4a76      	ldr	r2, [pc, #472]	; (8000d44 <__aeabi_fmul+0x244>)
 8000b6c:	009b      	lsls	r3, r3, #2
 8000b6e:	58d3      	ldr	r3, [r2, r3]
 8000b70:	469f      	mov	pc, r3
 8000b72:	0039      	movs	r1, r7
 8000b74:	4644      	mov	r4, r8
 8000b76:	46e2      	mov	sl, ip
 8000b78:	4653      	mov	r3, sl
 8000b7a:	2b02      	cmp	r3, #2
 8000b7c:	d00f      	beq.n	8000b9e <__aeabi_fmul+0x9e>
 8000b7e:	2b03      	cmp	r3, #3
 8000b80:	d100      	bne.n	8000b84 <__aeabi_fmul+0x84>
 8000b82:	e0d7      	b.n	8000d34 <__aeabi_fmul+0x234>
 8000b84:	2b01      	cmp	r3, #1
 8000b86:	d137      	bne.n	8000bf8 <__aeabi_fmul+0xf8>
 8000b88:	2000      	movs	r0, #0
 8000b8a:	2400      	movs	r4, #0
 8000b8c:	05c0      	lsls	r0, r0, #23
 8000b8e:	4320      	orrs	r0, r4
 8000b90:	07c9      	lsls	r1, r1, #31
 8000b92:	4308      	orrs	r0, r1
 8000b94:	bce0      	pop	{r5, r6, r7}
 8000b96:	46ba      	mov	sl, r7
 8000b98:	46b1      	mov	r9, r6
 8000b9a:	46a8      	mov	r8, r5
 8000b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b9e:	20ff      	movs	r0, #255	; 0xff
 8000ba0:	2400      	movs	r4, #0
 8000ba2:	e7f3      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000ba4:	0c26      	lsrs	r6, r4, #16
 8000ba6:	0424      	lsls	r4, r4, #16
 8000ba8:	0c22      	lsrs	r2, r4, #16
 8000baa:	4644      	mov	r4, r8
 8000bac:	0424      	lsls	r4, r4, #16
 8000bae:	0c24      	lsrs	r4, r4, #16
 8000bb0:	4643      	mov	r3, r8
 8000bb2:	0027      	movs	r7, r4
 8000bb4:	0c1b      	lsrs	r3, r3, #16
 8000bb6:	4357      	muls	r7, r2
 8000bb8:	4374      	muls	r4, r6
 8000bba:	435a      	muls	r2, r3
 8000bbc:	435e      	muls	r6, r3
 8000bbe:	1912      	adds	r2, r2, r4
 8000bc0:	0c3b      	lsrs	r3, r7, #16
 8000bc2:	189b      	adds	r3, r3, r2
 8000bc4:	429c      	cmp	r4, r3
 8000bc6:	d903      	bls.n	8000bd0 <__aeabi_fmul+0xd0>
 8000bc8:	2280      	movs	r2, #128	; 0x80
 8000bca:	0252      	lsls	r2, r2, #9
 8000bcc:	4694      	mov	ip, r2
 8000bce:	4466      	add	r6, ip
 8000bd0:	043f      	lsls	r7, r7, #16
 8000bd2:	041a      	lsls	r2, r3, #16
 8000bd4:	0c3f      	lsrs	r7, r7, #16
 8000bd6:	19d2      	adds	r2, r2, r7
 8000bd8:	0194      	lsls	r4, r2, #6
 8000bda:	1e67      	subs	r7, r4, #1
 8000bdc:	41bc      	sbcs	r4, r7
 8000bde:	0c1b      	lsrs	r3, r3, #16
 8000be0:	0e92      	lsrs	r2, r2, #26
 8000be2:	199b      	adds	r3, r3, r6
 8000be4:	4314      	orrs	r4, r2
 8000be6:	019b      	lsls	r3, r3, #6
 8000be8:	431c      	orrs	r4, r3
 8000bea:	011b      	lsls	r3, r3, #4
 8000bec:	d400      	bmi.n	8000bf0 <__aeabi_fmul+0xf0>
 8000bee:	e09b      	b.n	8000d28 <__aeabi_fmul+0x228>
 8000bf0:	2301      	movs	r3, #1
 8000bf2:	0862      	lsrs	r2, r4, #1
 8000bf4:	401c      	ands	r4, r3
 8000bf6:	4314      	orrs	r4, r2
 8000bf8:	0002      	movs	r2, r0
 8000bfa:	327f      	adds	r2, #127	; 0x7f
 8000bfc:	2a00      	cmp	r2, #0
 8000bfe:	dd64      	ble.n	8000cca <__aeabi_fmul+0x1ca>
 8000c00:	0763      	lsls	r3, r4, #29
 8000c02:	d004      	beq.n	8000c0e <__aeabi_fmul+0x10e>
 8000c04:	230f      	movs	r3, #15
 8000c06:	4023      	ands	r3, r4
 8000c08:	2b04      	cmp	r3, #4
 8000c0a:	d000      	beq.n	8000c0e <__aeabi_fmul+0x10e>
 8000c0c:	3404      	adds	r4, #4
 8000c0e:	0123      	lsls	r3, r4, #4
 8000c10:	d503      	bpl.n	8000c1a <__aeabi_fmul+0x11a>
 8000c12:	0002      	movs	r2, r0
 8000c14:	4b4c      	ldr	r3, [pc, #304]	; (8000d48 <__aeabi_fmul+0x248>)
 8000c16:	3280      	adds	r2, #128	; 0x80
 8000c18:	401c      	ands	r4, r3
 8000c1a:	2afe      	cmp	r2, #254	; 0xfe
 8000c1c:	dcbf      	bgt.n	8000b9e <__aeabi_fmul+0x9e>
 8000c1e:	01a4      	lsls	r4, r4, #6
 8000c20:	0a64      	lsrs	r4, r4, #9
 8000c22:	b2d0      	uxtb	r0, r2
 8000c24:	e7b2      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000c26:	4643      	mov	r3, r8
 8000c28:	2b00      	cmp	r3, #0
 8000c2a:	d13d      	bne.n	8000ca8 <__aeabi_fmul+0x1a8>
 8000c2c:	464a      	mov	r2, r9
 8000c2e:	3301      	adds	r3, #1
 8000c30:	431a      	orrs	r2, r3
 8000c32:	4691      	mov	r9, r2
 8000c34:	469c      	mov	ip, r3
 8000c36:	e792      	b.n	8000b5e <__aeabi_fmul+0x5e>
 8000c38:	2c00      	cmp	r4, #0
 8000c3a:	d129      	bne.n	8000c90 <__aeabi_fmul+0x190>
 8000c3c:	2304      	movs	r3, #4
 8000c3e:	4699      	mov	r9, r3
 8000c40:	3b03      	subs	r3, #3
 8000c42:	2500      	movs	r5, #0
 8000c44:	469a      	mov	sl, r3
 8000c46:	e774      	b.n	8000b32 <__aeabi_fmul+0x32>
 8000c48:	2c00      	cmp	r4, #0
 8000c4a:	d11b      	bne.n	8000c84 <__aeabi_fmul+0x184>
 8000c4c:	2308      	movs	r3, #8
 8000c4e:	4699      	mov	r9, r3
 8000c50:	3b06      	subs	r3, #6
 8000c52:	25ff      	movs	r5, #255	; 0xff
 8000c54:	469a      	mov	sl, r3
 8000c56:	e76c      	b.n	8000b32 <__aeabi_fmul+0x32>
 8000c58:	4643      	mov	r3, r8
 8000c5a:	35ff      	adds	r5, #255	; 0xff
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d10b      	bne.n	8000c78 <__aeabi_fmul+0x178>
 8000c60:	2302      	movs	r3, #2
 8000c62:	464a      	mov	r2, r9
 8000c64:	431a      	orrs	r2, r3
 8000c66:	4691      	mov	r9, r2
 8000c68:	469c      	mov	ip, r3
 8000c6a:	e778      	b.n	8000b5e <__aeabi_fmul+0x5e>
 8000c6c:	4653      	mov	r3, sl
 8000c6e:	0031      	movs	r1, r6
 8000c70:	2b02      	cmp	r3, #2
 8000c72:	d000      	beq.n	8000c76 <__aeabi_fmul+0x176>
 8000c74:	e783      	b.n	8000b7e <__aeabi_fmul+0x7e>
 8000c76:	e792      	b.n	8000b9e <__aeabi_fmul+0x9e>
 8000c78:	2303      	movs	r3, #3
 8000c7a:	464a      	mov	r2, r9
 8000c7c:	431a      	orrs	r2, r3
 8000c7e:	4691      	mov	r9, r2
 8000c80:	469c      	mov	ip, r3
 8000c82:	e76c      	b.n	8000b5e <__aeabi_fmul+0x5e>
 8000c84:	230c      	movs	r3, #12
 8000c86:	4699      	mov	r9, r3
 8000c88:	3b09      	subs	r3, #9
 8000c8a:	25ff      	movs	r5, #255	; 0xff
 8000c8c:	469a      	mov	sl, r3
 8000c8e:	e750      	b.n	8000b32 <__aeabi_fmul+0x32>
 8000c90:	0020      	movs	r0, r4
 8000c92:	f002 f92d 	bl	8002ef0 <__clzsi2>
 8000c96:	2576      	movs	r5, #118	; 0x76
 8000c98:	1f43      	subs	r3, r0, #5
 8000c9a:	409c      	lsls	r4, r3
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	426d      	negs	r5, r5
 8000ca0:	4699      	mov	r9, r3
 8000ca2:	469a      	mov	sl, r3
 8000ca4:	1a2d      	subs	r5, r5, r0
 8000ca6:	e744      	b.n	8000b32 <__aeabi_fmul+0x32>
 8000ca8:	4640      	mov	r0, r8
 8000caa:	f002 f921 	bl	8002ef0 <__clzsi2>
 8000cae:	4642      	mov	r2, r8
 8000cb0:	1f43      	subs	r3, r0, #5
 8000cb2:	409a      	lsls	r2, r3
 8000cb4:	2300      	movs	r3, #0
 8000cb6:	1a2d      	subs	r5, r5, r0
 8000cb8:	4690      	mov	r8, r2
 8000cba:	469c      	mov	ip, r3
 8000cbc:	3d76      	subs	r5, #118	; 0x76
 8000cbe:	e74e      	b.n	8000b5e <__aeabi_fmul+0x5e>
 8000cc0:	2480      	movs	r4, #128	; 0x80
 8000cc2:	2100      	movs	r1, #0
 8000cc4:	20ff      	movs	r0, #255	; 0xff
 8000cc6:	03e4      	lsls	r4, r4, #15
 8000cc8:	e760      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000cca:	2301      	movs	r3, #1
 8000ccc:	1a9b      	subs	r3, r3, r2
 8000cce:	2b1b      	cmp	r3, #27
 8000cd0:	dd00      	ble.n	8000cd4 <__aeabi_fmul+0x1d4>
 8000cd2:	e759      	b.n	8000b88 <__aeabi_fmul+0x88>
 8000cd4:	0022      	movs	r2, r4
 8000cd6:	309e      	adds	r0, #158	; 0x9e
 8000cd8:	40da      	lsrs	r2, r3
 8000cda:	4084      	lsls	r4, r0
 8000cdc:	0013      	movs	r3, r2
 8000cde:	1e62      	subs	r2, r4, #1
 8000ce0:	4194      	sbcs	r4, r2
 8000ce2:	431c      	orrs	r4, r3
 8000ce4:	0763      	lsls	r3, r4, #29
 8000ce6:	d004      	beq.n	8000cf2 <__aeabi_fmul+0x1f2>
 8000ce8:	230f      	movs	r3, #15
 8000cea:	4023      	ands	r3, r4
 8000cec:	2b04      	cmp	r3, #4
 8000cee:	d000      	beq.n	8000cf2 <__aeabi_fmul+0x1f2>
 8000cf0:	3404      	adds	r4, #4
 8000cf2:	0163      	lsls	r3, r4, #5
 8000cf4:	d51a      	bpl.n	8000d2c <__aeabi_fmul+0x22c>
 8000cf6:	2001      	movs	r0, #1
 8000cf8:	2400      	movs	r4, #0
 8000cfa:	e747      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000cfc:	2080      	movs	r0, #128	; 0x80
 8000cfe:	03c0      	lsls	r0, r0, #15
 8000d00:	4204      	tst	r4, r0
 8000d02:	d009      	beq.n	8000d18 <__aeabi_fmul+0x218>
 8000d04:	4643      	mov	r3, r8
 8000d06:	4203      	tst	r3, r0
 8000d08:	d106      	bne.n	8000d18 <__aeabi_fmul+0x218>
 8000d0a:	4644      	mov	r4, r8
 8000d0c:	4304      	orrs	r4, r0
 8000d0e:	0264      	lsls	r4, r4, #9
 8000d10:	0039      	movs	r1, r7
 8000d12:	20ff      	movs	r0, #255	; 0xff
 8000d14:	0a64      	lsrs	r4, r4, #9
 8000d16:	e739      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000d18:	2080      	movs	r0, #128	; 0x80
 8000d1a:	03c0      	lsls	r0, r0, #15
 8000d1c:	4304      	orrs	r4, r0
 8000d1e:	0264      	lsls	r4, r4, #9
 8000d20:	0031      	movs	r1, r6
 8000d22:	20ff      	movs	r0, #255	; 0xff
 8000d24:	0a64      	lsrs	r4, r4, #9
 8000d26:	e731      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000d28:	0028      	movs	r0, r5
 8000d2a:	e765      	b.n	8000bf8 <__aeabi_fmul+0xf8>
 8000d2c:	01a4      	lsls	r4, r4, #6
 8000d2e:	2000      	movs	r0, #0
 8000d30:	0a64      	lsrs	r4, r4, #9
 8000d32:	e72b      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000d34:	2080      	movs	r0, #128	; 0x80
 8000d36:	03c0      	lsls	r0, r0, #15
 8000d38:	4304      	orrs	r4, r0
 8000d3a:	0264      	lsls	r4, r4, #9
 8000d3c:	20ff      	movs	r0, #255	; 0xff
 8000d3e:	0a64      	lsrs	r4, r4, #9
 8000d40:	e724      	b.n	8000b8c <__aeabi_fmul+0x8c>
 8000d42:	46c0      	nop			; (mov r8, r8)
 8000d44:	0800a4cc 	.word	0x0800a4cc
 8000d48:	f7ffffff 	.word	0xf7ffffff

08000d4c <__aeabi_fsub>:
 8000d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d4e:	46ce      	mov	lr, r9
 8000d50:	4647      	mov	r7, r8
 8000d52:	0243      	lsls	r3, r0, #9
 8000d54:	0a5b      	lsrs	r3, r3, #9
 8000d56:	024e      	lsls	r6, r1, #9
 8000d58:	00da      	lsls	r2, r3, #3
 8000d5a:	4694      	mov	ip, r2
 8000d5c:	0a72      	lsrs	r2, r6, #9
 8000d5e:	4691      	mov	r9, r2
 8000d60:	0045      	lsls	r5, r0, #1
 8000d62:	004a      	lsls	r2, r1, #1
 8000d64:	b580      	push	{r7, lr}
 8000d66:	0e2d      	lsrs	r5, r5, #24
 8000d68:	001f      	movs	r7, r3
 8000d6a:	0fc4      	lsrs	r4, r0, #31
 8000d6c:	0e12      	lsrs	r2, r2, #24
 8000d6e:	0fc9      	lsrs	r1, r1, #31
 8000d70:	09b6      	lsrs	r6, r6, #6
 8000d72:	2aff      	cmp	r2, #255	; 0xff
 8000d74:	d05b      	beq.n	8000e2e <__aeabi_fsub+0xe2>
 8000d76:	2001      	movs	r0, #1
 8000d78:	4041      	eors	r1, r0
 8000d7a:	428c      	cmp	r4, r1
 8000d7c:	d039      	beq.n	8000df2 <__aeabi_fsub+0xa6>
 8000d7e:	1aa8      	subs	r0, r5, r2
 8000d80:	2800      	cmp	r0, #0
 8000d82:	dd5a      	ble.n	8000e3a <__aeabi_fsub+0xee>
 8000d84:	2a00      	cmp	r2, #0
 8000d86:	d06a      	beq.n	8000e5e <__aeabi_fsub+0x112>
 8000d88:	2dff      	cmp	r5, #255	; 0xff
 8000d8a:	d100      	bne.n	8000d8e <__aeabi_fsub+0x42>
 8000d8c:	e0d9      	b.n	8000f42 <__aeabi_fsub+0x1f6>
 8000d8e:	2280      	movs	r2, #128	; 0x80
 8000d90:	04d2      	lsls	r2, r2, #19
 8000d92:	4316      	orrs	r6, r2
 8000d94:	281b      	cmp	r0, #27
 8000d96:	dc00      	bgt.n	8000d9a <__aeabi_fsub+0x4e>
 8000d98:	e0e9      	b.n	8000f6e <__aeabi_fsub+0x222>
 8000d9a:	2001      	movs	r0, #1
 8000d9c:	4663      	mov	r3, ip
 8000d9e:	1a18      	subs	r0, r3, r0
 8000da0:	0143      	lsls	r3, r0, #5
 8000da2:	d400      	bmi.n	8000da6 <__aeabi_fsub+0x5a>
 8000da4:	e0b4      	b.n	8000f10 <__aeabi_fsub+0x1c4>
 8000da6:	0180      	lsls	r0, r0, #6
 8000da8:	0987      	lsrs	r7, r0, #6
 8000daa:	0038      	movs	r0, r7
 8000dac:	f002 f8a0 	bl	8002ef0 <__clzsi2>
 8000db0:	3805      	subs	r0, #5
 8000db2:	4087      	lsls	r7, r0
 8000db4:	4285      	cmp	r5, r0
 8000db6:	dc00      	bgt.n	8000dba <__aeabi_fsub+0x6e>
 8000db8:	e0cc      	b.n	8000f54 <__aeabi_fsub+0x208>
 8000dba:	1a2d      	subs	r5, r5, r0
 8000dbc:	48b5      	ldr	r0, [pc, #724]	; (8001094 <__aeabi_fsub+0x348>)
 8000dbe:	4038      	ands	r0, r7
 8000dc0:	0743      	lsls	r3, r0, #29
 8000dc2:	d004      	beq.n	8000dce <__aeabi_fsub+0x82>
 8000dc4:	230f      	movs	r3, #15
 8000dc6:	4003      	ands	r3, r0
 8000dc8:	2b04      	cmp	r3, #4
 8000dca:	d000      	beq.n	8000dce <__aeabi_fsub+0x82>
 8000dcc:	3004      	adds	r0, #4
 8000dce:	0143      	lsls	r3, r0, #5
 8000dd0:	d400      	bmi.n	8000dd4 <__aeabi_fsub+0x88>
 8000dd2:	e0a0      	b.n	8000f16 <__aeabi_fsub+0x1ca>
 8000dd4:	1c6a      	adds	r2, r5, #1
 8000dd6:	2dfe      	cmp	r5, #254	; 0xfe
 8000dd8:	d100      	bne.n	8000ddc <__aeabi_fsub+0x90>
 8000dda:	e08d      	b.n	8000ef8 <__aeabi_fsub+0x1ac>
 8000ddc:	0180      	lsls	r0, r0, #6
 8000dde:	0a47      	lsrs	r7, r0, #9
 8000de0:	b2d2      	uxtb	r2, r2
 8000de2:	05d0      	lsls	r0, r2, #23
 8000de4:	4338      	orrs	r0, r7
 8000de6:	07e4      	lsls	r4, r4, #31
 8000de8:	4320      	orrs	r0, r4
 8000dea:	bcc0      	pop	{r6, r7}
 8000dec:	46b9      	mov	r9, r7
 8000dee:	46b0      	mov	r8, r6
 8000df0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000df2:	1aa8      	subs	r0, r5, r2
 8000df4:	4680      	mov	r8, r0
 8000df6:	2800      	cmp	r0, #0
 8000df8:	dd45      	ble.n	8000e86 <__aeabi_fsub+0x13a>
 8000dfa:	2a00      	cmp	r2, #0
 8000dfc:	d070      	beq.n	8000ee0 <__aeabi_fsub+0x194>
 8000dfe:	2dff      	cmp	r5, #255	; 0xff
 8000e00:	d100      	bne.n	8000e04 <__aeabi_fsub+0xb8>
 8000e02:	e09e      	b.n	8000f42 <__aeabi_fsub+0x1f6>
 8000e04:	2380      	movs	r3, #128	; 0x80
 8000e06:	04db      	lsls	r3, r3, #19
 8000e08:	431e      	orrs	r6, r3
 8000e0a:	4643      	mov	r3, r8
 8000e0c:	2b1b      	cmp	r3, #27
 8000e0e:	dc00      	bgt.n	8000e12 <__aeabi_fsub+0xc6>
 8000e10:	e0d2      	b.n	8000fb8 <__aeabi_fsub+0x26c>
 8000e12:	2001      	movs	r0, #1
 8000e14:	4460      	add	r0, ip
 8000e16:	0143      	lsls	r3, r0, #5
 8000e18:	d57a      	bpl.n	8000f10 <__aeabi_fsub+0x1c4>
 8000e1a:	3501      	adds	r5, #1
 8000e1c:	2dff      	cmp	r5, #255	; 0xff
 8000e1e:	d06b      	beq.n	8000ef8 <__aeabi_fsub+0x1ac>
 8000e20:	2301      	movs	r3, #1
 8000e22:	4a9d      	ldr	r2, [pc, #628]	; (8001098 <__aeabi_fsub+0x34c>)
 8000e24:	4003      	ands	r3, r0
 8000e26:	0840      	lsrs	r0, r0, #1
 8000e28:	4010      	ands	r0, r2
 8000e2a:	4318      	orrs	r0, r3
 8000e2c:	e7c8      	b.n	8000dc0 <__aeabi_fsub+0x74>
 8000e2e:	2e00      	cmp	r6, #0
 8000e30:	d020      	beq.n	8000e74 <__aeabi_fsub+0x128>
 8000e32:	428c      	cmp	r4, r1
 8000e34:	d023      	beq.n	8000e7e <__aeabi_fsub+0x132>
 8000e36:	0028      	movs	r0, r5
 8000e38:	38ff      	subs	r0, #255	; 0xff
 8000e3a:	2800      	cmp	r0, #0
 8000e3c:	d039      	beq.n	8000eb2 <__aeabi_fsub+0x166>
 8000e3e:	1b57      	subs	r7, r2, r5
 8000e40:	2d00      	cmp	r5, #0
 8000e42:	d000      	beq.n	8000e46 <__aeabi_fsub+0xfa>
 8000e44:	e09d      	b.n	8000f82 <__aeabi_fsub+0x236>
 8000e46:	4663      	mov	r3, ip
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d100      	bne.n	8000e4e <__aeabi_fsub+0x102>
 8000e4c:	e0db      	b.n	8001006 <__aeabi_fsub+0x2ba>
 8000e4e:	1e7b      	subs	r3, r7, #1
 8000e50:	2f01      	cmp	r7, #1
 8000e52:	d100      	bne.n	8000e56 <__aeabi_fsub+0x10a>
 8000e54:	e10d      	b.n	8001072 <__aeabi_fsub+0x326>
 8000e56:	2fff      	cmp	r7, #255	; 0xff
 8000e58:	d071      	beq.n	8000f3e <__aeabi_fsub+0x1f2>
 8000e5a:	001f      	movs	r7, r3
 8000e5c:	e098      	b.n	8000f90 <__aeabi_fsub+0x244>
 8000e5e:	2e00      	cmp	r6, #0
 8000e60:	d100      	bne.n	8000e64 <__aeabi_fsub+0x118>
 8000e62:	e0a7      	b.n	8000fb4 <__aeabi_fsub+0x268>
 8000e64:	1e42      	subs	r2, r0, #1
 8000e66:	2801      	cmp	r0, #1
 8000e68:	d100      	bne.n	8000e6c <__aeabi_fsub+0x120>
 8000e6a:	e0e6      	b.n	800103a <__aeabi_fsub+0x2ee>
 8000e6c:	28ff      	cmp	r0, #255	; 0xff
 8000e6e:	d068      	beq.n	8000f42 <__aeabi_fsub+0x1f6>
 8000e70:	0010      	movs	r0, r2
 8000e72:	e78f      	b.n	8000d94 <__aeabi_fsub+0x48>
 8000e74:	2001      	movs	r0, #1
 8000e76:	4041      	eors	r1, r0
 8000e78:	42a1      	cmp	r1, r4
 8000e7a:	d000      	beq.n	8000e7e <__aeabi_fsub+0x132>
 8000e7c:	e77f      	b.n	8000d7e <__aeabi_fsub+0x32>
 8000e7e:	20ff      	movs	r0, #255	; 0xff
 8000e80:	4240      	negs	r0, r0
 8000e82:	4680      	mov	r8, r0
 8000e84:	44a8      	add	r8, r5
 8000e86:	4640      	mov	r0, r8
 8000e88:	2800      	cmp	r0, #0
 8000e8a:	d038      	beq.n	8000efe <__aeabi_fsub+0x1b2>
 8000e8c:	1b51      	subs	r1, r2, r5
 8000e8e:	2d00      	cmp	r5, #0
 8000e90:	d100      	bne.n	8000e94 <__aeabi_fsub+0x148>
 8000e92:	e0ae      	b.n	8000ff2 <__aeabi_fsub+0x2a6>
 8000e94:	2aff      	cmp	r2, #255	; 0xff
 8000e96:	d100      	bne.n	8000e9a <__aeabi_fsub+0x14e>
 8000e98:	e0df      	b.n	800105a <__aeabi_fsub+0x30e>
 8000e9a:	2380      	movs	r3, #128	; 0x80
 8000e9c:	4660      	mov	r0, ip
 8000e9e:	04db      	lsls	r3, r3, #19
 8000ea0:	4318      	orrs	r0, r3
 8000ea2:	4684      	mov	ip, r0
 8000ea4:	291b      	cmp	r1, #27
 8000ea6:	dc00      	bgt.n	8000eaa <__aeabi_fsub+0x15e>
 8000ea8:	e0d9      	b.n	800105e <__aeabi_fsub+0x312>
 8000eaa:	2001      	movs	r0, #1
 8000eac:	0015      	movs	r5, r2
 8000eae:	1980      	adds	r0, r0, r6
 8000eb0:	e7b1      	b.n	8000e16 <__aeabi_fsub+0xca>
 8000eb2:	20fe      	movs	r0, #254	; 0xfe
 8000eb4:	1c6a      	adds	r2, r5, #1
 8000eb6:	4210      	tst	r0, r2
 8000eb8:	d171      	bne.n	8000f9e <__aeabi_fsub+0x252>
 8000eba:	2d00      	cmp	r5, #0
 8000ebc:	d000      	beq.n	8000ec0 <__aeabi_fsub+0x174>
 8000ebe:	e0a6      	b.n	800100e <__aeabi_fsub+0x2c2>
 8000ec0:	4663      	mov	r3, ip
 8000ec2:	2b00      	cmp	r3, #0
 8000ec4:	d100      	bne.n	8000ec8 <__aeabi_fsub+0x17c>
 8000ec6:	e0d9      	b.n	800107c <__aeabi_fsub+0x330>
 8000ec8:	2200      	movs	r2, #0
 8000eca:	2e00      	cmp	r6, #0
 8000ecc:	d100      	bne.n	8000ed0 <__aeabi_fsub+0x184>
 8000ece:	e788      	b.n	8000de2 <__aeabi_fsub+0x96>
 8000ed0:	1b98      	subs	r0, r3, r6
 8000ed2:	0143      	lsls	r3, r0, #5
 8000ed4:	d400      	bmi.n	8000ed8 <__aeabi_fsub+0x18c>
 8000ed6:	e0e1      	b.n	800109c <__aeabi_fsub+0x350>
 8000ed8:	4663      	mov	r3, ip
 8000eda:	000c      	movs	r4, r1
 8000edc:	1af0      	subs	r0, r6, r3
 8000ede:	e76f      	b.n	8000dc0 <__aeabi_fsub+0x74>
 8000ee0:	2e00      	cmp	r6, #0
 8000ee2:	d100      	bne.n	8000ee6 <__aeabi_fsub+0x19a>
 8000ee4:	e0b7      	b.n	8001056 <__aeabi_fsub+0x30a>
 8000ee6:	0002      	movs	r2, r0
 8000ee8:	3a01      	subs	r2, #1
 8000eea:	2801      	cmp	r0, #1
 8000eec:	d100      	bne.n	8000ef0 <__aeabi_fsub+0x1a4>
 8000eee:	e09c      	b.n	800102a <__aeabi_fsub+0x2de>
 8000ef0:	28ff      	cmp	r0, #255	; 0xff
 8000ef2:	d026      	beq.n	8000f42 <__aeabi_fsub+0x1f6>
 8000ef4:	4690      	mov	r8, r2
 8000ef6:	e788      	b.n	8000e0a <__aeabi_fsub+0xbe>
 8000ef8:	22ff      	movs	r2, #255	; 0xff
 8000efa:	2700      	movs	r7, #0
 8000efc:	e771      	b.n	8000de2 <__aeabi_fsub+0x96>
 8000efe:	20fe      	movs	r0, #254	; 0xfe
 8000f00:	1c6a      	adds	r2, r5, #1
 8000f02:	4210      	tst	r0, r2
 8000f04:	d064      	beq.n	8000fd0 <__aeabi_fsub+0x284>
 8000f06:	2aff      	cmp	r2, #255	; 0xff
 8000f08:	d0f6      	beq.n	8000ef8 <__aeabi_fsub+0x1ac>
 8000f0a:	0015      	movs	r5, r2
 8000f0c:	4466      	add	r6, ip
 8000f0e:	0870      	lsrs	r0, r6, #1
 8000f10:	0743      	lsls	r3, r0, #29
 8000f12:	d000      	beq.n	8000f16 <__aeabi_fsub+0x1ca>
 8000f14:	e756      	b.n	8000dc4 <__aeabi_fsub+0x78>
 8000f16:	08c3      	lsrs	r3, r0, #3
 8000f18:	2dff      	cmp	r5, #255	; 0xff
 8000f1a:	d012      	beq.n	8000f42 <__aeabi_fsub+0x1f6>
 8000f1c:	025b      	lsls	r3, r3, #9
 8000f1e:	0a5f      	lsrs	r7, r3, #9
 8000f20:	b2ea      	uxtb	r2, r5
 8000f22:	e75e      	b.n	8000de2 <__aeabi_fsub+0x96>
 8000f24:	4662      	mov	r2, ip
 8000f26:	2a00      	cmp	r2, #0
 8000f28:	d100      	bne.n	8000f2c <__aeabi_fsub+0x1e0>
 8000f2a:	e096      	b.n	800105a <__aeabi_fsub+0x30e>
 8000f2c:	2e00      	cmp	r6, #0
 8000f2e:	d008      	beq.n	8000f42 <__aeabi_fsub+0x1f6>
 8000f30:	2280      	movs	r2, #128	; 0x80
 8000f32:	03d2      	lsls	r2, r2, #15
 8000f34:	4213      	tst	r3, r2
 8000f36:	d004      	beq.n	8000f42 <__aeabi_fsub+0x1f6>
 8000f38:	4648      	mov	r0, r9
 8000f3a:	4210      	tst	r0, r2
 8000f3c:	d101      	bne.n	8000f42 <__aeabi_fsub+0x1f6>
 8000f3e:	000c      	movs	r4, r1
 8000f40:	464b      	mov	r3, r9
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d0d8      	beq.n	8000ef8 <__aeabi_fsub+0x1ac>
 8000f46:	2780      	movs	r7, #128	; 0x80
 8000f48:	03ff      	lsls	r7, r7, #15
 8000f4a:	431f      	orrs	r7, r3
 8000f4c:	027f      	lsls	r7, r7, #9
 8000f4e:	22ff      	movs	r2, #255	; 0xff
 8000f50:	0a7f      	lsrs	r7, r7, #9
 8000f52:	e746      	b.n	8000de2 <__aeabi_fsub+0x96>
 8000f54:	2320      	movs	r3, #32
 8000f56:	003a      	movs	r2, r7
 8000f58:	1b45      	subs	r5, r0, r5
 8000f5a:	0038      	movs	r0, r7
 8000f5c:	3501      	adds	r5, #1
 8000f5e:	40ea      	lsrs	r2, r5
 8000f60:	1b5d      	subs	r5, r3, r5
 8000f62:	40a8      	lsls	r0, r5
 8000f64:	1e43      	subs	r3, r0, #1
 8000f66:	4198      	sbcs	r0, r3
 8000f68:	2500      	movs	r5, #0
 8000f6a:	4310      	orrs	r0, r2
 8000f6c:	e728      	b.n	8000dc0 <__aeabi_fsub+0x74>
 8000f6e:	2320      	movs	r3, #32
 8000f70:	1a1b      	subs	r3, r3, r0
 8000f72:	0032      	movs	r2, r6
 8000f74:	409e      	lsls	r6, r3
 8000f76:	40c2      	lsrs	r2, r0
 8000f78:	0030      	movs	r0, r6
 8000f7a:	1e43      	subs	r3, r0, #1
 8000f7c:	4198      	sbcs	r0, r3
 8000f7e:	4310      	orrs	r0, r2
 8000f80:	e70c      	b.n	8000d9c <__aeabi_fsub+0x50>
 8000f82:	2aff      	cmp	r2, #255	; 0xff
 8000f84:	d0db      	beq.n	8000f3e <__aeabi_fsub+0x1f2>
 8000f86:	2380      	movs	r3, #128	; 0x80
 8000f88:	4660      	mov	r0, ip
 8000f8a:	04db      	lsls	r3, r3, #19
 8000f8c:	4318      	orrs	r0, r3
 8000f8e:	4684      	mov	ip, r0
 8000f90:	2f1b      	cmp	r7, #27
 8000f92:	dd56      	ble.n	8001042 <__aeabi_fsub+0x2f6>
 8000f94:	2001      	movs	r0, #1
 8000f96:	000c      	movs	r4, r1
 8000f98:	0015      	movs	r5, r2
 8000f9a:	1a30      	subs	r0, r6, r0
 8000f9c:	e700      	b.n	8000da0 <__aeabi_fsub+0x54>
 8000f9e:	4663      	mov	r3, ip
 8000fa0:	1b9f      	subs	r7, r3, r6
 8000fa2:	017b      	lsls	r3, r7, #5
 8000fa4:	d43d      	bmi.n	8001022 <__aeabi_fsub+0x2d6>
 8000fa6:	2f00      	cmp	r7, #0
 8000fa8:	d000      	beq.n	8000fac <__aeabi_fsub+0x260>
 8000faa:	e6fe      	b.n	8000daa <__aeabi_fsub+0x5e>
 8000fac:	2400      	movs	r4, #0
 8000fae:	2200      	movs	r2, #0
 8000fb0:	2700      	movs	r7, #0
 8000fb2:	e716      	b.n	8000de2 <__aeabi_fsub+0x96>
 8000fb4:	0005      	movs	r5, r0
 8000fb6:	e7af      	b.n	8000f18 <__aeabi_fsub+0x1cc>
 8000fb8:	0032      	movs	r2, r6
 8000fba:	4643      	mov	r3, r8
 8000fbc:	4641      	mov	r1, r8
 8000fbe:	40da      	lsrs	r2, r3
 8000fc0:	2320      	movs	r3, #32
 8000fc2:	1a5b      	subs	r3, r3, r1
 8000fc4:	409e      	lsls	r6, r3
 8000fc6:	0030      	movs	r0, r6
 8000fc8:	1e43      	subs	r3, r0, #1
 8000fca:	4198      	sbcs	r0, r3
 8000fcc:	4310      	orrs	r0, r2
 8000fce:	e721      	b.n	8000e14 <__aeabi_fsub+0xc8>
 8000fd0:	2d00      	cmp	r5, #0
 8000fd2:	d1a7      	bne.n	8000f24 <__aeabi_fsub+0x1d8>
 8000fd4:	4663      	mov	r3, ip
 8000fd6:	2b00      	cmp	r3, #0
 8000fd8:	d059      	beq.n	800108e <__aeabi_fsub+0x342>
 8000fda:	2200      	movs	r2, #0
 8000fdc:	2e00      	cmp	r6, #0
 8000fde:	d100      	bne.n	8000fe2 <__aeabi_fsub+0x296>
 8000fe0:	e6ff      	b.n	8000de2 <__aeabi_fsub+0x96>
 8000fe2:	0030      	movs	r0, r6
 8000fe4:	4460      	add	r0, ip
 8000fe6:	0143      	lsls	r3, r0, #5
 8000fe8:	d592      	bpl.n	8000f10 <__aeabi_fsub+0x1c4>
 8000fea:	4b2a      	ldr	r3, [pc, #168]	; (8001094 <__aeabi_fsub+0x348>)
 8000fec:	3501      	adds	r5, #1
 8000fee:	4018      	ands	r0, r3
 8000ff0:	e78e      	b.n	8000f10 <__aeabi_fsub+0x1c4>
 8000ff2:	4663      	mov	r3, ip
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d047      	beq.n	8001088 <__aeabi_fsub+0x33c>
 8000ff8:	1e4b      	subs	r3, r1, #1
 8000ffa:	2901      	cmp	r1, #1
 8000ffc:	d015      	beq.n	800102a <__aeabi_fsub+0x2de>
 8000ffe:	29ff      	cmp	r1, #255	; 0xff
 8001000:	d02b      	beq.n	800105a <__aeabi_fsub+0x30e>
 8001002:	0019      	movs	r1, r3
 8001004:	e74e      	b.n	8000ea4 <__aeabi_fsub+0x158>
 8001006:	000c      	movs	r4, r1
 8001008:	464b      	mov	r3, r9
 800100a:	003d      	movs	r5, r7
 800100c:	e784      	b.n	8000f18 <__aeabi_fsub+0x1cc>
 800100e:	4662      	mov	r2, ip
 8001010:	2a00      	cmp	r2, #0
 8001012:	d18b      	bne.n	8000f2c <__aeabi_fsub+0x1e0>
 8001014:	2e00      	cmp	r6, #0
 8001016:	d192      	bne.n	8000f3e <__aeabi_fsub+0x1f2>
 8001018:	2780      	movs	r7, #128	; 0x80
 800101a:	2400      	movs	r4, #0
 800101c:	22ff      	movs	r2, #255	; 0xff
 800101e:	03ff      	lsls	r7, r7, #15
 8001020:	e6df      	b.n	8000de2 <__aeabi_fsub+0x96>
 8001022:	4663      	mov	r3, ip
 8001024:	000c      	movs	r4, r1
 8001026:	1af7      	subs	r7, r6, r3
 8001028:	e6bf      	b.n	8000daa <__aeabi_fsub+0x5e>
 800102a:	0030      	movs	r0, r6
 800102c:	4460      	add	r0, ip
 800102e:	2501      	movs	r5, #1
 8001030:	0143      	lsls	r3, r0, #5
 8001032:	d400      	bmi.n	8001036 <__aeabi_fsub+0x2ea>
 8001034:	e76c      	b.n	8000f10 <__aeabi_fsub+0x1c4>
 8001036:	2502      	movs	r5, #2
 8001038:	e6f2      	b.n	8000e20 <__aeabi_fsub+0xd4>
 800103a:	4663      	mov	r3, ip
 800103c:	2501      	movs	r5, #1
 800103e:	1b98      	subs	r0, r3, r6
 8001040:	e6ae      	b.n	8000da0 <__aeabi_fsub+0x54>
 8001042:	2320      	movs	r3, #32
 8001044:	4664      	mov	r4, ip
 8001046:	4660      	mov	r0, ip
 8001048:	40fc      	lsrs	r4, r7
 800104a:	1bdf      	subs	r7, r3, r7
 800104c:	40b8      	lsls	r0, r7
 800104e:	1e43      	subs	r3, r0, #1
 8001050:	4198      	sbcs	r0, r3
 8001052:	4320      	orrs	r0, r4
 8001054:	e79f      	b.n	8000f96 <__aeabi_fsub+0x24a>
 8001056:	0005      	movs	r5, r0
 8001058:	e75e      	b.n	8000f18 <__aeabi_fsub+0x1cc>
 800105a:	464b      	mov	r3, r9
 800105c:	e771      	b.n	8000f42 <__aeabi_fsub+0x1f6>
 800105e:	2320      	movs	r3, #32
 8001060:	4665      	mov	r5, ip
 8001062:	4660      	mov	r0, ip
 8001064:	40cd      	lsrs	r5, r1
 8001066:	1a59      	subs	r1, r3, r1
 8001068:	4088      	lsls	r0, r1
 800106a:	1e43      	subs	r3, r0, #1
 800106c:	4198      	sbcs	r0, r3
 800106e:	4328      	orrs	r0, r5
 8001070:	e71c      	b.n	8000eac <__aeabi_fsub+0x160>
 8001072:	4663      	mov	r3, ip
 8001074:	000c      	movs	r4, r1
 8001076:	2501      	movs	r5, #1
 8001078:	1af0      	subs	r0, r6, r3
 800107a:	e691      	b.n	8000da0 <__aeabi_fsub+0x54>
 800107c:	2e00      	cmp	r6, #0
 800107e:	d095      	beq.n	8000fac <__aeabi_fsub+0x260>
 8001080:	000c      	movs	r4, r1
 8001082:	464f      	mov	r7, r9
 8001084:	2200      	movs	r2, #0
 8001086:	e6ac      	b.n	8000de2 <__aeabi_fsub+0x96>
 8001088:	464b      	mov	r3, r9
 800108a:	000d      	movs	r5, r1
 800108c:	e744      	b.n	8000f18 <__aeabi_fsub+0x1cc>
 800108e:	464f      	mov	r7, r9
 8001090:	2200      	movs	r2, #0
 8001092:	e6a6      	b.n	8000de2 <__aeabi_fsub+0x96>
 8001094:	fbffffff 	.word	0xfbffffff
 8001098:	7dffffff 	.word	0x7dffffff
 800109c:	2800      	cmp	r0, #0
 800109e:	d000      	beq.n	80010a2 <__aeabi_fsub+0x356>
 80010a0:	e736      	b.n	8000f10 <__aeabi_fsub+0x1c4>
 80010a2:	2400      	movs	r4, #0
 80010a4:	2700      	movs	r7, #0
 80010a6:	e69c      	b.n	8000de2 <__aeabi_fsub+0x96>

080010a8 <__aeabi_f2iz>:
 80010a8:	0241      	lsls	r1, r0, #9
 80010aa:	0042      	lsls	r2, r0, #1
 80010ac:	0fc3      	lsrs	r3, r0, #31
 80010ae:	0a49      	lsrs	r1, r1, #9
 80010b0:	2000      	movs	r0, #0
 80010b2:	0e12      	lsrs	r2, r2, #24
 80010b4:	2a7e      	cmp	r2, #126	; 0x7e
 80010b6:	dd03      	ble.n	80010c0 <__aeabi_f2iz+0x18>
 80010b8:	2a9d      	cmp	r2, #157	; 0x9d
 80010ba:	dd02      	ble.n	80010c2 <__aeabi_f2iz+0x1a>
 80010bc:	4a09      	ldr	r2, [pc, #36]	; (80010e4 <__aeabi_f2iz+0x3c>)
 80010be:	1898      	adds	r0, r3, r2
 80010c0:	4770      	bx	lr
 80010c2:	2080      	movs	r0, #128	; 0x80
 80010c4:	0400      	lsls	r0, r0, #16
 80010c6:	4301      	orrs	r1, r0
 80010c8:	2a95      	cmp	r2, #149	; 0x95
 80010ca:	dc07      	bgt.n	80010dc <__aeabi_f2iz+0x34>
 80010cc:	2096      	movs	r0, #150	; 0x96
 80010ce:	1a82      	subs	r2, r0, r2
 80010d0:	40d1      	lsrs	r1, r2
 80010d2:	4248      	negs	r0, r1
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d1f3      	bne.n	80010c0 <__aeabi_f2iz+0x18>
 80010d8:	0008      	movs	r0, r1
 80010da:	e7f1      	b.n	80010c0 <__aeabi_f2iz+0x18>
 80010dc:	3a96      	subs	r2, #150	; 0x96
 80010de:	4091      	lsls	r1, r2
 80010e0:	e7f7      	b.n	80010d2 <__aeabi_f2iz+0x2a>
 80010e2:	46c0      	nop			; (mov r8, r8)
 80010e4:	7fffffff 	.word	0x7fffffff

080010e8 <__aeabi_i2f>:
 80010e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ea:	2800      	cmp	r0, #0
 80010ec:	d013      	beq.n	8001116 <__aeabi_i2f+0x2e>
 80010ee:	17c3      	asrs	r3, r0, #31
 80010f0:	18c6      	adds	r6, r0, r3
 80010f2:	405e      	eors	r6, r3
 80010f4:	0fc4      	lsrs	r4, r0, #31
 80010f6:	0030      	movs	r0, r6
 80010f8:	f001 fefa 	bl	8002ef0 <__clzsi2>
 80010fc:	239e      	movs	r3, #158	; 0x9e
 80010fe:	0005      	movs	r5, r0
 8001100:	1a1b      	subs	r3, r3, r0
 8001102:	2b96      	cmp	r3, #150	; 0x96
 8001104:	dc0f      	bgt.n	8001126 <__aeabi_i2f+0x3e>
 8001106:	2808      	cmp	r0, #8
 8001108:	dd01      	ble.n	800110e <__aeabi_i2f+0x26>
 800110a:	3d08      	subs	r5, #8
 800110c:	40ae      	lsls	r6, r5
 800110e:	0276      	lsls	r6, r6, #9
 8001110:	0a76      	lsrs	r6, r6, #9
 8001112:	b2d8      	uxtb	r0, r3
 8001114:	e002      	b.n	800111c <__aeabi_i2f+0x34>
 8001116:	2400      	movs	r4, #0
 8001118:	2000      	movs	r0, #0
 800111a:	2600      	movs	r6, #0
 800111c:	05c0      	lsls	r0, r0, #23
 800111e:	4330      	orrs	r0, r6
 8001120:	07e4      	lsls	r4, r4, #31
 8001122:	4320      	orrs	r0, r4
 8001124:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001126:	2b99      	cmp	r3, #153	; 0x99
 8001128:	dd0c      	ble.n	8001144 <__aeabi_i2f+0x5c>
 800112a:	2205      	movs	r2, #5
 800112c:	0031      	movs	r1, r6
 800112e:	1a12      	subs	r2, r2, r0
 8001130:	40d1      	lsrs	r1, r2
 8001132:	000a      	movs	r2, r1
 8001134:	0001      	movs	r1, r0
 8001136:	0030      	movs	r0, r6
 8001138:	311b      	adds	r1, #27
 800113a:	4088      	lsls	r0, r1
 800113c:	1e41      	subs	r1, r0, #1
 800113e:	4188      	sbcs	r0, r1
 8001140:	4302      	orrs	r2, r0
 8001142:	0016      	movs	r6, r2
 8001144:	2d05      	cmp	r5, #5
 8001146:	dc12      	bgt.n	800116e <__aeabi_i2f+0x86>
 8001148:	0031      	movs	r1, r6
 800114a:	4f0d      	ldr	r7, [pc, #52]	; (8001180 <__aeabi_i2f+0x98>)
 800114c:	4039      	ands	r1, r7
 800114e:	0772      	lsls	r2, r6, #29
 8001150:	d009      	beq.n	8001166 <__aeabi_i2f+0x7e>
 8001152:	200f      	movs	r0, #15
 8001154:	4030      	ands	r0, r6
 8001156:	2804      	cmp	r0, #4
 8001158:	d005      	beq.n	8001166 <__aeabi_i2f+0x7e>
 800115a:	3104      	adds	r1, #4
 800115c:	014a      	lsls	r2, r1, #5
 800115e:	d502      	bpl.n	8001166 <__aeabi_i2f+0x7e>
 8001160:	239f      	movs	r3, #159	; 0x9f
 8001162:	4039      	ands	r1, r7
 8001164:	1b5b      	subs	r3, r3, r5
 8001166:	0189      	lsls	r1, r1, #6
 8001168:	0a4e      	lsrs	r6, r1, #9
 800116a:	b2d8      	uxtb	r0, r3
 800116c:	e7d6      	b.n	800111c <__aeabi_i2f+0x34>
 800116e:	1f6a      	subs	r2, r5, #5
 8001170:	4096      	lsls	r6, r2
 8001172:	0031      	movs	r1, r6
 8001174:	4f02      	ldr	r7, [pc, #8]	; (8001180 <__aeabi_i2f+0x98>)
 8001176:	4039      	ands	r1, r7
 8001178:	0772      	lsls	r2, r6, #29
 800117a:	d0f4      	beq.n	8001166 <__aeabi_i2f+0x7e>
 800117c:	e7e9      	b.n	8001152 <__aeabi_i2f+0x6a>
 800117e:	46c0      	nop			; (mov r8, r8)
 8001180:	fbffffff 	.word	0xfbffffff

08001184 <__aeabi_dadd>:
 8001184:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001186:	464f      	mov	r7, r9
 8001188:	4646      	mov	r6, r8
 800118a:	46d6      	mov	lr, sl
 800118c:	000d      	movs	r5, r1
 800118e:	0004      	movs	r4, r0
 8001190:	b5c0      	push	{r6, r7, lr}
 8001192:	001f      	movs	r7, r3
 8001194:	0011      	movs	r1, r2
 8001196:	0328      	lsls	r0, r5, #12
 8001198:	0f62      	lsrs	r2, r4, #29
 800119a:	0a40      	lsrs	r0, r0, #9
 800119c:	4310      	orrs	r0, r2
 800119e:	007a      	lsls	r2, r7, #1
 80011a0:	0d52      	lsrs	r2, r2, #21
 80011a2:	00e3      	lsls	r3, r4, #3
 80011a4:	033c      	lsls	r4, r7, #12
 80011a6:	4691      	mov	r9, r2
 80011a8:	0a64      	lsrs	r4, r4, #9
 80011aa:	0ffa      	lsrs	r2, r7, #31
 80011ac:	0f4f      	lsrs	r7, r1, #29
 80011ae:	006e      	lsls	r6, r5, #1
 80011b0:	4327      	orrs	r7, r4
 80011b2:	4692      	mov	sl, r2
 80011b4:	46b8      	mov	r8, r7
 80011b6:	0d76      	lsrs	r6, r6, #21
 80011b8:	0fed      	lsrs	r5, r5, #31
 80011ba:	00c9      	lsls	r1, r1, #3
 80011bc:	4295      	cmp	r5, r2
 80011be:	d100      	bne.n	80011c2 <__aeabi_dadd+0x3e>
 80011c0:	e099      	b.n	80012f6 <__aeabi_dadd+0x172>
 80011c2:	464c      	mov	r4, r9
 80011c4:	1b34      	subs	r4, r6, r4
 80011c6:	46a4      	mov	ip, r4
 80011c8:	2c00      	cmp	r4, #0
 80011ca:	dc00      	bgt.n	80011ce <__aeabi_dadd+0x4a>
 80011cc:	e07c      	b.n	80012c8 <__aeabi_dadd+0x144>
 80011ce:	464a      	mov	r2, r9
 80011d0:	2a00      	cmp	r2, #0
 80011d2:	d100      	bne.n	80011d6 <__aeabi_dadd+0x52>
 80011d4:	e0b8      	b.n	8001348 <__aeabi_dadd+0x1c4>
 80011d6:	4ac5      	ldr	r2, [pc, #788]	; (80014ec <__aeabi_dadd+0x368>)
 80011d8:	4296      	cmp	r6, r2
 80011da:	d100      	bne.n	80011de <__aeabi_dadd+0x5a>
 80011dc:	e11c      	b.n	8001418 <__aeabi_dadd+0x294>
 80011de:	2280      	movs	r2, #128	; 0x80
 80011e0:	003c      	movs	r4, r7
 80011e2:	0412      	lsls	r2, r2, #16
 80011e4:	4314      	orrs	r4, r2
 80011e6:	46a0      	mov	r8, r4
 80011e8:	4662      	mov	r2, ip
 80011ea:	2a38      	cmp	r2, #56	; 0x38
 80011ec:	dd00      	ble.n	80011f0 <__aeabi_dadd+0x6c>
 80011ee:	e161      	b.n	80014b4 <__aeabi_dadd+0x330>
 80011f0:	2a1f      	cmp	r2, #31
 80011f2:	dd00      	ble.n	80011f6 <__aeabi_dadd+0x72>
 80011f4:	e1cc      	b.n	8001590 <__aeabi_dadd+0x40c>
 80011f6:	4664      	mov	r4, ip
 80011f8:	2220      	movs	r2, #32
 80011fa:	1b12      	subs	r2, r2, r4
 80011fc:	4644      	mov	r4, r8
 80011fe:	4094      	lsls	r4, r2
 8001200:	000f      	movs	r7, r1
 8001202:	46a1      	mov	r9, r4
 8001204:	4664      	mov	r4, ip
 8001206:	4091      	lsls	r1, r2
 8001208:	40e7      	lsrs	r7, r4
 800120a:	464c      	mov	r4, r9
 800120c:	1e4a      	subs	r2, r1, #1
 800120e:	4191      	sbcs	r1, r2
 8001210:	433c      	orrs	r4, r7
 8001212:	4642      	mov	r2, r8
 8001214:	4321      	orrs	r1, r4
 8001216:	4664      	mov	r4, ip
 8001218:	40e2      	lsrs	r2, r4
 800121a:	1a80      	subs	r0, r0, r2
 800121c:	1a5c      	subs	r4, r3, r1
 800121e:	42a3      	cmp	r3, r4
 8001220:	419b      	sbcs	r3, r3
 8001222:	425f      	negs	r7, r3
 8001224:	1bc7      	subs	r7, r0, r7
 8001226:	023b      	lsls	r3, r7, #8
 8001228:	d400      	bmi.n	800122c <__aeabi_dadd+0xa8>
 800122a:	e0d0      	b.n	80013ce <__aeabi_dadd+0x24a>
 800122c:	027f      	lsls	r7, r7, #9
 800122e:	0a7f      	lsrs	r7, r7, #9
 8001230:	2f00      	cmp	r7, #0
 8001232:	d100      	bne.n	8001236 <__aeabi_dadd+0xb2>
 8001234:	e0ff      	b.n	8001436 <__aeabi_dadd+0x2b2>
 8001236:	0038      	movs	r0, r7
 8001238:	f001 fe5a 	bl	8002ef0 <__clzsi2>
 800123c:	0001      	movs	r1, r0
 800123e:	3908      	subs	r1, #8
 8001240:	2320      	movs	r3, #32
 8001242:	0022      	movs	r2, r4
 8001244:	1a5b      	subs	r3, r3, r1
 8001246:	408f      	lsls	r7, r1
 8001248:	40da      	lsrs	r2, r3
 800124a:	408c      	lsls	r4, r1
 800124c:	4317      	orrs	r7, r2
 800124e:	42b1      	cmp	r1, r6
 8001250:	da00      	bge.n	8001254 <__aeabi_dadd+0xd0>
 8001252:	e0ff      	b.n	8001454 <__aeabi_dadd+0x2d0>
 8001254:	1b89      	subs	r1, r1, r6
 8001256:	1c4b      	adds	r3, r1, #1
 8001258:	2b1f      	cmp	r3, #31
 800125a:	dd00      	ble.n	800125e <__aeabi_dadd+0xda>
 800125c:	e0a8      	b.n	80013b0 <__aeabi_dadd+0x22c>
 800125e:	2220      	movs	r2, #32
 8001260:	0039      	movs	r1, r7
 8001262:	1ad2      	subs	r2, r2, r3
 8001264:	0020      	movs	r0, r4
 8001266:	4094      	lsls	r4, r2
 8001268:	4091      	lsls	r1, r2
 800126a:	40d8      	lsrs	r0, r3
 800126c:	1e62      	subs	r2, r4, #1
 800126e:	4194      	sbcs	r4, r2
 8001270:	40df      	lsrs	r7, r3
 8001272:	2600      	movs	r6, #0
 8001274:	4301      	orrs	r1, r0
 8001276:	430c      	orrs	r4, r1
 8001278:	0763      	lsls	r3, r4, #29
 800127a:	d009      	beq.n	8001290 <__aeabi_dadd+0x10c>
 800127c:	230f      	movs	r3, #15
 800127e:	4023      	ands	r3, r4
 8001280:	2b04      	cmp	r3, #4
 8001282:	d005      	beq.n	8001290 <__aeabi_dadd+0x10c>
 8001284:	1d23      	adds	r3, r4, #4
 8001286:	42a3      	cmp	r3, r4
 8001288:	41a4      	sbcs	r4, r4
 800128a:	4264      	negs	r4, r4
 800128c:	193f      	adds	r7, r7, r4
 800128e:	001c      	movs	r4, r3
 8001290:	023b      	lsls	r3, r7, #8
 8001292:	d400      	bmi.n	8001296 <__aeabi_dadd+0x112>
 8001294:	e09e      	b.n	80013d4 <__aeabi_dadd+0x250>
 8001296:	4b95      	ldr	r3, [pc, #596]	; (80014ec <__aeabi_dadd+0x368>)
 8001298:	3601      	adds	r6, #1
 800129a:	429e      	cmp	r6, r3
 800129c:	d100      	bne.n	80012a0 <__aeabi_dadd+0x11c>
 800129e:	e0b7      	b.n	8001410 <__aeabi_dadd+0x28c>
 80012a0:	4a93      	ldr	r2, [pc, #588]	; (80014f0 <__aeabi_dadd+0x36c>)
 80012a2:	08e4      	lsrs	r4, r4, #3
 80012a4:	4017      	ands	r7, r2
 80012a6:	077b      	lsls	r3, r7, #29
 80012a8:	0571      	lsls	r1, r6, #21
 80012aa:	027f      	lsls	r7, r7, #9
 80012ac:	4323      	orrs	r3, r4
 80012ae:	0b3f      	lsrs	r7, r7, #12
 80012b0:	0d4a      	lsrs	r2, r1, #21
 80012b2:	0512      	lsls	r2, r2, #20
 80012b4:	433a      	orrs	r2, r7
 80012b6:	07ed      	lsls	r5, r5, #31
 80012b8:	432a      	orrs	r2, r5
 80012ba:	0018      	movs	r0, r3
 80012bc:	0011      	movs	r1, r2
 80012be:	bce0      	pop	{r5, r6, r7}
 80012c0:	46ba      	mov	sl, r7
 80012c2:	46b1      	mov	r9, r6
 80012c4:	46a8      	mov	r8, r5
 80012c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012c8:	2c00      	cmp	r4, #0
 80012ca:	d04b      	beq.n	8001364 <__aeabi_dadd+0x1e0>
 80012cc:	464c      	mov	r4, r9
 80012ce:	1ba4      	subs	r4, r4, r6
 80012d0:	46a4      	mov	ip, r4
 80012d2:	2e00      	cmp	r6, #0
 80012d4:	d000      	beq.n	80012d8 <__aeabi_dadd+0x154>
 80012d6:	e123      	b.n	8001520 <__aeabi_dadd+0x39c>
 80012d8:	0004      	movs	r4, r0
 80012da:	431c      	orrs	r4, r3
 80012dc:	d100      	bne.n	80012e0 <__aeabi_dadd+0x15c>
 80012de:	e1af      	b.n	8001640 <__aeabi_dadd+0x4bc>
 80012e0:	4662      	mov	r2, ip
 80012e2:	1e54      	subs	r4, r2, #1
 80012e4:	2a01      	cmp	r2, #1
 80012e6:	d100      	bne.n	80012ea <__aeabi_dadd+0x166>
 80012e8:	e215      	b.n	8001716 <__aeabi_dadd+0x592>
 80012ea:	4d80      	ldr	r5, [pc, #512]	; (80014ec <__aeabi_dadd+0x368>)
 80012ec:	45ac      	cmp	ip, r5
 80012ee:	d100      	bne.n	80012f2 <__aeabi_dadd+0x16e>
 80012f0:	e1c8      	b.n	8001684 <__aeabi_dadd+0x500>
 80012f2:	46a4      	mov	ip, r4
 80012f4:	e11b      	b.n	800152e <__aeabi_dadd+0x3aa>
 80012f6:	464a      	mov	r2, r9
 80012f8:	1ab2      	subs	r2, r6, r2
 80012fa:	4694      	mov	ip, r2
 80012fc:	2a00      	cmp	r2, #0
 80012fe:	dc00      	bgt.n	8001302 <__aeabi_dadd+0x17e>
 8001300:	e0ac      	b.n	800145c <__aeabi_dadd+0x2d8>
 8001302:	464a      	mov	r2, r9
 8001304:	2a00      	cmp	r2, #0
 8001306:	d043      	beq.n	8001390 <__aeabi_dadd+0x20c>
 8001308:	4a78      	ldr	r2, [pc, #480]	; (80014ec <__aeabi_dadd+0x368>)
 800130a:	4296      	cmp	r6, r2
 800130c:	d100      	bne.n	8001310 <__aeabi_dadd+0x18c>
 800130e:	e1af      	b.n	8001670 <__aeabi_dadd+0x4ec>
 8001310:	2280      	movs	r2, #128	; 0x80
 8001312:	003c      	movs	r4, r7
 8001314:	0412      	lsls	r2, r2, #16
 8001316:	4314      	orrs	r4, r2
 8001318:	46a0      	mov	r8, r4
 800131a:	4662      	mov	r2, ip
 800131c:	2a38      	cmp	r2, #56	; 0x38
 800131e:	dc67      	bgt.n	80013f0 <__aeabi_dadd+0x26c>
 8001320:	2a1f      	cmp	r2, #31
 8001322:	dc00      	bgt.n	8001326 <__aeabi_dadd+0x1a2>
 8001324:	e15f      	b.n	80015e6 <__aeabi_dadd+0x462>
 8001326:	4647      	mov	r7, r8
 8001328:	3a20      	subs	r2, #32
 800132a:	40d7      	lsrs	r7, r2
 800132c:	4662      	mov	r2, ip
 800132e:	2a20      	cmp	r2, #32
 8001330:	d005      	beq.n	800133e <__aeabi_dadd+0x1ba>
 8001332:	4664      	mov	r4, ip
 8001334:	2240      	movs	r2, #64	; 0x40
 8001336:	1b12      	subs	r2, r2, r4
 8001338:	4644      	mov	r4, r8
 800133a:	4094      	lsls	r4, r2
 800133c:	4321      	orrs	r1, r4
 800133e:	1e4a      	subs	r2, r1, #1
 8001340:	4191      	sbcs	r1, r2
 8001342:	000c      	movs	r4, r1
 8001344:	433c      	orrs	r4, r7
 8001346:	e057      	b.n	80013f8 <__aeabi_dadd+0x274>
 8001348:	003a      	movs	r2, r7
 800134a:	430a      	orrs	r2, r1
 800134c:	d100      	bne.n	8001350 <__aeabi_dadd+0x1cc>
 800134e:	e105      	b.n	800155c <__aeabi_dadd+0x3d8>
 8001350:	0022      	movs	r2, r4
 8001352:	3a01      	subs	r2, #1
 8001354:	2c01      	cmp	r4, #1
 8001356:	d100      	bne.n	800135a <__aeabi_dadd+0x1d6>
 8001358:	e182      	b.n	8001660 <__aeabi_dadd+0x4dc>
 800135a:	4c64      	ldr	r4, [pc, #400]	; (80014ec <__aeabi_dadd+0x368>)
 800135c:	45a4      	cmp	ip, r4
 800135e:	d05b      	beq.n	8001418 <__aeabi_dadd+0x294>
 8001360:	4694      	mov	ip, r2
 8001362:	e741      	b.n	80011e8 <__aeabi_dadd+0x64>
 8001364:	4c63      	ldr	r4, [pc, #396]	; (80014f4 <__aeabi_dadd+0x370>)
 8001366:	1c77      	adds	r7, r6, #1
 8001368:	4227      	tst	r7, r4
 800136a:	d000      	beq.n	800136e <__aeabi_dadd+0x1ea>
 800136c:	e0c4      	b.n	80014f8 <__aeabi_dadd+0x374>
 800136e:	0004      	movs	r4, r0
 8001370:	431c      	orrs	r4, r3
 8001372:	2e00      	cmp	r6, #0
 8001374:	d000      	beq.n	8001378 <__aeabi_dadd+0x1f4>
 8001376:	e169      	b.n	800164c <__aeabi_dadd+0x4c8>
 8001378:	2c00      	cmp	r4, #0
 800137a:	d100      	bne.n	800137e <__aeabi_dadd+0x1fa>
 800137c:	e1bf      	b.n	80016fe <__aeabi_dadd+0x57a>
 800137e:	4644      	mov	r4, r8
 8001380:	430c      	orrs	r4, r1
 8001382:	d000      	beq.n	8001386 <__aeabi_dadd+0x202>
 8001384:	e1d0      	b.n	8001728 <__aeabi_dadd+0x5a4>
 8001386:	0742      	lsls	r2, r0, #29
 8001388:	08db      	lsrs	r3, r3, #3
 800138a:	4313      	orrs	r3, r2
 800138c:	08c0      	lsrs	r0, r0, #3
 800138e:	e029      	b.n	80013e4 <__aeabi_dadd+0x260>
 8001390:	003a      	movs	r2, r7
 8001392:	430a      	orrs	r2, r1
 8001394:	d100      	bne.n	8001398 <__aeabi_dadd+0x214>
 8001396:	e170      	b.n	800167a <__aeabi_dadd+0x4f6>
 8001398:	4662      	mov	r2, ip
 800139a:	4664      	mov	r4, ip
 800139c:	3a01      	subs	r2, #1
 800139e:	2c01      	cmp	r4, #1
 80013a0:	d100      	bne.n	80013a4 <__aeabi_dadd+0x220>
 80013a2:	e0e0      	b.n	8001566 <__aeabi_dadd+0x3e2>
 80013a4:	4c51      	ldr	r4, [pc, #324]	; (80014ec <__aeabi_dadd+0x368>)
 80013a6:	45a4      	cmp	ip, r4
 80013a8:	d100      	bne.n	80013ac <__aeabi_dadd+0x228>
 80013aa:	e161      	b.n	8001670 <__aeabi_dadd+0x4ec>
 80013ac:	4694      	mov	ip, r2
 80013ae:	e7b4      	b.n	800131a <__aeabi_dadd+0x196>
 80013b0:	003a      	movs	r2, r7
 80013b2:	391f      	subs	r1, #31
 80013b4:	40ca      	lsrs	r2, r1
 80013b6:	0011      	movs	r1, r2
 80013b8:	2b20      	cmp	r3, #32
 80013ba:	d003      	beq.n	80013c4 <__aeabi_dadd+0x240>
 80013bc:	2240      	movs	r2, #64	; 0x40
 80013be:	1ad3      	subs	r3, r2, r3
 80013c0:	409f      	lsls	r7, r3
 80013c2:	433c      	orrs	r4, r7
 80013c4:	1e63      	subs	r3, r4, #1
 80013c6:	419c      	sbcs	r4, r3
 80013c8:	2700      	movs	r7, #0
 80013ca:	2600      	movs	r6, #0
 80013cc:	430c      	orrs	r4, r1
 80013ce:	0763      	lsls	r3, r4, #29
 80013d0:	d000      	beq.n	80013d4 <__aeabi_dadd+0x250>
 80013d2:	e753      	b.n	800127c <__aeabi_dadd+0xf8>
 80013d4:	46b4      	mov	ip, r6
 80013d6:	08e4      	lsrs	r4, r4, #3
 80013d8:	077b      	lsls	r3, r7, #29
 80013da:	4323      	orrs	r3, r4
 80013dc:	08f8      	lsrs	r0, r7, #3
 80013de:	4a43      	ldr	r2, [pc, #268]	; (80014ec <__aeabi_dadd+0x368>)
 80013e0:	4594      	cmp	ip, r2
 80013e2:	d01d      	beq.n	8001420 <__aeabi_dadd+0x29c>
 80013e4:	4662      	mov	r2, ip
 80013e6:	0307      	lsls	r7, r0, #12
 80013e8:	0552      	lsls	r2, r2, #21
 80013ea:	0b3f      	lsrs	r7, r7, #12
 80013ec:	0d52      	lsrs	r2, r2, #21
 80013ee:	e760      	b.n	80012b2 <__aeabi_dadd+0x12e>
 80013f0:	4644      	mov	r4, r8
 80013f2:	430c      	orrs	r4, r1
 80013f4:	1e62      	subs	r2, r4, #1
 80013f6:	4194      	sbcs	r4, r2
 80013f8:	18e4      	adds	r4, r4, r3
 80013fa:	429c      	cmp	r4, r3
 80013fc:	419b      	sbcs	r3, r3
 80013fe:	425f      	negs	r7, r3
 8001400:	183f      	adds	r7, r7, r0
 8001402:	023b      	lsls	r3, r7, #8
 8001404:	d5e3      	bpl.n	80013ce <__aeabi_dadd+0x24a>
 8001406:	4b39      	ldr	r3, [pc, #228]	; (80014ec <__aeabi_dadd+0x368>)
 8001408:	3601      	adds	r6, #1
 800140a:	429e      	cmp	r6, r3
 800140c:	d000      	beq.n	8001410 <__aeabi_dadd+0x28c>
 800140e:	e0b5      	b.n	800157c <__aeabi_dadd+0x3f8>
 8001410:	0032      	movs	r2, r6
 8001412:	2700      	movs	r7, #0
 8001414:	2300      	movs	r3, #0
 8001416:	e74c      	b.n	80012b2 <__aeabi_dadd+0x12e>
 8001418:	0742      	lsls	r2, r0, #29
 800141a:	08db      	lsrs	r3, r3, #3
 800141c:	4313      	orrs	r3, r2
 800141e:	08c0      	lsrs	r0, r0, #3
 8001420:	001a      	movs	r2, r3
 8001422:	4302      	orrs	r2, r0
 8001424:	d100      	bne.n	8001428 <__aeabi_dadd+0x2a4>
 8001426:	e1e1      	b.n	80017ec <__aeabi_dadd+0x668>
 8001428:	2780      	movs	r7, #128	; 0x80
 800142a:	033f      	lsls	r7, r7, #12
 800142c:	4307      	orrs	r7, r0
 800142e:	033f      	lsls	r7, r7, #12
 8001430:	4a2e      	ldr	r2, [pc, #184]	; (80014ec <__aeabi_dadd+0x368>)
 8001432:	0b3f      	lsrs	r7, r7, #12
 8001434:	e73d      	b.n	80012b2 <__aeabi_dadd+0x12e>
 8001436:	0020      	movs	r0, r4
 8001438:	f001 fd5a 	bl	8002ef0 <__clzsi2>
 800143c:	0001      	movs	r1, r0
 800143e:	3118      	adds	r1, #24
 8001440:	291f      	cmp	r1, #31
 8001442:	dc00      	bgt.n	8001446 <__aeabi_dadd+0x2c2>
 8001444:	e6fc      	b.n	8001240 <__aeabi_dadd+0xbc>
 8001446:	3808      	subs	r0, #8
 8001448:	4084      	lsls	r4, r0
 800144a:	0027      	movs	r7, r4
 800144c:	2400      	movs	r4, #0
 800144e:	42b1      	cmp	r1, r6
 8001450:	db00      	blt.n	8001454 <__aeabi_dadd+0x2d0>
 8001452:	e6ff      	b.n	8001254 <__aeabi_dadd+0xd0>
 8001454:	4a26      	ldr	r2, [pc, #152]	; (80014f0 <__aeabi_dadd+0x36c>)
 8001456:	1a76      	subs	r6, r6, r1
 8001458:	4017      	ands	r7, r2
 800145a:	e70d      	b.n	8001278 <__aeabi_dadd+0xf4>
 800145c:	2a00      	cmp	r2, #0
 800145e:	d02f      	beq.n	80014c0 <__aeabi_dadd+0x33c>
 8001460:	464a      	mov	r2, r9
 8001462:	1b92      	subs	r2, r2, r6
 8001464:	4694      	mov	ip, r2
 8001466:	2e00      	cmp	r6, #0
 8001468:	d100      	bne.n	800146c <__aeabi_dadd+0x2e8>
 800146a:	e0ad      	b.n	80015c8 <__aeabi_dadd+0x444>
 800146c:	4a1f      	ldr	r2, [pc, #124]	; (80014ec <__aeabi_dadd+0x368>)
 800146e:	4591      	cmp	r9, r2
 8001470:	d100      	bne.n	8001474 <__aeabi_dadd+0x2f0>
 8001472:	e10f      	b.n	8001694 <__aeabi_dadd+0x510>
 8001474:	2280      	movs	r2, #128	; 0x80
 8001476:	0412      	lsls	r2, r2, #16
 8001478:	4310      	orrs	r0, r2
 800147a:	4662      	mov	r2, ip
 800147c:	2a38      	cmp	r2, #56	; 0x38
 800147e:	dd00      	ble.n	8001482 <__aeabi_dadd+0x2fe>
 8001480:	e10f      	b.n	80016a2 <__aeabi_dadd+0x51e>
 8001482:	2a1f      	cmp	r2, #31
 8001484:	dd00      	ble.n	8001488 <__aeabi_dadd+0x304>
 8001486:	e180      	b.n	800178a <__aeabi_dadd+0x606>
 8001488:	4664      	mov	r4, ip
 800148a:	2220      	movs	r2, #32
 800148c:	001e      	movs	r6, r3
 800148e:	1b12      	subs	r2, r2, r4
 8001490:	4667      	mov	r7, ip
 8001492:	0004      	movs	r4, r0
 8001494:	4093      	lsls	r3, r2
 8001496:	4094      	lsls	r4, r2
 8001498:	40fe      	lsrs	r6, r7
 800149a:	1e5a      	subs	r2, r3, #1
 800149c:	4193      	sbcs	r3, r2
 800149e:	40f8      	lsrs	r0, r7
 80014a0:	4334      	orrs	r4, r6
 80014a2:	431c      	orrs	r4, r3
 80014a4:	4480      	add	r8, r0
 80014a6:	1864      	adds	r4, r4, r1
 80014a8:	428c      	cmp	r4, r1
 80014aa:	41bf      	sbcs	r7, r7
 80014ac:	427f      	negs	r7, r7
 80014ae:	464e      	mov	r6, r9
 80014b0:	4447      	add	r7, r8
 80014b2:	e7a6      	b.n	8001402 <__aeabi_dadd+0x27e>
 80014b4:	4642      	mov	r2, r8
 80014b6:	430a      	orrs	r2, r1
 80014b8:	0011      	movs	r1, r2
 80014ba:	1e4a      	subs	r2, r1, #1
 80014bc:	4191      	sbcs	r1, r2
 80014be:	e6ad      	b.n	800121c <__aeabi_dadd+0x98>
 80014c0:	4c0c      	ldr	r4, [pc, #48]	; (80014f4 <__aeabi_dadd+0x370>)
 80014c2:	1c72      	adds	r2, r6, #1
 80014c4:	4222      	tst	r2, r4
 80014c6:	d000      	beq.n	80014ca <__aeabi_dadd+0x346>
 80014c8:	e0a1      	b.n	800160e <__aeabi_dadd+0x48a>
 80014ca:	0002      	movs	r2, r0
 80014cc:	431a      	orrs	r2, r3
 80014ce:	2e00      	cmp	r6, #0
 80014d0:	d000      	beq.n	80014d4 <__aeabi_dadd+0x350>
 80014d2:	e0fa      	b.n	80016ca <__aeabi_dadd+0x546>
 80014d4:	2a00      	cmp	r2, #0
 80014d6:	d100      	bne.n	80014da <__aeabi_dadd+0x356>
 80014d8:	e145      	b.n	8001766 <__aeabi_dadd+0x5e2>
 80014da:	003a      	movs	r2, r7
 80014dc:	430a      	orrs	r2, r1
 80014de:	d000      	beq.n	80014e2 <__aeabi_dadd+0x35e>
 80014e0:	e146      	b.n	8001770 <__aeabi_dadd+0x5ec>
 80014e2:	0742      	lsls	r2, r0, #29
 80014e4:	08db      	lsrs	r3, r3, #3
 80014e6:	4313      	orrs	r3, r2
 80014e8:	08c0      	lsrs	r0, r0, #3
 80014ea:	e77b      	b.n	80013e4 <__aeabi_dadd+0x260>
 80014ec:	000007ff 	.word	0x000007ff
 80014f0:	ff7fffff 	.word	0xff7fffff
 80014f4:	000007fe 	.word	0x000007fe
 80014f8:	4647      	mov	r7, r8
 80014fa:	1a5c      	subs	r4, r3, r1
 80014fc:	1bc2      	subs	r2, r0, r7
 80014fe:	42a3      	cmp	r3, r4
 8001500:	41bf      	sbcs	r7, r7
 8001502:	427f      	negs	r7, r7
 8001504:	46b9      	mov	r9, r7
 8001506:	0017      	movs	r7, r2
 8001508:	464a      	mov	r2, r9
 800150a:	1abf      	subs	r7, r7, r2
 800150c:	023a      	lsls	r2, r7, #8
 800150e:	d500      	bpl.n	8001512 <__aeabi_dadd+0x38e>
 8001510:	e08d      	b.n	800162e <__aeabi_dadd+0x4aa>
 8001512:	0023      	movs	r3, r4
 8001514:	433b      	orrs	r3, r7
 8001516:	d000      	beq.n	800151a <__aeabi_dadd+0x396>
 8001518:	e68a      	b.n	8001230 <__aeabi_dadd+0xac>
 800151a:	2000      	movs	r0, #0
 800151c:	2500      	movs	r5, #0
 800151e:	e761      	b.n	80013e4 <__aeabi_dadd+0x260>
 8001520:	4cb4      	ldr	r4, [pc, #720]	; (80017f4 <__aeabi_dadd+0x670>)
 8001522:	45a1      	cmp	r9, r4
 8001524:	d100      	bne.n	8001528 <__aeabi_dadd+0x3a4>
 8001526:	e0ad      	b.n	8001684 <__aeabi_dadd+0x500>
 8001528:	2480      	movs	r4, #128	; 0x80
 800152a:	0424      	lsls	r4, r4, #16
 800152c:	4320      	orrs	r0, r4
 800152e:	4664      	mov	r4, ip
 8001530:	2c38      	cmp	r4, #56	; 0x38
 8001532:	dc3d      	bgt.n	80015b0 <__aeabi_dadd+0x42c>
 8001534:	4662      	mov	r2, ip
 8001536:	2c1f      	cmp	r4, #31
 8001538:	dd00      	ble.n	800153c <__aeabi_dadd+0x3b8>
 800153a:	e0b7      	b.n	80016ac <__aeabi_dadd+0x528>
 800153c:	2520      	movs	r5, #32
 800153e:	001e      	movs	r6, r3
 8001540:	1b2d      	subs	r5, r5, r4
 8001542:	0004      	movs	r4, r0
 8001544:	40ab      	lsls	r3, r5
 8001546:	40ac      	lsls	r4, r5
 8001548:	40d6      	lsrs	r6, r2
 800154a:	40d0      	lsrs	r0, r2
 800154c:	4642      	mov	r2, r8
 800154e:	1e5d      	subs	r5, r3, #1
 8001550:	41ab      	sbcs	r3, r5
 8001552:	4334      	orrs	r4, r6
 8001554:	1a12      	subs	r2, r2, r0
 8001556:	4690      	mov	r8, r2
 8001558:	4323      	orrs	r3, r4
 800155a:	e02c      	b.n	80015b6 <__aeabi_dadd+0x432>
 800155c:	0742      	lsls	r2, r0, #29
 800155e:	08db      	lsrs	r3, r3, #3
 8001560:	4313      	orrs	r3, r2
 8001562:	08c0      	lsrs	r0, r0, #3
 8001564:	e73b      	b.n	80013de <__aeabi_dadd+0x25a>
 8001566:	185c      	adds	r4, r3, r1
 8001568:	429c      	cmp	r4, r3
 800156a:	419b      	sbcs	r3, r3
 800156c:	4440      	add	r0, r8
 800156e:	425b      	negs	r3, r3
 8001570:	18c7      	adds	r7, r0, r3
 8001572:	2601      	movs	r6, #1
 8001574:	023b      	lsls	r3, r7, #8
 8001576:	d400      	bmi.n	800157a <__aeabi_dadd+0x3f6>
 8001578:	e729      	b.n	80013ce <__aeabi_dadd+0x24a>
 800157a:	2602      	movs	r6, #2
 800157c:	4a9e      	ldr	r2, [pc, #632]	; (80017f8 <__aeabi_dadd+0x674>)
 800157e:	0863      	lsrs	r3, r4, #1
 8001580:	4017      	ands	r7, r2
 8001582:	2201      	movs	r2, #1
 8001584:	4014      	ands	r4, r2
 8001586:	431c      	orrs	r4, r3
 8001588:	07fb      	lsls	r3, r7, #31
 800158a:	431c      	orrs	r4, r3
 800158c:	087f      	lsrs	r7, r7, #1
 800158e:	e673      	b.n	8001278 <__aeabi_dadd+0xf4>
 8001590:	4644      	mov	r4, r8
 8001592:	3a20      	subs	r2, #32
 8001594:	40d4      	lsrs	r4, r2
 8001596:	4662      	mov	r2, ip
 8001598:	2a20      	cmp	r2, #32
 800159a:	d005      	beq.n	80015a8 <__aeabi_dadd+0x424>
 800159c:	4667      	mov	r7, ip
 800159e:	2240      	movs	r2, #64	; 0x40
 80015a0:	1bd2      	subs	r2, r2, r7
 80015a2:	4647      	mov	r7, r8
 80015a4:	4097      	lsls	r7, r2
 80015a6:	4339      	orrs	r1, r7
 80015a8:	1e4a      	subs	r2, r1, #1
 80015aa:	4191      	sbcs	r1, r2
 80015ac:	4321      	orrs	r1, r4
 80015ae:	e635      	b.n	800121c <__aeabi_dadd+0x98>
 80015b0:	4303      	orrs	r3, r0
 80015b2:	1e58      	subs	r0, r3, #1
 80015b4:	4183      	sbcs	r3, r0
 80015b6:	1acc      	subs	r4, r1, r3
 80015b8:	42a1      	cmp	r1, r4
 80015ba:	41bf      	sbcs	r7, r7
 80015bc:	4643      	mov	r3, r8
 80015be:	427f      	negs	r7, r7
 80015c0:	4655      	mov	r5, sl
 80015c2:	464e      	mov	r6, r9
 80015c4:	1bdf      	subs	r7, r3, r7
 80015c6:	e62e      	b.n	8001226 <__aeabi_dadd+0xa2>
 80015c8:	0002      	movs	r2, r0
 80015ca:	431a      	orrs	r2, r3
 80015cc:	d100      	bne.n	80015d0 <__aeabi_dadd+0x44c>
 80015ce:	e0bd      	b.n	800174c <__aeabi_dadd+0x5c8>
 80015d0:	4662      	mov	r2, ip
 80015d2:	4664      	mov	r4, ip
 80015d4:	3a01      	subs	r2, #1
 80015d6:	2c01      	cmp	r4, #1
 80015d8:	d100      	bne.n	80015dc <__aeabi_dadd+0x458>
 80015da:	e0e5      	b.n	80017a8 <__aeabi_dadd+0x624>
 80015dc:	4c85      	ldr	r4, [pc, #532]	; (80017f4 <__aeabi_dadd+0x670>)
 80015de:	45a4      	cmp	ip, r4
 80015e0:	d058      	beq.n	8001694 <__aeabi_dadd+0x510>
 80015e2:	4694      	mov	ip, r2
 80015e4:	e749      	b.n	800147a <__aeabi_dadd+0x2f6>
 80015e6:	4664      	mov	r4, ip
 80015e8:	2220      	movs	r2, #32
 80015ea:	1b12      	subs	r2, r2, r4
 80015ec:	4644      	mov	r4, r8
 80015ee:	4094      	lsls	r4, r2
 80015f0:	000f      	movs	r7, r1
 80015f2:	46a1      	mov	r9, r4
 80015f4:	4664      	mov	r4, ip
 80015f6:	4091      	lsls	r1, r2
 80015f8:	40e7      	lsrs	r7, r4
 80015fa:	464c      	mov	r4, r9
 80015fc:	1e4a      	subs	r2, r1, #1
 80015fe:	4191      	sbcs	r1, r2
 8001600:	433c      	orrs	r4, r7
 8001602:	4642      	mov	r2, r8
 8001604:	430c      	orrs	r4, r1
 8001606:	4661      	mov	r1, ip
 8001608:	40ca      	lsrs	r2, r1
 800160a:	1880      	adds	r0, r0, r2
 800160c:	e6f4      	b.n	80013f8 <__aeabi_dadd+0x274>
 800160e:	4c79      	ldr	r4, [pc, #484]	; (80017f4 <__aeabi_dadd+0x670>)
 8001610:	42a2      	cmp	r2, r4
 8001612:	d100      	bne.n	8001616 <__aeabi_dadd+0x492>
 8001614:	e6fd      	b.n	8001412 <__aeabi_dadd+0x28e>
 8001616:	1859      	adds	r1, r3, r1
 8001618:	4299      	cmp	r1, r3
 800161a:	419b      	sbcs	r3, r3
 800161c:	4440      	add	r0, r8
 800161e:	425f      	negs	r7, r3
 8001620:	19c7      	adds	r7, r0, r7
 8001622:	07fc      	lsls	r4, r7, #31
 8001624:	0849      	lsrs	r1, r1, #1
 8001626:	0016      	movs	r6, r2
 8001628:	430c      	orrs	r4, r1
 800162a:	087f      	lsrs	r7, r7, #1
 800162c:	e6cf      	b.n	80013ce <__aeabi_dadd+0x24a>
 800162e:	1acc      	subs	r4, r1, r3
 8001630:	42a1      	cmp	r1, r4
 8001632:	41bf      	sbcs	r7, r7
 8001634:	4643      	mov	r3, r8
 8001636:	427f      	negs	r7, r7
 8001638:	1a18      	subs	r0, r3, r0
 800163a:	4655      	mov	r5, sl
 800163c:	1bc7      	subs	r7, r0, r7
 800163e:	e5f7      	b.n	8001230 <__aeabi_dadd+0xac>
 8001640:	08c9      	lsrs	r1, r1, #3
 8001642:	077b      	lsls	r3, r7, #29
 8001644:	4655      	mov	r5, sl
 8001646:	430b      	orrs	r3, r1
 8001648:	08f8      	lsrs	r0, r7, #3
 800164a:	e6c8      	b.n	80013de <__aeabi_dadd+0x25a>
 800164c:	2c00      	cmp	r4, #0
 800164e:	d000      	beq.n	8001652 <__aeabi_dadd+0x4ce>
 8001650:	e081      	b.n	8001756 <__aeabi_dadd+0x5d2>
 8001652:	4643      	mov	r3, r8
 8001654:	430b      	orrs	r3, r1
 8001656:	d115      	bne.n	8001684 <__aeabi_dadd+0x500>
 8001658:	2080      	movs	r0, #128	; 0x80
 800165a:	2500      	movs	r5, #0
 800165c:	0300      	lsls	r0, r0, #12
 800165e:	e6e3      	b.n	8001428 <__aeabi_dadd+0x2a4>
 8001660:	1a5c      	subs	r4, r3, r1
 8001662:	42a3      	cmp	r3, r4
 8001664:	419b      	sbcs	r3, r3
 8001666:	1bc7      	subs	r7, r0, r7
 8001668:	425b      	negs	r3, r3
 800166a:	2601      	movs	r6, #1
 800166c:	1aff      	subs	r7, r7, r3
 800166e:	e5da      	b.n	8001226 <__aeabi_dadd+0xa2>
 8001670:	0742      	lsls	r2, r0, #29
 8001672:	08db      	lsrs	r3, r3, #3
 8001674:	4313      	orrs	r3, r2
 8001676:	08c0      	lsrs	r0, r0, #3
 8001678:	e6d2      	b.n	8001420 <__aeabi_dadd+0x29c>
 800167a:	0742      	lsls	r2, r0, #29
 800167c:	08db      	lsrs	r3, r3, #3
 800167e:	4313      	orrs	r3, r2
 8001680:	08c0      	lsrs	r0, r0, #3
 8001682:	e6ac      	b.n	80013de <__aeabi_dadd+0x25a>
 8001684:	4643      	mov	r3, r8
 8001686:	4642      	mov	r2, r8
 8001688:	08c9      	lsrs	r1, r1, #3
 800168a:	075b      	lsls	r3, r3, #29
 800168c:	4655      	mov	r5, sl
 800168e:	430b      	orrs	r3, r1
 8001690:	08d0      	lsrs	r0, r2, #3
 8001692:	e6c5      	b.n	8001420 <__aeabi_dadd+0x29c>
 8001694:	4643      	mov	r3, r8
 8001696:	4642      	mov	r2, r8
 8001698:	075b      	lsls	r3, r3, #29
 800169a:	08c9      	lsrs	r1, r1, #3
 800169c:	430b      	orrs	r3, r1
 800169e:	08d0      	lsrs	r0, r2, #3
 80016a0:	e6be      	b.n	8001420 <__aeabi_dadd+0x29c>
 80016a2:	4303      	orrs	r3, r0
 80016a4:	001c      	movs	r4, r3
 80016a6:	1e63      	subs	r3, r4, #1
 80016a8:	419c      	sbcs	r4, r3
 80016aa:	e6fc      	b.n	80014a6 <__aeabi_dadd+0x322>
 80016ac:	0002      	movs	r2, r0
 80016ae:	3c20      	subs	r4, #32
 80016b0:	40e2      	lsrs	r2, r4
 80016b2:	0014      	movs	r4, r2
 80016b4:	4662      	mov	r2, ip
 80016b6:	2a20      	cmp	r2, #32
 80016b8:	d003      	beq.n	80016c2 <__aeabi_dadd+0x53e>
 80016ba:	2540      	movs	r5, #64	; 0x40
 80016bc:	1aad      	subs	r5, r5, r2
 80016be:	40a8      	lsls	r0, r5
 80016c0:	4303      	orrs	r3, r0
 80016c2:	1e58      	subs	r0, r3, #1
 80016c4:	4183      	sbcs	r3, r0
 80016c6:	4323      	orrs	r3, r4
 80016c8:	e775      	b.n	80015b6 <__aeabi_dadd+0x432>
 80016ca:	2a00      	cmp	r2, #0
 80016cc:	d0e2      	beq.n	8001694 <__aeabi_dadd+0x510>
 80016ce:	003a      	movs	r2, r7
 80016d0:	430a      	orrs	r2, r1
 80016d2:	d0cd      	beq.n	8001670 <__aeabi_dadd+0x4ec>
 80016d4:	0742      	lsls	r2, r0, #29
 80016d6:	08db      	lsrs	r3, r3, #3
 80016d8:	4313      	orrs	r3, r2
 80016da:	2280      	movs	r2, #128	; 0x80
 80016dc:	08c0      	lsrs	r0, r0, #3
 80016de:	0312      	lsls	r2, r2, #12
 80016e0:	4210      	tst	r0, r2
 80016e2:	d006      	beq.n	80016f2 <__aeabi_dadd+0x56e>
 80016e4:	08fc      	lsrs	r4, r7, #3
 80016e6:	4214      	tst	r4, r2
 80016e8:	d103      	bne.n	80016f2 <__aeabi_dadd+0x56e>
 80016ea:	0020      	movs	r0, r4
 80016ec:	08cb      	lsrs	r3, r1, #3
 80016ee:	077a      	lsls	r2, r7, #29
 80016f0:	4313      	orrs	r3, r2
 80016f2:	0f5a      	lsrs	r2, r3, #29
 80016f4:	00db      	lsls	r3, r3, #3
 80016f6:	0752      	lsls	r2, r2, #29
 80016f8:	08db      	lsrs	r3, r3, #3
 80016fa:	4313      	orrs	r3, r2
 80016fc:	e690      	b.n	8001420 <__aeabi_dadd+0x29c>
 80016fe:	4643      	mov	r3, r8
 8001700:	430b      	orrs	r3, r1
 8001702:	d100      	bne.n	8001706 <__aeabi_dadd+0x582>
 8001704:	e709      	b.n	800151a <__aeabi_dadd+0x396>
 8001706:	4643      	mov	r3, r8
 8001708:	4642      	mov	r2, r8
 800170a:	08c9      	lsrs	r1, r1, #3
 800170c:	075b      	lsls	r3, r3, #29
 800170e:	4655      	mov	r5, sl
 8001710:	430b      	orrs	r3, r1
 8001712:	08d0      	lsrs	r0, r2, #3
 8001714:	e666      	b.n	80013e4 <__aeabi_dadd+0x260>
 8001716:	1acc      	subs	r4, r1, r3
 8001718:	42a1      	cmp	r1, r4
 800171a:	4189      	sbcs	r1, r1
 800171c:	1a3f      	subs	r7, r7, r0
 800171e:	4249      	negs	r1, r1
 8001720:	4655      	mov	r5, sl
 8001722:	2601      	movs	r6, #1
 8001724:	1a7f      	subs	r7, r7, r1
 8001726:	e57e      	b.n	8001226 <__aeabi_dadd+0xa2>
 8001728:	4642      	mov	r2, r8
 800172a:	1a5c      	subs	r4, r3, r1
 800172c:	1a87      	subs	r7, r0, r2
 800172e:	42a3      	cmp	r3, r4
 8001730:	4192      	sbcs	r2, r2
 8001732:	4252      	negs	r2, r2
 8001734:	1abf      	subs	r7, r7, r2
 8001736:	023a      	lsls	r2, r7, #8
 8001738:	d53d      	bpl.n	80017b6 <__aeabi_dadd+0x632>
 800173a:	1acc      	subs	r4, r1, r3
 800173c:	42a1      	cmp	r1, r4
 800173e:	4189      	sbcs	r1, r1
 8001740:	4643      	mov	r3, r8
 8001742:	4249      	negs	r1, r1
 8001744:	1a1f      	subs	r7, r3, r0
 8001746:	4655      	mov	r5, sl
 8001748:	1a7f      	subs	r7, r7, r1
 800174a:	e595      	b.n	8001278 <__aeabi_dadd+0xf4>
 800174c:	077b      	lsls	r3, r7, #29
 800174e:	08c9      	lsrs	r1, r1, #3
 8001750:	430b      	orrs	r3, r1
 8001752:	08f8      	lsrs	r0, r7, #3
 8001754:	e643      	b.n	80013de <__aeabi_dadd+0x25a>
 8001756:	4644      	mov	r4, r8
 8001758:	08db      	lsrs	r3, r3, #3
 800175a:	430c      	orrs	r4, r1
 800175c:	d130      	bne.n	80017c0 <__aeabi_dadd+0x63c>
 800175e:	0742      	lsls	r2, r0, #29
 8001760:	4313      	orrs	r3, r2
 8001762:	08c0      	lsrs	r0, r0, #3
 8001764:	e65c      	b.n	8001420 <__aeabi_dadd+0x29c>
 8001766:	077b      	lsls	r3, r7, #29
 8001768:	08c9      	lsrs	r1, r1, #3
 800176a:	430b      	orrs	r3, r1
 800176c:	08f8      	lsrs	r0, r7, #3
 800176e:	e639      	b.n	80013e4 <__aeabi_dadd+0x260>
 8001770:	185c      	adds	r4, r3, r1
 8001772:	429c      	cmp	r4, r3
 8001774:	419b      	sbcs	r3, r3
 8001776:	4440      	add	r0, r8
 8001778:	425b      	negs	r3, r3
 800177a:	18c7      	adds	r7, r0, r3
 800177c:	023b      	lsls	r3, r7, #8
 800177e:	d400      	bmi.n	8001782 <__aeabi_dadd+0x5fe>
 8001780:	e625      	b.n	80013ce <__aeabi_dadd+0x24a>
 8001782:	4b1d      	ldr	r3, [pc, #116]	; (80017f8 <__aeabi_dadd+0x674>)
 8001784:	2601      	movs	r6, #1
 8001786:	401f      	ands	r7, r3
 8001788:	e621      	b.n	80013ce <__aeabi_dadd+0x24a>
 800178a:	0004      	movs	r4, r0
 800178c:	3a20      	subs	r2, #32
 800178e:	40d4      	lsrs	r4, r2
 8001790:	4662      	mov	r2, ip
 8001792:	2a20      	cmp	r2, #32
 8001794:	d004      	beq.n	80017a0 <__aeabi_dadd+0x61c>
 8001796:	2240      	movs	r2, #64	; 0x40
 8001798:	4666      	mov	r6, ip
 800179a:	1b92      	subs	r2, r2, r6
 800179c:	4090      	lsls	r0, r2
 800179e:	4303      	orrs	r3, r0
 80017a0:	1e5a      	subs	r2, r3, #1
 80017a2:	4193      	sbcs	r3, r2
 80017a4:	431c      	orrs	r4, r3
 80017a6:	e67e      	b.n	80014a6 <__aeabi_dadd+0x322>
 80017a8:	185c      	adds	r4, r3, r1
 80017aa:	428c      	cmp	r4, r1
 80017ac:	4189      	sbcs	r1, r1
 80017ae:	4440      	add	r0, r8
 80017b0:	4249      	negs	r1, r1
 80017b2:	1847      	adds	r7, r0, r1
 80017b4:	e6dd      	b.n	8001572 <__aeabi_dadd+0x3ee>
 80017b6:	0023      	movs	r3, r4
 80017b8:	433b      	orrs	r3, r7
 80017ba:	d100      	bne.n	80017be <__aeabi_dadd+0x63a>
 80017bc:	e6ad      	b.n	800151a <__aeabi_dadd+0x396>
 80017be:	e606      	b.n	80013ce <__aeabi_dadd+0x24a>
 80017c0:	0744      	lsls	r4, r0, #29
 80017c2:	4323      	orrs	r3, r4
 80017c4:	2480      	movs	r4, #128	; 0x80
 80017c6:	08c0      	lsrs	r0, r0, #3
 80017c8:	0324      	lsls	r4, r4, #12
 80017ca:	4220      	tst	r0, r4
 80017cc:	d008      	beq.n	80017e0 <__aeabi_dadd+0x65c>
 80017ce:	4642      	mov	r2, r8
 80017d0:	08d6      	lsrs	r6, r2, #3
 80017d2:	4226      	tst	r6, r4
 80017d4:	d104      	bne.n	80017e0 <__aeabi_dadd+0x65c>
 80017d6:	4655      	mov	r5, sl
 80017d8:	0030      	movs	r0, r6
 80017da:	08cb      	lsrs	r3, r1, #3
 80017dc:	0751      	lsls	r1, r2, #29
 80017de:	430b      	orrs	r3, r1
 80017e0:	0f5a      	lsrs	r2, r3, #29
 80017e2:	00db      	lsls	r3, r3, #3
 80017e4:	08db      	lsrs	r3, r3, #3
 80017e6:	0752      	lsls	r2, r2, #29
 80017e8:	4313      	orrs	r3, r2
 80017ea:	e619      	b.n	8001420 <__aeabi_dadd+0x29c>
 80017ec:	2300      	movs	r3, #0
 80017ee:	4a01      	ldr	r2, [pc, #4]	; (80017f4 <__aeabi_dadd+0x670>)
 80017f0:	001f      	movs	r7, r3
 80017f2:	e55e      	b.n	80012b2 <__aeabi_dadd+0x12e>
 80017f4:	000007ff 	.word	0x000007ff
 80017f8:	ff7fffff 	.word	0xff7fffff

080017fc <__aeabi_ddiv>:
 80017fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017fe:	4657      	mov	r7, sl
 8001800:	464e      	mov	r6, r9
 8001802:	4645      	mov	r5, r8
 8001804:	46de      	mov	lr, fp
 8001806:	b5e0      	push	{r5, r6, r7, lr}
 8001808:	4681      	mov	r9, r0
 800180a:	0005      	movs	r5, r0
 800180c:	030c      	lsls	r4, r1, #12
 800180e:	0048      	lsls	r0, r1, #1
 8001810:	4692      	mov	sl, r2
 8001812:	001f      	movs	r7, r3
 8001814:	b085      	sub	sp, #20
 8001816:	0b24      	lsrs	r4, r4, #12
 8001818:	0d40      	lsrs	r0, r0, #21
 800181a:	0fce      	lsrs	r6, r1, #31
 800181c:	2800      	cmp	r0, #0
 800181e:	d100      	bne.n	8001822 <__aeabi_ddiv+0x26>
 8001820:	e156      	b.n	8001ad0 <__aeabi_ddiv+0x2d4>
 8001822:	4bd4      	ldr	r3, [pc, #848]	; (8001b74 <__aeabi_ddiv+0x378>)
 8001824:	4298      	cmp	r0, r3
 8001826:	d100      	bne.n	800182a <__aeabi_ddiv+0x2e>
 8001828:	e172      	b.n	8001b10 <__aeabi_ddiv+0x314>
 800182a:	0f6b      	lsrs	r3, r5, #29
 800182c:	00e4      	lsls	r4, r4, #3
 800182e:	431c      	orrs	r4, r3
 8001830:	2380      	movs	r3, #128	; 0x80
 8001832:	041b      	lsls	r3, r3, #16
 8001834:	4323      	orrs	r3, r4
 8001836:	4698      	mov	r8, r3
 8001838:	4bcf      	ldr	r3, [pc, #828]	; (8001b78 <__aeabi_ddiv+0x37c>)
 800183a:	00ed      	lsls	r5, r5, #3
 800183c:	469b      	mov	fp, r3
 800183e:	2300      	movs	r3, #0
 8001840:	4699      	mov	r9, r3
 8001842:	4483      	add	fp, r0
 8001844:	9300      	str	r3, [sp, #0]
 8001846:	033c      	lsls	r4, r7, #12
 8001848:	007b      	lsls	r3, r7, #1
 800184a:	4650      	mov	r0, sl
 800184c:	0b24      	lsrs	r4, r4, #12
 800184e:	0d5b      	lsrs	r3, r3, #21
 8001850:	0fff      	lsrs	r7, r7, #31
 8001852:	2b00      	cmp	r3, #0
 8001854:	d100      	bne.n	8001858 <__aeabi_ddiv+0x5c>
 8001856:	e11f      	b.n	8001a98 <__aeabi_ddiv+0x29c>
 8001858:	4ac6      	ldr	r2, [pc, #792]	; (8001b74 <__aeabi_ddiv+0x378>)
 800185a:	4293      	cmp	r3, r2
 800185c:	d100      	bne.n	8001860 <__aeabi_ddiv+0x64>
 800185e:	e162      	b.n	8001b26 <__aeabi_ddiv+0x32a>
 8001860:	49c5      	ldr	r1, [pc, #788]	; (8001b78 <__aeabi_ddiv+0x37c>)
 8001862:	0f42      	lsrs	r2, r0, #29
 8001864:	468c      	mov	ip, r1
 8001866:	00e4      	lsls	r4, r4, #3
 8001868:	4659      	mov	r1, fp
 800186a:	4314      	orrs	r4, r2
 800186c:	2280      	movs	r2, #128	; 0x80
 800186e:	4463      	add	r3, ip
 8001870:	0412      	lsls	r2, r2, #16
 8001872:	1acb      	subs	r3, r1, r3
 8001874:	4314      	orrs	r4, r2
 8001876:	469b      	mov	fp, r3
 8001878:	00c2      	lsls	r2, r0, #3
 800187a:	2000      	movs	r0, #0
 800187c:	0033      	movs	r3, r6
 800187e:	407b      	eors	r3, r7
 8001880:	469a      	mov	sl, r3
 8001882:	464b      	mov	r3, r9
 8001884:	2b0f      	cmp	r3, #15
 8001886:	d827      	bhi.n	80018d8 <__aeabi_ddiv+0xdc>
 8001888:	49bc      	ldr	r1, [pc, #752]	; (8001b7c <__aeabi_ddiv+0x380>)
 800188a:	009b      	lsls	r3, r3, #2
 800188c:	58cb      	ldr	r3, [r1, r3]
 800188e:	469f      	mov	pc, r3
 8001890:	46b2      	mov	sl, r6
 8001892:	9b00      	ldr	r3, [sp, #0]
 8001894:	2b02      	cmp	r3, #2
 8001896:	d016      	beq.n	80018c6 <__aeabi_ddiv+0xca>
 8001898:	2b03      	cmp	r3, #3
 800189a:	d100      	bne.n	800189e <__aeabi_ddiv+0xa2>
 800189c:	e28e      	b.n	8001dbc <__aeabi_ddiv+0x5c0>
 800189e:	2b01      	cmp	r3, #1
 80018a0:	d000      	beq.n	80018a4 <__aeabi_ddiv+0xa8>
 80018a2:	e0d9      	b.n	8001a58 <__aeabi_ddiv+0x25c>
 80018a4:	2300      	movs	r3, #0
 80018a6:	2400      	movs	r4, #0
 80018a8:	2500      	movs	r5, #0
 80018aa:	4652      	mov	r2, sl
 80018ac:	051b      	lsls	r3, r3, #20
 80018ae:	4323      	orrs	r3, r4
 80018b0:	07d2      	lsls	r2, r2, #31
 80018b2:	4313      	orrs	r3, r2
 80018b4:	0028      	movs	r0, r5
 80018b6:	0019      	movs	r1, r3
 80018b8:	b005      	add	sp, #20
 80018ba:	bcf0      	pop	{r4, r5, r6, r7}
 80018bc:	46bb      	mov	fp, r7
 80018be:	46b2      	mov	sl, r6
 80018c0:	46a9      	mov	r9, r5
 80018c2:	46a0      	mov	r8, r4
 80018c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018c6:	2400      	movs	r4, #0
 80018c8:	2500      	movs	r5, #0
 80018ca:	4baa      	ldr	r3, [pc, #680]	; (8001b74 <__aeabi_ddiv+0x378>)
 80018cc:	e7ed      	b.n	80018aa <__aeabi_ddiv+0xae>
 80018ce:	46ba      	mov	sl, r7
 80018d0:	46a0      	mov	r8, r4
 80018d2:	0015      	movs	r5, r2
 80018d4:	9000      	str	r0, [sp, #0]
 80018d6:	e7dc      	b.n	8001892 <__aeabi_ddiv+0x96>
 80018d8:	4544      	cmp	r4, r8
 80018da:	d200      	bcs.n	80018de <__aeabi_ddiv+0xe2>
 80018dc:	e1c7      	b.n	8001c6e <__aeabi_ddiv+0x472>
 80018de:	d100      	bne.n	80018e2 <__aeabi_ddiv+0xe6>
 80018e0:	e1c2      	b.n	8001c68 <__aeabi_ddiv+0x46c>
 80018e2:	2301      	movs	r3, #1
 80018e4:	425b      	negs	r3, r3
 80018e6:	469c      	mov	ip, r3
 80018e8:	002e      	movs	r6, r5
 80018ea:	4640      	mov	r0, r8
 80018ec:	2500      	movs	r5, #0
 80018ee:	44e3      	add	fp, ip
 80018f0:	0223      	lsls	r3, r4, #8
 80018f2:	0e14      	lsrs	r4, r2, #24
 80018f4:	431c      	orrs	r4, r3
 80018f6:	0c1b      	lsrs	r3, r3, #16
 80018f8:	4699      	mov	r9, r3
 80018fa:	0423      	lsls	r3, r4, #16
 80018fc:	0c1f      	lsrs	r7, r3, #16
 80018fe:	0212      	lsls	r2, r2, #8
 8001900:	4649      	mov	r1, r9
 8001902:	9200      	str	r2, [sp, #0]
 8001904:	9701      	str	r7, [sp, #4]
 8001906:	f7fe fca7 	bl	8000258 <__aeabi_uidivmod>
 800190a:	0002      	movs	r2, r0
 800190c:	437a      	muls	r2, r7
 800190e:	040b      	lsls	r3, r1, #16
 8001910:	0c31      	lsrs	r1, r6, #16
 8001912:	4680      	mov	r8, r0
 8001914:	4319      	orrs	r1, r3
 8001916:	428a      	cmp	r2, r1
 8001918:	d907      	bls.n	800192a <__aeabi_ddiv+0x12e>
 800191a:	2301      	movs	r3, #1
 800191c:	425b      	negs	r3, r3
 800191e:	469c      	mov	ip, r3
 8001920:	1909      	adds	r1, r1, r4
 8001922:	44e0      	add	r8, ip
 8001924:	428c      	cmp	r4, r1
 8001926:	d800      	bhi.n	800192a <__aeabi_ddiv+0x12e>
 8001928:	e207      	b.n	8001d3a <__aeabi_ddiv+0x53e>
 800192a:	1a88      	subs	r0, r1, r2
 800192c:	4649      	mov	r1, r9
 800192e:	f7fe fc93 	bl	8000258 <__aeabi_uidivmod>
 8001932:	0409      	lsls	r1, r1, #16
 8001934:	468c      	mov	ip, r1
 8001936:	0431      	lsls	r1, r6, #16
 8001938:	4666      	mov	r6, ip
 800193a:	9a01      	ldr	r2, [sp, #4]
 800193c:	0c09      	lsrs	r1, r1, #16
 800193e:	4342      	muls	r2, r0
 8001940:	0003      	movs	r3, r0
 8001942:	4331      	orrs	r1, r6
 8001944:	428a      	cmp	r2, r1
 8001946:	d904      	bls.n	8001952 <__aeabi_ddiv+0x156>
 8001948:	1909      	adds	r1, r1, r4
 800194a:	3b01      	subs	r3, #1
 800194c:	428c      	cmp	r4, r1
 800194e:	d800      	bhi.n	8001952 <__aeabi_ddiv+0x156>
 8001950:	e1ed      	b.n	8001d2e <__aeabi_ddiv+0x532>
 8001952:	1a88      	subs	r0, r1, r2
 8001954:	4642      	mov	r2, r8
 8001956:	0412      	lsls	r2, r2, #16
 8001958:	431a      	orrs	r2, r3
 800195a:	4690      	mov	r8, r2
 800195c:	4641      	mov	r1, r8
 800195e:	9b00      	ldr	r3, [sp, #0]
 8001960:	040e      	lsls	r6, r1, #16
 8001962:	0c1b      	lsrs	r3, r3, #16
 8001964:	001f      	movs	r7, r3
 8001966:	9302      	str	r3, [sp, #8]
 8001968:	9b00      	ldr	r3, [sp, #0]
 800196a:	0c36      	lsrs	r6, r6, #16
 800196c:	041b      	lsls	r3, r3, #16
 800196e:	0c19      	lsrs	r1, r3, #16
 8001970:	000b      	movs	r3, r1
 8001972:	4373      	muls	r3, r6
 8001974:	0c12      	lsrs	r2, r2, #16
 8001976:	437e      	muls	r6, r7
 8001978:	9103      	str	r1, [sp, #12]
 800197a:	4351      	muls	r1, r2
 800197c:	437a      	muls	r2, r7
 800197e:	0c1f      	lsrs	r7, r3, #16
 8001980:	46bc      	mov	ip, r7
 8001982:	1876      	adds	r6, r6, r1
 8001984:	4466      	add	r6, ip
 8001986:	42b1      	cmp	r1, r6
 8001988:	d903      	bls.n	8001992 <__aeabi_ddiv+0x196>
 800198a:	2180      	movs	r1, #128	; 0x80
 800198c:	0249      	lsls	r1, r1, #9
 800198e:	468c      	mov	ip, r1
 8001990:	4462      	add	r2, ip
 8001992:	0c31      	lsrs	r1, r6, #16
 8001994:	188a      	adds	r2, r1, r2
 8001996:	0431      	lsls	r1, r6, #16
 8001998:	041e      	lsls	r6, r3, #16
 800199a:	0c36      	lsrs	r6, r6, #16
 800199c:	198e      	adds	r6, r1, r6
 800199e:	4290      	cmp	r0, r2
 80019a0:	d302      	bcc.n	80019a8 <__aeabi_ddiv+0x1ac>
 80019a2:	d112      	bne.n	80019ca <__aeabi_ddiv+0x1ce>
 80019a4:	42b5      	cmp	r5, r6
 80019a6:	d210      	bcs.n	80019ca <__aeabi_ddiv+0x1ce>
 80019a8:	4643      	mov	r3, r8
 80019aa:	1e59      	subs	r1, r3, #1
 80019ac:	9b00      	ldr	r3, [sp, #0]
 80019ae:	469c      	mov	ip, r3
 80019b0:	4465      	add	r5, ip
 80019b2:	001f      	movs	r7, r3
 80019b4:	429d      	cmp	r5, r3
 80019b6:	419b      	sbcs	r3, r3
 80019b8:	425b      	negs	r3, r3
 80019ba:	191b      	adds	r3, r3, r4
 80019bc:	18c0      	adds	r0, r0, r3
 80019be:	4284      	cmp	r4, r0
 80019c0:	d200      	bcs.n	80019c4 <__aeabi_ddiv+0x1c8>
 80019c2:	e1a0      	b.n	8001d06 <__aeabi_ddiv+0x50a>
 80019c4:	d100      	bne.n	80019c8 <__aeabi_ddiv+0x1cc>
 80019c6:	e19b      	b.n	8001d00 <__aeabi_ddiv+0x504>
 80019c8:	4688      	mov	r8, r1
 80019ca:	1bae      	subs	r6, r5, r6
 80019cc:	42b5      	cmp	r5, r6
 80019ce:	41ad      	sbcs	r5, r5
 80019d0:	1a80      	subs	r0, r0, r2
 80019d2:	426d      	negs	r5, r5
 80019d4:	1b40      	subs	r0, r0, r5
 80019d6:	4284      	cmp	r4, r0
 80019d8:	d100      	bne.n	80019dc <__aeabi_ddiv+0x1e0>
 80019da:	e1d5      	b.n	8001d88 <__aeabi_ddiv+0x58c>
 80019dc:	4649      	mov	r1, r9
 80019de:	f7fe fc3b 	bl	8000258 <__aeabi_uidivmod>
 80019e2:	9a01      	ldr	r2, [sp, #4]
 80019e4:	040b      	lsls	r3, r1, #16
 80019e6:	4342      	muls	r2, r0
 80019e8:	0c31      	lsrs	r1, r6, #16
 80019ea:	0005      	movs	r5, r0
 80019ec:	4319      	orrs	r1, r3
 80019ee:	428a      	cmp	r2, r1
 80019f0:	d900      	bls.n	80019f4 <__aeabi_ddiv+0x1f8>
 80019f2:	e16c      	b.n	8001cce <__aeabi_ddiv+0x4d2>
 80019f4:	1a88      	subs	r0, r1, r2
 80019f6:	4649      	mov	r1, r9
 80019f8:	f7fe fc2e 	bl	8000258 <__aeabi_uidivmod>
 80019fc:	9a01      	ldr	r2, [sp, #4]
 80019fe:	0436      	lsls	r6, r6, #16
 8001a00:	4342      	muls	r2, r0
 8001a02:	0409      	lsls	r1, r1, #16
 8001a04:	0c36      	lsrs	r6, r6, #16
 8001a06:	0003      	movs	r3, r0
 8001a08:	430e      	orrs	r6, r1
 8001a0a:	42b2      	cmp	r2, r6
 8001a0c:	d900      	bls.n	8001a10 <__aeabi_ddiv+0x214>
 8001a0e:	e153      	b.n	8001cb8 <__aeabi_ddiv+0x4bc>
 8001a10:	9803      	ldr	r0, [sp, #12]
 8001a12:	1ab6      	subs	r6, r6, r2
 8001a14:	0002      	movs	r2, r0
 8001a16:	042d      	lsls	r5, r5, #16
 8001a18:	431d      	orrs	r5, r3
 8001a1a:	9f02      	ldr	r7, [sp, #8]
 8001a1c:	042b      	lsls	r3, r5, #16
 8001a1e:	0c1b      	lsrs	r3, r3, #16
 8001a20:	435a      	muls	r2, r3
 8001a22:	437b      	muls	r3, r7
 8001a24:	469c      	mov	ip, r3
 8001a26:	0c29      	lsrs	r1, r5, #16
 8001a28:	4348      	muls	r0, r1
 8001a2a:	0c13      	lsrs	r3, r2, #16
 8001a2c:	4484      	add	ip, r0
 8001a2e:	4463      	add	r3, ip
 8001a30:	4379      	muls	r1, r7
 8001a32:	4298      	cmp	r0, r3
 8001a34:	d903      	bls.n	8001a3e <__aeabi_ddiv+0x242>
 8001a36:	2080      	movs	r0, #128	; 0x80
 8001a38:	0240      	lsls	r0, r0, #9
 8001a3a:	4684      	mov	ip, r0
 8001a3c:	4461      	add	r1, ip
 8001a3e:	0c18      	lsrs	r0, r3, #16
 8001a40:	0412      	lsls	r2, r2, #16
 8001a42:	041b      	lsls	r3, r3, #16
 8001a44:	0c12      	lsrs	r2, r2, #16
 8001a46:	1841      	adds	r1, r0, r1
 8001a48:	189b      	adds	r3, r3, r2
 8001a4a:	428e      	cmp	r6, r1
 8001a4c:	d200      	bcs.n	8001a50 <__aeabi_ddiv+0x254>
 8001a4e:	e0ff      	b.n	8001c50 <__aeabi_ddiv+0x454>
 8001a50:	d100      	bne.n	8001a54 <__aeabi_ddiv+0x258>
 8001a52:	e0fa      	b.n	8001c4a <__aeabi_ddiv+0x44e>
 8001a54:	2301      	movs	r3, #1
 8001a56:	431d      	orrs	r5, r3
 8001a58:	4a49      	ldr	r2, [pc, #292]	; (8001b80 <__aeabi_ddiv+0x384>)
 8001a5a:	445a      	add	r2, fp
 8001a5c:	2a00      	cmp	r2, #0
 8001a5e:	dc00      	bgt.n	8001a62 <__aeabi_ddiv+0x266>
 8001a60:	e0aa      	b.n	8001bb8 <__aeabi_ddiv+0x3bc>
 8001a62:	076b      	lsls	r3, r5, #29
 8001a64:	d000      	beq.n	8001a68 <__aeabi_ddiv+0x26c>
 8001a66:	e13d      	b.n	8001ce4 <__aeabi_ddiv+0x4e8>
 8001a68:	08ed      	lsrs	r5, r5, #3
 8001a6a:	4643      	mov	r3, r8
 8001a6c:	01db      	lsls	r3, r3, #7
 8001a6e:	d506      	bpl.n	8001a7e <__aeabi_ddiv+0x282>
 8001a70:	4642      	mov	r2, r8
 8001a72:	4b44      	ldr	r3, [pc, #272]	; (8001b84 <__aeabi_ddiv+0x388>)
 8001a74:	401a      	ands	r2, r3
 8001a76:	4690      	mov	r8, r2
 8001a78:	2280      	movs	r2, #128	; 0x80
 8001a7a:	00d2      	lsls	r2, r2, #3
 8001a7c:	445a      	add	r2, fp
 8001a7e:	4b42      	ldr	r3, [pc, #264]	; (8001b88 <__aeabi_ddiv+0x38c>)
 8001a80:	429a      	cmp	r2, r3
 8001a82:	dd00      	ble.n	8001a86 <__aeabi_ddiv+0x28a>
 8001a84:	e71f      	b.n	80018c6 <__aeabi_ddiv+0xca>
 8001a86:	4643      	mov	r3, r8
 8001a88:	075b      	lsls	r3, r3, #29
 8001a8a:	431d      	orrs	r5, r3
 8001a8c:	4643      	mov	r3, r8
 8001a8e:	0552      	lsls	r2, r2, #21
 8001a90:	025c      	lsls	r4, r3, #9
 8001a92:	0b24      	lsrs	r4, r4, #12
 8001a94:	0d53      	lsrs	r3, r2, #21
 8001a96:	e708      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001a98:	4652      	mov	r2, sl
 8001a9a:	4322      	orrs	r2, r4
 8001a9c:	d100      	bne.n	8001aa0 <__aeabi_ddiv+0x2a4>
 8001a9e:	e07b      	b.n	8001b98 <__aeabi_ddiv+0x39c>
 8001aa0:	2c00      	cmp	r4, #0
 8001aa2:	d100      	bne.n	8001aa6 <__aeabi_ddiv+0x2aa>
 8001aa4:	e0fa      	b.n	8001c9c <__aeabi_ddiv+0x4a0>
 8001aa6:	0020      	movs	r0, r4
 8001aa8:	f001 fa22 	bl	8002ef0 <__clzsi2>
 8001aac:	0002      	movs	r2, r0
 8001aae:	3a0b      	subs	r2, #11
 8001ab0:	231d      	movs	r3, #29
 8001ab2:	0001      	movs	r1, r0
 8001ab4:	1a9b      	subs	r3, r3, r2
 8001ab6:	4652      	mov	r2, sl
 8001ab8:	3908      	subs	r1, #8
 8001aba:	40da      	lsrs	r2, r3
 8001abc:	408c      	lsls	r4, r1
 8001abe:	4314      	orrs	r4, r2
 8001ac0:	4652      	mov	r2, sl
 8001ac2:	408a      	lsls	r2, r1
 8001ac4:	4b31      	ldr	r3, [pc, #196]	; (8001b8c <__aeabi_ddiv+0x390>)
 8001ac6:	4458      	add	r0, fp
 8001ac8:	469b      	mov	fp, r3
 8001aca:	4483      	add	fp, r0
 8001acc:	2000      	movs	r0, #0
 8001ace:	e6d5      	b.n	800187c <__aeabi_ddiv+0x80>
 8001ad0:	464b      	mov	r3, r9
 8001ad2:	4323      	orrs	r3, r4
 8001ad4:	4698      	mov	r8, r3
 8001ad6:	d044      	beq.n	8001b62 <__aeabi_ddiv+0x366>
 8001ad8:	2c00      	cmp	r4, #0
 8001ada:	d100      	bne.n	8001ade <__aeabi_ddiv+0x2e2>
 8001adc:	e0ce      	b.n	8001c7c <__aeabi_ddiv+0x480>
 8001ade:	0020      	movs	r0, r4
 8001ae0:	f001 fa06 	bl	8002ef0 <__clzsi2>
 8001ae4:	0001      	movs	r1, r0
 8001ae6:	0002      	movs	r2, r0
 8001ae8:	390b      	subs	r1, #11
 8001aea:	231d      	movs	r3, #29
 8001aec:	1a5b      	subs	r3, r3, r1
 8001aee:	4649      	mov	r1, r9
 8001af0:	0010      	movs	r0, r2
 8001af2:	40d9      	lsrs	r1, r3
 8001af4:	3808      	subs	r0, #8
 8001af6:	4084      	lsls	r4, r0
 8001af8:	000b      	movs	r3, r1
 8001afa:	464d      	mov	r5, r9
 8001afc:	4323      	orrs	r3, r4
 8001afe:	4698      	mov	r8, r3
 8001b00:	4085      	lsls	r5, r0
 8001b02:	4823      	ldr	r0, [pc, #140]	; (8001b90 <__aeabi_ddiv+0x394>)
 8001b04:	1a83      	subs	r3, r0, r2
 8001b06:	469b      	mov	fp, r3
 8001b08:	2300      	movs	r3, #0
 8001b0a:	4699      	mov	r9, r3
 8001b0c:	9300      	str	r3, [sp, #0]
 8001b0e:	e69a      	b.n	8001846 <__aeabi_ddiv+0x4a>
 8001b10:	464b      	mov	r3, r9
 8001b12:	4323      	orrs	r3, r4
 8001b14:	4698      	mov	r8, r3
 8001b16:	d11d      	bne.n	8001b54 <__aeabi_ddiv+0x358>
 8001b18:	2308      	movs	r3, #8
 8001b1a:	4699      	mov	r9, r3
 8001b1c:	3b06      	subs	r3, #6
 8001b1e:	2500      	movs	r5, #0
 8001b20:	4683      	mov	fp, r0
 8001b22:	9300      	str	r3, [sp, #0]
 8001b24:	e68f      	b.n	8001846 <__aeabi_ddiv+0x4a>
 8001b26:	4652      	mov	r2, sl
 8001b28:	4322      	orrs	r2, r4
 8001b2a:	d109      	bne.n	8001b40 <__aeabi_ddiv+0x344>
 8001b2c:	2302      	movs	r3, #2
 8001b2e:	4649      	mov	r1, r9
 8001b30:	4319      	orrs	r1, r3
 8001b32:	4b18      	ldr	r3, [pc, #96]	; (8001b94 <__aeabi_ddiv+0x398>)
 8001b34:	4689      	mov	r9, r1
 8001b36:	469c      	mov	ip, r3
 8001b38:	2400      	movs	r4, #0
 8001b3a:	2002      	movs	r0, #2
 8001b3c:	44e3      	add	fp, ip
 8001b3e:	e69d      	b.n	800187c <__aeabi_ddiv+0x80>
 8001b40:	2303      	movs	r3, #3
 8001b42:	464a      	mov	r2, r9
 8001b44:	431a      	orrs	r2, r3
 8001b46:	4b13      	ldr	r3, [pc, #76]	; (8001b94 <__aeabi_ddiv+0x398>)
 8001b48:	4691      	mov	r9, r2
 8001b4a:	469c      	mov	ip, r3
 8001b4c:	4652      	mov	r2, sl
 8001b4e:	2003      	movs	r0, #3
 8001b50:	44e3      	add	fp, ip
 8001b52:	e693      	b.n	800187c <__aeabi_ddiv+0x80>
 8001b54:	230c      	movs	r3, #12
 8001b56:	4699      	mov	r9, r3
 8001b58:	3b09      	subs	r3, #9
 8001b5a:	46a0      	mov	r8, r4
 8001b5c:	4683      	mov	fp, r0
 8001b5e:	9300      	str	r3, [sp, #0]
 8001b60:	e671      	b.n	8001846 <__aeabi_ddiv+0x4a>
 8001b62:	2304      	movs	r3, #4
 8001b64:	4699      	mov	r9, r3
 8001b66:	2300      	movs	r3, #0
 8001b68:	469b      	mov	fp, r3
 8001b6a:	3301      	adds	r3, #1
 8001b6c:	2500      	movs	r5, #0
 8001b6e:	9300      	str	r3, [sp, #0]
 8001b70:	e669      	b.n	8001846 <__aeabi_ddiv+0x4a>
 8001b72:	46c0      	nop			; (mov r8, r8)
 8001b74:	000007ff 	.word	0x000007ff
 8001b78:	fffffc01 	.word	0xfffffc01
 8001b7c:	0800a50c 	.word	0x0800a50c
 8001b80:	000003ff 	.word	0x000003ff
 8001b84:	feffffff 	.word	0xfeffffff
 8001b88:	000007fe 	.word	0x000007fe
 8001b8c:	000003f3 	.word	0x000003f3
 8001b90:	fffffc0d 	.word	0xfffffc0d
 8001b94:	fffff801 	.word	0xfffff801
 8001b98:	4649      	mov	r1, r9
 8001b9a:	2301      	movs	r3, #1
 8001b9c:	4319      	orrs	r1, r3
 8001b9e:	4689      	mov	r9, r1
 8001ba0:	2400      	movs	r4, #0
 8001ba2:	2001      	movs	r0, #1
 8001ba4:	e66a      	b.n	800187c <__aeabi_ddiv+0x80>
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	2480      	movs	r4, #128	; 0x80
 8001baa:	469a      	mov	sl, r3
 8001bac:	2500      	movs	r5, #0
 8001bae:	4b8a      	ldr	r3, [pc, #552]	; (8001dd8 <__aeabi_ddiv+0x5dc>)
 8001bb0:	0324      	lsls	r4, r4, #12
 8001bb2:	e67a      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001bb4:	2501      	movs	r5, #1
 8001bb6:	426d      	negs	r5, r5
 8001bb8:	2301      	movs	r3, #1
 8001bba:	1a9b      	subs	r3, r3, r2
 8001bbc:	2b38      	cmp	r3, #56	; 0x38
 8001bbe:	dd00      	ble.n	8001bc2 <__aeabi_ddiv+0x3c6>
 8001bc0:	e670      	b.n	80018a4 <__aeabi_ddiv+0xa8>
 8001bc2:	2b1f      	cmp	r3, #31
 8001bc4:	dc00      	bgt.n	8001bc8 <__aeabi_ddiv+0x3cc>
 8001bc6:	e0bf      	b.n	8001d48 <__aeabi_ddiv+0x54c>
 8001bc8:	211f      	movs	r1, #31
 8001bca:	4249      	negs	r1, r1
 8001bcc:	1a8a      	subs	r2, r1, r2
 8001bce:	4641      	mov	r1, r8
 8001bd0:	40d1      	lsrs	r1, r2
 8001bd2:	000a      	movs	r2, r1
 8001bd4:	2b20      	cmp	r3, #32
 8001bd6:	d004      	beq.n	8001be2 <__aeabi_ddiv+0x3e6>
 8001bd8:	4641      	mov	r1, r8
 8001bda:	4b80      	ldr	r3, [pc, #512]	; (8001ddc <__aeabi_ddiv+0x5e0>)
 8001bdc:	445b      	add	r3, fp
 8001bde:	4099      	lsls	r1, r3
 8001be0:	430d      	orrs	r5, r1
 8001be2:	1e6b      	subs	r3, r5, #1
 8001be4:	419d      	sbcs	r5, r3
 8001be6:	2307      	movs	r3, #7
 8001be8:	432a      	orrs	r2, r5
 8001bea:	001d      	movs	r5, r3
 8001bec:	2400      	movs	r4, #0
 8001bee:	4015      	ands	r5, r2
 8001bf0:	4213      	tst	r3, r2
 8001bf2:	d100      	bne.n	8001bf6 <__aeabi_ddiv+0x3fa>
 8001bf4:	e0d4      	b.n	8001da0 <__aeabi_ddiv+0x5a4>
 8001bf6:	210f      	movs	r1, #15
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	4011      	ands	r1, r2
 8001bfc:	2904      	cmp	r1, #4
 8001bfe:	d100      	bne.n	8001c02 <__aeabi_ddiv+0x406>
 8001c00:	e0cb      	b.n	8001d9a <__aeabi_ddiv+0x59e>
 8001c02:	1d11      	adds	r1, r2, #4
 8001c04:	4291      	cmp	r1, r2
 8001c06:	4192      	sbcs	r2, r2
 8001c08:	4252      	negs	r2, r2
 8001c0a:	189b      	adds	r3, r3, r2
 8001c0c:	000a      	movs	r2, r1
 8001c0e:	0219      	lsls	r1, r3, #8
 8001c10:	d400      	bmi.n	8001c14 <__aeabi_ddiv+0x418>
 8001c12:	e0c2      	b.n	8001d9a <__aeabi_ddiv+0x59e>
 8001c14:	2301      	movs	r3, #1
 8001c16:	2400      	movs	r4, #0
 8001c18:	2500      	movs	r5, #0
 8001c1a:	e646      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001c1c:	2380      	movs	r3, #128	; 0x80
 8001c1e:	4641      	mov	r1, r8
 8001c20:	031b      	lsls	r3, r3, #12
 8001c22:	4219      	tst	r1, r3
 8001c24:	d008      	beq.n	8001c38 <__aeabi_ddiv+0x43c>
 8001c26:	421c      	tst	r4, r3
 8001c28:	d106      	bne.n	8001c38 <__aeabi_ddiv+0x43c>
 8001c2a:	431c      	orrs	r4, r3
 8001c2c:	0324      	lsls	r4, r4, #12
 8001c2e:	46ba      	mov	sl, r7
 8001c30:	0015      	movs	r5, r2
 8001c32:	4b69      	ldr	r3, [pc, #420]	; (8001dd8 <__aeabi_ddiv+0x5dc>)
 8001c34:	0b24      	lsrs	r4, r4, #12
 8001c36:	e638      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001c38:	2480      	movs	r4, #128	; 0x80
 8001c3a:	4643      	mov	r3, r8
 8001c3c:	0324      	lsls	r4, r4, #12
 8001c3e:	431c      	orrs	r4, r3
 8001c40:	0324      	lsls	r4, r4, #12
 8001c42:	46b2      	mov	sl, r6
 8001c44:	4b64      	ldr	r3, [pc, #400]	; (8001dd8 <__aeabi_ddiv+0x5dc>)
 8001c46:	0b24      	lsrs	r4, r4, #12
 8001c48:	e62f      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d100      	bne.n	8001c50 <__aeabi_ddiv+0x454>
 8001c4e:	e703      	b.n	8001a58 <__aeabi_ddiv+0x25c>
 8001c50:	19a6      	adds	r6, r4, r6
 8001c52:	1e68      	subs	r0, r5, #1
 8001c54:	42a6      	cmp	r6, r4
 8001c56:	d200      	bcs.n	8001c5a <__aeabi_ddiv+0x45e>
 8001c58:	e08d      	b.n	8001d76 <__aeabi_ddiv+0x57a>
 8001c5a:	428e      	cmp	r6, r1
 8001c5c:	d200      	bcs.n	8001c60 <__aeabi_ddiv+0x464>
 8001c5e:	e0a3      	b.n	8001da8 <__aeabi_ddiv+0x5ac>
 8001c60:	d100      	bne.n	8001c64 <__aeabi_ddiv+0x468>
 8001c62:	e0b3      	b.n	8001dcc <__aeabi_ddiv+0x5d0>
 8001c64:	0005      	movs	r5, r0
 8001c66:	e6f5      	b.n	8001a54 <__aeabi_ddiv+0x258>
 8001c68:	42aa      	cmp	r2, r5
 8001c6a:	d900      	bls.n	8001c6e <__aeabi_ddiv+0x472>
 8001c6c:	e639      	b.n	80018e2 <__aeabi_ddiv+0xe6>
 8001c6e:	4643      	mov	r3, r8
 8001c70:	07de      	lsls	r6, r3, #31
 8001c72:	0858      	lsrs	r0, r3, #1
 8001c74:	086b      	lsrs	r3, r5, #1
 8001c76:	431e      	orrs	r6, r3
 8001c78:	07ed      	lsls	r5, r5, #31
 8001c7a:	e639      	b.n	80018f0 <__aeabi_ddiv+0xf4>
 8001c7c:	4648      	mov	r0, r9
 8001c7e:	f001 f937 	bl	8002ef0 <__clzsi2>
 8001c82:	0001      	movs	r1, r0
 8001c84:	0002      	movs	r2, r0
 8001c86:	3115      	adds	r1, #21
 8001c88:	3220      	adds	r2, #32
 8001c8a:	291c      	cmp	r1, #28
 8001c8c:	dc00      	bgt.n	8001c90 <__aeabi_ddiv+0x494>
 8001c8e:	e72c      	b.n	8001aea <__aeabi_ddiv+0x2ee>
 8001c90:	464b      	mov	r3, r9
 8001c92:	3808      	subs	r0, #8
 8001c94:	4083      	lsls	r3, r0
 8001c96:	2500      	movs	r5, #0
 8001c98:	4698      	mov	r8, r3
 8001c9a:	e732      	b.n	8001b02 <__aeabi_ddiv+0x306>
 8001c9c:	f001 f928 	bl	8002ef0 <__clzsi2>
 8001ca0:	0003      	movs	r3, r0
 8001ca2:	001a      	movs	r2, r3
 8001ca4:	3215      	adds	r2, #21
 8001ca6:	3020      	adds	r0, #32
 8001ca8:	2a1c      	cmp	r2, #28
 8001caa:	dc00      	bgt.n	8001cae <__aeabi_ddiv+0x4b2>
 8001cac:	e700      	b.n	8001ab0 <__aeabi_ddiv+0x2b4>
 8001cae:	4654      	mov	r4, sl
 8001cb0:	3b08      	subs	r3, #8
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	409c      	lsls	r4, r3
 8001cb6:	e705      	b.n	8001ac4 <__aeabi_ddiv+0x2c8>
 8001cb8:	1936      	adds	r6, r6, r4
 8001cba:	3b01      	subs	r3, #1
 8001cbc:	42b4      	cmp	r4, r6
 8001cbe:	d900      	bls.n	8001cc2 <__aeabi_ddiv+0x4c6>
 8001cc0:	e6a6      	b.n	8001a10 <__aeabi_ddiv+0x214>
 8001cc2:	42b2      	cmp	r2, r6
 8001cc4:	d800      	bhi.n	8001cc8 <__aeabi_ddiv+0x4cc>
 8001cc6:	e6a3      	b.n	8001a10 <__aeabi_ddiv+0x214>
 8001cc8:	1e83      	subs	r3, r0, #2
 8001cca:	1936      	adds	r6, r6, r4
 8001ccc:	e6a0      	b.n	8001a10 <__aeabi_ddiv+0x214>
 8001cce:	1909      	adds	r1, r1, r4
 8001cd0:	3d01      	subs	r5, #1
 8001cd2:	428c      	cmp	r4, r1
 8001cd4:	d900      	bls.n	8001cd8 <__aeabi_ddiv+0x4dc>
 8001cd6:	e68d      	b.n	80019f4 <__aeabi_ddiv+0x1f8>
 8001cd8:	428a      	cmp	r2, r1
 8001cda:	d800      	bhi.n	8001cde <__aeabi_ddiv+0x4e2>
 8001cdc:	e68a      	b.n	80019f4 <__aeabi_ddiv+0x1f8>
 8001cde:	1e85      	subs	r5, r0, #2
 8001ce0:	1909      	adds	r1, r1, r4
 8001ce2:	e687      	b.n	80019f4 <__aeabi_ddiv+0x1f8>
 8001ce4:	230f      	movs	r3, #15
 8001ce6:	402b      	ands	r3, r5
 8001ce8:	2b04      	cmp	r3, #4
 8001cea:	d100      	bne.n	8001cee <__aeabi_ddiv+0x4f2>
 8001cec:	e6bc      	b.n	8001a68 <__aeabi_ddiv+0x26c>
 8001cee:	2305      	movs	r3, #5
 8001cf0:	425b      	negs	r3, r3
 8001cf2:	42ab      	cmp	r3, r5
 8001cf4:	419b      	sbcs	r3, r3
 8001cf6:	3504      	adds	r5, #4
 8001cf8:	425b      	negs	r3, r3
 8001cfa:	08ed      	lsrs	r5, r5, #3
 8001cfc:	4498      	add	r8, r3
 8001cfe:	e6b4      	b.n	8001a6a <__aeabi_ddiv+0x26e>
 8001d00:	42af      	cmp	r7, r5
 8001d02:	d900      	bls.n	8001d06 <__aeabi_ddiv+0x50a>
 8001d04:	e660      	b.n	80019c8 <__aeabi_ddiv+0x1cc>
 8001d06:	4282      	cmp	r2, r0
 8001d08:	d804      	bhi.n	8001d14 <__aeabi_ddiv+0x518>
 8001d0a:	d000      	beq.n	8001d0e <__aeabi_ddiv+0x512>
 8001d0c:	e65c      	b.n	80019c8 <__aeabi_ddiv+0x1cc>
 8001d0e:	42ae      	cmp	r6, r5
 8001d10:	d800      	bhi.n	8001d14 <__aeabi_ddiv+0x518>
 8001d12:	e659      	b.n	80019c8 <__aeabi_ddiv+0x1cc>
 8001d14:	2302      	movs	r3, #2
 8001d16:	425b      	negs	r3, r3
 8001d18:	469c      	mov	ip, r3
 8001d1a:	9b00      	ldr	r3, [sp, #0]
 8001d1c:	44e0      	add	r8, ip
 8001d1e:	469c      	mov	ip, r3
 8001d20:	4465      	add	r5, ip
 8001d22:	429d      	cmp	r5, r3
 8001d24:	419b      	sbcs	r3, r3
 8001d26:	425b      	negs	r3, r3
 8001d28:	191b      	adds	r3, r3, r4
 8001d2a:	18c0      	adds	r0, r0, r3
 8001d2c:	e64d      	b.n	80019ca <__aeabi_ddiv+0x1ce>
 8001d2e:	428a      	cmp	r2, r1
 8001d30:	d800      	bhi.n	8001d34 <__aeabi_ddiv+0x538>
 8001d32:	e60e      	b.n	8001952 <__aeabi_ddiv+0x156>
 8001d34:	1e83      	subs	r3, r0, #2
 8001d36:	1909      	adds	r1, r1, r4
 8001d38:	e60b      	b.n	8001952 <__aeabi_ddiv+0x156>
 8001d3a:	428a      	cmp	r2, r1
 8001d3c:	d800      	bhi.n	8001d40 <__aeabi_ddiv+0x544>
 8001d3e:	e5f4      	b.n	800192a <__aeabi_ddiv+0x12e>
 8001d40:	1e83      	subs	r3, r0, #2
 8001d42:	4698      	mov	r8, r3
 8001d44:	1909      	adds	r1, r1, r4
 8001d46:	e5f0      	b.n	800192a <__aeabi_ddiv+0x12e>
 8001d48:	4925      	ldr	r1, [pc, #148]	; (8001de0 <__aeabi_ddiv+0x5e4>)
 8001d4a:	0028      	movs	r0, r5
 8001d4c:	4459      	add	r1, fp
 8001d4e:	408d      	lsls	r5, r1
 8001d50:	4642      	mov	r2, r8
 8001d52:	408a      	lsls	r2, r1
 8001d54:	1e69      	subs	r1, r5, #1
 8001d56:	418d      	sbcs	r5, r1
 8001d58:	4641      	mov	r1, r8
 8001d5a:	40d8      	lsrs	r0, r3
 8001d5c:	40d9      	lsrs	r1, r3
 8001d5e:	4302      	orrs	r2, r0
 8001d60:	432a      	orrs	r2, r5
 8001d62:	000b      	movs	r3, r1
 8001d64:	0751      	lsls	r1, r2, #29
 8001d66:	d100      	bne.n	8001d6a <__aeabi_ddiv+0x56e>
 8001d68:	e751      	b.n	8001c0e <__aeabi_ddiv+0x412>
 8001d6a:	210f      	movs	r1, #15
 8001d6c:	4011      	ands	r1, r2
 8001d6e:	2904      	cmp	r1, #4
 8001d70:	d000      	beq.n	8001d74 <__aeabi_ddiv+0x578>
 8001d72:	e746      	b.n	8001c02 <__aeabi_ddiv+0x406>
 8001d74:	e74b      	b.n	8001c0e <__aeabi_ddiv+0x412>
 8001d76:	0005      	movs	r5, r0
 8001d78:	428e      	cmp	r6, r1
 8001d7a:	d000      	beq.n	8001d7e <__aeabi_ddiv+0x582>
 8001d7c:	e66a      	b.n	8001a54 <__aeabi_ddiv+0x258>
 8001d7e:	9a00      	ldr	r2, [sp, #0]
 8001d80:	4293      	cmp	r3, r2
 8001d82:	d000      	beq.n	8001d86 <__aeabi_ddiv+0x58a>
 8001d84:	e666      	b.n	8001a54 <__aeabi_ddiv+0x258>
 8001d86:	e667      	b.n	8001a58 <__aeabi_ddiv+0x25c>
 8001d88:	4a16      	ldr	r2, [pc, #88]	; (8001de4 <__aeabi_ddiv+0x5e8>)
 8001d8a:	445a      	add	r2, fp
 8001d8c:	2a00      	cmp	r2, #0
 8001d8e:	dc00      	bgt.n	8001d92 <__aeabi_ddiv+0x596>
 8001d90:	e710      	b.n	8001bb4 <__aeabi_ddiv+0x3b8>
 8001d92:	2301      	movs	r3, #1
 8001d94:	2500      	movs	r5, #0
 8001d96:	4498      	add	r8, r3
 8001d98:	e667      	b.n	8001a6a <__aeabi_ddiv+0x26e>
 8001d9a:	075d      	lsls	r5, r3, #29
 8001d9c:	025b      	lsls	r3, r3, #9
 8001d9e:	0b1c      	lsrs	r4, r3, #12
 8001da0:	08d2      	lsrs	r2, r2, #3
 8001da2:	2300      	movs	r3, #0
 8001da4:	4315      	orrs	r5, r2
 8001da6:	e580      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001da8:	9800      	ldr	r0, [sp, #0]
 8001daa:	3d02      	subs	r5, #2
 8001dac:	0042      	lsls	r2, r0, #1
 8001dae:	4282      	cmp	r2, r0
 8001db0:	41bf      	sbcs	r7, r7
 8001db2:	427f      	negs	r7, r7
 8001db4:	193c      	adds	r4, r7, r4
 8001db6:	1936      	adds	r6, r6, r4
 8001db8:	9200      	str	r2, [sp, #0]
 8001dba:	e7dd      	b.n	8001d78 <__aeabi_ddiv+0x57c>
 8001dbc:	2480      	movs	r4, #128	; 0x80
 8001dbe:	4643      	mov	r3, r8
 8001dc0:	0324      	lsls	r4, r4, #12
 8001dc2:	431c      	orrs	r4, r3
 8001dc4:	0324      	lsls	r4, r4, #12
 8001dc6:	4b04      	ldr	r3, [pc, #16]	; (8001dd8 <__aeabi_ddiv+0x5dc>)
 8001dc8:	0b24      	lsrs	r4, r4, #12
 8001dca:	e56e      	b.n	80018aa <__aeabi_ddiv+0xae>
 8001dcc:	9a00      	ldr	r2, [sp, #0]
 8001dce:	429a      	cmp	r2, r3
 8001dd0:	d3ea      	bcc.n	8001da8 <__aeabi_ddiv+0x5ac>
 8001dd2:	0005      	movs	r5, r0
 8001dd4:	e7d3      	b.n	8001d7e <__aeabi_ddiv+0x582>
 8001dd6:	46c0      	nop			; (mov r8, r8)
 8001dd8:	000007ff 	.word	0x000007ff
 8001ddc:	0000043e 	.word	0x0000043e
 8001de0:	0000041e 	.word	0x0000041e
 8001de4:	000003ff 	.word	0x000003ff

08001de8 <__eqdf2>:
 8001de8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dea:	464e      	mov	r6, r9
 8001dec:	4645      	mov	r5, r8
 8001dee:	46de      	mov	lr, fp
 8001df0:	4657      	mov	r7, sl
 8001df2:	4690      	mov	r8, r2
 8001df4:	b5e0      	push	{r5, r6, r7, lr}
 8001df6:	0017      	movs	r7, r2
 8001df8:	031a      	lsls	r2, r3, #12
 8001dfa:	0b12      	lsrs	r2, r2, #12
 8001dfc:	0005      	movs	r5, r0
 8001dfe:	4684      	mov	ip, r0
 8001e00:	4819      	ldr	r0, [pc, #100]	; (8001e68 <__eqdf2+0x80>)
 8001e02:	030e      	lsls	r6, r1, #12
 8001e04:	004c      	lsls	r4, r1, #1
 8001e06:	4691      	mov	r9, r2
 8001e08:	005a      	lsls	r2, r3, #1
 8001e0a:	0fdb      	lsrs	r3, r3, #31
 8001e0c:	469b      	mov	fp, r3
 8001e0e:	0b36      	lsrs	r6, r6, #12
 8001e10:	0d64      	lsrs	r4, r4, #21
 8001e12:	0fc9      	lsrs	r1, r1, #31
 8001e14:	0d52      	lsrs	r2, r2, #21
 8001e16:	4284      	cmp	r4, r0
 8001e18:	d019      	beq.n	8001e4e <__eqdf2+0x66>
 8001e1a:	4282      	cmp	r2, r0
 8001e1c:	d010      	beq.n	8001e40 <__eqdf2+0x58>
 8001e1e:	2001      	movs	r0, #1
 8001e20:	4294      	cmp	r4, r2
 8001e22:	d10e      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e24:	454e      	cmp	r6, r9
 8001e26:	d10c      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e28:	2001      	movs	r0, #1
 8001e2a:	45c4      	cmp	ip, r8
 8001e2c:	d109      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e2e:	4559      	cmp	r1, fp
 8001e30:	d017      	beq.n	8001e62 <__eqdf2+0x7a>
 8001e32:	2c00      	cmp	r4, #0
 8001e34:	d105      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e36:	0030      	movs	r0, r6
 8001e38:	4328      	orrs	r0, r5
 8001e3a:	1e43      	subs	r3, r0, #1
 8001e3c:	4198      	sbcs	r0, r3
 8001e3e:	e000      	b.n	8001e42 <__eqdf2+0x5a>
 8001e40:	2001      	movs	r0, #1
 8001e42:	bcf0      	pop	{r4, r5, r6, r7}
 8001e44:	46bb      	mov	fp, r7
 8001e46:	46b2      	mov	sl, r6
 8001e48:	46a9      	mov	r9, r5
 8001e4a:	46a0      	mov	r8, r4
 8001e4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e4e:	0033      	movs	r3, r6
 8001e50:	2001      	movs	r0, #1
 8001e52:	432b      	orrs	r3, r5
 8001e54:	d1f5      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e56:	42a2      	cmp	r2, r4
 8001e58:	d1f3      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e5a:	464b      	mov	r3, r9
 8001e5c:	433b      	orrs	r3, r7
 8001e5e:	d1f0      	bne.n	8001e42 <__eqdf2+0x5a>
 8001e60:	e7e2      	b.n	8001e28 <__eqdf2+0x40>
 8001e62:	2000      	movs	r0, #0
 8001e64:	e7ed      	b.n	8001e42 <__eqdf2+0x5a>
 8001e66:	46c0      	nop			; (mov r8, r8)
 8001e68:	000007ff 	.word	0x000007ff

08001e6c <__gedf2>:
 8001e6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e6e:	4647      	mov	r7, r8
 8001e70:	46ce      	mov	lr, r9
 8001e72:	0004      	movs	r4, r0
 8001e74:	0018      	movs	r0, r3
 8001e76:	0016      	movs	r6, r2
 8001e78:	031b      	lsls	r3, r3, #12
 8001e7a:	0b1b      	lsrs	r3, r3, #12
 8001e7c:	4d2d      	ldr	r5, [pc, #180]	; (8001f34 <__gedf2+0xc8>)
 8001e7e:	004a      	lsls	r2, r1, #1
 8001e80:	4699      	mov	r9, r3
 8001e82:	b580      	push	{r7, lr}
 8001e84:	0043      	lsls	r3, r0, #1
 8001e86:	030f      	lsls	r7, r1, #12
 8001e88:	46a4      	mov	ip, r4
 8001e8a:	46b0      	mov	r8, r6
 8001e8c:	0b3f      	lsrs	r7, r7, #12
 8001e8e:	0d52      	lsrs	r2, r2, #21
 8001e90:	0fc9      	lsrs	r1, r1, #31
 8001e92:	0d5b      	lsrs	r3, r3, #21
 8001e94:	0fc0      	lsrs	r0, r0, #31
 8001e96:	42aa      	cmp	r2, r5
 8001e98:	d021      	beq.n	8001ede <__gedf2+0x72>
 8001e9a:	42ab      	cmp	r3, r5
 8001e9c:	d013      	beq.n	8001ec6 <__gedf2+0x5a>
 8001e9e:	2a00      	cmp	r2, #0
 8001ea0:	d122      	bne.n	8001ee8 <__gedf2+0x7c>
 8001ea2:	433c      	orrs	r4, r7
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d102      	bne.n	8001eae <__gedf2+0x42>
 8001ea8:	464d      	mov	r5, r9
 8001eaa:	432e      	orrs	r6, r5
 8001eac:	d022      	beq.n	8001ef4 <__gedf2+0x88>
 8001eae:	2c00      	cmp	r4, #0
 8001eb0:	d010      	beq.n	8001ed4 <__gedf2+0x68>
 8001eb2:	4281      	cmp	r1, r0
 8001eb4:	d022      	beq.n	8001efc <__gedf2+0x90>
 8001eb6:	2002      	movs	r0, #2
 8001eb8:	3901      	subs	r1, #1
 8001eba:	4008      	ands	r0, r1
 8001ebc:	3801      	subs	r0, #1
 8001ebe:	bcc0      	pop	{r6, r7}
 8001ec0:	46b9      	mov	r9, r7
 8001ec2:	46b0      	mov	r8, r6
 8001ec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ec6:	464d      	mov	r5, r9
 8001ec8:	432e      	orrs	r6, r5
 8001eca:	d129      	bne.n	8001f20 <__gedf2+0xb4>
 8001ecc:	2a00      	cmp	r2, #0
 8001ece:	d1f0      	bne.n	8001eb2 <__gedf2+0x46>
 8001ed0:	433c      	orrs	r4, r7
 8001ed2:	d1ee      	bne.n	8001eb2 <__gedf2+0x46>
 8001ed4:	2800      	cmp	r0, #0
 8001ed6:	d1f2      	bne.n	8001ebe <__gedf2+0x52>
 8001ed8:	2001      	movs	r0, #1
 8001eda:	4240      	negs	r0, r0
 8001edc:	e7ef      	b.n	8001ebe <__gedf2+0x52>
 8001ede:	003d      	movs	r5, r7
 8001ee0:	4325      	orrs	r5, r4
 8001ee2:	d11d      	bne.n	8001f20 <__gedf2+0xb4>
 8001ee4:	4293      	cmp	r3, r2
 8001ee6:	d0ee      	beq.n	8001ec6 <__gedf2+0x5a>
 8001ee8:	2b00      	cmp	r3, #0
 8001eea:	d1e2      	bne.n	8001eb2 <__gedf2+0x46>
 8001eec:	464c      	mov	r4, r9
 8001eee:	4326      	orrs	r6, r4
 8001ef0:	d1df      	bne.n	8001eb2 <__gedf2+0x46>
 8001ef2:	e7e0      	b.n	8001eb6 <__gedf2+0x4a>
 8001ef4:	2000      	movs	r0, #0
 8001ef6:	2c00      	cmp	r4, #0
 8001ef8:	d0e1      	beq.n	8001ebe <__gedf2+0x52>
 8001efa:	e7dc      	b.n	8001eb6 <__gedf2+0x4a>
 8001efc:	429a      	cmp	r2, r3
 8001efe:	dc0a      	bgt.n	8001f16 <__gedf2+0xaa>
 8001f00:	dbe8      	blt.n	8001ed4 <__gedf2+0x68>
 8001f02:	454f      	cmp	r7, r9
 8001f04:	d8d7      	bhi.n	8001eb6 <__gedf2+0x4a>
 8001f06:	d00e      	beq.n	8001f26 <__gedf2+0xba>
 8001f08:	2000      	movs	r0, #0
 8001f0a:	454f      	cmp	r7, r9
 8001f0c:	d2d7      	bcs.n	8001ebe <__gedf2+0x52>
 8001f0e:	2900      	cmp	r1, #0
 8001f10:	d0e2      	beq.n	8001ed8 <__gedf2+0x6c>
 8001f12:	0008      	movs	r0, r1
 8001f14:	e7d3      	b.n	8001ebe <__gedf2+0x52>
 8001f16:	4243      	negs	r3, r0
 8001f18:	4158      	adcs	r0, r3
 8001f1a:	0040      	lsls	r0, r0, #1
 8001f1c:	3801      	subs	r0, #1
 8001f1e:	e7ce      	b.n	8001ebe <__gedf2+0x52>
 8001f20:	2002      	movs	r0, #2
 8001f22:	4240      	negs	r0, r0
 8001f24:	e7cb      	b.n	8001ebe <__gedf2+0x52>
 8001f26:	45c4      	cmp	ip, r8
 8001f28:	d8c5      	bhi.n	8001eb6 <__gedf2+0x4a>
 8001f2a:	2000      	movs	r0, #0
 8001f2c:	45c4      	cmp	ip, r8
 8001f2e:	d2c6      	bcs.n	8001ebe <__gedf2+0x52>
 8001f30:	e7ed      	b.n	8001f0e <__gedf2+0xa2>
 8001f32:	46c0      	nop			; (mov r8, r8)
 8001f34:	000007ff 	.word	0x000007ff

08001f38 <__ledf2>:
 8001f38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f3a:	4647      	mov	r7, r8
 8001f3c:	46ce      	mov	lr, r9
 8001f3e:	0004      	movs	r4, r0
 8001f40:	0018      	movs	r0, r3
 8001f42:	0016      	movs	r6, r2
 8001f44:	031b      	lsls	r3, r3, #12
 8001f46:	0b1b      	lsrs	r3, r3, #12
 8001f48:	4d2c      	ldr	r5, [pc, #176]	; (8001ffc <__ledf2+0xc4>)
 8001f4a:	004a      	lsls	r2, r1, #1
 8001f4c:	4699      	mov	r9, r3
 8001f4e:	b580      	push	{r7, lr}
 8001f50:	0043      	lsls	r3, r0, #1
 8001f52:	030f      	lsls	r7, r1, #12
 8001f54:	46a4      	mov	ip, r4
 8001f56:	46b0      	mov	r8, r6
 8001f58:	0b3f      	lsrs	r7, r7, #12
 8001f5a:	0d52      	lsrs	r2, r2, #21
 8001f5c:	0fc9      	lsrs	r1, r1, #31
 8001f5e:	0d5b      	lsrs	r3, r3, #21
 8001f60:	0fc0      	lsrs	r0, r0, #31
 8001f62:	42aa      	cmp	r2, r5
 8001f64:	d00d      	beq.n	8001f82 <__ledf2+0x4a>
 8001f66:	42ab      	cmp	r3, r5
 8001f68:	d010      	beq.n	8001f8c <__ledf2+0x54>
 8001f6a:	2a00      	cmp	r2, #0
 8001f6c:	d127      	bne.n	8001fbe <__ledf2+0x86>
 8001f6e:	433c      	orrs	r4, r7
 8001f70:	2b00      	cmp	r3, #0
 8001f72:	d111      	bne.n	8001f98 <__ledf2+0x60>
 8001f74:	464d      	mov	r5, r9
 8001f76:	432e      	orrs	r6, r5
 8001f78:	d10e      	bne.n	8001f98 <__ledf2+0x60>
 8001f7a:	2000      	movs	r0, #0
 8001f7c:	2c00      	cmp	r4, #0
 8001f7e:	d015      	beq.n	8001fac <__ledf2+0x74>
 8001f80:	e00e      	b.n	8001fa0 <__ledf2+0x68>
 8001f82:	003d      	movs	r5, r7
 8001f84:	4325      	orrs	r5, r4
 8001f86:	d110      	bne.n	8001faa <__ledf2+0x72>
 8001f88:	4293      	cmp	r3, r2
 8001f8a:	d118      	bne.n	8001fbe <__ledf2+0x86>
 8001f8c:	464d      	mov	r5, r9
 8001f8e:	432e      	orrs	r6, r5
 8001f90:	d10b      	bne.n	8001faa <__ledf2+0x72>
 8001f92:	2a00      	cmp	r2, #0
 8001f94:	d102      	bne.n	8001f9c <__ledf2+0x64>
 8001f96:	433c      	orrs	r4, r7
 8001f98:	2c00      	cmp	r4, #0
 8001f9a:	d00b      	beq.n	8001fb4 <__ledf2+0x7c>
 8001f9c:	4281      	cmp	r1, r0
 8001f9e:	d014      	beq.n	8001fca <__ledf2+0x92>
 8001fa0:	2002      	movs	r0, #2
 8001fa2:	3901      	subs	r1, #1
 8001fa4:	4008      	ands	r0, r1
 8001fa6:	3801      	subs	r0, #1
 8001fa8:	e000      	b.n	8001fac <__ledf2+0x74>
 8001faa:	2002      	movs	r0, #2
 8001fac:	bcc0      	pop	{r6, r7}
 8001fae:	46b9      	mov	r9, r7
 8001fb0:	46b0      	mov	r8, r6
 8001fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fb4:	2800      	cmp	r0, #0
 8001fb6:	d1f9      	bne.n	8001fac <__ledf2+0x74>
 8001fb8:	2001      	movs	r0, #1
 8001fba:	4240      	negs	r0, r0
 8001fbc:	e7f6      	b.n	8001fac <__ledf2+0x74>
 8001fbe:	2b00      	cmp	r3, #0
 8001fc0:	d1ec      	bne.n	8001f9c <__ledf2+0x64>
 8001fc2:	464c      	mov	r4, r9
 8001fc4:	4326      	orrs	r6, r4
 8001fc6:	d1e9      	bne.n	8001f9c <__ledf2+0x64>
 8001fc8:	e7ea      	b.n	8001fa0 <__ledf2+0x68>
 8001fca:	429a      	cmp	r2, r3
 8001fcc:	dd04      	ble.n	8001fd8 <__ledf2+0xa0>
 8001fce:	4243      	negs	r3, r0
 8001fd0:	4158      	adcs	r0, r3
 8001fd2:	0040      	lsls	r0, r0, #1
 8001fd4:	3801      	subs	r0, #1
 8001fd6:	e7e9      	b.n	8001fac <__ledf2+0x74>
 8001fd8:	429a      	cmp	r2, r3
 8001fda:	dbeb      	blt.n	8001fb4 <__ledf2+0x7c>
 8001fdc:	454f      	cmp	r7, r9
 8001fde:	d8df      	bhi.n	8001fa0 <__ledf2+0x68>
 8001fe0:	d006      	beq.n	8001ff0 <__ledf2+0xb8>
 8001fe2:	2000      	movs	r0, #0
 8001fe4:	454f      	cmp	r7, r9
 8001fe6:	d2e1      	bcs.n	8001fac <__ledf2+0x74>
 8001fe8:	2900      	cmp	r1, #0
 8001fea:	d0e5      	beq.n	8001fb8 <__ledf2+0x80>
 8001fec:	0008      	movs	r0, r1
 8001fee:	e7dd      	b.n	8001fac <__ledf2+0x74>
 8001ff0:	45c4      	cmp	ip, r8
 8001ff2:	d8d5      	bhi.n	8001fa0 <__ledf2+0x68>
 8001ff4:	2000      	movs	r0, #0
 8001ff6:	45c4      	cmp	ip, r8
 8001ff8:	d2d8      	bcs.n	8001fac <__ledf2+0x74>
 8001ffa:	e7f5      	b.n	8001fe8 <__ledf2+0xb0>
 8001ffc:	000007ff 	.word	0x000007ff

08002000 <__aeabi_dmul>:
 8002000:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002002:	4657      	mov	r7, sl
 8002004:	464e      	mov	r6, r9
 8002006:	4645      	mov	r5, r8
 8002008:	46de      	mov	lr, fp
 800200a:	b5e0      	push	{r5, r6, r7, lr}
 800200c:	4698      	mov	r8, r3
 800200e:	030c      	lsls	r4, r1, #12
 8002010:	004b      	lsls	r3, r1, #1
 8002012:	0006      	movs	r6, r0
 8002014:	4692      	mov	sl, r2
 8002016:	b087      	sub	sp, #28
 8002018:	0b24      	lsrs	r4, r4, #12
 800201a:	0d5b      	lsrs	r3, r3, #21
 800201c:	0fcf      	lsrs	r7, r1, #31
 800201e:	2b00      	cmp	r3, #0
 8002020:	d100      	bne.n	8002024 <__aeabi_dmul+0x24>
 8002022:	e15c      	b.n	80022de <__aeabi_dmul+0x2de>
 8002024:	4ad9      	ldr	r2, [pc, #868]	; (800238c <__aeabi_dmul+0x38c>)
 8002026:	4293      	cmp	r3, r2
 8002028:	d100      	bne.n	800202c <__aeabi_dmul+0x2c>
 800202a:	e175      	b.n	8002318 <__aeabi_dmul+0x318>
 800202c:	0f42      	lsrs	r2, r0, #29
 800202e:	00e4      	lsls	r4, r4, #3
 8002030:	4314      	orrs	r4, r2
 8002032:	2280      	movs	r2, #128	; 0x80
 8002034:	0412      	lsls	r2, r2, #16
 8002036:	4314      	orrs	r4, r2
 8002038:	4ad5      	ldr	r2, [pc, #852]	; (8002390 <__aeabi_dmul+0x390>)
 800203a:	00c5      	lsls	r5, r0, #3
 800203c:	4694      	mov	ip, r2
 800203e:	4463      	add	r3, ip
 8002040:	9300      	str	r3, [sp, #0]
 8002042:	2300      	movs	r3, #0
 8002044:	4699      	mov	r9, r3
 8002046:	469b      	mov	fp, r3
 8002048:	4643      	mov	r3, r8
 800204a:	4642      	mov	r2, r8
 800204c:	031e      	lsls	r6, r3, #12
 800204e:	0fd2      	lsrs	r2, r2, #31
 8002050:	005b      	lsls	r3, r3, #1
 8002052:	4650      	mov	r0, sl
 8002054:	4690      	mov	r8, r2
 8002056:	0b36      	lsrs	r6, r6, #12
 8002058:	0d5b      	lsrs	r3, r3, #21
 800205a:	d100      	bne.n	800205e <__aeabi_dmul+0x5e>
 800205c:	e120      	b.n	80022a0 <__aeabi_dmul+0x2a0>
 800205e:	4acb      	ldr	r2, [pc, #812]	; (800238c <__aeabi_dmul+0x38c>)
 8002060:	4293      	cmp	r3, r2
 8002062:	d100      	bne.n	8002066 <__aeabi_dmul+0x66>
 8002064:	e162      	b.n	800232c <__aeabi_dmul+0x32c>
 8002066:	49ca      	ldr	r1, [pc, #808]	; (8002390 <__aeabi_dmul+0x390>)
 8002068:	0f42      	lsrs	r2, r0, #29
 800206a:	468c      	mov	ip, r1
 800206c:	9900      	ldr	r1, [sp, #0]
 800206e:	4463      	add	r3, ip
 8002070:	00f6      	lsls	r6, r6, #3
 8002072:	468c      	mov	ip, r1
 8002074:	4316      	orrs	r6, r2
 8002076:	2280      	movs	r2, #128	; 0x80
 8002078:	449c      	add	ip, r3
 800207a:	0412      	lsls	r2, r2, #16
 800207c:	4663      	mov	r3, ip
 800207e:	4316      	orrs	r6, r2
 8002080:	00c2      	lsls	r2, r0, #3
 8002082:	2000      	movs	r0, #0
 8002084:	9300      	str	r3, [sp, #0]
 8002086:	9900      	ldr	r1, [sp, #0]
 8002088:	4643      	mov	r3, r8
 800208a:	3101      	adds	r1, #1
 800208c:	468c      	mov	ip, r1
 800208e:	4649      	mov	r1, r9
 8002090:	407b      	eors	r3, r7
 8002092:	9301      	str	r3, [sp, #4]
 8002094:	290f      	cmp	r1, #15
 8002096:	d826      	bhi.n	80020e6 <__aeabi_dmul+0xe6>
 8002098:	4bbe      	ldr	r3, [pc, #760]	; (8002394 <__aeabi_dmul+0x394>)
 800209a:	0089      	lsls	r1, r1, #2
 800209c:	5859      	ldr	r1, [r3, r1]
 800209e:	468f      	mov	pc, r1
 80020a0:	4643      	mov	r3, r8
 80020a2:	9301      	str	r3, [sp, #4]
 80020a4:	0034      	movs	r4, r6
 80020a6:	0015      	movs	r5, r2
 80020a8:	4683      	mov	fp, r0
 80020aa:	465b      	mov	r3, fp
 80020ac:	2b02      	cmp	r3, #2
 80020ae:	d016      	beq.n	80020de <__aeabi_dmul+0xde>
 80020b0:	2b03      	cmp	r3, #3
 80020b2:	d100      	bne.n	80020b6 <__aeabi_dmul+0xb6>
 80020b4:	e203      	b.n	80024be <__aeabi_dmul+0x4be>
 80020b6:	2b01      	cmp	r3, #1
 80020b8:	d000      	beq.n	80020bc <__aeabi_dmul+0xbc>
 80020ba:	e0cd      	b.n	8002258 <__aeabi_dmul+0x258>
 80020bc:	2200      	movs	r2, #0
 80020be:	2400      	movs	r4, #0
 80020c0:	2500      	movs	r5, #0
 80020c2:	9b01      	ldr	r3, [sp, #4]
 80020c4:	0512      	lsls	r2, r2, #20
 80020c6:	4322      	orrs	r2, r4
 80020c8:	07db      	lsls	r3, r3, #31
 80020ca:	431a      	orrs	r2, r3
 80020cc:	0028      	movs	r0, r5
 80020ce:	0011      	movs	r1, r2
 80020d0:	b007      	add	sp, #28
 80020d2:	bcf0      	pop	{r4, r5, r6, r7}
 80020d4:	46bb      	mov	fp, r7
 80020d6:	46b2      	mov	sl, r6
 80020d8:	46a9      	mov	r9, r5
 80020da:	46a0      	mov	r8, r4
 80020dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020de:	2400      	movs	r4, #0
 80020e0:	2500      	movs	r5, #0
 80020e2:	4aaa      	ldr	r2, [pc, #680]	; (800238c <__aeabi_dmul+0x38c>)
 80020e4:	e7ed      	b.n	80020c2 <__aeabi_dmul+0xc2>
 80020e6:	0c28      	lsrs	r0, r5, #16
 80020e8:	042d      	lsls	r5, r5, #16
 80020ea:	0c2d      	lsrs	r5, r5, #16
 80020ec:	002b      	movs	r3, r5
 80020ee:	0c11      	lsrs	r1, r2, #16
 80020f0:	0412      	lsls	r2, r2, #16
 80020f2:	0c12      	lsrs	r2, r2, #16
 80020f4:	4353      	muls	r3, r2
 80020f6:	4698      	mov	r8, r3
 80020f8:	0013      	movs	r3, r2
 80020fa:	002f      	movs	r7, r5
 80020fc:	4343      	muls	r3, r0
 80020fe:	4699      	mov	r9, r3
 8002100:	434f      	muls	r7, r1
 8002102:	444f      	add	r7, r9
 8002104:	46bb      	mov	fp, r7
 8002106:	4647      	mov	r7, r8
 8002108:	000b      	movs	r3, r1
 800210a:	0c3f      	lsrs	r7, r7, #16
 800210c:	46ba      	mov	sl, r7
 800210e:	4343      	muls	r3, r0
 8002110:	44da      	add	sl, fp
 8002112:	9302      	str	r3, [sp, #8]
 8002114:	45d1      	cmp	r9, sl
 8002116:	d904      	bls.n	8002122 <__aeabi_dmul+0x122>
 8002118:	2780      	movs	r7, #128	; 0x80
 800211a:	027f      	lsls	r7, r7, #9
 800211c:	46b9      	mov	r9, r7
 800211e:	444b      	add	r3, r9
 8002120:	9302      	str	r3, [sp, #8]
 8002122:	4653      	mov	r3, sl
 8002124:	0c1b      	lsrs	r3, r3, #16
 8002126:	469b      	mov	fp, r3
 8002128:	4653      	mov	r3, sl
 800212a:	041f      	lsls	r7, r3, #16
 800212c:	4643      	mov	r3, r8
 800212e:	041b      	lsls	r3, r3, #16
 8002130:	0c1b      	lsrs	r3, r3, #16
 8002132:	4698      	mov	r8, r3
 8002134:	003b      	movs	r3, r7
 8002136:	4443      	add	r3, r8
 8002138:	9304      	str	r3, [sp, #16]
 800213a:	0c33      	lsrs	r3, r6, #16
 800213c:	0436      	lsls	r6, r6, #16
 800213e:	0c36      	lsrs	r6, r6, #16
 8002140:	4698      	mov	r8, r3
 8002142:	0033      	movs	r3, r6
 8002144:	4343      	muls	r3, r0
 8002146:	4699      	mov	r9, r3
 8002148:	4643      	mov	r3, r8
 800214a:	4343      	muls	r3, r0
 800214c:	002f      	movs	r7, r5
 800214e:	469a      	mov	sl, r3
 8002150:	4643      	mov	r3, r8
 8002152:	4377      	muls	r7, r6
 8002154:	435d      	muls	r5, r3
 8002156:	0c38      	lsrs	r0, r7, #16
 8002158:	444d      	add	r5, r9
 800215a:	1945      	adds	r5, r0, r5
 800215c:	45a9      	cmp	r9, r5
 800215e:	d903      	bls.n	8002168 <__aeabi_dmul+0x168>
 8002160:	2380      	movs	r3, #128	; 0x80
 8002162:	025b      	lsls	r3, r3, #9
 8002164:	4699      	mov	r9, r3
 8002166:	44ca      	add	sl, r9
 8002168:	043f      	lsls	r7, r7, #16
 800216a:	0c28      	lsrs	r0, r5, #16
 800216c:	0c3f      	lsrs	r7, r7, #16
 800216e:	042d      	lsls	r5, r5, #16
 8002170:	19ed      	adds	r5, r5, r7
 8002172:	0c27      	lsrs	r7, r4, #16
 8002174:	0424      	lsls	r4, r4, #16
 8002176:	0c24      	lsrs	r4, r4, #16
 8002178:	0003      	movs	r3, r0
 800217a:	0020      	movs	r0, r4
 800217c:	4350      	muls	r0, r2
 800217e:	437a      	muls	r2, r7
 8002180:	4691      	mov	r9, r2
 8002182:	003a      	movs	r2, r7
 8002184:	4453      	add	r3, sl
 8002186:	9305      	str	r3, [sp, #20]
 8002188:	0c03      	lsrs	r3, r0, #16
 800218a:	469a      	mov	sl, r3
 800218c:	434a      	muls	r2, r1
 800218e:	4361      	muls	r1, r4
 8002190:	4449      	add	r1, r9
 8002192:	4451      	add	r1, sl
 8002194:	44ab      	add	fp, r5
 8002196:	4589      	cmp	r9, r1
 8002198:	d903      	bls.n	80021a2 <__aeabi_dmul+0x1a2>
 800219a:	2380      	movs	r3, #128	; 0x80
 800219c:	025b      	lsls	r3, r3, #9
 800219e:	4699      	mov	r9, r3
 80021a0:	444a      	add	r2, r9
 80021a2:	0400      	lsls	r0, r0, #16
 80021a4:	0c0b      	lsrs	r3, r1, #16
 80021a6:	0c00      	lsrs	r0, r0, #16
 80021a8:	0409      	lsls	r1, r1, #16
 80021aa:	1809      	adds	r1, r1, r0
 80021ac:	0020      	movs	r0, r4
 80021ae:	4699      	mov	r9, r3
 80021b0:	4643      	mov	r3, r8
 80021b2:	4370      	muls	r0, r6
 80021b4:	435c      	muls	r4, r3
 80021b6:	437e      	muls	r6, r7
 80021b8:	435f      	muls	r7, r3
 80021ba:	0c03      	lsrs	r3, r0, #16
 80021bc:	4698      	mov	r8, r3
 80021be:	19a4      	adds	r4, r4, r6
 80021c0:	4444      	add	r4, r8
 80021c2:	444a      	add	r2, r9
 80021c4:	9703      	str	r7, [sp, #12]
 80021c6:	42a6      	cmp	r6, r4
 80021c8:	d904      	bls.n	80021d4 <__aeabi_dmul+0x1d4>
 80021ca:	2380      	movs	r3, #128	; 0x80
 80021cc:	025b      	lsls	r3, r3, #9
 80021ce:	4698      	mov	r8, r3
 80021d0:	4447      	add	r7, r8
 80021d2:	9703      	str	r7, [sp, #12]
 80021d4:	0423      	lsls	r3, r4, #16
 80021d6:	9e02      	ldr	r6, [sp, #8]
 80021d8:	469a      	mov	sl, r3
 80021da:	9b05      	ldr	r3, [sp, #20]
 80021dc:	445e      	add	r6, fp
 80021de:	4698      	mov	r8, r3
 80021e0:	42ae      	cmp	r6, r5
 80021e2:	41ad      	sbcs	r5, r5
 80021e4:	1876      	adds	r6, r6, r1
 80021e6:	428e      	cmp	r6, r1
 80021e8:	4189      	sbcs	r1, r1
 80021ea:	0400      	lsls	r0, r0, #16
 80021ec:	0c00      	lsrs	r0, r0, #16
 80021ee:	4450      	add	r0, sl
 80021f0:	4440      	add	r0, r8
 80021f2:	426d      	negs	r5, r5
 80021f4:	1947      	adds	r7, r0, r5
 80021f6:	46b8      	mov	r8, r7
 80021f8:	4693      	mov	fp, r2
 80021fa:	4249      	negs	r1, r1
 80021fc:	4689      	mov	r9, r1
 80021fe:	44c3      	add	fp, r8
 8002200:	44d9      	add	r9, fp
 8002202:	4298      	cmp	r0, r3
 8002204:	4180      	sbcs	r0, r0
 8002206:	45a8      	cmp	r8, r5
 8002208:	41ad      	sbcs	r5, r5
 800220a:	4593      	cmp	fp, r2
 800220c:	4192      	sbcs	r2, r2
 800220e:	4589      	cmp	r9, r1
 8002210:	4189      	sbcs	r1, r1
 8002212:	426d      	negs	r5, r5
 8002214:	4240      	negs	r0, r0
 8002216:	4328      	orrs	r0, r5
 8002218:	0c24      	lsrs	r4, r4, #16
 800221a:	4252      	negs	r2, r2
 800221c:	4249      	negs	r1, r1
 800221e:	430a      	orrs	r2, r1
 8002220:	9b03      	ldr	r3, [sp, #12]
 8002222:	1900      	adds	r0, r0, r4
 8002224:	1880      	adds	r0, r0, r2
 8002226:	18c7      	adds	r7, r0, r3
 8002228:	464b      	mov	r3, r9
 800222a:	0ddc      	lsrs	r4, r3, #23
 800222c:	9b04      	ldr	r3, [sp, #16]
 800222e:	0275      	lsls	r5, r6, #9
 8002230:	431d      	orrs	r5, r3
 8002232:	1e6a      	subs	r2, r5, #1
 8002234:	4195      	sbcs	r5, r2
 8002236:	464b      	mov	r3, r9
 8002238:	0df6      	lsrs	r6, r6, #23
 800223a:	027f      	lsls	r7, r7, #9
 800223c:	4335      	orrs	r5, r6
 800223e:	025a      	lsls	r2, r3, #9
 8002240:	433c      	orrs	r4, r7
 8002242:	4315      	orrs	r5, r2
 8002244:	01fb      	lsls	r3, r7, #7
 8002246:	d400      	bmi.n	800224a <__aeabi_dmul+0x24a>
 8002248:	e11c      	b.n	8002484 <__aeabi_dmul+0x484>
 800224a:	2101      	movs	r1, #1
 800224c:	086a      	lsrs	r2, r5, #1
 800224e:	400d      	ands	r5, r1
 8002250:	4315      	orrs	r5, r2
 8002252:	07e2      	lsls	r2, r4, #31
 8002254:	4315      	orrs	r5, r2
 8002256:	0864      	lsrs	r4, r4, #1
 8002258:	494f      	ldr	r1, [pc, #316]	; (8002398 <__aeabi_dmul+0x398>)
 800225a:	4461      	add	r1, ip
 800225c:	2900      	cmp	r1, #0
 800225e:	dc00      	bgt.n	8002262 <__aeabi_dmul+0x262>
 8002260:	e0b0      	b.n	80023c4 <__aeabi_dmul+0x3c4>
 8002262:	076b      	lsls	r3, r5, #29
 8002264:	d009      	beq.n	800227a <__aeabi_dmul+0x27a>
 8002266:	220f      	movs	r2, #15
 8002268:	402a      	ands	r2, r5
 800226a:	2a04      	cmp	r2, #4
 800226c:	d005      	beq.n	800227a <__aeabi_dmul+0x27a>
 800226e:	1d2a      	adds	r2, r5, #4
 8002270:	42aa      	cmp	r2, r5
 8002272:	41ad      	sbcs	r5, r5
 8002274:	426d      	negs	r5, r5
 8002276:	1964      	adds	r4, r4, r5
 8002278:	0015      	movs	r5, r2
 800227a:	01e3      	lsls	r3, r4, #7
 800227c:	d504      	bpl.n	8002288 <__aeabi_dmul+0x288>
 800227e:	2180      	movs	r1, #128	; 0x80
 8002280:	4a46      	ldr	r2, [pc, #280]	; (800239c <__aeabi_dmul+0x39c>)
 8002282:	00c9      	lsls	r1, r1, #3
 8002284:	4014      	ands	r4, r2
 8002286:	4461      	add	r1, ip
 8002288:	4a45      	ldr	r2, [pc, #276]	; (80023a0 <__aeabi_dmul+0x3a0>)
 800228a:	4291      	cmp	r1, r2
 800228c:	dd00      	ble.n	8002290 <__aeabi_dmul+0x290>
 800228e:	e726      	b.n	80020de <__aeabi_dmul+0xde>
 8002290:	0762      	lsls	r2, r4, #29
 8002292:	08ed      	lsrs	r5, r5, #3
 8002294:	0264      	lsls	r4, r4, #9
 8002296:	0549      	lsls	r1, r1, #21
 8002298:	4315      	orrs	r5, r2
 800229a:	0b24      	lsrs	r4, r4, #12
 800229c:	0d4a      	lsrs	r2, r1, #21
 800229e:	e710      	b.n	80020c2 <__aeabi_dmul+0xc2>
 80022a0:	4652      	mov	r2, sl
 80022a2:	4332      	orrs	r2, r6
 80022a4:	d100      	bne.n	80022a8 <__aeabi_dmul+0x2a8>
 80022a6:	e07f      	b.n	80023a8 <__aeabi_dmul+0x3a8>
 80022a8:	2e00      	cmp	r6, #0
 80022aa:	d100      	bne.n	80022ae <__aeabi_dmul+0x2ae>
 80022ac:	e0dc      	b.n	8002468 <__aeabi_dmul+0x468>
 80022ae:	0030      	movs	r0, r6
 80022b0:	f000 fe1e 	bl	8002ef0 <__clzsi2>
 80022b4:	0002      	movs	r2, r0
 80022b6:	3a0b      	subs	r2, #11
 80022b8:	231d      	movs	r3, #29
 80022ba:	0001      	movs	r1, r0
 80022bc:	1a9b      	subs	r3, r3, r2
 80022be:	4652      	mov	r2, sl
 80022c0:	3908      	subs	r1, #8
 80022c2:	40da      	lsrs	r2, r3
 80022c4:	408e      	lsls	r6, r1
 80022c6:	4316      	orrs	r6, r2
 80022c8:	4652      	mov	r2, sl
 80022ca:	408a      	lsls	r2, r1
 80022cc:	9b00      	ldr	r3, [sp, #0]
 80022ce:	4935      	ldr	r1, [pc, #212]	; (80023a4 <__aeabi_dmul+0x3a4>)
 80022d0:	1a18      	subs	r0, r3, r0
 80022d2:	0003      	movs	r3, r0
 80022d4:	468c      	mov	ip, r1
 80022d6:	4463      	add	r3, ip
 80022d8:	2000      	movs	r0, #0
 80022da:	9300      	str	r3, [sp, #0]
 80022dc:	e6d3      	b.n	8002086 <__aeabi_dmul+0x86>
 80022de:	0025      	movs	r5, r4
 80022e0:	4305      	orrs	r5, r0
 80022e2:	d04a      	beq.n	800237a <__aeabi_dmul+0x37a>
 80022e4:	2c00      	cmp	r4, #0
 80022e6:	d100      	bne.n	80022ea <__aeabi_dmul+0x2ea>
 80022e8:	e0b0      	b.n	800244c <__aeabi_dmul+0x44c>
 80022ea:	0020      	movs	r0, r4
 80022ec:	f000 fe00 	bl	8002ef0 <__clzsi2>
 80022f0:	0001      	movs	r1, r0
 80022f2:	0002      	movs	r2, r0
 80022f4:	390b      	subs	r1, #11
 80022f6:	231d      	movs	r3, #29
 80022f8:	0010      	movs	r0, r2
 80022fa:	1a5b      	subs	r3, r3, r1
 80022fc:	0031      	movs	r1, r6
 80022fe:	0035      	movs	r5, r6
 8002300:	3808      	subs	r0, #8
 8002302:	4084      	lsls	r4, r0
 8002304:	40d9      	lsrs	r1, r3
 8002306:	4085      	lsls	r5, r0
 8002308:	430c      	orrs	r4, r1
 800230a:	4826      	ldr	r0, [pc, #152]	; (80023a4 <__aeabi_dmul+0x3a4>)
 800230c:	1a83      	subs	r3, r0, r2
 800230e:	9300      	str	r3, [sp, #0]
 8002310:	2300      	movs	r3, #0
 8002312:	4699      	mov	r9, r3
 8002314:	469b      	mov	fp, r3
 8002316:	e697      	b.n	8002048 <__aeabi_dmul+0x48>
 8002318:	0005      	movs	r5, r0
 800231a:	4325      	orrs	r5, r4
 800231c:	d126      	bne.n	800236c <__aeabi_dmul+0x36c>
 800231e:	2208      	movs	r2, #8
 8002320:	9300      	str	r3, [sp, #0]
 8002322:	2302      	movs	r3, #2
 8002324:	2400      	movs	r4, #0
 8002326:	4691      	mov	r9, r2
 8002328:	469b      	mov	fp, r3
 800232a:	e68d      	b.n	8002048 <__aeabi_dmul+0x48>
 800232c:	4652      	mov	r2, sl
 800232e:	9b00      	ldr	r3, [sp, #0]
 8002330:	4332      	orrs	r2, r6
 8002332:	d110      	bne.n	8002356 <__aeabi_dmul+0x356>
 8002334:	4915      	ldr	r1, [pc, #84]	; (800238c <__aeabi_dmul+0x38c>)
 8002336:	2600      	movs	r6, #0
 8002338:	468c      	mov	ip, r1
 800233a:	4463      	add	r3, ip
 800233c:	4649      	mov	r1, r9
 800233e:	9300      	str	r3, [sp, #0]
 8002340:	2302      	movs	r3, #2
 8002342:	4319      	orrs	r1, r3
 8002344:	4689      	mov	r9, r1
 8002346:	2002      	movs	r0, #2
 8002348:	e69d      	b.n	8002086 <__aeabi_dmul+0x86>
 800234a:	465b      	mov	r3, fp
 800234c:	9701      	str	r7, [sp, #4]
 800234e:	2b02      	cmp	r3, #2
 8002350:	d000      	beq.n	8002354 <__aeabi_dmul+0x354>
 8002352:	e6ad      	b.n	80020b0 <__aeabi_dmul+0xb0>
 8002354:	e6c3      	b.n	80020de <__aeabi_dmul+0xde>
 8002356:	4a0d      	ldr	r2, [pc, #52]	; (800238c <__aeabi_dmul+0x38c>)
 8002358:	2003      	movs	r0, #3
 800235a:	4694      	mov	ip, r2
 800235c:	4463      	add	r3, ip
 800235e:	464a      	mov	r2, r9
 8002360:	9300      	str	r3, [sp, #0]
 8002362:	2303      	movs	r3, #3
 8002364:	431a      	orrs	r2, r3
 8002366:	4691      	mov	r9, r2
 8002368:	4652      	mov	r2, sl
 800236a:	e68c      	b.n	8002086 <__aeabi_dmul+0x86>
 800236c:	220c      	movs	r2, #12
 800236e:	9300      	str	r3, [sp, #0]
 8002370:	2303      	movs	r3, #3
 8002372:	0005      	movs	r5, r0
 8002374:	4691      	mov	r9, r2
 8002376:	469b      	mov	fp, r3
 8002378:	e666      	b.n	8002048 <__aeabi_dmul+0x48>
 800237a:	2304      	movs	r3, #4
 800237c:	4699      	mov	r9, r3
 800237e:	2300      	movs	r3, #0
 8002380:	9300      	str	r3, [sp, #0]
 8002382:	3301      	adds	r3, #1
 8002384:	2400      	movs	r4, #0
 8002386:	469b      	mov	fp, r3
 8002388:	e65e      	b.n	8002048 <__aeabi_dmul+0x48>
 800238a:	46c0      	nop			; (mov r8, r8)
 800238c:	000007ff 	.word	0x000007ff
 8002390:	fffffc01 	.word	0xfffffc01
 8002394:	0800a54c 	.word	0x0800a54c
 8002398:	000003ff 	.word	0x000003ff
 800239c:	feffffff 	.word	0xfeffffff
 80023a0:	000007fe 	.word	0x000007fe
 80023a4:	fffffc0d 	.word	0xfffffc0d
 80023a8:	4649      	mov	r1, r9
 80023aa:	2301      	movs	r3, #1
 80023ac:	4319      	orrs	r1, r3
 80023ae:	4689      	mov	r9, r1
 80023b0:	2600      	movs	r6, #0
 80023b2:	2001      	movs	r0, #1
 80023b4:	e667      	b.n	8002086 <__aeabi_dmul+0x86>
 80023b6:	2300      	movs	r3, #0
 80023b8:	2480      	movs	r4, #128	; 0x80
 80023ba:	2500      	movs	r5, #0
 80023bc:	4a43      	ldr	r2, [pc, #268]	; (80024cc <__aeabi_dmul+0x4cc>)
 80023be:	9301      	str	r3, [sp, #4]
 80023c0:	0324      	lsls	r4, r4, #12
 80023c2:	e67e      	b.n	80020c2 <__aeabi_dmul+0xc2>
 80023c4:	2001      	movs	r0, #1
 80023c6:	1a40      	subs	r0, r0, r1
 80023c8:	2838      	cmp	r0, #56	; 0x38
 80023ca:	dd00      	ble.n	80023ce <__aeabi_dmul+0x3ce>
 80023cc:	e676      	b.n	80020bc <__aeabi_dmul+0xbc>
 80023ce:	281f      	cmp	r0, #31
 80023d0:	dd5b      	ble.n	800248a <__aeabi_dmul+0x48a>
 80023d2:	221f      	movs	r2, #31
 80023d4:	0023      	movs	r3, r4
 80023d6:	4252      	negs	r2, r2
 80023d8:	1a51      	subs	r1, r2, r1
 80023da:	40cb      	lsrs	r3, r1
 80023dc:	0019      	movs	r1, r3
 80023de:	2820      	cmp	r0, #32
 80023e0:	d003      	beq.n	80023ea <__aeabi_dmul+0x3ea>
 80023e2:	4a3b      	ldr	r2, [pc, #236]	; (80024d0 <__aeabi_dmul+0x4d0>)
 80023e4:	4462      	add	r2, ip
 80023e6:	4094      	lsls	r4, r2
 80023e8:	4325      	orrs	r5, r4
 80023ea:	1e6a      	subs	r2, r5, #1
 80023ec:	4195      	sbcs	r5, r2
 80023ee:	002a      	movs	r2, r5
 80023f0:	430a      	orrs	r2, r1
 80023f2:	2107      	movs	r1, #7
 80023f4:	000d      	movs	r5, r1
 80023f6:	2400      	movs	r4, #0
 80023f8:	4015      	ands	r5, r2
 80023fa:	4211      	tst	r1, r2
 80023fc:	d05b      	beq.n	80024b6 <__aeabi_dmul+0x4b6>
 80023fe:	210f      	movs	r1, #15
 8002400:	2400      	movs	r4, #0
 8002402:	4011      	ands	r1, r2
 8002404:	2904      	cmp	r1, #4
 8002406:	d053      	beq.n	80024b0 <__aeabi_dmul+0x4b0>
 8002408:	1d11      	adds	r1, r2, #4
 800240a:	4291      	cmp	r1, r2
 800240c:	4192      	sbcs	r2, r2
 800240e:	4252      	negs	r2, r2
 8002410:	18a4      	adds	r4, r4, r2
 8002412:	000a      	movs	r2, r1
 8002414:	0223      	lsls	r3, r4, #8
 8002416:	d54b      	bpl.n	80024b0 <__aeabi_dmul+0x4b0>
 8002418:	2201      	movs	r2, #1
 800241a:	2400      	movs	r4, #0
 800241c:	2500      	movs	r5, #0
 800241e:	e650      	b.n	80020c2 <__aeabi_dmul+0xc2>
 8002420:	2380      	movs	r3, #128	; 0x80
 8002422:	031b      	lsls	r3, r3, #12
 8002424:	421c      	tst	r4, r3
 8002426:	d009      	beq.n	800243c <__aeabi_dmul+0x43c>
 8002428:	421e      	tst	r6, r3
 800242a:	d107      	bne.n	800243c <__aeabi_dmul+0x43c>
 800242c:	4333      	orrs	r3, r6
 800242e:	031c      	lsls	r4, r3, #12
 8002430:	4643      	mov	r3, r8
 8002432:	0015      	movs	r5, r2
 8002434:	0b24      	lsrs	r4, r4, #12
 8002436:	4a25      	ldr	r2, [pc, #148]	; (80024cc <__aeabi_dmul+0x4cc>)
 8002438:	9301      	str	r3, [sp, #4]
 800243a:	e642      	b.n	80020c2 <__aeabi_dmul+0xc2>
 800243c:	2280      	movs	r2, #128	; 0x80
 800243e:	0312      	lsls	r2, r2, #12
 8002440:	4314      	orrs	r4, r2
 8002442:	0324      	lsls	r4, r4, #12
 8002444:	4a21      	ldr	r2, [pc, #132]	; (80024cc <__aeabi_dmul+0x4cc>)
 8002446:	0b24      	lsrs	r4, r4, #12
 8002448:	9701      	str	r7, [sp, #4]
 800244a:	e63a      	b.n	80020c2 <__aeabi_dmul+0xc2>
 800244c:	f000 fd50 	bl	8002ef0 <__clzsi2>
 8002450:	0001      	movs	r1, r0
 8002452:	0002      	movs	r2, r0
 8002454:	3115      	adds	r1, #21
 8002456:	3220      	adds	r2, #32
 8002458:	291c      	cmp	r1, #28
 800245a:	dc00      	bgt.n	800245e <__aeabi_dmul+0x45e>
 800245c:	e74b      	b.n	80022f6 <__aeabi_dmul+0x2f6>
 800245e:	0034      	movs	r4, r6
 8002460:	3808      	subs	r0, #8
 8002462:	2500      	movs	r5, #0
 8002464:	4084      	lsls	r4, r0
 8002466:	e750      	b.n	800230a <__aeabi_dmul+0x30a>
 8002468:	f000 fd42 	bl	8002ef0 <__clzsi2>
 800246c:	0003      	movs	r3, r0
 800246e:	001a      	movs	r2, r3
 8002470:	3215      	adds	r2, #21
 8002472:	3020      	adds	r0, #32
 8002474:	2a1c      	cmp	r2, #28
 8002476:	dc00      	bgt.n	800247a <__aeabi_dmul+0x47a>
 8002478:	e71e      	b.n	80022b8 <__aeabi_dmul+0x2b8>
 800247a:	4656      	mov	r6, sl
 800247c:	3b08      	subs	r3, #8
 800247e:	2200      	movs	r2, #0
 8002480:	409e      	lsls	r6, r3
 8002482:	e723      	b.n	80022cc <__aeabi_dmul+0x2cc>
 8002484:	9b00      	ldr	r3, [sp, #0]
 8002486:	469c      	mov	ip, r3
 8002488:	e6e6      	b.n	8002258 <__aeabi_dmul+0x258>
 800248a:	4912      	ldr	r1, [pc, #72]	; (80024d4 <__aeabi_dmul+0x4d4>)
 800248c:	0022      	movs	r2, r4
 800248e:	4461      	add	r1, ip
 8002490:	002e      	movs	r6, r5
 8002492:	408d      	lsls	r5, r1
 8002494:	408a      	lsls	r2, r1
 8002496:	40c6      	lsrs	r6, r0
 8002498:	1e69      	subs	r1, r5, #1
 800249a:	418d      	sbcs	r5, r1
 800249c:	4332      	orrs	r2, r6
 800249e:	432a      	orrs	r2, r5
 80024a0:	40c4      	lsrs	r4, r0
 80024a2:	0753      	lsls	r3, r2, #29
 80024a4:	d0b6      	beq.n	8002414 <__aeabi_dmul+0x414>
 80024a6:	210f      	movs	r1, #15
 80024a8:	4011      	ands	r1, r2
 80024aa:	2904      	cmp	r1, #4
 80024ac:	d1ac      	bne.n	8002408 <__aeabi_dmul+0x408>
 80024ae:	e7b1      	b.n	8002414 <__aeabi_dmul+0x414>
 80024b0:	0765      	lsls	r5, r4, #29
 80024b2:	0264      	lsls	r4, r4, #9
 80024b4:	0b24      	lsrs	r4, r4, #12
 80024b6:	08d2      	lsrs	r2, r2, #3
 80024b8:	4315      	orrs	r5, r2
 80024ba:	2200      	movs	r2, #0
 80024bc:	e601      	b.n	80020c2 <__aeabi_dmul+0xc2>
 80024be:	2280      	movs	r2, #128	; 0x80
 80024c0:	0312      	lsls	r2, r2, #12
 80024c2:	4314      	orrs	r4, r2
 80024c4:	0324      	lsls	r4, r4, #12
 80024c6:	4a01      	ldr	r2, [pc, #4]	; (80024cc <__aeabi_dmul+0x4cc>)
 80024c8:	0b24      	lsrs	r4, r4, #12
 80024ca:	e5fa      	b.n	80020c2 <__aeabi_dmul+0xc2>
 80024cc:	000007ff 	.word	0x000007ff
 80024d0:	0000043e 	.word	0x0000043e
 80024d4:	0000041e 	.word	0x0000041e

080024d8 <__aeabi_dsub>:
 80024d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024da:	4657      	mov	r7, sl
 80024dc:	464e      	mov	r6, r9
 80024de:	4645      	mov	r5, r8
 80024e0:	46de      	mov	lr, fp
 80024e2:	b5e0      	push	{r5, r6, r7, lr}
 80024e4:	001e      	movs	r6, r3
 80024e6:	0017      	movs	r7, r2
 80024e8:	004a      	lsls	r2, r1, #1
 80024ea:	030b      	lsls	r3, r1, #12
 80024ec:	0d52      	lsrs	r2, r2, #21
 80024ee:	0a5b      	lsrs	r3, r3, #9
 80024f0:	4690      	mov	r8, r2
 80024f2:	0f42      	lsrs	r2, r0, #29
 80024f4:	431a      	orrs	r2, r3
 80024f6:	0fcd      	lsrs	r5, r1, #31
 80024f8:	4ccd      	ldr	r4, [pc, #820]	; (8002830 <__aeabi_dsub+0x358>)
 80024fa:	0331      	lsls	r1, r6, #12
 80024fc:	00c3      	lsls	r3, r0, #3
 80024fe:	4694      	mov	ip, r2
 8002500:	0070      	lsls	r0, r6, #1
 8002502:	0f7a      	lsrs	r2, r7, #29
 8002504:	0a49      	lsrs	r1, r1, #9
 8002506:	00ff      	lsls	r7, r7, #3
 8002508:	469a      	mov	sl, r3
 800250a:	46b9      	mov	r9, r7
 800250c:	0d40      	lsrs	r0, r0, #21
 800250e:	0ff6      	lsrs	r6, r6, #31
 8002510:	4311      	orrs	r1, r2
 8002512:	42a0      	cmp	r0, r4
 8002514:	d100      	bne.n	8002518 <__aeabi_dsub+0x40>
 8002516:	e0b1      	b.n	800267c <__aeabi_dsub+0x1a4>
 8002518:	2201      	movs	r2, #1
 800251a:	4056      	eors	r6, r2
 800251c:	46b3      	mov	fp, r6
 800251e:	42b5      	cmp	r5, r6
 8002520:	d100      	bne.n	8002524 <__aeabi_dsub+0x4c>
 8002522:	e088      	b.n	8002636 <__aeabi_dsub+0x15e>
 8002524:	4642      	mov	r2, r8
 8002526:	1a12      	subs	r2, r2, r0
 8002528:	2a00      	cmp	r2, #0
 800252a:	dc00      	bgt.n	800252e <__aeabi_dsub+0x56>
 800252c:	e0ae      	b.n	800268c <__aeabi_dsub+0x1b4>
 800252e:	2800      	cmp	r0, #0
 8002530:	d100      	bne.n	8002534 <__aeabi_dsub+0x5c>
 8002532:	e0c1      	b.n	80026b8 <__aeabi_dsub+0x1e0>
 8002534:	48be      	ldr	r0, [pc, #760]	; (8002830 <__aeabi_dsub+0x358>)
 8002536:	4580      	cmp	r8, r0
 8002538:	d100      	bne.n	800253c <__aeabi_dsub+0x64>
 800253a:	e151      	b.n	80027e0 <__aeabi_dsub+0x308>
 800253c:	2080      	movs	r0, #128	; 0x80
 800253e:	0400      	lsls	r0, r0, #16
 8002540:	4301      	orrs	r1, r0
 8002542:	2a38      	cmp	r2, #56	; 0x38
 8002544:	dd00      	ble.n	8002548 <__aeabi_dsub+0x70>
 8002546:	e17b      	b.n	8002840 <__aeabi_dsub+0x368>
 8002548:	2a1f      	cmp	r2, #31
 800254a:	dd00      	ble.n	800254e <__aeabi_dsub+0x76>
 800254c:	e1ee      	b.n	800292c <__aeabi_dsub+0x454>
 800254e:	2020      	movs	r0, #32
 8002550:	003e      	movs	r6, r7
 8002552:	1a80      	subs	r0, r0, r2
 8002554:	000c      	movs	r4, r1
 8002556:	40d6      	lsrs	r6, r2
 8002558:	40d1      	lsrs	r1, r2
 800255a:	4087      	lsls	r7, r0
 800255c:	4662      	mov	r2, ip
 800255e:	4084      	lsls	r4, r0
 8002560:	1a52      	subs	r2, r2, r1
 8002562:	1e78      	subs	r0, r7, #1
 8002564:	4187      	sbcs	r7, r0
 8002566:	4694      	mov	ip, r2
 8002568:	4334      	orrs	r4, r6
 800256a:	4327      	orrs	r7, r4
 800256c:	1bdc      	subs	r4, r3, r7
 800256e:	42a3      	cmp	r3, r4
 8002570:	419b      	sbcs	r3, r3
 8002572:	4662      	mov	r2, ip
 8002574:	425b      	negs	r3, r3
 8002576:	1ad3      	subs	r3, r2, r3
 8002578:	4699      	mov	r9, r3
 800257a:	464b      	mov	r3, r9
 800257c:	021b      	lsls	r3, r3, #8
 800257e:	d400      	bmi.n	8002582 <__aeabi_dsub+0xaa>
 8002580:	e118      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 8002582:	464b      	mov	r3, r9
 8002584:	0258      	lsls	r0, r3, #9
 8002586:	0a43      	lsrs	r3, r0, #9
 8002588:	4699      	mov	r9, r3
 800258a:	464b      	mov	r3, r9
 800258c:	2b00      	cmp	r3, #0
 800258e:	d100      	bne.n	8002592 <__aeabi_dsub+0xba>
 8002590:	e137      	b.n	8002802 <__aeabi_dsub+0x32a>
 8002592:	4648      	mov	r0, r9
 8002594:	f000 fcac 	bl	8002ef0 <__clzsi2>
 8002598:	0001      	movs	r1, r0
 800259a:	3908      	subs	r1, #8
 800259c:	2320      	movs	r3, #32
 800259e:	0022      	movs	r2, r4
 80025a0:	4648      	mov	r0, r9
 80025a2:	1a5b      	subs	r3, r3, r1
 80025a4:	40da      	lsrs	r2, r3
 80025a6:	4088      	lsls	r0, r1
 80025a8:	408c      	lsls	r4, r1
 80025aa:	4643      	mov	r3, r8
 80025ac:	4310      	orrs	r0, r2
 80025ae:	4588      	cmp	r8, r1
 80025b0:	dd00      	ble.n	80025b4 <__aeabi_dsub+0xdc>
 80025b2:	e136      	b.n	8002822 <__aeabi_dsub+0x34a>
 80025b4:	1ac9      	subs	r1, r1, r3
 80025b6:	1c4b      	adds	r3, r1, #1
 80025b8:	2b1f      	cmp	r3, #31
 80025ba:	dd00      	ble.n	80025be <__aeabi_dsub+0xe6>
 80025bc:	e0ea      	b.n	8002794 <__aeabi_dsub+0x2bc>
 80025be:	2220      	movs	r2, #32
 80025c0:	0026      	movs	r6, r4
 80025c2:	1ad2      	subs	r2, r2, r3
 80025c4:	0001      	movs	r1, r0
 80025c6:	4094      	lsls	r4, r2
 80025c8:	40de      	lsrs	r6, r3
 80025ca:	40d8      	lsrs	r0, r3
 80025cc:	2300      	movs	r3, #0
 80025ce:	4091      	lsls	r1, r2
 80025d0:	1e62      	subs	r2, r4, #1
 80025d2:	4194      	sbcs	r4, r2
 80025d4:	4681      	mov	r9, r0
 80025d6:	4698      	mov	r8, r3
 80025d8:	4331      	orrs	r1, r6
 80025da:	430c      	orrs	r4, r1
 80025dc:	0763      	lsls	r3, r4, #29
 80025de:	d009      	beq.n	80025f4 <__aeabi_dsub+0x11c>
 80025e0:	230f      	movs	r3, #15
 80025e2:	4023      	ands	r3, r4
 80025e4:	2b04      	cmp	r3, #4
 80025e6:	d005      	beq.n	80025f4 <__aeabi_dsub+0x11c>
 80025e8:	1d23      	adds	r3, r4, #4
 80025ea:	42a3      	cmp	r3, r4
 80025ec:	41a4      	sbcs	r4, r4
 80025ee:	4264      	negs	r4, r4
 80025f0:	44a1      	add	r9, r4
 80025f2:	001c      	movs	r4, r3
 80025f4:	464b      	mov	r3, r9
 80025f6:	021b      	lsls	r3, r3, #8
 80025f8:	d400      	bmi.n	80025fc <__aeabi_dsub+0x124>
 80025fa:	e0de      	b.n	80027ba <__aeabi_dsub+0x2e2>
 80025fc:	4641      	mov	r1, r8
 80025fe:	4b8c      	ldr	r3, [pc, #560]	; (8002830 <__aeabi_dsub+0x358>)
 8002600:	3101      	adds	r1, #1
 8002602:	4299      	cmp	r1, r3
 8002604:	d100      	bne.n	8002608 <__aeabi_dsub+0x130>
 8002606:	e0e7      	b.n	80027d8 <__aeabi_dsub+0x300>
 8002608:	464b      	mov	r3, r9
 800260a:	488a      	ldr	r0, [pc, #552]	; (8002834 <__aeabi_dsub+0x35c>)
 800260c:	08e4      	lsrs	r4, r4, #3
 800260e:	4003      	ands	r3, r0
 8002610:	0018      	movs	r0, r3
 8002612:	0549      	lsls	r1, r1, #21
 8002614:	075b      	lsls	r3, r3, #29
 8002616:	0240      	lsls	r0, r0, #9
 8002618:	4323      	orrs	r3, r4
 800261a:	0d4a      	lsrs	r2, r1, #21
 800261c:	0b04      	lsrs	r4, r0, #12
 800261e:	0512      	lsls	r2, r2, #20
 8002620:	07ed      	lsls	r5, r5, #31
 8002622:	4322      	orrs	r2, r4
 8002624:	432a      	orrs	r2, r5
 8002626:	0018      	movs	r0, r3
 8002628:	0011      	movs	r1, r2
 800262a:	bcf0      	pop	{r4, r5, r6, r7}
 800262c:	46bb      	mov	fp, r7
 800262e:	46b2      	mov	sl, r6
 8002630:	46a9      	mov	r9, r5
 8002632:	46a0      	mov	r8, r4
 8002634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002636:	4642      	mov	r2, r8
 8002638:	1a12      	subs	r2, r2, r0
 800263a:	2a00      	cmp	r2, #0
 800263c:	dd52      	ble.n	80026e4 <__aeabi_dsub+0x20c>
 800263e:	2800      	cmp	r0, #0
 8002640:	d100      	bne.n	8002644 <__aeabi_dsub+0x16c>
 8002642:	e09c      	b.n	800277e <__aeabi_dsub+0x2a6>
 8002644:	45a0      	cmp	r8, r4
 8002646:	d100      	bne.n	800264a <__aeabi_dsub+0x172>
 8002648:	e0ca      	b.n	80027e0 <__aeabi_dsub+0x308>
 800264a:	2080      	movs	r0, #128	; 0x80
 800264c:	0400      	lsls	r0, r0, #16
 800264e:	4301      	orrs	r1, r0
 8002650:	2a38      	cmp	r2, #56	; 0x38
 8002652:	dd00      	ble.n	8002656 <__aeabi_dsub+0x17e>
 8002654:	e149      	b.n	80028ea <__aeabi_dsub+0x412>
 8002656:	2a1f      	cmp	r2, #31
 8002658:	dc00      	bgt.n	800265c <__aeabi_dsub+0x184>
 800265a:	e197      	b.n	800298c <__aeabi_dsub+0x4b4>
 800265c:	0010      	movs	r0, r2
 800265e:	000e      	movs	r6, r1
 8002660:	3820      	subs	r0, #32
 8002662:	40c6      	lsrs	r6, r0
 8002664:	2a20      	cmp	r2, #32
 8002666:	d004      	beq.n	8002672 <__aeabi_dsub+0x19a>
 8002668:	2040      	movs	r0, #64	; 0x40
 800266a:	1a82      	subs	r2, r0, r2
 800266c:	4091      	lsls	r1, r2
 800266e:	430f      	orrs	r7, r1
 8002670:	46b9      	mov	r9, r7
 8002672:	464c      	mov	r4, r9
 8002674:	1e62      	subs	r2, r4, #1
 8002676:	4194      	sbcs	r4, r2
 8002678:	4334      	orrs	r4, r6
 800267a:	e13a      	b.n	80028f2 <__aeabi_dsub+0x41a>
 800267c:	000a      	movs	r2, r1
 800267e:	433a      	orrs	r2, r7
 8002680:	d028      	beq.n	80026d4 <__aeabi_dsub+0x1fc>
 8002682:	46b3      	mov	fp, r6
 8002684:	42b5      	cmp	r5, r6
 8002686:	d02b      	beq.n	80026e0 <__aeabi_dsub+0x208>
 8002688:	4a6b      	ldr	r2, [pc, #428]	; (8002838 <__aeabi_dsub+0x360>)
 800268a:	4442      	add	r2, r8
 800268c:	2a00      	cmp	r2, #0
 800268e:	d05d      	beq.n	800274c <__aeabi_dsub+0x274>
 8002690:	4642      	mov	r2, r8
 8002692:	4644      	mov	r4, r8
 8002694:	1a82      	subs	r2, r0, r2
 8002696:	2c00      	cmp	r4, #0
 8002698:	d000      	beq.n	800269c <__aeabi_dsub+0x1c4>
 800269a:	e0f5      	b.n	8002888 <__aeabi_dsub+0x3b0>
 800269c:	4665      	mov	r5, ip
 800269e:	431d      	orrs	r5, r3
 80026a0:	d100      	bne.n	80026a4 <__aeabi_dsub+0x1cc>
 80026a2:	e19c      	b.n	80029de <__aeabi_dsub+0x506>
 80026a4:	1e55      	subs	r5, r2, #1
 80026a6:	2a01      	cmp	r2, #1
 80026a8:	d100      	bne.n	80026ac <__aeabi_dsub+0x1d4>
 80026aa:	e1fb      	b.n	8002aa4 <__aeabi_dsub+0x5cc>
 80026ac:	4c60      	ldr	r4, [pc, #384]	; (8002830 <__aeabi_dsub+0x358>)
 80026ae:	42a2      	cmp	r2, r4
 80026b0:	d100      	bne.n	80026b4 <__aeabi_dsub+0x1dc>
 80026b2:	e1bd      	b.n	8002a30 <__aeabi_dsub+0x558>
 80026b4:	002a      	movs	r2, r5
 80026b6:	e0f0      	b.n	800289a <__aeabi_dsub+0x3c2>
 80026b8:	0008      	movs	r0, r1
 80026ba:	4338      	orrs	r0, r7
 80026bc:	d100      	bne.n	80026c0 <__aeabi_dsub+0x1e8>
 80026be:	e0c3      	b.n	8002848 <__aeabi_dsub+0x370>
 80026c0:	1e50      	subs	r0, r2, #1
 80026c2:	2a01      	cmp	r2, #1
 80026c4:	d100      	bne.n	80026c8 <__aeabi_dsub+0x1f0>
 80026c6:	e1a8      	b.n	8002a1a <__aeabi_dsub+0x542>
 80026c8:	4c59      	ldr	r4, [pc, #356]	; (8002830 <__aeabi_dsub+0x358>)
 80026ca:	42a2      	cmp	r2, r4
 80026cc:	d100      	bne.n	80026d0 <__aeabi_dsub+0x1f8>
 80026ce:	e087      	b.n	80027e0 <__aeabi_dsub+0x308>
 80026d0:	0002      	movs	r2, r0
 80026d2:	e736      	b.n	8002542 <__aeabi_dsub+0x6a>
 80026d4:	2201      	movs	r2, #1
 80026d6:	4056      	eors	r6, r2
 80026d8:	46b3      	mov	fp, r6
 80026da:	42b5      	cmp	r5, r6
 80026dc:	d000      	beq.n	80026e0 <__aeabi_dsub+0x208>
 80026de:	e721      	b.n	8002524 <__aeabi_dsub+0x4c>
 80026e0:	4a55      	ldr	r2, [pc, #340]	; (8002838 <__aeabi_dsub+0x360>)
 80026e2:	4442      	add	r2, r8
 80026e4:	2a00      	cmp	r2, #0
 80026e6:	d100      	bne.n	80026ea <__aeabi_dsub+0x212>
 80026e8:	e0b5      	b.n	8002856 <__aeabi_dsub+0x37e>
 80026ea:	4642      	mov	r2, r8
 80026ec:	4644      	mov	r4, r8
 80026ee:	1a82      	subs	r2, r0, r2
 80026f0:	2c00      	cmp	r4, #0
 80026f2:	d100      	bne.n	80026f6 <__aeabi_dsub+0x21e>
 80026f4:	e138      	b.n	8002968 <__aeabi_dsub+0x490>
 80026f6:	4e4e      	ldr	r6, [pc, #312]	; (8002830 <__aeabi_dsub+0x358>)
 80026f8:	42b0      	cmp	r0, r6
 80026fa:	d100      	bne.n	80026fe <__aeabi_dsub+0x226>
 80026fc:	e1de      	b.n	8002abc <__aeabi_dsub+0x5e4>
 80026fe:	2680      	movs	r6, #128	; 0x80
 8002700:	4664      	mov	r4, ip
 8002702:	0436      	lsls	r6, r6, #16
 8002704:	4334      	orrs	r4, r6
 8002706:	46a4      	mov	ip, r4
 8002708:	2a38      	cmp	r2, #56	; 0x38
 800270a:	dd00      	ble.n	800270e <__aeabi_dsub+0x236>
 800270c:	e196      	b.n	8002a3c <__aeabi_dsub+0x564>
 800270e:	2a1f      	cmp	r2, #31
 8002710:	dd00      	ble.n	8002714 <__aeabi_dsub+0x23c>
 8002712:	e224      	b.n	8002b5e <__aeabi_dsub+0x686>
 8002714:	2620      	movs	r6, #32
 8002716:	1ab4      	subs	r4, r6, r2
 8002718:	46a2      	mov	sl, r4
 800271a:	4664      	mov	r4, ip
 800271c:	4656      	mov	r6, sl
 800271e:	40b4      	lsls	r4, r6
 8002720:	46a1      	mov	r9, r4
 8002722:	001c      	movs	r4, r3
 8002724:	464e      	mov	r6, r9
 8002726:	40d4      	lsrs	r4, r2
 8002728:	4326      	orrs	r6, r4
 800272a:	0034      	movs	r4, r6
 800272c:	4656      	mov	r6, sl
 800272e:	40b3      	lsls	r3, r6
 8002730:	1e5e      	subs	r6, r3, #1
 8002732:	41b3      	sbcs	r3, r6
 8002734:	431c      	orrs	r4, r3
 8002736:	4663      	mov	r3, ip
 8002738:	40d3      	lsrs	r3, r2
 800273a:	18c9      	adds	r1, r1, r3
 800273c:	19e4      	adds	r4, r4, r7
 800273e:	42bc      	cmp	r4, r7
 8002740:	41bf      	sbcs	r7, r7
 8002742:	427f      	negs	r7, r7
 8002744:	46b9      	mov	r9, r7
 8002746:	4680      	mov	r8, r0
 8002748:	4489      	add	r9, r1
 800274a:	e0d8      	b.n	80028fe <__aeabi_dsub+0x426>
 800274c:	4640      	mov	r0, r8
 800274e:	4c3b      	ldr	r4, [pc, #236]	; (800283c <__aeabi_dsub+0x364>)
 8002750:	3001      	adds	r0, #1
 8002752:	4220      	tst	r0, r4
 8002754:	d000      	beq.n	8002758 <__aeabi_dsub+0x280>
 8002756:	e0b4      	b.n	80028c2 <__aeabi_dsub+0x3ea>
 8002758:	4640      	mov	r0, r8
 800275a:	2800      	cmp	r0, #0
 800275c:	d000      	beq.n	8002760 <__aeabi_dsub+0x288>
 800275e:	e144      	b.n	80029ea <__aeabi_dsub+0x512>
 8002760:	4660      	mov	r0, ip
 8002762:	4318      	orrs	r0, r3
 8002764:	d100      	bne.n	8002768 <__aeabi_dsub+0x290>
 8002766:	e190      	b.n	8002a8a <__aeabi_dsub+0x5b2>
 8002768:	0008      	movs	r0, r1
 800276a:	4338      	orrs	r0, r7
 800276c:	d000      	beq.n	8002770 <__aeabi_dsub+0x298>
 800276e:	e1aa      	b.n	8002ac6 <__aeabi_dsub+0x5ee>
 8002770:	4661      	mov	r1, ip
 8002772:	08db      	lsrs	r3, r3, #3
 8002774:	0749      	lsls	r1, r1, #29
 8002776:	430b      	orrs	r3, r1
 8002778:	4661      	mov	r1, ip
 800277a:	08cc      	lsrs	r4, r1, #3
 800277c:	e027      	b.n	80027ce <__aeabi_dsub+0x2f6>
 800277e:	0008      	movs	r0, r1
 8002780:	4338      	orrs	r0, r7
 8002782:	d061      	beq.n	8002848 <__aeabi_dsub+0x370>
 8002784:	1e50      	subs	r0, r2, #1
 8002786:	2a01      	cmp	r2, #1
 8002788:	d100      	bne.n	800278c <__aeabi_dsub+0x2b4>
 800278a:	e139      	b.n	8002a00 <__aeabi_dsub+0x528>
 800278c:	42a2      	cmp	r2, r4
 800278e:	d027      	beq.n	80027e0 <__aeabi_dsub+0x308>
 8002790:	0002      	movs	r2, r0
 8002792:	e75d      	b.n	8002650 <__aeabi_dsub+0x178>
 8002794:	0002      	movs	r2, r0
 8002796:	391f      	subs	r1, #31
 8002798:	40ca      	lsrs	r2, r1
 800279a:	0011      	movs	r1, r2
 800279c:	2b20      	cmp	r3, #32
 800279e:	d003      	beq.n	80027a8 <__aeabi_dsub+0x2d0>
 80027a0:	2240      	movs	r2, #64	; 0x40
 80027a2:	1ad3      	subs	r3, r2, r3
 80027a4:	4098      	lsls	r0, r3
 80027a6:	4304      	orrs	r4, r0
 80027a8:	1e63      	subs	r3, r4, #1
 80027aa:	419c      	sbcs	r4, r3
 80027ac:	2300      	movs	r3, #0
 80027ae:	4699      	mov	r9, r3
 80027b0:	4698      	mov	r8, r3
 80027b2:	430c      	orrs	r4, r1
 80027b4:	0763      	lsls	r3, r4, #29
 80027b6:	d000      	beq.n	80027ba <__aeabi_dsub+0x2e2>
 80027b8:	e712      	b.n	80025e0 <__aeabi_dsub+0x108>
 80027ba:	464b      	mov	r3, r9
 80027bc:	464a      	mov	r2, r9
 80027be:	08e4      	lsrs	r4, r4, #3
 80027c0:	075b      	lsls	r3, r3, #29
 80027c2:	4323      	orrs	r3, r4
 80027c4:	08d4      	lsrs	r4, r2, #3
 80027c6:	4642      	mov	r2, r8
 80027c8:	4919      	ldr	r1, [pc, #100]	; (8002830 <__aeabi_dsub+0x358>)
 80027ca:	428a      	cmp	r2, r1
 80027cc:	d00e      	beq.n	80027ec <__aeabi_dsub+0x314>
 80027ce:	0324      	lsls	r4, r4, #12
 80027d0:	0552      	lsls	r2, r2, #21
 80027d2:	0b24      	lsrs	r4, r4, #12
 80027d4:	0d52      	lsrs	r2, r2, #21
 80027d6:	e722      	b.n	800261e <__aeabi_dsub+0x146>
 80027d8:	000a      	movs	r2, r1
 80027da:	2400      	movs	r4, #0
 80027dc:	2300      	movs	r3, #0
 80027de:	e71e      	b.n	800261e <__aeabi_dsub+0x146>
 80027e0:	08db      	lsrs	r3, r3, #3
 80027e2:	4662      	mov	r2, ip
 80027e4:	0752      	lsls	r2, r2, #29
 80027e6:	4313      	orrs	r3, r2
 80027e8:	4662      	mov	r2, ip
 80027ea:	08d4      	lsrs	r4, r2, #3
 80027ec:	001a      	movs	r2, r3
 80027ee:	4322      	orrs	r2, r4
 80027f0:	d100      	bne.n	80027f4 <__aeabi_dsub+0x31c>
 80027f2:	e1fc      	b.n	8002bee <__aeabi_dsub+0x716>
 80027f4:	2280      	movs	r2, #128	; 0x80
 80027f6:	0312      	lsls	r2, r2, #12
 80027f8:	4314      	orrs	r4, r2
 80027fa:	0324      	lsls	r4, r4, #12
 80027fc:	4a0c      	ldr	r2, [pc, #48]	; (8002830 <__aeabi_dsub+0x358>)
 80027fe:	0b24      	lsrs	r4, r4, #12
 8002800:	e70d      	b.n	800261e <__aeabi_dsub+0x146>
 8002802:	0020      	movs	r0, r4
 8002804:	f000 fb74 	bl	8002ef0 <__clzsi2>
 8002808:	0001      	movs	r1, r0
 800280a:	3118      	adds	r1, #24
 800280c:	291f      	cmp	r1, #31
 800280e:	dc00      	bgt.n	8002812 <__aeabi_dsub+0x33a>
 8002810:	e6c4      	b.n	800259c <__aeabi_dsub+0xc4>
 8002812:	3808      	subs	r0, #8
 8002814:	4084      	lsls	r4, r0
 8002816:	4643      	mov	r3, r8
 8002818:	0020      	movs	r0, r4
 800281a:	2400      	movs	r4, #0
 800281c:	4588      	cmp	r8, r1
 800281e:	dc00      	bgt.n	8002822 <__aeabi_dsub+0x34a>
 8002820:	e6c8      	b.n	80025b4 <__aeabi_dsub+0xdc>
 8002822:	4a04      	ldr	r2, [pc, #16]	; (8002834 <__aeabi_dsub+0x35c>)
 8002824:	1a5b      	subs	r3, r3, r1
 8002826:	4010      	ands	r0, r2
 8002828:	4698      	mov	r8, r3
 800282a:	4681      	mov	r9, r0
 800282c:	e6d6      	b.n	80025dc <__aeabi_dsub+0x104>
 800282e:	46c0      	nop			; (mov r8, r8)
 8002830:	000007ff 	.word	0x000007ff
 8002834:	ff7fffff 	.word	0xff7fffff
 8002838:	fffff801 	.word	0xfffff801
 800283c:	000007fe 	.word	0x000007fe
 8002840:	430f      	orrs	r7, r1
 8002842:	1e7a      	subs	r2, r7, #1
 8002844:	4197      	sbcs	r7, r2
 8002846:	e691      	b.n	800256c <__aeabi_dsub+0x94>
 8002848:	4661      	mov	r1, ip
 800284a:	08db      	lsrs	r3, r3, #3
 800284c:	0749      	lsls	r1, r1, #29
 800284e:	430b      	orrs	r3, r1
 8002850:	4661      	mov	r1, ip
 8002852:	08cc      	lsrs	r4, r1, #3
 8002854:	e7b8      	b.n	80027c8 <__aeabi_dsub+0x2f0>
 8002856:	4640      	mov	r0, r8
 8002858:	4cd3      	ldr	r4, [pc, #844]	; (8002ba8 <__aeabi_dsub+0x6d0>)
 800285a:	3001      	adds	r0, #1
 800285c:	4220      	tst	r0, r4
 800285e:	d000      	beq.n	8002862 <__aeabi_dsub+0x38a>
 8002860:	e0a2      	b.n	80029a8 <__aeabi_dsub+0x4d0>
 8002862:	4640      	mov	r0, r8
 8002864:	2800      	cmp	r0, #0
 8002866:	d000      	beq.n	800286a <__aeabi_dsub+0x392>
 8002868:	e101      	b.n	8002a6e <__aeabi_dsub+0x596>
 800286a:	4660      	mov	r0, ip
 800286c:	4318      	orrs	r0, r3
 800286e:	d100      	bne.n	8002872 <__aeabi_dsub+0x39a>
 8002870:	e15e      	b.n	8002b30 <__aeabi_dsub+0x658>
 8002872:	0008      	movs	r0, r1
 8002874:	4338      	orrs	r0, r7
 8002876:	d000      	beq.n	800287a <__aeabi_dsub+0x3a2>
 8002878:	e15f      	b.n	8002b3a <__aeabi_dsub+0x662>
 800287a:	4661      	mov	r1, ip
 800287c:	08db      	lsrs	r3, r3, #3
 800287e:	0749      	lsls	r1, r1, #29
 8002880:	430b      	orrs	r3, r1
 8002882:	4661      	mov	r1, ip
 8002884:	08cc      	lsrs	r4, r1, #3
 8002886:	e7a2      	b.n	80027ce <__aeabi_dsub+0x2f6>
 8002888:	4dc8      	ldr	r5, [pc, #800]	; (8002bac <__aeabi_dsub+0x6d4>)
 800288a:	42a8      	cmp	r0, r5
 800288c:	d100      	bne.n	8002890 <__aeabi_dsub+0x3b8>
 800288e:	e0cf      	b.n	8002a30 <__aeabi_dsub+0x558>
 8002890:	2580      	movs	r5, #128	; 0x80
 8002892:	4664      	mov	r4, ip
 8002894:	042d      	lsls	r5, r5, #16
 8002896:	432c      	orrs	r4, r5
 8002898:	46a4      	mov	ip, r4
 800289a:	2a38      	cmp	r2, #56	; 0x38
 800289c:	dc56      	bgt.n	800294c <__aeabi_dsub+0x474>
 800289e:	2a1f      	cmp	r2, #31
 80028a0:	dd00      	ble.n	80028a4 <__aeabi_dsub+0x3cc>
 80028a2:	e0d1      	b.n	8002a48 <__aeabi_dsub+0x570>
 80028a4:	2520      	movs	r5, #32
 80028a6:	001e      	movs	r6, r3
 80028a8:	1aad      	subs	r5, r5, r2
 80028aa:	4664      	mov	r4, ip
 80028ac:	40ab      	lsls	r3, r5
 80028ae:	40ac      	lsls	r4, r5
 80028b0:	40d6      	lsrs	r6, r2
 80028b2:	1e5d      	subs	r5, r3, #1
 80028b4:	41ab      	sbcs	r3, r5
 80028b6:	4334      	orrs	r4, r6
 80028b8:	4323      	orrs	r3, r4
 80028ba:	4664      	mov	r4, ip
 80028bc:	40d4      	lsrs	r4, r2
 80028be:	1b09      	subs	r1, r1, r4
 80028c0:	e049      	b.n	8002956 <__aeabi_dsub+0x47e>
 80028c2:	4660      	mov	r0, ip
 80028c4:	1bdc      	subs	r4, r3, r7
 80028c6:	1a46      	subs	r6, r0, r1
 80028c8:	42a3      	cmp	r3, r4
 80028ca:	4180      	sbcs	r0, r0
 80028cc:	4240      	negs	r0, r0
 80028ce:	4681      	mov	r9, r0
 80028d0:	0030      	movs	r0, r6
 80028d2:	464e      	mov	r6, r9
 80028d4:	1b80      	subs	r0, r0, r6
 80028d6:	4681      	mov	r9, r0
 80028d8:	0200      	lsls	r0, r0, #8
 80028da:	d476      	bmi.n	80029ca <__aeabi_dsub+0x4f2>
 80028dc:	464b      	mov	r3, r9
 80028de:	4323      	orrs	r3, r4
 80028e0:	d000      	beq.n	80028e4 <__aeabi_dsub+0x40c>
 80028e2:	e652      	b.n	800258a <__aeabi_dsub+0xb2>
 80028e4:	2400      	movs	r4, #0
 80028e6:	2500      	movs	r5, #0
 80028e8:	e771      	b.n	80027ce <__aeabi_dsub+0x2f6>
 80028ea:	4339      	orrs	r1, r7
 80028ec:	000c      	movs	r4, r1
 80028ee:	1e62      	subs	r2, r4, #1
 80028f0:	4194      	sbcs	r4, r2
 80028f2:	18e4      	adds	r4, r4, r3
 80028f4:	429c      	cmp	r4, r3
 80028f6:	419b      	sbcs	r3, r3
 80028f8:	425b      	negs	r3, r3
 80028fa:	4463      	add	r3, ip
 80028fc:	4699      	mov	r9, r3
 80028fe:	464b      	mov	r3, r9
 8002900:	021b      	lsls	r3, r3, #8
 8002902:	d400      	bmi.n	8002906 <__aeabi_dsub+0x42e>
 8002904:	e756      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 8002906:	2301      	movs	r3, #1
 8002908:	469c      	mov	ip, r3
 800290a:	4ba8      	ldr	r3, [pc, #672]	; (8002bac <__aeabi_dsub+0x6d4>)
 800290c:	44e0      	add	r8, ip
 800290e:	4598      	cmp	r8, r3
 8002910:	d038      	beq.n	8002984 <__aeabi_dsub+0x4ac>
 8002912:	464b      	mov	r3, r9
 8002914:	48a6      	ldr	r0, [pc, #664]	; (8002bb0 <__aeabi_dsub+0x6d8>)
 8002916:	2201      	movs	r2, #1
 8002918:	4003      	ands	r3, r0
 800291a:	0018      	movs	r0, r3
 800291c:	0863      	lsrs	r3, r4, #1
 800291e:	4014      	ands	r4, r2
 8002920:	431c      	orrs	r4, r3
 8002922:	07c3      	lsls	r3, r0, #31
 8002924:	431c      	orrs	r4, r3
 8002926:	0843      	lsrs	r3, r0, #1
 8002928:	4699      	mov	r9, r3
 800292a:	e657      	b.n	80025dc <__aeabi_dsub+0x104>
 800292c:	0010      	movs	r0, r2
 800292e:	000e      	movs	r6, r1
 8002930:	3820      	subs	r0, #32
 8002932:	40c6      	lsrs	r6, r0
 8002934:	2a20      	cmp	r2, #32
 8002936:	d004      	beq.n	8002942 <__aeabi_dsub+0x46a>
 8002938:	2040      	movs	r0, #64	; 0x40
 800293a:	1a82      	subs	r2, r0, r2
 800293c:	4091      	lsls	r1, r2
 800293e:	430f      	orrs	r7, r1
 8002940:	46b9      	mov	r9, r7
 8002942:	464f      	mov	r7, r9
 8002944:	1e7a      	subs	r2, r7, #1
 8002946:	4197      	sbcs	r7, r2
 8002948:	4337      	orrs	r7, r6
 800294a:	e60f      	b.n	800256c <__aeabi_dsub+0x94>
 800294c:	4662      	mov	r2, ip
 800294e:	431a      	orrs	r2, r3
 8002950:	0013      	movs	r3, r2
 8002952:	1e5a      	subs	r2, r3, #1
 8002954:	4193      	sbcs	r3, r2
 8002956:	1afc      	subs	r4, r7, r3
 8002958:	42a7      	cmp	r7, r4
 800295a:	41bf      	sbcs	r7, r7
 800295c:	427f      	negs	r7, r7
 800295e:	1bcb      	subs	r3, r1, r7
 8002960:	4699      	mov	r9, r3
 8002962:	465d      	mov	r5, fp
 8002964:	4680      	mov	r8, r0
 8002966:	e608      	b.n	800257a <__aeabi_dsub+0xa2>
 8002968:	4666      	mov	r6, ip
 800296a:	431e      	orrs	r6, r3
 800296c:	d100      	bne.n	8002970 <__aeabi_dsub+0x498>
 800296e:	e0be      	b.n	8002aee <__aeabi_dsub+0x616>
 8002970:	1e56      	subs	r6, r2, #1
 8002972:	2a01      	cmp	r2, #1
 8002974:	d100      	bne.n	8002978 <__aeabi_dsub+0x4a0>
 8002976:	e109      	b.n	8002b8c <__aeabi_dsub+0x6b4>
 8002978:	4c8c      	ldr	r4, [pc, #560]	; (8002bac <__aeabi_dsub+0x6d4>)
 800297a:	42a2      	cmp	r2, r4
 800297c:	d100      	bne.n	8002980 <__aeabi_dsub+0x4a8>
 800297e:	e119      	b.n	8002bb4 <__aeabi_dsub+0x6dc>
 8002980:	0032      	movs	r2, r6
 8002982:	e6c1      	b.n	8002708 <__aeabi_dsub+0x230>
 8002984:	4642      	mov	r2, r8
 8002986:	2400      	movs	r4, #0
 8002988:	2300      	movs	r3, #0
 800298a:	e648      	b.n	800261e <__aeabi_dsub+0x146>
 800298c:	2020      	movs	r0, #32
 800298e:	000c      	movs	r4, r1
 8002990:	1a80      	subs	r0, r0, r2
 8002992:	003e      	movs	r6, r7
 8002994:	4087      	lsls	r7, r0
 8002996:	4084      	lsls	r4, r0
 8002998:	40d6      	lsrs	r6, r2
 800299a:	1e78      	subs	r0, r7, #1
 800299c:	4187      	sbcs	r7, r0
 800299e:	40d1      	lsrs	r1, r2
 80029a0:	4334      	orrs	r4, r6
 80029a2:	433c      	orrs	r4, r7
 80029a4:	448c      	add	ip, r1
 80029a6:	e7a4      	b.n	80028f2 <__aeabi_dsub+0x41a>
 80029a8:	4a80      	ldr	r2, [pc, #512]	; (8002bac <__aeabi_dsub+0x6d4>)
 80029aa:	4290      	cmp	r0, r2
 80029ac:	d100      	bne.n	80029b0 <__aeabi_dsub+0x4d8>
 80029ae:	e0e9      	b.n	8002b84 <__aeabi_dsub+0x6ac>
 80029b0:	19df      	adds	r7, r3, r7
 80029b2:	429f      	cmp	r7, r3
 80029b4:	419b      	sbcs	r3, r3
 80029b6:	4461      	add	r1, ip
 80029b8:	425b      	negs	r3, r3
 80029ba:	18c9      	adds	r1, r1, r3
 80029bc:	07cc      	lsls	r4, r1, #31
 80029be:	087f      	lsrs	r7, r7, #1
 80029c0:	084b      	lsrs	r3, r1, #1
 80029c2:	4699      	mov	r9, r3
 80029c4:	4680      	mov	r8, r0
 80029c6:	433c      	orrs	r4, r7
 80029c8:	e6f4      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 80029ca:	1afc      	subs	r4, r7, r3
 80029cc:	42a7      	cmp	r7, r4
 80029ce:	41bf      	sbcs	r7, r7
 80029d0:	4663      	mov	r3, ip
 80029d2:	427f      	negs	r7, r7
 80029d4:	1ac9      	subs	r1, r1, r3
 80029d6:	1bcb      	subs	r3, r1, r7
 80029d8:	4699      	mov	r9, r3
 80029da:	465d      	mov	r5, fp
 80029dc:	e5d5      	b.n	800258a <__aeabi_dsub+0xb2>
 80029de:	08ff      	lsrs	r7, r7, #3
 80029e0:	074b      	lsls	r3, r1, #29
 80029e2:	465d      	mov	r5, fp
 80029e4:	433b      	orrs	r3, r7
 80029e6:	08cc      	lsrs	r4, r1, #3
 80029e8:	e6ee      	b.n	80027c8 <__aeabi_dsub+0x2f0>
 80029ea:	4662      	mov	r2, ip
 80029ec:	431a      	orrs	r2, r3
 80029ee:	d000      	beq.n	80029f2 <__aeabi_dsub+0x51a>
 80029f0:	e082      	b.n	8002af8 <__aeabi_dsub+0x620>
 80029f2:	000b      	movs	r3, r1
 80029f4:	433b      	orrs	r3, r7
 80029f6:	d11b      	bne.n	8002a30 <__aeabi_dsub+0x558>
 80029f8:	2480      	movs	r4, #128	; 0x80
 80029fa:	2500      	movs	r5, #0
 80029fc:	0324      	lsls	r4, r4, #12
 80029fe:	e6f9      	b.n	80027f4 <__aeabi_dsub+0x31c>
 8002a00:	19dc      	adds	r4, r3, r7
 8002a02:	429c      	cmp	r4, r3
 8002a04:	419b      	sbcs	r3, r3
 8002a06:	4461      	add	r1, ip
 8002a08:	4689      	mov	r9, r1
 8002a0a:	425b      	negs	r3, r3
 8002a0c:	4499      	add	r9, r3
 8002a0e:	464b      	mov	r3, r9
 8002a10:	021b      	lsls	r3, r3, #8
 8002a12:	d444      	bmi.n	8002a9e <__aeabi_dsub+0x5c6>
 8002a14:	2301      	movs	r3, #1
 8002a16:	4698      	mov	r8, r3
 8002a18:	e6cc      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 8002a1a:	1bdc      	subs	r4, r3, r7
 8002a1c:	4662      	mov	r2, ip
 8002a1e:	42a3      	cmp	r3, r4
 8002a20:	419b      	sbcs	r3, r3
 8002a22:	1a51      	subs	r1, r2, r1
 8002a24:	425b      	negs	r3, r3
 8002a26:	1acb      	subs	r3, r1, r3
 8002a28:	4699      	mov	r9, r3
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	4698      	mov	r8, r3
 8002a2e:	e5a4      	b.n	800257a <__aeabi_dsub+0xa2>
 8002a30:	08ff      	lsrs	r7, r7, #3
 8002a32:	074b      	lsls	r3, r1, #29
 8002a34:	465d      	mov	r5, fp
 8002a36:	433b      	orrs	r3, r7
 8002a38:	08cc      	lsrs	r4, r1, #3
 8002a3a:	e6d7      	b.n	80027ec <__aeabi_dsub+0x314>
 8002a3c:	4662      	mov	r2, ip
 8002a3e:	431a      	orrs	r2, r3
 8002a40:	0014      	movs	r4, r2
 8002a42:	1e63      	subs	r3, r4, #1
 8002a44:	419c      	sbcs	r4, r3
 8002a46:	e679      	b.n	800273c <__aeabi_dsub+0x264>
 8002a48:	0015      	movs	r5, r2
 8002a4a:	4664      	mov	r4, ip
 8002a4c:	3d20      	subs	r5, #32
 8002a4e:	40ec      	lsrs	r4, r5
 8002a50:	46a0      	mov	r8, r4
 8002a52:	2a20      	cmp	r2, #32
 8002a54:	d005      	beq.n	8002a62 <__aeabi_dsub+0x58a>
 8002a56:	2540      	movs	r5, #64	; 0x40
 8002a58:	4664      	mov	r4, ip
 8002a5a:	1aaa      	subs	r2, r5, r2
 8002a5c:	4094      	lsls	r4, r2
 8002a5e:	4323      	orrs	r3, r4
 8002a60:	469a      	mov	sl, r3
 8002a62:	4654      	mov	r4, sl
 8002a64:	1e63      	subs	r3, r4, #1
 8002a66:	419c      	sbcs	r4, r3
 8002a68:	4643      	mov	r3, r8
 8002a6a:	4323      	orrs	r3, r4
 8002a6c:	e773      	b.n	8002956 <__aeabi_dsub+0x47e>
 8002a6e:	4662      	mov	r2, ip
 8002a70:	431a      	orrs	r2, r3
 8002a72:	d023      	beq.n	8002abc <__aeabi_dsub+0x5e4>
 8002a74:	000a      	movs	r2, r1
 8002a76:	433a      	orrs	r2, r7
 8002a78:	d000      	beq.n	8002a7c <__aeabi_dsub+0x5a4>
 8002a7a:	e0a0      	b.n	8002bbe <__aeabi_dsub+0x6e6>
 8002a7c:	4662      	mov	r2, ip
 8002a7e:	08db      	lsrs	r3, r3, #3
 8002a80:	0752      	lsls	r2, r2, #29
 8002a82:	4313      	orrs	r3, r2
 8002a84:	4662      	mov	r2, ip
 8002a86:	08d4      	lsrs	r4, r2, #3
 8002a88:	e6b0      	b.n	80027ec <__aeabi_dsub+0x314>
 8002a8a:	000b      	movs	r3, r1
 8002a8c:	433b      	orrs	r3, r7
 8002a8e:	d100      	bne.n	8002a92 <__aeabi_dsub+0x5ba>
 8002a90:	e728      	b.n	80028e4 <__aeabi_dsub+0x40c>
 8002a92:	08ff      	lsrs	r7, r7, #3
 8002a94:	074b      	lsls	r3, r1, #29
 8002a96:	465d      	mov	r5, fp
 8002a98:	433b      	orrs	r3, r7
 8002a9a:	08cc      	lsrs	r4, r1, #3
 8002a9c:	e697      	b.n	80027ce <__aeabi_dsub+0x2f6>
 8002a9e:	2302      	movs	r3, #2
 8002aa0:	4698      	mov	r8, r3
 8002aa2:	e736      	b.n	8002912 <__aeabi_dsub+0x43a>
 8002aa4:	1afc      	subs	r4, r7, r3
 8002aa6:	42a7      	cmp	r7, r4
 8002aa8:	41bf      	sbcs	r7, r7
 8002aaa:	4663      	mov	r3, ip
 8002aac:	427f      	negs	r7, r7
 8002aae:	1ac9      	subs	r1, r1, r3
 8002ab0:	1bcb      	subs	r3, r1, r7
 8002ab2:	4699      	mov	r9, r3
 8002ab4:	2301      	movs	r3, #1
 8002ab6:	465d      	mov	r5, fp
 8002ab8:	4698      	mov	r8, r3
 8002aba:	e55e      	b.n	800257a <__aeabi_dsub+0xa2>
 8002abc:	074b      	lsls	r3, r1, #29
 8002abe:	08ff      	lsrs	r7, r7, #3
 8002ac0:	433b      	orrs	r3, r7
 8002ac2:	08cc      	lsrs	r4, r1, #3
 8002ac4:	e692      	b.n	80027ec <__aeabi_dsub+0x314>
 8002ac6:	1bdc      	subs	r4, r3, r7
 8002ac8:	4660      	mov	r0, ip
 8002aca:	42a3      	cmp	r3, r4
 8002acc:	41b6      	sbcs	r6, r6
 8002ace:	1a40      	subs	r0, r0, r1
 8002ad0:	4276      	negs	r6, r6
 8002ad2:	1b80      	subs	r0, r0, r6
 8002ad4:	4681      	mov	r9, r0
 8002ad6:	0200      	lsls	r0, r0, #8
 8002ad8:	d560      	bpl.n	8002b9c <__aeabi_dsub+0x6c4>
 8002ada:	1afc      	subs	r4, r7, r3
 8002adc:	42a7      	cmp	r7, r4
 8002ade:	41bf      	sbcs	r7, r7
 8002ae0:	4663      	mov	r3, ip
 8002ae2:	427f      	negs	r7, r7
 8002ae4:	1ac9      	subs	r1, r1, r3
 8002ae6:	1bcb      	subs	r3, r1, r7
 8002ae8:	4699      	mov	r9, r3
 8002aea:	465d      	mov	r5, fp
 8002aec:	e576      	b.n	80025dc <__aeabi_dsub+0x104>
 8002aee:	08ff      	lsrs	r7, r7, #3
 8002af0:	074b      	lsls	r3, r1, #29
 8002af2:	433b      	orrs	r3, r7
 8002af4:	08cc      	lsrs	r4, r1, #3
 8002af6:	e667      	b.n	80027c8 <__aeabi_dsub+0x2f0>
 8002af8:	000a      	movs	r2, r1
 8002afa:	08db      	lsrs	r3, r3, #3
 8002afc:	433a      	orrs	r2, r7
 8002afe:	d100      	bne.n	8002b02 <__aeabi_dsub+0x62a>
 8002b00:	e66f      	b.n	80027e2 <__aeabi_dsub+0x30a>
 8002b02:	4662      	mov	r2, ip
 8002b04:	0752      	lsls	r2, r2, #29
 8002b06:	4313      	orrs	r3, r2
 8002b08:	4662      	mov	r2, ip
 8002b0a:	08d4      	lsrs	r4, r2, #3
 8002b0c:	2280      	movs	r2, #128	; 0x80
 8002b0e:	0312      	lsls	r2, r2, #12
 8002b10:	4214      	tst	r4, r2
 8002b12:	d007      	beq.n	8002b24 <__aeabi_dsub+0x64c>
 8002b14:	08c8      	lsrs	r0, r1, #3
 8002b16:	4210      	tst	r0, r2
 8002b18:	d104      	bne.n	8002b24 <__aeabi_dsub+0x64c>
 8002b1a:	465d      	mov	r5, fp
 8002b1c:	0004      	movs	r4, r0
 8002b1e:	08fb      	lsrs	r3, r7, #3
 8002b20:	0749      	lsls	r1, r1, #29
 8002b22:	430b      	orrs	r3, r1
 8002b24:	0f5a      	lsrs	r2, r3, #29
 8002b26:	00db      	lsls	r3, r3, #3
 8002b28:	08db      	lsrs	r3, r3, #3
 8002b2a:	0752      	lsls	r2, r2, #29
 8002b2c:	4313      	orrs	r3, r2
 8002b2e:	e65d      	b.n	80027ec <__aeabi_dsub+0x314>
 8002b30:	074b      	lsls	r3, r1, #29
 8002b32:	08ff      	lsrs	r7, r7, #3
 8002b34:	433b      	orrs	r3, r7
 8002b36:	08cc      	lsrs	r4, r1, #3
 8002b38:	e649      	b.n	80027ce <__aeabi_dsub+0x2f6>
 8002b3a:	19dc      	adds	r4, r3, r7
 8002b3c:	429c      	cmp	r4, r3
 8002b3e:	419b      	sbcs	r3, r3
 8002b40:	4461      	add	r1, ip
 8002b42:	4689      	mov	r9, r1
 8002b44:	425b      	negs	r3, r3
 8002b46:	4499      	add	r9, r3
 8002b48:	464b      	mov	r3, r9
 8002b4a:	021b      	lsls	r3, r3, #8
 8002b4c:	d400      	bmi.n	8002b50 <__aeabi_dsub+0x678>
 8002b4e:	e631      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 8002b50:	464a      	mov	r2, r9
 8002b52:	4b17      	ldr	r3, [pc, #92]	; (8002bb0 <__aeabi_dsub+0x6d8>)
 8002b54:	401a      	ands	r2, r3
 8002b56:	2301      	movs	r3, #1
 8002b58:	4691      	mov	r9, r2
 8002b5a:	4698      	mov	r8, r3
 8002b5c:	e62a      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 8002b5e:	0016      	movs	r6, r2
 8002b60:	4664      	mov	r4, ip
 8002b62:	3e20      	subs	r6, #32
 8002b64:	40f4      	lsrs	r4, r6
 8002b66:	46a0      	mov	r8, r4
 8002b68:	2a20      	cmp	r2, #32
 8002b6a:	d005      	beq.n	8002b78 <__aeabi_dsub+0x6a0>
 8002b6c:	2640      	movs	r6, #64	; 0x40
 8002b6e:	4664      	mov	r4, ip
 8002b70:	1ab2      	subs	r2, r6, r2
 8002b72:	4094      	lsls	r4, r2
 8002b74:	4323      	orrs	r3, r4
 8002b76:	469a      	mov	sl, r3
 8002b78:	4654      	mov	r4, sl
 8002b7a:	1e63      	subs	r3, r4, #1
 8002b7c:	419c      	sbcs	r4, r3
 8002b7e:	4643      	mov	r3, r8
 8002b80:	431c      	orrs	r4, r3
 8002b82:	e5db      	b.n	800273c <__aeabi_dsub+0x264>
 8002b84:	0002      	movs	r2, r0
 8002b86:	2400      	movs	r4, #0
 8002b88:	2300      	movs	r3, #0
 8002b8a:	e548      	b.n	800261e <__aeabi_dsub+0x146>
 8002b8c:	19dc      	adds	r4, r3, r7
 8002b8e:	42bc      	cmp	r4, r7
 8002b90:	41bf      	sbcs	r7, r7
 8002b92:	4461      	add	r1, ip
 8002b94:	4689      	mov	r9, r1
 8002b96:	427f      	negs	r7, r7
 8002b98:	44b9      	add	r9, r7
 8002b9a:	e738      	b.n	8002a0e <__aeabi_dsub+0x536>
 8002b9c:	464b      	mov	r3, r9
 8002b9e:	4323      	orrs	r3, r4
 8002ba0:	d100      	bne.n	8002ba4 <__aeabi_dsub+0x6cc>
 8002ba2:	e69f      	b.n	80028e4 <__aeabi_dsub+0x40c>
 8002ba4:	e606      	b.n	80027b4 <__aeabi_dsub+0x2dc>
 8002ba6:	46c0      	nop			; (mov r8, r8)
 8002ba8:	000007fe 	.word	0x000007fe
 8002bac:	000007ff 	.word	0x000007ff
 8002bb0:	ff7fffff 	.word	0xff7fffff
 8002bb4:	08ff      	lsrs	r7, r7, #3
 8002bb6:	074b      	lsls	r3, r1, #29
 8002bb8:	433b      	orrs	r3, r7
 8002bba:	08cc      	lsrs	r4, r1, #3
 8002bbc:	e616      	b.n	80027ec <__aeabi_dsub+0x314>
 8002bbe:	4662      	mov	r2, ip
 8002bc0:	08db      	lsrs	r3, r3, #3
 8002bc2:	0752      	lsls	r2, r2, #29
 8002bc4:	4313      	orrs	r3, r2
 8002bc6:	4662      	mov	r2, ip
 8002bc8:	08d4      	lsrs	r4, r2, #3
 8002bca:	2280      	movs	r2, #128	; 0x80
 8002bcc:	0312      	lsls	r2, r2, #12
 8002bce:	4214      	tst	r4, r2
 8002bd0:	d007      	beq.n	8002be2 <__aeabi_dsub+0x70a>
 8002bd2:	08c8      	lsrs	r0, r1, #3
 8002bd4:	4210      	tst	r0, r2
 8002bd6:	d104      	bne.n	8002be2 <__aeabi_dsub+0x70a>
 8002bd8:	465d      	mov	r5, fp
 8002bda:	0004      	movs	r4, r0
 8002bdc:	08fb      	lsrs	r3, r7, #3
 8002bde:	0749      	lsls	r1, r1, #29
 8002be0:	430b      	orrs	r3, r1
 8002be2:	0f5a      	lsrs	r2, r3, #29
 8002be4:	00db      	lsls	r3, r3, #3
 8002be6:	0752      	lsls	r2, r2, #29
 8002be8:	08db      	lsrs	r3, r3, #3
 8002bea:	4313      	orrs	r3, r2
 8002bec:	e5fe      	b.n	80027ec <__aeabi_dsub+0x314>
 8002bee:	2300      	movs	r3, #0
 8002bf0:	4a01      	ldr	r2, [pc, #4]	; (8002bf8 <__aeabi_dsub+0x720>)
 8002bf2:	001c      	movs	r4, r3
 8002bf4:	e513      	b.n	800261e <__aeabi_dsub+0x146>
 8002bf6:	46c0      	nop			; (mov r8, r8)
 8002bf8:	000007ff 	.word	0x000007ff

08002bfc <__aeabi_dcmpun>:
 8002bfc:	b570      	push	{r4, r5, r6, lr}
 8002bfe:	0005      	movs	r5, r0
 8002c00:	480c      	ldr	r0, [pc, #48]	; (8002c34 <__aeabi_dcmpun+0x38>)
 8002c02:	031c      	lsls	r4, r3, #12
 8002c04:	0016      	movs	r6, r2
 8002c06:	005b      	lsls	r3, r3, #1
 8002c08:	030a      	lsls	r2, r1, #12
 8002c0a:	0049      	lsls	r1, r1, #1
 8002c0c:	0b12      	lsrs	r2, r2, #12
 8002c0e:	0d49      	lsrs	r1, r1, #21
 8002c10:	0b24      	lsrs	r4, r4, #12
 8002c12:	0d5b      	lsrs	r3, r3, #21
 8002c14:	4281      	cmp	r1, r0
 8002c16:	d008      	beq.n	8002c2a <__aeabi_dcmpun+0x2e>
 8002c18:	4a06      	ldr	r2, [pc, #24]	; (8002c34 <__aeabi_dcmpun+0x38>)
 8002c1a:	2000      	movs	r0, #0
 8002c1c:	4293      	cmp	r3, r2
 8002c1e:	d103      	bne.n	8002c28 <__aeabi_dcmpun+0x2c>
 8002c20:	0020      	movs	r0, r4
 8002c22:	4330      	orrs	r0, r6
 8002c24:	1e43      	subs	r3, r0, #1
 8002c26:	4198      	sbcs	r0, r3
 8002c28:	bd70      	pop	{r4, r5, r6, pc}
 8002c2a:	2001      	movs	r0, #1
 8002c2c:	432a      	orrs	r2, r5
 8002c2e:	d1fb      	bne.n	8002c28 <__aeabi_dcmpun+0x2c>
 8002c30:	e7f2      	b.n	8002c18 <__aeabi_dcmpun+0x1c>
 8002c32:	46c0      	nop			; (mov r8, r8)
 8002c34:	000007ff 	.word	0x000007ff

08002c38 <__aeabi_d2iz>:
 8002c38:	000a      	movs	r2, r1
 8002c3a:	b530      	push	{r4, r5, lr}
 8002c3c:	4c13      	ldr	r4, [pc, #76]	; (8002c8c <__aeabi_d2iz+0x54>)
 8002c3e:	0053      	lsls	r3, r2, #1
 8002c40:	0309      	lsls	r1, r1, #12
 8002c42:	0005      	movs	r5, r0
 8002c44:	0b09      	lsrs	r1, r1, #12
 8002c46:	2000      	movs	r0, #0
 8002c48:	0d5b      	lsrs	r3, r3, #21
 8002c4a:	0fd2      	lsrs	r2, r2, #31
 8002c4c:	42a3      	cmp	r3, r4
 8002c4e:	dd04      	ble.n	8002c5a <__aeabi_d2iz+0x22>
 8002c50:	480f      	ldr	r0, [pc, #60]	; (8002c90 <__aeabi_d2iz+0x58>)
 8002c52:	4283      	cmp	r3, r0
 8002c54:	dd02      	ble.n	8002c5c <__aeabi_d2iz+0x24>
 8002c56:	4b0f      	ldr	r3, [pc, #60]	; (8002c94 <__aeabi_d2iz+0x5c>)
 8002c58:	18d0      	adds	r0, r2, r3
 8002c5a:	bd30      	pop	{r4, r5, pc}
 8002c5c:	2080      	movs	r0, #128	; 0x80
 8002c5e:	0340      	lsls	r0, r0, #13
 8002c60:	4301      	orrs	r1, r0
 8002c62:	480d      	ldr	r0, [pc, #52]	; (8002c98 <__aeabi_d2iz+0x60>)
 8002c64:	1ac0      	subs	r0, r0, r3
 8002c66:	281f      	cmp	r0, #31
 8002c68:	dd08      	ble.n	8002c7c <__aeabi_d2iz+0x44>
 8002c6a:	480c      	ldr	r0, [pc, #48]	; (8002c9c <__aeabi_d2iz+0x64>)
 8002c6c:	1ac3      	subs	r3, r0, r3
 8002c6e:	40d9      	lsrs	r1, r3
 8002c70:	000b      	movs	r3, r1
 8002c72:	4258      	negs	r0, r3
 8002c74:	2a00      	cmp	r2, #0
 8002c76:	d1f0      	bne.n	8002c5a <__aeabi_d2iz+0x22>
 8002c78:	0018      	movs	r0, r3
 8002c7a:	e7ee      	b.n	8002c5a <__aeabi_d2iz+0x22>
 8002c7c:	4c08      	ldr	r4, [pc, #32]	; (8002ca0 <__aeabi_d2iz+0x68>)
 8002c7e:	40c5      	lsrs	r5, r0
 8002c80:	46a4      	mov	ip, r4
 8002c82:	4463      	add	r3, ip
 8002c84:	4099      	lsls	r1, r3
 8002c86:	000b      	movs	r3, r1
 8002c88:	432b      	orrs	r3, r5
 8002c8a:	e7f2      	b.n	8002c72 <__aeabi_d2iz+0x3a>
 8002c8c:	000003fe 	.word	0x000003fe
 8002c90:	0000041d 	.word	0x0000041d
 8002c94:	7fffffff 	.word	0x7fffffff
 8002c98:	00000433 	.word	0x00000433
 8002c9c:	00000413 	.word	0x00000413
 8002ca0:	fffffbed 	.word	0xfffffbed

08002ca4 <__aeabi_i2d>:
 8002ca4:	b570      	push	{r4, r5, r6, lr}
 8002ca6:	2800      	cmp	r0, #0
 8002ca8:	d016      	beq.n	8002cd8 <__aeabi_i2d+0x34>
 8002caa:	17c3      	asrs	r3, r0, #31
 8002cac:	18c5      	adds	r5, r0, r3
 8002cae:	405d      	eors	r5, r3
 8002cb0:	0fc4      	lsrs	r4, r0, #31
 8002cb2:	0028      	movs	r0, r5
 8002cb4:	f000 f91c 	bl	8002ef0 <__clzsi2>
 8002cb8:	4a11      	ldr	r2, [pc, #68]	; (8002d00 <__aeabi_i2d+0x5c>)
 8002cba:	1a12      	subs	r2, r2, r0
 8002cbc:	280a      	cmp	r0, #10
 8002cbe:	dc16      	bgt.n	8002cee <__aeabi_i2d+0x4a>
 8002cc0:	0003      	movs	r3, r0
 8002cc2:	002e      	movs	r6, r5
 8002cc4:	3315      	adds	r3, #21
 8002cc6:	409e      	lsls	r6, r3
 8002cc8:	230b      	movs	r3, #11
 8002cca:	1a18      	subs	r0, r3, r0
 8002ccc:	40c5      	lsrs	r5, r0
 8002cce:	0552      	lsls	r2, r2, #21
 8002cd0:	032d      	lsls	r5, r5, #12
 8002cd2:	0b2d      	lsrs	r5, r5, #12
 8002cd4:	0d53      	lsrs	r3, r2, #21
 8002cd6:	e003      	b.n	8002ce0 <__aeabi_i2d+0x3c>
 8002cd8:	2400      	movs	r4, #0
 8002cda:	2300      	movs	r3, #0
 8002cdc:	2500      	movs	r5, #0
 8002cde:	2600      	movs	r6, #0
 8002ce0:	051b      	lsls	r3, r3, #20
 8002ce2:	432b      	orrs	r3, r5
 8002ce4:	07e4      	lsls	r4, r4, #31
 8002ce6:	4323      	orrs	r3, r4
 8002ce8:	0030      	movs	r0, r6
 8002cea:	0019      	movs	r1, r3
 8002cec:	bd70      	pop	{r4, r5, r6, pc}
 8002cee:	380b      	subs	r0, #11
 8002cf0:	4085      	lsls	r5, r0
 8002cf2:	0552      	lsls	r2, r2, #21
 8002cf4:	032d      	lsls	r5, r5, #12
 8002cf6:	2600      	movs	r6, #0
 8002cf8:	0b2d      	lsrs	r5, r5, #12
 8002cfa:	0d53      	lsrs	r3, r2, #21
 8002cfc:	e7f0      	b.n	8002ce0 <__aeabi_i2d+0x3c>
 8002cfe:	46c0      	nop			; (mov r8, r8)
 8002d00:	0000041e 	.word	0x0000041e

08002d04 <__aeabi_ui2d>:
 8002d04:	b510      	push	{r4, lr}
 8002d06:	1e04      	subs	r4, r0, #0
 8002d08:	d010      	beq.n	8002d2c <__aeabi_ui2d+0x28>
 8002d0a:	f000 f8f1 	bl	8002ef0 <__clzsi2>
 8002d0e:	4b0f      	ldr	r3, [pc, #60]	; (8002d4c <__aeabi_ui2d+0x48>)
 8002d10:	1a1b      	subs	r3, r3, r0
 8002d12:	280a      	cmp	r0, #10
 8002d14:	dc11      	bgt.n	8002d3a <__aeabi_ui2d+0x36>
 8002d16:	220b      	movs	r2, #11
 8002d18:	0021      	movs	r1, r4
 8002d1a:	1a12      	subs	r2, r2, r0
 8002d1c:	40d1      	lsrs	r1, r2
 8002d1e:	3015      	adds	r0, #21
 8002d20:	030a      	lsls	r2, r1, #12
 8002d22:	055b      	lsls	r3, r3, #21
 8002d24:	4084      	lsls	r4, r0
 8002d26:	0b12      	lsrs	r2, r2, #12
 8002d28:	0d5b      	lsrs	r3, r3, #21
 8002d2a:	e001      	b.n	8002d30 <__aeabi_ui2d+0x2c>
 8002d2c:	2300      	movs	r3, #0
 8002d2e:	2200      	movs	r2, #0
 8002d30:	051b      	lsls	r3, r3, #20
 8002d32:	4313      	orrs	r3, r2
 8002d34:	0020      	movs	r0, r4
 8002d36:	0019      	movs	r1, r3
 8002d38:	bd10      	pop	{r4, pc}
 8002d3a:	0022      	movs	r2, r4
 8002d3c:	380b      	subs	r0, #11
 8002d3e:	4082      	lsls	r2, r0
 8002d40:	055b      	lsls	r3, r3, #21
 8002d42:	0312      	lsls	r2, r2, #12
 8002d44:	2400      	movs	r4, #0
 8002d46:	0b12      	lsrs	r2, r2, #12
 8002d48:	0d5b      	lsrs	r3, r3, #21
 8002d4a:	e7f1      	b.n	8002d30 <__aeabi_ui2d+0x2c>
 8002d4c:	0000041e 	.word	0x0000041e

08002d50 <__aeabi_f2d>:
 8002d50:	b570      	push	{r4, r5, r6, lr}
 8002d52:	0043      	lsls	r3, r0, #1
 8002d54:	0246      	lsls	r6, r0, #9
 8002d56:	0fc4      	lsrs	r4, r0, #31
 8002d58:	20fe      	movs	r0, #254	; 0xfe
 8002d5a:	0e1b      	lsrs	r3, r3, #24
 8002d5c:	1c59      	adds	r1, r3, #1
 8002d5e:	0a75      	lsrs	r5, r6, #9
 8002d60:	4208      	tst	r0, r1
 8002d62:	d00c      	beq.n	8002d7e <__aeabi_f2d+0x2e>
 8002d64:	22e0      	movs	r2, #224	; 0xe0
 8002d66:	0092      	lsls	r2, r2, #2
 8002d68:	4694      	mov	ip, r2
 8002d6a:	076d      	lsls	r5, r5, #29
 8002d6c:	0b36      	lsrs	r6, r6, #12
 8002d6e:	4463      	add	r3, ip
 8002d70:	051b      	lsls	r3, r3, #20
 8002d72:	4333      	orrs	r3, r6
 8002d74:	07e4      	lsls	r4, r4, #31
 8002d76:	4323      	orrs	r3, r4
 8002d78:	0028      	movs	r0, r5
 8002d7a:	0019      	movs	r1, r3
 8002d7c:	bd70      	pop	{r4, r5, r6, pc}
 8002d7e:	2b00      	cmp	r3, #0
 8002d80:	d114      	bne.n	8002dac <__aeabi_f2d+0x5c>
 8002d82:	2d00      	cmp	r5, #0
 8002d84:	d01b      	beq.n	8002dbe <__aeabi_f2d+0x6e>
 8002d86:	0028      	movs	r0, r5
 8002d88:	f000 f8b2 	bl	8002ef0 <__clzsi2>
 8002d8c:	280a      	cmp	r0, #10
 8002d8e:	dc1c      	bgt.n	8002dca <__aeabi_f2d+0x7a>
 8002d90:	230b      	movs	r3, #11
 8002d92:	002e      	movs	r6, r5
 8002d94:	1a1b      	subs	r3, r3, r0
 8002d96:	40de      	lsrs	r6, r3
 8002d98:	0003      	movs	r3, r0
 8002d9a:	3315      	adds	r3, #21
 8002d9c:	409d      	lsls	r5, r3
 8002d9e:	4a0e      	ldr	r2, [pc, #56]	; (8002dd8 <__aeabi_f2d+0x88>)
 8002da0:	0336      	lsls	r6, r6, #12
 8002da2:	1a12      	subs	r2, r2, r0
 8002da4:	0552      	lsls	r2, r2, #21
 8002da6:	0b36      	lsrs	r6, r6, #12
 8002da8:	0d53      	lsrs	r3, r2, #21
 8002daa:	e7e1      	b.n	8002d70 <__aeabi_f2d+0x20>
 8002dac:	2d00      	cmp	r5, #0
 8002dae:	d009      	beq.n	8002dc4 <__aeabi_f2d+0x74>
 8002db0:	2280      	movs	r2, #128	; 0x80
 8002db2:	0b36      	lsrs	r6, r6, #12
 8002db4:	0312      	lsls	r2, r2, #12
 8002db6:	4b09      	ldr	r3, [pc, #36]	; (8002ddc <__aeabi_f2d+0x8c>)
 8002db8:	076d      	lsls	r5, r5, #29
 8002dba:	4316      	orrs	r6, r2
 8002dbc:	e7d8      	b.n	8002d70 <__aeabi_f2d+0x20>
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	2600      	movs	r6, #0
 8002dc2:	e7d5      	b.n	8002d70 <__aeabi_f2d+0x20>
 8002dc4:	2600      	movs	r6, #0
 8002dc6:	4b05      	ldr	r3, [pc, #20]	; (8002ddc <__aeabi_f2d+0x8c>)
 8002dc8:	e7d2      	b.n	8002d70 <__aeabi_f2d+0x20>
 8002dca:	0003      	movs	r3, r0
 8002dcc:	3b0b      	subs	r3, #11
 8002dce:	409d      	lsls	r5, r3
 8002dd0:	002e      	movs	r6, r5
 8002dd2:	2500      	movs	r5, #0
 8002dd4:	e7e3      	b.n	8002d9e <__aeabi_f2d+0x4e>
 8002dd6:	46c0      	nop			; (mov r8, r8)
 8002dd8:	00000389 	.word	0x00000389
 8002ddc:	000007ff 	.word	0x000007ff

08002de0 <__aeabi_d2f>:
 8002de0:	0002      	movs	r2, r0
 8002de2:	004b      	lsls	r3, r1, #1
 8002de4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002de6:	0d5b      	lsrs	r3, r3, #21
 8002de8:	030c      	lsls	r4, r1, #12
 8002dea:	4e3d      	ldr	r6, [pc, #244]	; (8002ee0 <__aeabi_d2f+0x100>)
 8002dec:	0a64      	lsrs	r4, r4, #9
 8002dee:	0f40      	lsrs	r0, r0, #29
 8002df0:	1c5f      	adds	r7, r3, #1
 8002df2:	0fc9      	lsrs	r1, r1, #31
 8002df4:	4304      	orrs	r4, r0
 8002df6:	00d5      	lsls	r5, r2, #3
 8002df8:	4237      	tst	r7, r6
 8002dfa:	d00a      	beq.n	8002e12 <__aeabi_d2f+0x32>
 8002dfc:	4839      	ldr	r0, [pc, #228]	; (8002ee4 <__aeabi_d2f+0x104>)
 8002dfe:	181e      	adds	r6, r3, r0
 8002e00:	2efe      	cmp	r6, #254	; 0xfe
 8002e02:	dd16      	ble.n	8002e32 <__aeabi_d2f+0x52>
 8002e04:	20ff      	movs	r0, #255	; 0xff
 8002e06:	2400      	movs	r4, #0
 8002e08:	05c0      	lsls	r0, r0, #23
 8002e0a:	4320      	orrs	r0, r4
 8002e0c:	07c9      	lsls	r1, r1, #31
 8002e0e:	4308      	orrs	r0, r1
 8002e10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e12:	2b00      	cmp	r3, #0
 8002e14:	d106      	bne.n	8002e24 <__aeabi_d2f+0x44>
 8002e16:	432c      	orrs	r4, r5
 8002e18:	d026      	beq.n	8002e68 <__aeabi_d2f+0x88>
 8002e1a:	2205      	movs	r2, #5
 8002e1c:	0192      	lsls	r2, r2, #6
 8002e1e:	0a54      	lsrs	r4, r2, #9
 8002e20:	b2d8      	uxtb	r0, r3
 8002e22:	e7f1      	b.n	8002e08 <__aeabi_d2f+0x28>
 8002e24:	4325      	orrs	r5, r4
 8002e26:	d0ed      	beq.n	8002e04 <__aeabi_d2f+0x24>
 8002e28:	2080      	movs	r0, #128	; 0x80
 8002e2a:	03c0      	lsls	r0, r0, #15
 8002e2c:	4304      	orrs	r4, r0
 8002e2e:	20ff      	movs	r0, #255	; 0xff
 8002e30:	e7ea      	b.n	8002e08 <__aeabi_d2f+0x28>
 8002e32:	2e00      	cmp	r6, #0
 8002e34:	dd1b      	ble.n	8002e6e <__aeabi_d2f+0x8e>
 8002e36:	0192      	lsls	r2, r2, #6
 8002e38:	1e53      	subs	r3, r2, #1
 8002e3a:	419a      	sbcs	r2, r3
 8002e3c:	00e4      	lsls	r4, r4, #3
 8002e3e:	0f6d      	lsrs	r5, r5, #29
 8002e40:	4322      	orrs	r2, r4
 8002e42:	432a      	orrs	r2, r5
 8002e44:	0753      	lsls	r3, r2, #29
 8002e46:	d048      	beq.n	8002eda <__aeabi_d2f+0xfa>
 8002e48:	230f      	movs	r3, #15
 8002e4a:	4013      	ands	r3, r2
 8002e4c:	2b04      	cmp	r3, #4
 8002e4e:	d000      	beq.n	8002e52 <__aeabi_d2f+0x72>
 8002e50:	3204      	adds	r2, #4
 8002e52:	2380      	movs	r3, #128	; 0x80
 8002e54:	04db      	lsls	r3, r3, #19
 8002e56:	4013      	ands	r3, r2
 8002e58:	d03f      	beq.n	8002eda <__aeabi_d2f+0xfa>
 8002e5a:	1c70      	adds	r0, r6, #1
 8002e5c:	2efe      	cmp	r6, #254	; 0xfe
 8002e5e:	d0d1      	beq.n	8002e04 <__aeabi_d2f+0x24>
 8002e60:	0192      	lsls	r2, r2, #6
 8002e62:	0a54      	lsrs	r4, r2, #9
 8002e64:	b2c0      	uxtb	r0, r0
 8002e66:	e7cf      	b.n	8002e08 <__aeabi_d2f+0x28>
 8002e68:	2000      	movs	r0, #0
 8002e6a:	2400      	movs	r4, #0
 8002e6c:	e7cc      	b.n	8002e08 <__aeabi_d2f+0x28>
 8002e6e:	0032      	movs	r2, r6
 8002e70:	3217      	adds	r2, #23
 8002e72:	db22      	blt.n	8002eba <__aeabi_d2f+0xda>
 8002e74:	2080      	movs	r0, #128	; 0x80
 8002e76:	0400      	lsls	r0, r0, #16
 8002e78:	4320      	orrs	r0, r4
 8002e7a:	241e      	movs	r4, #30
 8002e7c:	1ba4      	subs	r4, r4, r6
 8002e7e:	2c1f      	cmp	r4, #31
 8002e80:	dd1d      	ble.n	8002ebe <__aeabi_d2f+0xde>
 8002e82:	2202      	movs	r2, #2
 8002e84:	4252      	negs	r2, r2
 8002e86:	1b96      	subs	r6, r2, r6
 8002e88:	0002      	movs	r2, r0
 8002e8a:	40f2      	lsrs	r2, r6
 8002e8c:	0016      	movs	r6, r2
 8002e8e:	2c20      	cmp	r4, #32
 8002e90:	d004      	beq.n	8002e9c <__aeabi_d2f+0xbc>
 8002e92:	4a15      	ldr	r2, [pc, #84]	; (8002ee8 <__aeabi_d2f+0x108>)
 8002e94:	4694      	mov	ip, r2
 8002e96:	4463      	add	r3, ip
 8002e98:	4098      	lsls	r0, r3
 8002e9a:	4305      	orrs	r5, r0
 8002e9c:	002a      	movs	r2, r5
 8002e9e:	1e53      	subs	r3, r2, #1
 8002ea0:	419a      	sbcs	r2, r3
 8002ea2:	4332      	orrs	r2, r6
 8002ea4:	2600      	movs	r6, #0
 8002ea6:	0753      	lsls	r3, r2, #29
 8002ea8:	d1ce      	bne.n	8002e48 <__aeabi_d2f+0x68>
 8002eaa:	2480      	movs	r4, #128	; 0x80
 8002eac:	0013      	movs	r3, r2
 8002eae:	04e4      	lsls	r4, r4, #19
 8002eb0:	2001      	movs	r0, #1
 8002eb2:	4023      	ands	r3, r4
 8002eb4:	4222      	tst	r2, r4
 8002eb6:	d1d3      	bne.n	8002e60 <__aeabi_d2f+0x80>
 8002eb8:	e7b0      	b.n	8002e1c <__aeabi_d2f+0x3c>
 8002eba:	2300      	movs	r3, #0
 8002ebc:	e7ad      	b.n	8002e1a <__aeabi_d2f+0x3a>
 8002ebe:	4a0b      	ldr	r2, [pc, #44]	; (8002eec <__aeabi_d2f+0x10c>)
 8002ec0:	4694      	mov	ip, r2
 8002ec2:	002a      	movs	r2, r5
 8002ec4:	40e2      	lsrs	r2, r4
 8002ec6:	0014      	movs	r4, r2
 8002ec8:	002a      	movs	r2, r5
 8002eca:	4463      	add	r3, ip
 8002ecc:	409a      	lsls	r2, r3
 8002ece:	4098      	lsls	r0, r3
 8002ed0:	1e55      	subs	r5, r2, #1
 8002ed2:	41aa      	sbcs	r2, r5
 8002ed4:	4302      	orrs	r2, r0
 8002ed6:	4322      	orrs	r2, r4
 8002ed8:	e7e4      	b.n	8002ea4 <__aeabi_d2f+0xc4>
 8002eda:	0033      	movs	r3, r6
 8002edc:	e79e      	b.n	8002e1c <__aeabi_d2f+0x3c>
 8002ede:	46c0      	nop			; (mov r8, r8)
 8002ee0:	000007fe 	.word	0x000007fe
 8002ee4:	fffffc80 	.word	0xfffffc80
 8002ee8:	fffffca2 	.word	0xfffffca2
 8002eec:	fffffc82 	.word	0xfffffc82

08002ef0 <__clzsi2>:
 8002ef0:	211c      	movs	r1, #28
 8002ef2:	2301      	movs	r3, #1
 8002ef4:	041b      	lsls	r3, r3, #16
 8002ef6:	4298      	cmp	r0, r3
 8002ef8:	d301      	bcc.n	8002efe <__clzsi2+0xe>
 8002efa:	0c00      	lsrs	r0, r0, #16
 8002efc:	3910      	subs	r1, #16
 8002efe:	0a1b      	lsrs	r3, r3, #8
 8002f00:	4298      	cmp	r0, r3
 8002f02:	d301      	bcc.n	8002f08 <__clzsi2+0x18>
 8002f04:	0a00      	lsrs	r0, r0, #8
 8002f06:	3908      	subs	r1, #8
 8002f08:	091b      	lsrs	r3, r3, #4
 8002f0a:	4298      	cmp	r0, r3
 8002f0c:	d301      	bcc.n	8002f12 <__clzsi2+0x22>
 8002f0e:	0900      	lsrs	r0, r0, #4
 8002f10:	3904      	subs	r1, #4
 8002f12:	a202      	add	r2, pc, #8	; (adr r2, 8002f1c <__clzsi2+0x2c>)
 8002f14:	5c10      	ldrb	r0, [r2, r0]
 8002f16:	1840      	adds	r0, r0, r1
 8002f18:	4770      	bx	lr
 8002f1a:	46c0      	nop			; (mov r8, r8)
 8002f1c:	02020304 	.word	0x02020304
 8002f20:	01010101 	.word	0x01010101
	...

08002f2c <LL_IOP_GRP1_EnableClock>:
  * @retval None
  */
__STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->IOPENR, Periphs);
 8002f2c:	4b05      	ldr	r3, [pc, #20]	; (8002f44 <LL_IOP_GRP1_EnableClock+0x18>)
{
 8002f2e:	b082      	sub	sp, #8
  SET_BIT(RCC->IOPENR, Periphs);
 8002f30:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002f32:	4302      	orrs	r2, r0
 8002f34:	635a      	str	r2, [r3, #52]	; 0x34
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 8002f36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002f38:	4018      	ands	r0, r3
 8002f3a:	9001      	str	r0, [sp, #4]
  (void)tmpreg;
 8002f3c:	9b01      	ldr	r3, [sp, #4]
}
 8002f3e:	b002      	add	sp, #8
 8002f40:	4770      	bx	lr
 8002f42:	46c0      	nop			; (mov r8, r8)
 8002f44:	40021000 	.word	0x40021000

08002f48 <USART1_Send>:
static void MX_TIM17_Init(void);
static void MX_USART1_UART_Init(void);
static void MX_USART2_UART_Init(void);
/* USER CODE BEGIN PFP */
void USART1_Send (char chr){
	while (!(USART1->ISR & USART_ISR_TC));
 8002f48:	2240      	movs	r2, #64	; 0x40
 8002f4a:	4b03      	ldr	r3, [pc, #12]	; (8002f58 <USART1_Send+0x10>)
 8002f4c:	69d9      	ldr	r1, [r3, #28]
 8002f4e:	4211      	tst	r1, r2
 8002f50:	d0fc      	beq.n	8002f4c <USART1_Send+0x4>
	USART1->TDR = chr;
 8002f52:	6298      	str	r0, [r3, #40]	; 0x28
}
 8002f54:	4770      	bx	lr
 8002f56:	46c0      	nop			; (mov r8, r8)
 8002f58:	40013800 	.word	0x40013800

08002f5c <USART1_Send_String>:

void USART1_Send_String (char* str){
 8002f5c:	b570      	push	{r4, r5, r6, lr}
 8002f5e:	0005      	movs	r5, r0
	uint8_t i = 0;
 8002f60:	2400      	movs	r4, #0
	while(str[i])
 8002f62:	5d28      	ldrb	r0, [r5, r4]
 8002f64:	2800      	cmp	r0, #0
 8002f66:	d100      	bne.n	8002f6a <USART1_Send_String+0xe>
	USART1_Send (str[i++]);
}
 8002f68:	bd70      	pop	{r4, r5, r6, pc}
	USART1_Send (str[i++]);
 8002f6a:	3401      	adds	r4, #1
 8002f6c:	b2e4      	uxtb	r4, r4
 8002f6e:	f7ff ffeb 	bl	8002f48 <USART1_Send>
 8002f72:	e7f6      	b.n	8002f62 <USART1_Send_String+0x6>

08002f74 <SendGpsDataToUsart1>:
	utoa(data, buffer, 10);
	USART1_Send_String(buffer);
	USART1_Send_String(" \r\n");
}

void SendGpsDataToUsart1() {
 8002f74:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (nmea_available(&gps)) {
 8002f76:	4c2b      	ldr	r4, [pc, #172]	; (8003024 <SendGpsDataToUsart1+0xb0>)
void SendGpsDataToUsart1() {
 8002f78:	b08d      	sub	sp, #52	; 0x34
	if (nmea_available(&gps)) {
 8002f7a:	0020      	movs	r0, r4
 8002f7c:	f001 f9c2 	bl	8004304 <nmea_available>
 8002f80:	2800      	cmp	r0, #0
 8002f82:	d04d      	beq.n	8003020 <SendGpsDataToUsart1+0xac>
		nmea_gnss_time_h(&gps, &hour);
 8002f84:	4e28      	ldr	r6, [pc, #160]	; (8003028 <SendGpsDataToUsart1+0xb4>)
 8002f86:	0020      	movs	r0, r4
 8002f88:	0031      	movs	r1, r6
 8002f8a:	f001 f9d8 	bl	800433e <nmea_gnss_time_h>
		nmea_gnss_time_m(&gps, &minute);
 8002f8e:	4d27      	ldr	r5, [pc, #156]	; (800302c <SendGpsDataToUsart1+0xb8>)
 8002f90:	0020      	movs	r0, r4
 8002f92:	0029      	movs	r1, r5
 8002f94:	f001 f9df 	bl	8004356 <nmea_gnss_time_m>
		nmea_gnss_time_s(&gps, &sec);
 8002f98:	4925      	ldr	r1, [pc, #148]	; (8003030 <SendGpsDataToUsart1+0xbc>)
 8002f9a:	0020      	movs	r0, r4
 8002f9c:	f001 f9e7 	bl	800436e <nmea_gnss_time_s>
		nmea_gnss_date_d(&gps, &day);
 8002fa0:	4924      	ldr	r1, [pc, #144]	; (8003034 <SendGpsDataToUsart1+0xc0>)
 8002fa2:	0020      	movs	r0, r4
 8002fa4:	f001 fa07 	bl	80043b6 <nmea_gnss_date_d>
		nmea_gnss_date_m(&gps, &month);
 8002fa8:	4923      	ldr	r1, [pc, #140]	; (8003038 <SendGpsDataToUsart1+0xc4>)
 8002faa:	0020      	movs	r0, r4
 8002fac:	f001 f9f7 	bl	800439e <nmea_gnss_date_m>
		nmea_gnss_date_y(&gps, &year);
 8002fb0:	4922      	ldr	r1, [pc, #136]	; (800303c <SendGpsDataToUsart1+0xc8>)
 8002fb2:	0020      	movs	r0, r4
 8002fb4:	f001 f9e7 	bl	8004386 <nmea_gnss_date_y>
		nmea_gnss_latitude_deg(&gps, &latitude);
 8002fb8:	4f21      	ldr	r7, [pc, #132]	; (8003040 <SendGpsDataToUsart1+0xcc>)
 8002fba:	0020      	movs	r0, r4
 8002fbc:	0039      	movs	r1, r7
 8002fbe:	f001 fa06 	bl	80043ce <nmea_gnss_latitude_deg>
		nmea_gnss_longitude_deg(&gps, &longitude);
 8002fc2:	4920      	ldr	r1, [pc, #128]	; (8003044 <SendGpsDataToUsart1+0xd0>)
 8002fc4:	0020      	movs	r0, r4
 8002fc6:	f001 fa0e 	bl	80043e6 <nmea_gnss_longitude_deg>
		nmea_gnss_altitude_m(&gps, &altitude);
 8002fca:	491f      	ldr	r1, [pc, #124]	; (8003048 <SendGpsDataToUsart1+0xd4>)
 8002fcc:	0020      	movs	r0, r4
 8002fce:	f001 fa16 	bl	80043fe <nmea_gnss_altitude_m>
		sprintf(out, "Time: %d:%d:%d\r\n Position: %3.2f %3.2f\r\n Date: %d.%d.%d\r\n", hour,
 8002fd2:	782b      	ldrb	r3, [r5, #0]
 8002fd4:	7836      	ldrb	r6, [r6, #0]
 8002fd6:	930b      	str	r3, [sp, #44]	; 0x2c
 8002fd8:	4b18      	ldr	r3, [pc, #96]	; (800303c <SendGpsDataToUsart1+0xc8>)
 8002fda:	4d1c      	ldr	r5, [pc, #112]	; (800304c <SendGpsDataToUsart1+0xd8>)
 8002fdc:	781b      	ldrb	r3, [r3, #0]
 8002fde:	9308      	str	r3, [sp, #32]
 8002fe0:	4b15      	ldr	r3, [pc, #84]	; (8003038 <SendGpsDataToUsart1+0xc4>)
 8002fe2:	781b      	ldrb	r3, [r3, #0]
 8002fe4:	9307      	str	r3, [sp, #28]
 8002fe6:	4b13      	ldr	r3, [pc, #76]	; (8003034 <SendGpsDataToUsart1+0xc0>)
 8002fe8:	781b      	ldrb	r3, [r3, #0]
 8002fea:	9306      	str	r3, [sp, #24]
 8002fec:	4b15      	ldr	r3, [pc, #84]	; (8003044 <SendGpsDataToUsart1+0xd0>)
 8002fee:	6818      	ldr	r0, [r3, #0]
 8002ff0:	f7ff feae 	bl	8002d50 <__aeabi_f2d>
 8002ff4:	9004      	str	r0, [sp, #16]
 8002ff6:	9105      	str	r1, [sp, #20]
 8002ff8:	6838      	ldr	r0, [r7, #0]
 8002ffa:	f7ff fea9 	bl	8002d50 <__aeabi_f2d>
 8002ffe:	9002      	str	r0, [sp, #8]
 8003000:	9103      	str	r1, [sp, #12]
 8003002:	4b0b      	ldr	r3, [pc, #44]	; (8003030 <SendGpsDataToUsart1+0xbc>)
 8003004:	0032      	movs	r2, r6
 8003006:	781b      	ldrb	r3, [r3, #0]
 8003008:	4911      	ldr	r1, [pc, #68]	; (8003050 <SendGpsDataToUsart1+0xdc>)
 800300a:	9300      	str	r3, [sp, #0]
 800300c:	0028      	movs	r0, r5
 800300e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003010:	f002 ff36 	bl	8005e80 <siprintf>
				minute, sec, latitude, longitude, day, month, year);
		USART1_Send_String(out);
 8003014:	0028      	movs	r0, r5
 8003016:	f7ff ffa1 	bl	8002f5c <USART1_Send_String>
		nmea_available_reset(&gps);
 800301a:	0020      	movs	r0, r4
 800301c:	f001 f974 	bl	8004308 <nmea_available_reset>
	}
}
 8003020:	b00d      	add	sp, #52	; 0x34
 8003022:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003024:	200002cc 	.word	0x200002cc
 8003028:	2000032c 	.word	0x2000032c
 800302c:	20000338 	.word	0x20000338
 8003030:	2000039e 	.word	0x2000039e
 8003034:	200002c8 	.word	0x200002c8
 8003038:	20000339 	.word	0x20000339
 800303c:	200003a0 	.word	0x200003a0
 8003040:	20000330 	.word	0x20000330
 8003044:	20000334 	.word	0x20000334
 8003048:	200002c4 	.word	0x200002c4
 800304c:	2000033a 	.word	0x2000033a
 8003050:	0800a58c 	.word	0x0800a58c

08003054 <memoryPageErase>:
	uint32_t hexAddress = FLASH_INIT + bits;
	return hexAddress;
}


void memoryPageErase(uint32_t memoryPage){
 8003054:	b570      	push	{r4, r5, r6, lr}
	HAL_StatusTypeDef eraseHandler = HAL_FLASH_Unlock();

	eraseHandler = FLASH_WaitForLastOperation(500);
 8003056:	26fa      	movs	r6, #250	; 0xfa
 8003058:	0076      	lsls	r6, r6, #1
void memoryPageErase(uint32_t memoryPage){
 800305a:	0005      	movs	r5, r0
	HAL_StatusTypeDef eraseHandler = HAL_FLASH_Unlock();
 800305c:	f001 fb40 	bl	80046e0 <HAL_FLASH_Unlock>
	eraseHandler = FLASH_WaitForLastOperation(500);
 8003060:	0030      	movs	r0, r6
 8003062:	f001 fb5b 	bl	800471c <FLASH_WaitForLastOperation>
	__HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR);
 8003066:	2320      	movs	r3, #32
 8003068:	4c07      	ldr	r4, [pc, #28]	; (8003088 <memoryPageErase+0x34>)
	FLASH_PageErase(FLASH_BANK_1, memoryPage);
 800306a:	0029      	movs	r1, r5
	__HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR);
 800306c:	6123      	str	r3, [r4, #16]
	FLASH_PageErase(FLASH_BANK_1, memoryPage);
 800306e:	2004      	movs	r0, #4
 8003070:	f001 fbbc 	bl	80047ec <FLASH_PageErase>

	eraseHandler = FLASH_WaitForLastOperation(500);
 8003074:	0030      	movs	r0, r6
 8003076:	f001 fb51 	bl	800471c <FLASH_WaitForLastOperation>
	CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 800307a:	2202      	movs	r2, #2
 800307c:	6963      	ldr	r3, [r4, #20]
 800307e:	4393      	bics	r3, r2
 8003080:	6163      	str	r3, [r4, #20]
	HAL_FLASH_Lock();
 8003082:	f001 fb3f 	bl	8004704 <HAL_FLASH_Lock>
}
 8003086:	bd70      	pop	{r4, r5, r6, pc}
 8003088:	40022000 	.word	0x40022000

0800308c <WriteToEEPROM>:

void WriteToEEPROM (uint32_t hexPage, int dataA){
 800308c:	b570      	push	{r4, r5, r6, lr}
 800308e:	000c      	movs	r4, r1
 8003090:	0005      	movs	r5, r0
	memoryPageErase(DATA_PAGE);
 8003092:	201f      	movs	r0, #31
 8003094:	f7ff ffde 	bl	8003054 <memoryPageErase>
	HAL_FLASH_Unlock();
 8003098:	f001 fb22 	bl	80046e0 <HAL_FLASH_Unlock>
	HAL_FLASH_Program(TYPEPROGRAM_DOUBLEWORD, hexPage, dataA);
 800309c:	0029      	movs	r1, r5
 800309e:	0022      	movs	r2, r4
 80030a0:	17e3      	asrs	r3, r4, #31
 80030a2:	2001      	movs	r0, #1
 80030a4:	f001 fb6e 	bl	8004784 <HAL_FLASH_Program>
	HAL_FLASH_Lock();
 80030a8:	f001 fb2c 	bl	8004704 <HAL_FLASH_Lock>
}
 80030ac:	bd70      	pop	{r4, r5, r6, pc}
	...

080030b0 <ResetAllOutputs>:

uint32_t ReadFromEEPROM (uint32_t hexAddress){
	return *(uint32_t*)hexAddress;
}

void ResetAllOutputs() {
 80030b0:	b570      	push	{r4, r5, r6, lr}
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
  WRITE_REG(GPIOx->BRR, PinMask);
 80030b2:	2204      	movs	r2, #4
 80030b4:	2601      	movs	r6, #1
 80030b6:	2502      	movs	r5, #2
 80030b8:	2410      	movs	r4, #16
 80030ba:	2020      	movs	r0, #32
 80030bc:	2140      	movs	r1, #64	; 0x40
 80030be:	4b0c      	ldr	r3, [pc, #48]	; (80030f0 <ResetAllOutputs+0x40>)
 80030c0:	629e      	str	r6, [r3, #40]	; 0x28
 80030c2:	629d      	str	r5, [r3, #40]	; 0x28
 80030c4:	629a      	str	r2, [r3, #40]	; 0x28
 80030c6:	1892      	adds	r2, r2, r2
 80030c8:	629a      	str	r2, [r3, #40]	; 0x28
 80030ca:	3278      	adds	r2, #120	; 0x78
 80030cc:	629c      	str	r4, [r3, #40]	; 0x28
 80030ce:	6298      	str	r0, [r3, #40]	; 0x28
 80030d0:	6299      	str	r1, [r3, #40]	; 0x28
 80030d2:	629a      	str	r2, [r3, #40]	; 0x28
 80030d4:	23a0      	movs	r3, #160	; 0xa0
 80030d6:	05db      	lsls	r3, r3, #23
 80030d8:	629e      	str	r6, [r3, #40]	; 0x28
 80030da:	629d      	str	r5, [r3, #40]	; 0x28
 80030dc:	629c      	str	r4, [r3, #40]	; 0x28
 80030de:	6298      	str	r0, [r3, #40]	; 0x28
 80030e0:	6299      	str	r1, [r3, #40]	; 0x28
 80030e2:	629a      	str	r2, [r3, #40]	; 0x28
 80030e4:	3280      	adds	r2, #128	; 0x80
 80030e6:	629a      	str	r2, [r3, #40]	; 0x28
 80030e8:	2280      	movs	r2, #128	; 0x80
 80030ea:	0212      	lsls	r2, r2, #8
 80030ec:	629a      	str	r2, [r3, #40]	; 0x28
	LL_GPIO_ResetOutputPin(A4_GPIO_Port, A4_Pin);
	LL_GPIO_ResetOutputPin(A5_GPIO_Port, A5_Pin);
	LL_GPIO_ResetOutputPin(A6_GPIO_Port, A6_Pin);
	LL_GPIO_ResetOutputPin(A7_GPIO_Port, A7_Pin);
	LL_GPIO_ResetOutputPin(A8_GPIO_Port, A8_Pin);
}
 80030ee:	bd70      	pop	{r4, r5, r6, pc}
 80030f0:	50000400 	.word	0x50000400

080030f4 <IsTime80>:

int IsTime80(){
 80030f4:	b510      	push	{r4, lr}
	if ((minute == (time80[0]-1) || minute == (time80[1]-1) || minute == (time80[2]-1)) && (sec == 59)) return 1;
 80030f6:	4a17      	ldr	r2, [pc, #92]	; (8003154 <IsTime80+0x60>)
 80030f8:	4b17      	ldr	r3, [pc, #92]	; (8003158 <IsTime80+0x64>)
 80030fa:	6814      	ldr	r4, [r2, #0]
 80030fc:	781b      	ldrb	r3, [r3, #0]
 80030fe:	1e61      	subs	r1, r4, #1
 8003100:	428b      	cmp	r3, r1
 8003102:	d007      	beq.n	8003114 <IsTime80+0x20>
 8003104:	6851      	ldr	r1, [r2, #4]
 8003106:	3901      	subs	r1, #1
 8003108:	428b      	cmp	r3, r1
 800310a:	d003      	beq.n	8003114 <IsTime80+0x20>
 800310c:	6891      	ldr	r1, [r2, #8]
 800310e:	3901      	subs	r1, #1
 8003110:	428b      	cmp	r3, r1
 8003112:	d104      	bne.n	800311e <IsTime80+0x2a>
 8003114:	4911      	ldr	r1, [pc, #68]	; (800315c <IsTime80+0x68>)
 8003116:	2001      	movs	r0, #1
 8003118:	7809      	ldrb	r1, [r1, #0]
 800311a:	293b      	cmp	r1, #59	; 0x3b
 800311c:	d019      	beq.n	8003152 <IsTime80+0x5e>
	if (minute>=time80[0] && minute<timeOff2[0]) return 1;
 800311e:	42a3      	cmp	r3, r4
 8003120:	db04      	blt.n	800312c <IsTime80+0x38>
 8003122:	490f      	ldr	r1, [pc, #60]	; (8003160 <IsTime80+0x6c>)
	if ((minute == (time80[0]-1) || minute == (time80[1]-1) || minute == (time80[2]-1)) && (sec == 59)) return 1;
 8003124:	2001      	movs	r0, #1
	if (minute>=time80[0] && minute<timeOff2[0]) return 1;
 8003126:	6809      	ldr	r1, [r1, #0]
 8003128:	428b      	cmp	r3, r1
 800312a:	db12      	blt.n	8003152 <IsTime80+0x5e>
	if (minute>=time80[1] && minute<timeOff2[1]) return 1;
 800312c:	6851      	ldr	r1, [r2, #4]
 800312e:	428b      	cmp	r3, r1
 8003130:	db04      	blt.n	800313c <IsTime80+0x48>
 8003132:	490b      	ldr	r1, [pc, #44]	; (8003160 <IsTime80+0x6c>)
	if ((minute == (time80[0]-1) || minute == (time80[1]-1) || minute == (time80[2]-1)) && (sec == 59)) return 1;
 8003134:	2001      	movs	r0, #1
	if (minute>=time80[1] && minute<timeOff2[1]) return 1;
 8003136:	6849      	ldr	r1, [r1, #4]
 8003138:	428b      	cmp	r3, r1
 800313a:	db0a      	blt.n	8003152 <IsTime80+0x5e>
	if (minute>=time80[2] && minute<timeOff2[2]) return 1;
 800313c:	6892      	ldr	r2, [r2, #8]
	return 0;
 800313e:	2000      	movs	r0, #0
	if (minute>=time80[2] && minute<timeOff2[2]) return 1;
 8003140:	4293      	cmp	r3, r2
 8003142:	db06      	blt.n	8003152 <IsTime80+0x5e>
 8003144:	4906      	ldr	r1, [pc, #24]	; (8003160 <IsTime80+0x6c>)
 8003146:	2201      	movs	r2, #1
 8003148:	6889      	ldr	r1, [r1, #8]
 800314a:	428b      	cmp	r3, r1
 800314c:	db00      	blt.n	8003150 <IsTime80+0x5c>
 800314e:	0002      	movs	r2, r0
	if ((minute == (time80[0]-1) || minute == (time80[1]-1) || minute == (time80[2]-1)) && (sec == 59)) return 1;
 8003150:	0010      	movs	r0, r2
}
 8003152:	bd10      	pop	{r4, pc}
 8003154:	20000054 	.word	0x20000054
 8003158:	20000338 	.word	0x20000338
 800315c:	2000039e 	.word	0x2000039e
 8003160:	2000006c 	.word	0x2000006c

08003164 <IsTime40>:

int IsTime40(){
 8003164:	b510      	push	{r4, lr}
	if ((minute == (time40[0]-1) || minute == (time40[1]-1) || minute == (time40[2]-1)) && (sec == 59)) return 1;
 8003166:	4a17      	ldr	r2, [pc, #92]	; (80031c4 <IsTime40+0x60>)
 8003168:	4b17      	ldr	r3, [pc, #92]	; (80031c8 <IsTime40+0x64>)
 800316a:	6814      	ldr	r4, [r2, #0]
 800316c:	781b      	ldrb	r3, [r3, #0]
 800316e:	1e61      	subs	r1, r4, #1
 8003170:	428b      	cmp	r3, r1
 8003172:	d007      	beq.n	8003184 <IsTime40+0x20>
 8003174:	6851      	ldr	r1, [r2, #4]
 8003176:	3901      	subs	r1, #1
 8003178:	428b      	cmp	r3, r1
 800317a:	d003      	beq.n	8003184 <IsTime40+0x20>
 800317c:	6891      	ldr	r1, [r2, #8]
 800317e:	3901      	subs	r1, #1
 8003180:	428b      	cmp	r3, r1
 8003182:	d104      	bne.n	800318e <IsTime40+0x2a>
 8003184:	4911      	ldr	r1, [pc, #68]	; (80031cc <IsTime40+0x68>)
 8003186:	2001      	movs	r0, #1
 8003188:	7809      	ldrb	r1, [r1, #0]
 800318a:	293b      	cmp	r1, #59	; 0x3b
 800318c:	d019      	beq.n	80031c2 <IsTime40+0x5e>
	if (minute>=time40[0] && minute<time30[0]) return 1;
 800318e:	42a3      	cmp	r3, r4
 8003190:	db04      	blt.n	800319c <IsTime40+0x38>
 8003192:	490f      	ldr	r1, [pc, #60]	; (80031d0 <IsTime40+0x6c>)
	if ((minute == (time40[0]-1) || minute == (time40[1]-1) || minute == (time40[2]-1)) && (sec == 59)) return 1;
 8003194:	2001      	movs	r0, #1
	if (minute>=time40[0] && minute<time30[0]) return 1;
 8003196:	6809      	ldr	r1, [r1, #0]
 8003198:	428b      	cmp	r3, r1
 800319a:	db12      	blt.n	80031c2 <IsTime40+0x5e>
	if (minute>=time40[1] && minute<time30[1]) return 1;
 800319c:	6851      	ldr	r1, [r2, #4]
 800319e:	428b      	cmp	r3, r1
 80031a0:	db04      	blt.n	80031ac <IsTime40+0x48>
 80031a2:	490b      	ldr	r1, [pc, #44]	; (80031d0 <IsTime40+0x6c>)
	if ((minute == (time40[0]-1) || minute == (time40[1]-1) || minute == (time40[2]-1)) && (sec == 59)) return 1;
 80031a4:	2001      	movs	r0, #1
	if (minute>=time40[1] && minute<time30[1]) return 1;
 80031a6:	6849      	ldr	r1, [r1, #4]
 80031a8:	428b      	cmp	r3, r1
 80031aa:	db0a      	blt.n	80031c2 <IsTime40+0x5e>
	if (minute>=time40[2] && minute<time30[2]) return 1;
 80031ac:	6892      	ldr	r2, [r2, #8]
	return 0;
 80031ae:	2000      	movs	r0, #0
	if (minute>=time40[2] && minute<time30[2]) return 1;
 80031b0:	4293      	cmp	r3, r2
 80031b2:	db06      	blt.n	80031c2 <IsTime40+0x5e>
 80031b4:	4906      	ldr	r1, [pc, #24]	; (80031d0 <IsTime40+0x6c>)
 80031b6:	2201      	movs	r2, #1
 80031b8:	6889      	ldr	r1, [r1, #8]
 80031ba:	428b      	cmp	r3, r1
 80031bc:	db00      	blt.n	80031c0 <IsTime40+0x5c>
 80031be:	0002      	movs	r2, r0
	if ((minute == (time40[0]-1) || minute == (time40[1]-1) || minute == (time40[2]-1)) && (sec == 59)) return 1;
 80031c0:	0010      	movs	r0, r2
}
 80031c2:	bd10      	pop	{r4, pc}
 80031c4:	20000048 	.word	0x20000048
 80031c8:	20000338 	.word	0x20000338
 80031cc:	2000039e 	.word	0x2000039e
 80031d0:	2000003c 	.word	0x2000003c

080031d4 <IsTime30>:

int IsTime30(){
 80031d4:	b510      	push	{r4, lr}
	if ((minute == (time30[0]-1) || minute == (time30[1]-1) || minute == (time30[2]-1)) && (sec == 59)) return 1;
 80031d6:	4a17      	ldr	r2, [pc, #92]	; (8003234 <IsTime30+0x60>)
 80031d8:	4b17      	ldr	r3, [pc, #92]	; (8003238 <IsTime30+0x64>)
 80031da:	6814      	ldr	r4, [r2, #0]
 80031dc:	781b      	ldrb	r3, [r3, #0]
 80031de:	1e61      	subs	r1, r4, #1
 80031e0:	428b      	cmp	r3, r1
 80031e2:	d007      	beq.n	80031f4 <IsTime30+0x20>
 80031e4:	6851      	ldr	r1, [r2, #4]
 80031e6:	3901      	subs	r1, #1
 80031e8:	428b      	cmp	r3, r1
 80031ea:	d003      	beq.n	80031f4 <IsTime30+0x20>
 80031ec:	6891      	ldr	r1, [r2, #8]
 80031ee:	3901      	subs	r1, #1
 80031f0:	428b      	cmp	r3, r1
 80031f2:	d104      	bne.n	80031fe <IsTime30+0x2a>
 80031f4:	4911      	ldr	r1, [pc, #68]	; (800323c <IsTime30+0x68>)
 80031f6:	2001      	movs	r0, #1
 80031f8:	7809      	ldrb	r1, [r1, #0]
 80031fa:	293b      	cmp	r1, #59	; 0x3b
 80031fc:	d019      	beq.n	8003232 <IsTime30+0x5e>
	if (minute>=time30[0] && minute<time20[0]) return 1;
 80031fe:	42a3      	cmp	r3, r4
 8003200:	db04      	blt.n	800320c <IsTime30+0x38>
 8003202:	490f      	ldr	r1, [pc, #60]	; (8003240 <IsTime30+0x6c>)
	if ((minute == (time30[0]-1) || minute == (time30[1]-1) || minute == (time30[2]-1)) && (sec == 59)) return 1;
 8003204:	2001      	movs	r0, #1
	if (minute>=time30[0] && minute<time20[0]) return 1;
 8003206:	6809      	ldr	r1, [r1, #0]
 8003208:	428b      	cmp	r3, r1
 800320a:	db12      	blt.n	8003232 <IsTime30+0x5e>
	if (minute>=time30[1] && minute<time20[1]) return 1;
 800320c:	6851      	ldr	r1, [r2, #4]
 800320e:	428b      	cmp	r3, r1
 8003210:	db04      	blt.n	800321c <IsTime30+0x48>
 8003212:	490b      	ldr	r1, [pc, #44]	; (8003240 <IsTime30+0x6c>)
	if ((minute == (time30[0]-1) || minute == (time30[1]-1) || minute == (time30[2]-1)) && (sec == 59)) return 1;
 8003214:	2001      	movs	r0, #1
	if (minute>=time30[1] && minute<time20[1]) return 1;
 8003216:	6849      	ldr	r1, [r1, #4]
 8003218:	428b      	cmp	r3, r1
 800321a:	db0a      	blt.n	8003232 <IsTime30+0x5e>
	if (minute>=time30[2] && minute<time20[2]) return 1;
 800321c:	6892      	ldr	r2, [r2, #8]
	return 0;
 800321e:	2000      	movs	r0, #0
	if (minute>=time30[2] && minute<time20[2]) return 1;
 8003220:	4293      	cmp	r3, r2
 8003222:	db06      	blt.n	8003232 <IsTime30+0x5e>
 8003224:	4906      	ldr	r1, [pc, #24]	; (8003240 <IsTime30+0x6c>)
 8003226:	2201      	movs	r2, #1
 8003228:	6889      	ldr	r1, [r1, #8]
 800322a:	428b      	cmp	r3, r1
 800322c:	db00      	blt.n	8003230 <IsTime30+0x5c>
 800322e:	0002      	movs	r2, r0
	if ((minute == (time30[0]-1) || minute == (time30[1]-1) || minute == (time30[2]-1)) && (sec == 59)) return 1;
 8003230:	0010      	movs	r0, r2
}
 8003232:	bd10      	pop	{r4, pc}
 8003234:	2000003c 	.word	0x2000003c
 8003238:	20000338 	.word	0x20000338
 800323c:	2000039e 	.word	0x2000039e
 8003240:	20000030 	.word	0x20000030

08003244 <IsTime20>:

int IsTime20(){
 8003244:	b510      	push	{r4, lr}
	if ((minute == (time20[0]-1) || minute == (time20[1]-1)  || minute == (time20[2]-1) ) && (sec == 59)) return 1;
 8003246:	4a17      	ldr	r2, [pc, #92]	; (80032a4 <IsTime20+0x60>)
 8003248:	4b17      	ldr	r3, [pc, #92]	; (80032a8 <IsTime20+0x64>)
 800324a:	6814      	ldr	r4, [r2, #0]
 800324c:	781b      	ldrb	r3, [r3, #0]
 800324e:	1e61      	subs	r1, r4, #1
 8003250:	428b      	cmp	r3, r1
 8003252:	d007      	beq.n	8003264 <IsTime20+0x20>
 8003254:	6851      	ldr	r1, [r2, #4]
 8003256:	3901      	subs	r1, #1
 8003258:	428b      	cmp	r3, r1
 800325a:	d003      	beq.n	8003264 <IsTime20+0x20>
 800325c:	6891      	ldr	r1, [r2, #8]
 800325e:	3901      	subs	r1, #1
 8003260:	428b      	cmp	r3, r1
 8003262:	d104      	bne.n	800326e <IsTime20+0x2a>
 8003264:	4911      	ldr	r1, [pc, #68]	; (80032ac <IsTime20+0x68>)
 8003266:	2001      	movs	r0, #1
 8003268:	7809      	ldrb	r1, [r1, #0]
 800326a:	293b      	cmp	r1, #59	; 0x3b
 800326c:	d019      	beq.n	80032a2 <IsTime20+0x5e>
	if (minute>=time20[0] && minute<time17[0]) return 1;
 800326e:	42a3      	cmp	r3, r4
 8003270:	db04      	blt.n	800327c <IsTime20+0x38>
 8003272:	490f      	ldr	r1, [pc, #60]	; (80032b0 <IsTime20+0x6c>)
	if ((minute == (time20[0]-1) || minute == (time20[1]-1)  || minute == (time20[2]-1) ) && (sec == 59)) return 1;
 8003274:	2001      	movs	r0, #1
	if (minute>=time20[0] && minute<time17[0]) return 1;
 8003276:	6809      	ldr	r1, [r1, #0]
 8003278:	428b      	cmp	r3, r1
 800327a:	db12      	blt.n	80032a2 <IsTime20+0x5e>
	if (minute>=time20[1] && minute<time17[1]) return 1;
 800327c:	6851      	ldr	r1, [r2, #4]
 800327e:	428b      	cmp	r3, r1
 8003280:	db04      	blt.n	800328c <IsTime20+0x48>
 8003282:	490b      	ldr	r1, [pc, #44]	; (80032b0 <IsTime20+0x6c>)
	if ((minute == (time20[0]-1) || minute == (time20[1]-1)  || minute == (time20[2]-1) ) && (sec == 59)) return 1;
 8003284:	2001      	movs	r0, #1
	if (minute>=time20[1] && minute<time17[1]) return 1;
 8003286:	6849      	ldr	r1, [r1, #4]
 8003288:	428b      	cmp	r3, r1
 800328a:	db0a      	blt.n	80032a2 <IsTime20+0x5e>
	if (minute>=time20[2] && minute<time17[2]) return 1;
 800328c:	6892      	ldr	r2, [r2, #8]
	return 0;
 800328e:	2000      	movs	r0, #0
	if (minute>=time20[2] && minute<time17[2]) return 1;
 8003290:	4293      	cmp	r3, r2
 8003292:	db06      	blt.n	80032a2 <IsTime20+0x5e>
 8003294:	4906      	ldr	r1, [pc, #24]	; (80032b0 <IsTime20+0x6c>)
 8003296:	2201      	movs	r2, #1
 8003298:	6889      	ldr	r1, [r1, #8]
 800329a:	428b      	cmp	r3, r1
 800329c:	db00      	blt.n	80032a0 <IsTime20+0x5c>
 800329e:	0002      	movs	r2, r0
	if ((minute == (time20[0]-1) || minute == (time20[1]-1)  || minute == (time20[2]-1) ) && (sec == 59)) return 1;
 80032a0:	0010      	movs	r0, r2
}
 80032a2:	bd10      	pop	{r4, pc}
 80032a4:	20000030 	.word	0x20000030
 80032a8:	20000338 	.word	0x20000338
 80032ac:	2000039e 	.word	0x2000039e
 80032b0:	20000024 	.word	0x20000024

080032b4 <IsTime17>:

int IsTime17(){
 80032b4:	b510      	push	{r4, lr}
	if ((minute == (time17[0]-1) || minute == (time17[1]-1) || minute == (time17[2]-1)) && (sec == 59)) return 1;
 80032b6:	4a17      	ldr	r2, [pc, #92]	; (8003314 <IsTime17+0x60>)
 80032b8:	4b17      	ldr	r3, [pc, #92]	; (8003318 <IsTime17+0x64>)
 80032ba:	6814      	ldr	r4, [r2, #0]
 80032bc:	781b      	ldrb	r3, [r3, #0]
 80032be:	1e61      	subs	r1, r4, #1
 80032c0:	428b      	cmp	r3, r1
 80032c2:	d007      	beq.n	80032d4 <IsTime17+0x20>
 80032c4:	6851      	ldr	r1, [r2, #4]
 80032c6:	3901      	subs	r1, #1
 80032c8:	428b      	cmp	r3, r1
 80032ca:	d003      	beq.n	80032d4 <IsTime17+0x20>
 80032cc:	6891      	ldr	r1, [r2, #8]
 80032ce:	3901      	subs	r1, #1
 80032d0:	428b      	cmp	r3, r1
 80032d2:	d104      	bne.n	80032de <IsTime17+0x2a>
 80032d4:	4911      	ldr	r1, [pc, #68]	; (800331c <IsTime17+0x68>)
 80032d6:	2001      	movs	r0, #1
 80032d8:	7809      	ldrb	r1, [r1, #0]
 80032da:	293b      	cmp	r1, #59	; 0x3b
 80032dc:	d019      	beq.n	8003312 <IsTime17+0x5e>
	if (minute>=time17[0] && minute<time15[0]) return 1;
 80032de:	42a3      	cmp	r3, r4
 80032e0:	db04      	blt.n	80032ec <IsTime17+0x38>
 80032e2:	490f      	ldr	r1, [pc, #60]	; (8003320 <IsTime17+0x6c>)
	if ((minute == (time17[0]-1) || minute == (time17[1]-1) || minute == (time17[2]-1)) && (sec == 59)) return 1;
 80032e4:	2001      	movs	r0, #1
	if (minute>=time17[0] && minute<time15[0]) return 1;
 80032e6:	6809      	ldr	r1, [r1, #0]
 80032e8:	428b      	cmp	r3, r1
 80032ea:	db12      	blt.n	8003312 <IsTime17+0x5e>
	if (minute>=time17[1] && minute<time15[1]) return 1;
 80032ec:	6851      	ldr	r1, [r2, #4]
 80032ee:	428b      	cmp	r3, r1
 80032f0:	db04      	blt.n	80032fc <IsTime17+0x48>
 80032f2:	490b      	ldr	r1, [pc, #44]	; (8003320 <IsTime17+0x6c>)
	if ((minute == (time17[0]-1) || minute == (time17[1]-1) || minute == (time17[2]-1)) && (sec == 59)) return 1;
 80032f4:	2001      	movs	r0, #1
	if (minute>=time17[1] && minute<time15[1]) return 1;
 80032f6:	6849      	ldr	r1, [r1, #4]
 80032f8:	428b      	cmp	r3, r1
 80032fa:	db0a      	blt.n	8003312 <IsTime17+0x5e>
	if (minute>=time17[2] && minute<time15[2]) return 1;
 80032fc:	6892      	ldr	r2, [r2, #8]
	return 0;
 80032fe:	2000      	movs	r0, #0
	if (minute>=time17[2] && minute<time15[2]) return 1;
 8003300:	4293      	cmp	r3, r2
 8003302:	db06      	blt.n	8003312 <IsTime17+0x5e>
 8003304:	4906      	ldr	r1, [pc, #24]	; (8003320 <IsTime17+0x6c>)
 8003306:	2201      	movs	r2, #1
 8003308:	6889      	ldr	r1, [r1, #8]
 800330a:	428b      	cmp	r3, r1
 800330c:	db00      	blt.n	8003310 <IsTime17+0x5c>
 800330e:	0002      	movs	r2, r0
	if ((minute == (time17[0]-1) || minute == (time17[1]-1) || minute == (time17[2]-1)) && (sec == 59)) return 1;
 8003310:	0010      	movs	r0, r2
}
 8003312:	bd10      	pop	{r4, pc}
 8003314:	20000024 	.word	0x20000024
 8003318:	20000338 	.word	0x20000338
 800331c:	2000039e 	.word	0x2000039e
 8003320:	20000018 	.word	0x20000018

08003324 <IsTime15>:

int IsTime15(){
 8003324:	b510      	push	{r4, lr}
	if ((minute == (time15[0]-1) || minute == (time15[1]-1) || minute == (time15[2]-1)) && (sec == 59)) return 1;
 8003326:	4a17      	ldr	r2, [pc, #92]	; (8003384 <IsTime15+0x60>)
 8003328:	4b17      	ldr	r3, [pc, #92]	; (8003388 <IsTime15+0x64>)
 800332a:	6814      	ldr	r4, [r2, #0]
 800332c:	781b      	ldrb	r3, [r3, #0]
 800332e:	1e61      	subs	r1, r4, #1
 8003330:	428b      	cmp	r3, r1
 8003332:	d007      	beq.n	8003344 <IsTime15+0x20>
 8003334:	6851      	ldr	r1, [r2, #4]
 8003336:	3901      	subs	r1, #1
 8003338:	428b      	cmp	r3, r1
 800333a:	d003      	beq.n	8003344 <IsTime15+0x20>
 800333c:	6891      	ldr	r1, [r2, #8]
 800333e:	3901      	subs	r1, #1
 8003340:	428b      	cmp	r3, r1
 8003342:	d104      	bne.n	800334e <IsTime15+0x2a>
 8003344:	4911      	ldr	r1, [pc, #68]	; (800338c <IsTime15+0x68>)
 8003346:	2001      	movs	r0, #1
 8003348:	7809      	ldrb	r1, [r1, #0]
 800334a:	293b      	cmp	r1, #59	; 0x3b
 800334c:	d019      	beq.n	8003382 <IsTime15+0x5e>
	if (minute>=time15[0] && minute<time12[0]) return 1;
 800334e:	42a3      	cmp	r3, r4
 8003350:	db04      	blt.n	800335c <IsTime15+0x38>
 8003352:	490f      	ldr	r1, [pc, #60]	; (8003390 <IsTime15+0x6c>)
	if ((minute == (time15[0]-1) || minute == (time15[1]-1) || minute == (time15[2]-1)) && (sec == 59)) return 1;
 8003354:	2001      	movs	r0, #1
	if (minute>=time15[0] && minute<time12[0]) return 1;
 8003356:	6809      	ldr	r1, [r1, #0]
 8003358:	428b      	cmp	r3, r1
 800335a:	db12      	blt.n	8003382 <IsTime15+0x5e>
	if (minute>=time15[1] && minute<time12[1]) return 1;
 800335c:	6851      	ldr	r1, [r2, #4]
 800335e:	428b      	cmp	r3, r1
 8003360:	db04      	blt.n	800336c <IsTime15+0x48>
 8003362:	490b      	ldr	r1, [pc, #44]	; (8003390 <IsTime15+0x6c>)
	if ((minute == (time15[0]-1) || minute == (time15[1]-1) || minute == (time15[2]-1)) && (sec == 59)) return 1;
 8003364:	2001      	movs	r0, #1
	if (minute>=time15[1] && minute<time12[1]) return 1;
 8003366:	6849      	ldr	r1, [r1, #4]
 8003368:	428b      	cmp	r3, r1
 800336a:	db0a      	blt.n	8003382 <IsTime15+0x5e>
	if (minute>=time15[2] && minute<time12[2]) return 1;
 800336c:	6892      	ldr	r2, [r2, #8]
	return 0;
 800336e:	2000      	movs	r0, #0
	if (minute>=time15[2] && minute<time12[2]) return 1;
 8003370:	4293      	cmp	r3, r2
 8003372:	db06      	blt.n	8003382 <IsTime15+0x5e>
 8003374:	4906      	ldr	r1, [pc, #24]	; (8003390 <IsTime15+0x6c>)
 8003376:	2201      	movs	r2, #1
 8003378:	6889      	ldr	r1, [r1, #8]
 800337a:	428b      	cmp	r3, r1
 800337c:	db00      	blt.n	8003380 <IsTime15+0x5c>
 800337e:	0002      	movs	r2, r0
	if ((minute == (time15[0]-1) || minute == (time15[1]-1) || minute == (time15[2]-1)) && (sec == 59)) return 1;
 8003380:	0010      	movs	r0, r2
}
 8003382:	bd10      	pop	{r4, pc}
 8003384:	20000018 	.word	0x20000018
 8003388:	20000338 	.word	0x20000338
 800338c:	2000039e 	.word	0x2000039e
 8003390:	2000000c 	.word	0x2000000c

08003394 <IsTime12>:

int IsTime12(){
 8003394:	b510      	push	{r4, lr}
	if ((minute == (time12[0]-1) || minute == (time12[1]-1) || minute == (time12[2]-1)) && (sec == 59)) return 1;
 8003396:	4a17      	ldr	r2, [pc, #92]	; (80033f4 <IsTime12+0x60>)
 8003398:	4b17      	ldr	r3, [pc, #92]	; (80033f8 <IsTime12+0x64>)
 800339a:	6814      	ldr	r4, [r2, #0]
 800339c:	781b      	ldrb	r3, [r3, #0]
 800339e:	1e61      	subs	r1, r4, #1
 80033a0:	428b      	cmp	r3, r1
 80033a2:	d007      	beq.n	80033b4 <IsTime12+0x20>
 80033a4:	6851      	ldr	r1, [r2, #4]
 80033a6:	3901      	subs	r1, #1
 80033a8:	428b      	cmp	r3, r1
 80033aa:	d003      	beq.n	80033b4 <IsTime12+0x20>
 80033ac:	6891      	ldr	r1, [r2, #8]
 80033ae:	3901      	subs	r1, #1
 80033b0:	428b      	cmp	r3, r1
 80033b2:	d104      	bne.n	80033be <IsTime12+0x2a>
 80033b4:	4911      	ldr	r1, [pc, #68]	; (80033fc <IsTime12+0x68>)
 80033b6:	2001      	movs	r0, #1
 80033b8:	7809      	ldrb	r1, [r1, #0]
 80033ba:	293b      	cmp	r1, #59	; 0x3b
 80033bc:	d019      	beq.n	80033f2 <IsTime12+0x5e>
	if (minute>=time12[0] && minute<time10[0]) return 1;
 80033be:	42a3      	cmp	r3, r4
 80033c0:	db04      	blt.n	80033cc <IsTime12+0x38>
 80033c2:	490f      	ldr	r1, [pc, #60]	; (8003400 <IsTime12+0x6c>)
	if ((minute == (time12[0]-1) || minute == (time12[1]-1) || minute == (time12[2]-1)) && (sec == 59)) return 1;
 80033c4:	2001      	movs	r0, #1
	if (minute>=time12[0] && minute<time10[0]) return 1;
 80033c6:	6809      	ldr	r1, [r1, #0]
 80033c8:	428b      	cmp	r3, r1
 80033ca:	db12      	blt.n	80033f2 <IsTime12+0x5e>
	if (minute>=time12[1] && minute<time10[1]) return 1;
 80033cc:	6851      	ldr	r1, [r2, #4]
 80033ce:	428b      	cmp	r3, r1
 80033d0:	db04      	blt.n	80033dc <IsTime12+0x48>
 80033d2:	490b      	ldr	r1, [pc, #44]	; (8003400 <IsTime12+0x6c>)
	if ((minute == (time12[0]-1) || minute == (time12[1]-1) || minute == (time12[2]-1)) && (sec == 59)) return 1;
 80033d4:	2001      	movs	r0, #1
	if (minute>=time12[1] && minute<time10[1]) return 1;
 80033d6:	6849      	ldr	r1, [r1, #4]
 80033d8:	428b      	cmp	r3, r1
 80033da:	db0a      	blt.n	80033f2 <IsTime12+0x5e>
	if (minute>=time12[2] && minute<time10[2]) return 1;
 80033dc:	6892      	ldr	r2, [r2, #8]
	return 0;
 80033de:	2000      	movs	r0, #0
	if (minute>=time12[2] && minute<time10[2]) return 1;
 80033e0:	4293      	cmp	r3, r2
 80033e2:	db06      	blt.n	80033f2 <IsTime12+0x5e>
 80033e4:	4906      	ldr	r1, [pc, #24]	; (8003400 <IsTime12+0x6c>)
 80033e6:	2201      	movs	r2, #1
 80033e8:	6889      	ldr	r1, [r1, #8]
 80033ea:	428b      	cmp	r3, r1
 80033ec:	db00      	blt.n	80033f0 <IsTime12+0x5c>
 80033ee:	0002      	movs	r2, r0
	if ((minute == (time12[0]-1) || minute == (time12[1]-1) || minute == (time12[2]-1)) && (sec == 59)) return 1;
 80033f0:	0010      	movs	r0, r2
}
 80033f2:	bd10      	pop	{r4, pc}
 80033f4:	2000000c 	.word	0x2000000c
 80033f8:	20000338 	.word	0x20000338
 80033fc:	2000039e 	.word	0x2000039e
 8003400:	20000000 	.word	0x20000000

08003404 <IsTime10>:

int IsTime10(){
 8003404:	b510      	push	{r4, lr}
	if ((minute == (time10[0]-1) || minute == (time10[1]-1) || minute == (time10[2]-1) ) && (sec == 59)) return 1;
 8003406:	4a18      	ldr	r2, [pc, #96]	; (8003468 <IsTime10+0x64>)
 8003408:	4b18      	ldr	r3, [pc, #96]	; (800346c <IsTime10+0x68>)
 800340a:	6814      	ldr	r4, [r2, #0]
 800340c:	781b      	ldrb	r3, [r3, #0]
 800340e:	1e61      	subs	r1, r4, #1
 8003410:	428b      	cmp	r3, r1
 8003412:	d007      	beq.n	8003424 <IsTime10+0x20>
 8003414:	6851      	ldr	r1, [r2, #4]
 8003416:	3901      	subs	r1, #1
 8003418:	428b      	cmp	r3, r1
 800341a:	d003      	beq.n	8003424 <IsTime10+0x20>
 800341c:	6891      	ldr	r1, [r2, #8]
 800341e:	3901      	subs	r1, #1
 8003420:	428b      	cmp	r3, r1
 8003422:	d104      	bne.n	800342e <IsTime10+0x2a>
 8003424:	4912      	ldr	r1, [pc, #72]	; (8003470 <IsTime10+0x6c>)
 8003426:	2001      	movs	r0, #1
 8003428:	7809      	ldrb	r1, [r1, #0]
 800342a:	293b      	cmp	r1, #59	; 0x3b
 800342c:	d01a      	beq.n	8003464 <IsTime10+0x60>
	if (minute>=time10[0] && minute<timeOff1[0]) return 1;
 800342e:	42a3      	cmp	r3, r4
 8003430:	db04      	blt.n	800343c <IsTime10+0x38>
 8003432:	4910      	ldr	r1, [pc, #64]	; (8003474 <IsTime10+0x70>)
	if ((minute == (time10[0]-1) || minute == (time10[1]-1) || minute == (time10[2]-1) ) && (sec == 59)) return 1;
 8003434:	2001      	movs	r0, #1
	if (minute>=time10[0] && minute<timeOff1[0]) return 1;
 8003436:	6809      	ldr	r1, [r1, #0]
 8003438:	428b      	cmp	r3, r1
 800343a:	db13      	blt.n	8003464 <IsTime10+0x60>
	if (minute>=time10[1] && minute<timeOff1[1]) return 1;
 800343c:	6851      	ldr	r1, [r2, #4]
 800343e:	428b      	cmp	r3, r1
 8003440:	db04      	blt.n	800344c <IsTime10+0x48>
 8003442:	490c      	ldr	r1, [pc, #48]	; (8003474 <IsTime10+0x70>)
	if ((minute == (time10[0]-1) || minute == (time10[1]-1) || minute == (time10[2]-1) ) && (sec == 59)) return 1;
 8003444:	2001      	movs	r0, #1
	if (minute>=time10[1] && minute<timeOff1[1]) return 1;
 8003446:	6849      	ldr	r1, [r1, #4]
 8003448:	428b      	cmp	r3, r1
 800344a:	db0b      	blt.n	8003464 <IsTime10+0x60>
	if (minute>=time10[2] && minute<timeOff1[2]) return 1;
 800344c:	6891      	ldr	r1, [r2, #8]
 800344e:	2201      	movs	r2, #1
 8003450:	428b      	cmp	r3, r1
 8003452:	db04      	blt.n	800345e <IsTime10+0x5a>
 8003454:	4907      	ldr	r1, [pc, #28]	; (8003474 <IsTime10+0x70>)
	if ((minute == (time10[0]-1) || minute == (time10[1]-1) || minute == (time10[2]-1) ) && (sec == 59)) return 1;
 8003456:	0010      	movs	r0, r2
	if (minute>=time10[2] && minute<timeOff1[2]) return 1;
 8003458:	6889      	ldr	r1, [r1, #8]
 800345a:	428b      	cmp	r3, r1
 800345c:	db02      	blt.n	8003464 <IsTime10+0x60>
	if (minute<2) return 1;
 800345e:	2000      	movs	r0, #0
 8003460:	429a      	cmp	r2, r3
 8003462:	4140      	adcs	r0, r0
	return 0;
}
 8003464:	bd10      	pop	{r4, pc}
 8003466:	46c0      	nop			; (mov r8, r8)
 8003468:	20000000 	.word	0x20000000
 800346c:	20000338 	.word	0x20000338
 8003470:	2000039e 	.word	0x2000039e
 8003474:	20000060 	.word	0x20000060

08003478 <IsTimeOff>:

int IsTimeOff() {
 8003478:	b510      	push	{r4, lr}
	if ((minute == (timeOff1[0] - 1) || minute == (timeOff1[1] - 1)
 800347a:	4a2d      	ldr	r2, [pc, #180]	; (8003530 <IsTimeOff+0xb8>)
 800347c:	4b2d      	ldr	r3, [pc, #180]	; (8003534 <IsTimeOff+0xbc>)
 800347e:	6814      	ldr	r4, [r2, #0]
 8003480:	781b      	ldrb	r3, [r3, #0]
 8003482:	1e61      	subs	r1, r4, #1
 8003484:	428b      	cmp	r3, r1
 8003486:	d007      	beq.n	8003498 <IsTimeOff+0x20>
 8003488:	6851      	ldr	r1, [r2, #4]
 800348a:	3901      	subs	r1, #1
 800348c:	428b      	cmp	r3, r1
 800348e:	d003      	beq.n	8003498 <IsTimeOff+0x20>
			|| minute == (timeOff1[2] - 1)) && (sec == 59))
 8003490:	6891      	ldr	r1, [r2, #8]
 8003492:	3901      	subs	r1, #1
 8003494:	428b      	cmp	r3, r1
 8003496:	d104      	bne.n	80034a2 <IsTimeOff+0x2a>
 8003498:	4927      	ldr	r1, [pc, #156]	; (8003538 <IsTimeOff+0xc0>)
		return 1;
 800349a:	2001      	movs	r0, #1
			|| minute == (timeOff1[2] - 1)) && (sec == 59))
 800349c:	7809      	ldrb	r1, [r1, #0]
 800349e:	293b      	cmp	r1, #59	; 0x3b
 80034a0:	d045      	beq.n	800352e <IsTimeOff+0xb6>
	if (minute >= timeOff1[0] && minute < time80[0])
 80034a2:	42a3      	cmp	r3, r4
 80034a4:	db04      	blt.n	80034b0 <IsTimeOff+0x38>
 80034a6:	4925      	ldr	r1, [pc, #148]	; (800353c <IsTimeOff+0xc4>)
		return 1;
 80034a8:	2001      	movs	r0, #1
	if (minute >= timeOff1[0] && minute < time80[0])
 80034aa:	6809      	ldr	r1, [r1, #0]
 80034ac:	428b      	cmp	r3, r1
 80034ae:	db3e      	blt.n	800352e <IsTimeOff+0xb6>
		return 1;
	if (minute >= timeOff1[1] && minute < time80[1])
 80034b0:	6851      	ldr	r1, [r2, #4]
 80034b2:	428b      	cmp	r3, r1
 80034b4:	db04      	blt.n	80034c0 <IsTimeOff+0x48>
 80034b6:	4921      	ldr	r1, [pc, #132]	; (800353c <IsTimeOff+0xc4>)
		return 1;
 80034b8:	2001      	movs	r0, #1
	if (minute >= timeOff1[1] && minute < time80[1])
 80034ba:	6849      	ldr	r1, [r1, #4]
 80034bc:	428b      	cmp	r3, r1
 80034be:	db36      	blt.n	800352e <IsTimeOff+0xb6>
		return 1;
	if (minute >= timeOff1[2] && minute < time80[2])
 80034c0:	6892      	ldr	r2, [r2, #8]
 80034c2:	4293      	cmp	r3, r2
 80034c4:	db04      	blt.n	80034d0 <IsTimeOff+0x58>
 80034c6:	4a1d      	ldr	r2, [pc, #116]	; (800353c <IsTimeOff+0xc4>)
		return 1;
 80034c8:	2001      	movs	r0, #1
	if (minute >= timeOff1[2] && minute < time80[2])
 80034ca:	6892      	ldr	r2, [r2, #8]
 80034cc:	4293      	cmp	r3, r2
 80034ce:	db2e      	blt.n	800352e <IsTimeOff+0xb6>
		return 1;
 80034d0:	2001      	movs	r0, #1
		return 1;
	if (minute < 2)
 80034d2:	4283      	cmp	r3, r0
 80034d4:	d92b      	bls.n	800352e <IsTimeOff+0xb6>
		return 1;

	if ((minute == (timeOff2[0] - 1) || minute == (timeOff2[1] - 1)
 80034d6:	4a1a      	ldr	r2, [pc, #104]	; (8003540 <IsTimeOff+0xc8>)
 80034d8:	6814      	ldr	r4, [r2, #0]
 80034da:	1e61      	subs	r1, r4, #1
 80034dc:	428b      	cmp	r3, r1
 80034de:	d007      	beq.n	80034f0 <IsTimeOff+0x78>
 80034e0:	6851      	ldr	r1, [r2, #4]
 80034e2:	3901      	subs	r1, #1
 80034e4:	428b      	cmp	r3, r1
 80034e6:	d003      	beq.n	80034f0 <IsTimeOff+0x78>
			|| minute == (timeOff2[2] - 1)) && (sec == 59))
 80034e8:	6891      	ldr	r1, [r2, #8]
 80034ea:	3901      	subs	r1, #1
 80034ec:	428b      	cmp	r3, r1
 80034ee:	d104      	bne.n	80034fa <IsTimeOff+0x82>
 80034f0:	4911      	ldr	r1, [pc, #68]	; (8003538 <IsTimeOff+0xc0>)
		return 1;
 80034f2:	2001      	movs	r0, #1
			|| minute == (timeOff2[2] - 1)) && (sec == 59))
 80034f4:	7809      	ldrb	r1, [r1, #0]
 80034f6:	293b      	cmp	r1, #59	; 0x3b
 80034f8:	d019      	beq.n	800352e <IsTimeOff+0xb6>
		return 1;
	if (minute >= timeOff2[0] && minute < time40[0])
 80034fa:	42a3      	cmp	r3, r4
 80034fc:	db04      	blt.n	8003508 <IsTimeOff+0x90>
 80034fe:	4911      	ldr	r1, [pc, #68]	; (8003544 <IsTimeOff+0xcc>)
		return 1;
 8003500:	2001      	movs	r0, #1
	if (minute >= timeOff2[0] && minute < time40[0])
 8003502:	6809      	ldr	r1, [r1, #0]
 8003504:	428b      	cmp	r3, r1
 8003506:	db12      	blt.n	800352e <IsTimeOff+0xb6>
		return 1;
	if (minute >= timeOff2[1] && minute < time40[1])
 8003508:	6851      	ldr	r1, [r2, #4]
 800350a:	428b      	cmp	r3, r1
 800350c:	db04      	blt.n	8003518 <IsTimeOff+0xa0>
 800350e:	490d      	ldr	r1, [pc, #52]	; (8003544 <IsTimeOff+0xcc>)
		return 1;
 8003510:	2001      	movs	r0, #1
	if (minute >= timeOff2[1] && minute < time40[1])
 8003512:	6849      	ldr	r1, [r1, #4]
 8003514:	428b      	cmp	r3, r1
 8003516:	db0a      	blt.n	800352e <IsTimeOff+0xb6>
		return 1;
	if (minute >= timeOff2[2] && minute < time40[2])
 8003518:	6892      	ldr	r2, [r2, #8]
		return 1;
	if (minute < 2)
		return 1;
	return 0;
 800351a:	2000      	movs	r0, #0
	if (minute >= timeOff2[2] && minute < time40[2])
 800351c:	4293      	cmp	r3, r2
 800351e:	db06      	blt.n	800352e <IsTimeOff+0xb6>
 8003520:	4908      	ldr	r1, [pc, #32]	; (8003544 <IsTimeOff+0xcc>)
 8003522:	2201      	movs	r2, #1
 8003524:	6889      	ldr	r1, [r1, #8]
 8003526:	428b      	cmp	r3, r1
 8003528:	db00      	blt.n	800352c <IsTimeOff+0xb4>
 800352a:	0002      	movs	r2, r0
		return 1;
 800352c:	0010      	movs	r0, r2
}
 800352e:	bd10      	pop	{r4, pc}
 8003530:	20000060 	.word	0x20000060
 8003534:	20000338 	.word	0x20000338
 8003538:	2000039e 	.word	0x2000039e
 800353c:	20000054 	.word	0x20000054
 8003540:	2000006c 	.word	0x2000006c
 8003544:	20000048 	.word	0x20000048

08003548 <WSPR_Schedule>:


void WSPR_Schedule() {
 8003548:	b510      	push	{r4, lr}
	if (IsTime80()) {
 800354a:	f7ff fdd3 	bl	80030f4 <IsTime80>
 800354e:	2800      	cmp	r0, #0
 8003550:	d007      	beq.n	8003562 <WSPR_Schedule+0x1a>
		ResetAllOutputs();
 8003552:	f7ff fdad 	bl	80030b0 <ResetAllOutputs>
  WRITE_REG(GPIOx->BSRR, PinMask);
 8003556:	2301      	movs	r3, #1
 8003558:	4a33      	ldr	r2, [pc, #204]	; (8003628 <WSPR_Schedule+0xe0>)
 800355a:	6193      	str	r3, [r2, #24]
 800355c:	22a0      	movs	r2, #160	; 0xa0
 800355e:	05d2      	lsls	r2, r2, #23
 8003560:	6193      	str	r3, [r2, #24]
		LL_GPIO_SetOutputPin(K1_GPIO_Port, K1_Pin);
		LL_GPIO_SetOutputPin(A1_GPIO_Port, A1_Pin);
	}
	if (IsTime40()) {
 8003562:	f7ff fdff 	bl	8003164 <IsTime40>
 8003566:	2800      	cmp	r0, #0
 8003568:	d007      	beq.n	800357a <WSPR_Schedule+0x32>
		ResetAllOutputs();
 800356a:	f7ff fda1 	bl	80030b0 <ResetAllOutputs>
 800356e:	2302      	movs	r3, #2
 8003570:	4a2d      	ldr	r2, [pc, #180]	; (8003628 <WSPR_Schedule+0xe0>)
 8003572:	6193      	str	r3, [r2, #24]
 8003574:	22a0      	movs	r2, #160	; 0xa0
 8003576:	05d2      	lsls	r2, r2, #23
 8003578:	6193      	str	r3, [r2, #24]
		LL_GPIO_SetOutputPin(K2_GPIO_Port, K2_Pin);
		LL_GPIO_SetOutputPin(A2_GPIO_Port, A2_Pin);
	}
	if (IsTime30()) {
 800357a:	f7ff fe2b 	bl	80031d4 <IsTime30>
 800357e:	2800      	cmp	r0, #0
 8003580:	d008      	beq.n	8003594 <WSPR_Schedule+0x4c>
		ResetAllOutputs();
 8003582:	f7ff fd95 	bl	80030b0 <ResetAllOutputs>
 8003586:	2204      	movs	r2, #4
 8003588:	4b27      	ldr	r3, [pc, #156]	; (8003628 <WSPR_Schedule+0xe0>)
 800358a:	619a      	str	r2, [r3, #24]
 800358c:	23a0      	movs	r3, #160	; 0xa0
 800358e:	320c      	adds	r2, #12
 8003590:	05db      	lsls	r3, r3, #23
 8003592:	619a      	str	r2, [r3, #24]
		LL_GPIO_SetOutputPin(K3_GPIO_Port, K3_Pin);
		LL_GPIO_SetOutputPin(A3_GPIO_Port, A3_Pin);
	}
	if (IsTime20()) {
 8003594:	f7ff fe56 	bl	8003244 <IsTime20>
 8003598:	2800      	cmp	r0, #0
 800359a:	d008      	beq.n	80035ae <WSPR_Schedule+0x66>
		ResetAllOutputs();
 800359c:	f7ff fd88 	bl	80030b0 <ResetAllOutputs>
 80035a0:	2208      	movs	r2, #8
 80035a2:	4b21      	ldr	r3, [pc, #132]	; (8003628 <WSPR_Schedule+0xe0>)
 80035a4:	619a      	str	r2, [r3, #24]
 80035a6:	23a0      	movs	r3, #160	; 0xa0
 80035a8:	3218      	adds	r2, #24
 80035aa:	05db      	lsls	r3, r3, #23
 80035ac:	619a      	str	r2, [r3, #24]
		LL_GPIO_SetOutputPin(K4_GPIO_Port, K4_Pin);
		LL_GPIO_SetOutputPin(A4_GPIO_Port, A4_Pin);
	}
	if (IsTime17()) {
 80035ae:	f7ff fe81 	bl	80032b4 <IsTime17>
 80035b2:	2800      	cmp	r0, #0
 80035b4:	d008      	beq.n	80035c8 <WSPR_Schedule+0x80>
		ResetAllOutputs();
 80035b6:	f7ff fd7b 	bl	80030b0 <ResetAllOutputs>
 80035ba:	2210      	movs	r2, #16
 80035bc:	4b1a      	ldr	r3, [pc, #104]	; (8003628 <WSPR_Schedule+0xe0>)
 80035be:	619a      	str	r2, [r3, #24]
 80035c0:	23a0      	movs	r3, #160	; 0xa0
 80035c2:	3230      	adds	r2, #48	; 0x30
 80035c4:	05db      	lsls	r3, r3, #23
 80035c6:	619a      	str	r2, [r3, #24]
		LL_GPIO_SetOutputPin(K5_GPIO_Port, K5_Pin);
		LL_GPIO_SetOutputPin(A5_GPIO_Port, A5_Pin);
	}
	if (IsTime15()) {
 80035c8:	f7ff feac 	bl	8003324 <IsTime15>
 80035cc:	2800      	cmp	r0, #0
 80035ce:	d008      	beq.n	80035e2 <WSPR_Schedule+0x9a>
		ResetAllOutputs();
 80035d0:	f7ff fd6e 	bl	80030b0 <ResetAllOutputs>
 80035d4:	2220      	movs	r2, #32
 80035d6:	4b14      	ldr	r3, [pc, #80]	; (8003628 <WSPR_Schedule+0xe0>)
 80035d8:	619a      	str	r2, [r3, #24]
 80035da:	23a0      	movs	r3, #160	; 0xa0
 80035dc:	3260      	adds	r2, #96	; 0x60
 80035de:	05db      	lsls	r3, r3, #23
 80035e0:	619a      	str	r2, [r3, #24]
		LL_GPIO_SetOutputPin(K6_GPIO_Port, K6_Pin);
		LL_GPIO_SetOutputPin(A6_GPIO_Port, A6_Pin);
	}
	if (IsTime12()) {
 80035e2:	f7ff fed7 	bl	8003394 <IsTime12>
 80035e6:	2800      	cmp	r0, #0
 80035e8:	d008      	beq.n	80035fc <WSPR_Schedule+0xb4>
		ResetAllOutputs();
 80035ea:	f7ff fd61 	bl	80030b0 <ResetAllOutputs>
 80035ee:	2240      	movs	r2, #64	; 0x40
 80035f0:	4b0d      	ldr	r3, [pc, #52]	; (8003628 <WSPR_Schedule+0xe0>)
 80035f2:	619a      	str	r2, [r3, #24]
 80035f4:	23a0      	movs	r3, #160	; 0xa0
 80035f6:	32c0      	adds	r2, #192	; 0xc0
 80035f8:	05db      	lsls	r3, r3, #23
 80035fa:	619a      	str	r2, [r3, #24]
		LL_GPIO_SetOutputPin(K7_GPIO_Port, K7_Pin);
		LL_GPIO_SetOutputPin(A7_GPIO_Port, A7_Pin);
	}
	if (IsTime10()) {
 80035fc:	f7ff ff02 	bl	8003404 <IsTime10>
 8003600:	2800      	cmp	r0, #0
 8003602:	d009      	beq.n	8003618 <WSPR_Schedule+0xd0>
		ResetAllOutputs();
 8003604:	f7ff fd54 	bl	80030b0 <ResetAllOutputs>
 8003608:	2280      	movs	r2, #128	; 0x80
 800360a:	4b07      	ldr	r3, [pc, #28]	; (8003628 <WSPR_Schedule+0xe0>)
 800360c:	619a      	str	r2, [r3, #24]
 800360e:	23a0      	movs	r3, #160	; 0xa0
 8003610:	2280      	movs	r2, #128	; 0x80
 8003612:	05db      	lsls	r3, r3, #23
 8003614:	0212      	lsls	r2, r2, #8
 8003616:	619a      	str	r2, [r3, #24]
		LL_GPIO_SetOutputPin(K8_GPIO_Port, K8_Pin);
		LL_GPIO_SetOutputPin(A8_GPIO_Port, A8_Pin);
	}
	if (IsTimeOff()) {
 8003618:	f7ff ff2e 	bl	8003478 <IsTimeOff>
 800361c:	2800      	cmp	r0, #0
 800361e:	d001      	beq.n	8003624 <WSPR_Schedule+0xdc>
		ResetAllOutputs();
 8003620:	f7ff fd46 	bl	80030b0 <ResetAllOutputs>
	}

}
 8003624:	bd10      	pop	{r4, pc}
 8003626:	46c0      	nop			; (mov r8, r8)
 8003628:	50000400 	.word	0x50000400

0800362c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800362c:	b510      	push	{r4, lr}
 800362e:	b092      	sub	sp, #72	; 0x48
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003630:	2234      	movs	r2, #52	; 0x34
 8003632:	2100      	movs	r1, #0
 8003634:	a805      	add	r0, sp, #20
 8003636:	f001 feb9 	bl	80053ac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800363a:	2210      	movs	r2, #16
 800363c:	2100      	movs	r1, #0
 800363e:	a801      	add	r0, sp, #4
 8003640:	f001 feb4 	bl	80053ac <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003644:	2080      	movs	r0, #128	; 0x80
 8003646:	0080      	lsls	r0, r0, #2
 8003648:	f001 f8e0 	bl	800480c <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800364c:	2380      	movs	r3, #128	; 0x80
 800364e:	005b      	lsls	r3, r3, #1
 8003650:	9308      	str	r3, [sp, #32]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 8003652:	2300      	movs	r3, #0
 8003654:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8003656:	930e      	str	r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 8;
 8003658:	3308      	adds	r3, #8
 800365a:	930f      	str	r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800365c:	2380      	movs	r3, #128	; 0x80
 800365e:	029b      	lsls	r3, r3, #10
 8003660:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8003662:	2380      	movs	r3, #128	; 0x80
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003664:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003666:	2240      	movs	r2, #64	; 0x40
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8003668:	059b      	lsls	r3, r3, #22
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800366a:	a805      	add	r0, sp, #20
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800366c:	9405      	str	r4, [sp, #20]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800366e:	920a      	str	r2, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003670:	940c      	str	r4, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003672:	940d      	str	r4, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8003674:	9311      	str	r3, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003676:	f001 f8f5 	bl	8004864 <HAL_RCC_OscConfig>
 800367a:	2800      	cmp	r0, #0
 800367c:	d001      	beq.n	8003682 <SystemClock_Config+0x56>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800367e:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003680:	e7fe      	b.n	8003680 <SystemClock_Config+0x54>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003682:	2307      	movs	r3, #7
 8003684:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 8003686:	2380      	movs	r3, #128	; 0x80
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003688:	9004      	str	r0, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 800368a:	011b      	lsls	r3, r3, #4
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800368c:	2101      	movs	r1, #1
 800368e:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003690:	9402      	str	r4, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 8003692:	9303      	str	r3, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003694:	f001 fb46 	bl	8004d24 <HAL_RCC_ClockConfig>
 8003698:	2800      	cmp	r0, #0
 800369a:	d001      	beq.n	80036a0 <SystemClock_Config+0x74>
 800369c:	b672      	cpsid	i
  while (1)
 800369e:	e7fe      	b.n	800369e <SystemClock_Config+0x72>
}
 80036a0:	b012      	add	sp, #72	; 0x48
 80036a2:	bd10      	pop	{r4, pc}

080036a4 <main>:
{
 80036a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036a6:	b099      	sub	sp, #100	; 0x64
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80036a8:	ae10      	add	r6, sp, #64	; 0x40
  HAL_Init();
 80036aa:	f000 ff9d 	bl	80045e8 <HAL_Init>
  SystemClock_Config();
 80036ae:	f7ff ffbd 	bl	800362c <SystemClock_Config>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80036b2:	2218      	movs	r2, #24
 80036b4:	2100      	movs	r1, #0
 80036b6:	0030      	movs	r0, r6
 80036b8:	f001 fe78 	bl	80053ac <memset>
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOC);
 80036bc:	2004      	movs	r0, #4
 80036be:	f7ff fc35 	bl	8002f2c <LL_IOP_GRP1_EnableClock>
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 80036c2:	2001      	movs	r0, #1
 80036c4:	f7ff fc32 	bl	8002f2c <LL_IOP_GRP1_EnableClock>
  WRITE_REG(GPIOx->BRR, PinMask);
 80036c8:	27a0      	movs	r7, #160	; 0xa0
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOB);
 80036ca:	2002      	movs	r0, #2
 80036cc:	f7ff fc2e 	bl	8002f2c <LL_IOP_GRP1_EnableClock>
 80036d0:	2410      	movs	r4, #16
 80036d2:	2301      	movs	r3, #1
 80036d4:	2102      	movs	r1, #2
 80036d6:	2220      	movs	r2, #32
 80036d8:	2080      	movs	r0, #128	; 0x80
 80036da:	05ff      	lsls	r7, r7, #23
 80036dc:	4d8e      	ldr	r5, [pc, #568]	; (8003918 <main+0x274>)
 80036de:	62bb      	str	r3, [r7, #40]	; 0x28
 80036e0:	62b9      	str	r1, [r7, #40]	; 0x28
 80036e2:	62bc      	str	r4, [r7, #40]	; 0x28
 80036e4:	62ba      	str	r2, [r7, #40]	; 0x28
 80036e6:	1892      	adds	r2, r2, r2
 80036e8:	62ba      	str	r2, [r7, #40]	; 0x28
 80036ea:	62b8      	str	r0, [r7, #40]	; 0x28
 80036ec:	9301      	str	r3, [sp, #4]
 80036ee:	62ab      	str	r3, [r5, #40]	; 0x28
 80036f0:	62a9      	str	r1, [r5, #40]	; 0x28
 80036f2:	002b      	movs	r3, r5
 80036f4:	2504      	movs	r5, #4
 80036f6:	629d      	str	r5, [r3, #40]	; 0x28
 80036f8:	35fc      	adds	r5, #252	; 0xfc
 80036fa:	62bd      	str	r5, [r7, #40]	; 0x28
 80036fc:	4d87      	ldr	r5, [pc, #540]	; (800391c <main+0x278>)
 80036fe:	62aa      	str	r2, [r5, #40]	; 0x28
 8003700:	2580      	movs	r5, #128	; 0x80
 8003702:	022d      	lsls	r5, r5, #8
 8003704:	62bd      	str	r5, [r7, #40]	; 0x28
 8003706:	2508      	movs	r5, #8
 8003708:	629d      	str	r5, [r3, #40]	; 0x28
  GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 800370a:	2580      	movs	r5, #128	; 0x80
 800370c:	629c      	str	r4, [r3, #40]	; 0x28
 800370e:	1924      	adds	r4, r4, r4
 8003710:	629c      	str	r4, [r3, #40]	; 0x28
 8003712:	629a      	str	r2, [r3, #40]	; 0x28
 8003714:	6298      	str	r0, [r3, #40]	; 0x28
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003716:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003718:	2400      	movs	r4, #0
  GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 800371a:	022d      	lsls	r5, r5, #8
 800371c:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 800371e:	001d      	movs	r5, r3
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8003720:	6071      	str	r1, [r6, #4]
  LL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003722:	487e      	ldr	r0, [pc, #504]	; (800391c <main+0x278>)
 8003724:	0031      	movs	r1, r6
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003726:	6173      	str	r3, [r6, #20]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003728:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800372a:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800372c:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800372e:	f001 fc51 	bl	8004fd4 <LL_GPIO_Init>
  LL_GPIO_Init(A1_GPIO_Port, &GPIO_InitStruct);
 8003732:	0031      	movs	r1, r6
 8003734:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A1_Pin;
 8003736:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003738:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800373a:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800373c:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800373e:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A1_GPIO_Port, &GPIO_InitStruct);
 8003740:	f001 fc48 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = A2_Pin;
 8003744:	2102      	movs	r1, #2
  LL_GPIO_Init(A2_GPIO_Port, &GPIO_InitStruct);
 8003746:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A2_Pin;
 8003748:	9110      	str	r1, [sp, #64]	; 0x40
  LL_GPIO_Init(A2_GPIO_Port, &GPIO_InitStruct);
 800374a:	0031      	movs	r1, r6
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800374c:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800374e:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003750:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003752:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A2_GPIO_Port, &GPIO_InitStruct);
 8003754:	f001 fc3e 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = A3_Pin;
 8003758:	2310      	movs	r3, #16
  LL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 800375a:	0031      	movs	r1, r6
 800375c:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A3_Pin;
 800375e:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003760:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003762:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003764:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003766:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 8003768:	f001 fc34 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = A4_Pin;
 800376c:	2220      	movs	r2, #32
  LL_GPIO_Init(A4_GPIO_Port, &GPIO_InitStruct);
 800376e:	0031      	movs	r1, r6
 8003770:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A4_Pin;
 8003772:	9210      	str	r2, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003774:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003776:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003778:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800377a:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A4_GPIO_Port, &GPIO_InitStruct);
 800377c:	f001 fc2a 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = A5_Pin;
 8003780:	2240      	movs	r2, #64	; 0x40
  LL_GPIO_Init(A5_GPIO_Port, &GPIO_InitStruct);
 8003782:	0031      	movs	r1, r6
 8003784:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A5_Pin;
 8003786:	9210      	str	r2, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003788:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800378a:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800378c:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800378e:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A5_GPIO_Port, &GPIO_InitStruct);
 8003790:	f001 fc20 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = A6_Pin;
 8003794:	2080      	movs	r0, #128	; 0x80
  LL_GPIO_Init(A6_GPIO_Port, &GPIO_InitStruct);
 8003796:	0031      	movs	r1, r6
  GPIO_InitStruct.Pin = A6_Pin;
 8003798:	9010      	str	r0, [sp, #64]	; 0x40
  LL_GPIO_Init(A6_GPIO_Port, &GPIO_InitStruct);
 800379a:	0038      	movs	r0, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800379c:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800379e:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80037a0:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80037a2:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A6_GPIO_Port, &GPIO_InitStruct);
 80037a4:	f001 fc16 	bl	8004fd4 <LL_GPIO_Init>
  LL_GPIO_Init(K1_GPIO_Port, &GPIO_InitStruct);
 80037a8:	0031      	movs	r1, r6
 80037aa:	485b      	ldr	r0, [pc, #364]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K1_Pin;
 80037ac:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80037ae:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 80037b0:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80037b2:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80037b4:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K1_GPIO_Port, &GPIO_InitStruct);
 80037b6:	f001 fc0d 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = K2_Pin;
 80037ba:	2102      	movs	r1, #2
  LL_GPIO_Init(K2_GPIO_Port, &GPIO_InitStruct);
 80037bc:	4856      	ldr	r0, [pc, #344]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K2_Pin;
 80037be:	9110      	str	r1, [sp, #64]	; 0x40
  LL_GPIO_Init(K2_GPIO_Port, &GPIO_InitStruct);
 80037c0:	0031      	movs	r1, r6
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80037c2:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 80037c4:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.Pin = K3_Pin;
 80037c6:	2504      	movs	r5, #4
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80037c8:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80037ca:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K2_GPIO_Port, &GPIO_InitStruct);
 80037cc:	f001 fc02 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80037d0:	2301      	movs	r3, #1
  LL_GPIO_Init(K3_GPIO_Port, &GPIO_InitStruct);
 80037d2:	0031      	movs	r1, r6
 80037d4:	4850      	ldr	r0, [pc, #320]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K3_Pin;
 80037d6:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80037d8:	6073      	str	r3, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 80037da:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80037dc:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80037de:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K3_GPIO_Port, &GPIO_InitStruct);
 80037e0:	f001 fbf8 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80037e4:	2301      	movs	r3, #1
  LL_GPIO_Init(A7_GPIO_Port, &GPIO_InitStruct);
 80037e6:	0031      	movs	r1, r6
 80037e8:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A7_Pin;
 80037ea:	35fc      	adds	r5, #252	; 0xfc
 80037ec:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 80037ee:	001d      	movs	r5, r3
 80037f0:	6073      	str	r3, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 80037f2:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80037f4:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80037f6:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A7_GPIO_Port, &GPIO_InitStruct);
 80037f8:	f001 fbec 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_Pin;
 80037fc:	2240      	movs	r2, #64	; 0x40
  LL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 80037fe:	0031      	movs	r1, r6
  GPIO_InitStruct.Pin = LED_Pin;
 8003800:	9210      	str	r2, [sp, #64]	; 0x40
  LL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8003802:	4846      	ldr	r0, [pc, #280]	; (800391c <main+0x278>)
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003804:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Pin = A8_Pin;
 8003806:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003808:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800380a:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800380c:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800380e:	f001 fbe1 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003812:	2301      	movs	r3, #1
  LL_GPIO_Init(A8_GPIO_Port, &GPIO_InitStruct);
 8003814:	0031      	movs	r1, r6
 8003816:	0038      	movs	r0, r7
  GPIO_InitStruct.Pin = A8_Pin;
 8003818:	022d      	lsls	r5, r5, #8
 800381a:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800381c:	6073      	str	r3, [r6, #4]
  GPIO_InitStruct.Pin = K4_Pin;
 800381e:	2508      	movs	r5, #8
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003820:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003822:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003824:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(A8_GPIO_Port, &GPIO_InitStruct);
 8003826:	f001 fbd5 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800382a:	2301      	movs	r3, #1
  LL_GPIO_Init(K4_GPIO_Port, &GPIO_InitStruct);
 800382c:	0031      	movs	r1, r6
 800382e:	483a      	ldr	r0, [pc, #232]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K4_Pin;
 8003830:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003832:	001d      	movs	r5, r3
 8003834:	6073      	str	r3, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003836:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003838:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800383a:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K4_GPIO_Port, &GPIO_InitStruct);
 800383c:	f001 fbca 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = K5_Pin;
 8003840:	2110      	movs	r1, #16
  LL_GPIO_Init(K5_GPIO_Port, &GPIO_InitStruct);
 8003842:	4835      	ldr	r0, [pc, #212]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K5_Pin;
 8003844:	9110      	str	r1, [sp, #64]	; 0x40
  LL_GPIO_Init(K5_GPIO_Port, &GPIO_InitStruct);
 8003846:	0031      	movs	r1, r6
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003848:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800384a:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800384c:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800384e:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K5_GPIO_Port, &GPIO_InitStruct);
 8003850:	f001 fbc0 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = K6_Pin;
 8003854:	2120      	movs	r1, #32
  LL_GPIO_Init(K6_GPIO_Port, &GPIO_InitStruct);
 8003856:	4830      	ldr	r0, [pc, #192]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K6_Pin;
 8003858:	9110      	str	r1, [sp, #64]	; 0x40
  LL_GPIO_Init(K6_GPIO_Port, &GPIO_InitStruct);
 800385a:	0031      	movs	r1, r6
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800385c:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800385e:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003860:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003862:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K6_GPIO_Port, &GPIO_InitStruct);
 8003864:	f001 fbb6 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = K7_Pin;
 8003868:	2240      	movs	r2, #64	; 0x40
  LL_GPIO_Init(K7_GPIO_Port, &GPIO_InitStruct);
 800386a:	0031      	movs	r1, r6
 800386c:	482a      	ldr	r0, [pc, #168]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Pin = K7_Pin;
 800386e:	9210      	str	r2, [sp, #64]	; 0x40
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003870:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003872:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003874:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003876:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K7_GPIO_Port, &GPIO_InitStruct);
 8003878:	f001 fbac 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = K8_Pin;
 800387c:	2080      	movs	r0, #128	; 0x80
  LL_GPIO_Init(K8_GPIO_Port, &GPIO_InitStruct);
 800387e:	0031      	movs	r1, r6
  GPIO_InitStruct.Pin = K8_Pin;
 8003880:	9010      	str	r0, [sp, #64]	; 0x40
  LL_GPIO_Init(K8_GPIO_Port, &GPIO_InitStruct);
 8003882:	4825      	ldr	r0, [pc, #148]	; (8003918 <main+0x274>)
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8003884:	6075      	str	r5, [r6, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003886:	60b4      	str	r4, [r6, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003888:	60f4      	str	r4, [r6, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800388a:	6134      	str	r4, [r6, #16]
  LL_GPIO_Init(K8_GPIO_Port, &GPIO_InitStruct);
 800388c:	f001 fba2 	bl	8004fd4 <LL_GPIO_Init>
  LL_TIM_InitTypeDef TIM_InitStruct = {0};
 8003890:	0021      	movs	r1, r4
 8003892:	2214      	movs	r2, #20
 8003894:	0030      	movs	r0, r6
 8003896:	f001 fd89 	bl	80053ac <memset>
  SET_BIT(RCC->APBENR2, Periphs);
 800389a:	2180      	movs	r1, #128	; 0x80
 800389c:	4d20      	ldr	r5, [pc, #128]	; (8003920 <main+0x27c>)
 800389e:	02c9      	lsls	r1, r1, #11
 80038a0:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 80038a2:	430a      	orrs	r2, r1
 80038a4:	642a      	str	r2, [r5, #64]	; 0x40
  tmpreg = READ_BIT(RCC->APBENR2, Periphs);
 80038a6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80038a8:	22c5      	movs	r2, #197	; 0xc5
 80038aa:	400b      	ands	r3, r1
 80038ac:	491d      	ldr	r1, [pc, #116]	; (8003924 <main+0x280>)
 80038ae:	9302      	str	r3, [sp, #8]
 80038b0:	0008      	movs	r0, r1
 80038b2:	0092      	lsls	r2, r2, #2
  (void)tmpreg;
 80038b4:	9b02      	ldr	r3, [sp, #8]
 80038b6:	588b      	ldr	r3, [r1, r2]
 80038b8:	491b      	ldr	r1, [pc, #108]	; (8003928 <main+0x284>)
 80038ba:	400b      	ands	r3, r1
 80038bc:	5083      	str	r3, [r0, r2]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80038be:	2280      	movs	r2, #128	; 0x80
 80038c0:	03d2      	lsls	r2, r2, #15
 80038c2:	6002      	str	r2, [r0, #0]
  TIM_InitStruct.Prescaler = 31999;
 80038c4:	4b19      	ldr	r3, [pc, #100]	; (800392c <main+0x288>)
  LL_TIM_Init(TIM17, &TIM_InitStruct);
 80038c6:	0031      	movs	r1, r6
  TIM_InitStruct.Prescaler = 31999;
 80038c8:	8033      	strh	r3, [r6, #0]
  TIM_InitStruct.Autoreload = 499;
 80038ca:	23f4      	movs	r3, #244	; 0xf4
  LL_TIM_Init(TIM17, &TIM_InitStruct);
 80038cc:	4818      	ldr	r0, [pc, #96]	; (8003930 <main+0x28c>)
  TIM_InitStruct.Autoreload = 499;
 80038ce:	33ff      	adds	r3, #255	; 0xff
  TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 80038d0:	6074      	str	r4, [r6, #4]
  TIM_InitStruct.Autoreload = 499;
 80038d2:	60b3      	str	r3, [r6, #8]
  TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 80038d4:	60f4      	str	r4, [r6, #12]
  TIM_InitStruct.RepetitionCounter = 0;
 80038d6:	6134      	str	r4, [r6, #16]
  LL_TIM_Init(TIM17, &TIM_InitStruct);
 80038d8:	f001 fc64 	bl	80051a4 <LL_TIM_Init>
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
{
  SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
 80038dc:	2080      	movs	r0, #128	; 0x80
 80038de:	4a14      	ldr	r2, [pc, #80]	; (8003930 <main+0x28c>)
  LL_USART_InitTypeDef USART_InitStruct = {0};
 80038e0:	0021      	movs	r1, r4
 80038e2:	6813      	ldr	r3, [r2, #0]
 80038e4:	4303      	orrs	r3, r0
 80038e6:	6013      	str	r3, [r2, #0]
 80038e8:	0030      	movs	r0, r6
 80038ea:	2220      	movs	r2, #32
 80038ec:	f001 fd5e 	bl	80053ac <memset>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80038f0:	0021      	movs	r1, r4
 80038f2:	2218      	movs	r2, #24
 80038f4:	a804      	add	r0, sp, #16
 80038f6:	f001 fd59 	bl	80053ac <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80038fa:	0021      	movs	r1, r4
 80038fc:	2214      	movs	r2, #20
 80038fe:	a80b      	add	r0, sp, #44	; 0x2c
 8003900:	f001 fd54 	bl	80053ac <memset>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8003904:	2301      	movs	r3, #1
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003906:	a80a      	add	r0, sp, #40	; 0x28
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8003908:	930a      	str	r3, [sp, #40]	; 0x28
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800390a:	f001 fab9 	bl	8004e80 <HAL_RCCEx_PeriphCLKConfig>
 800390e:	1e04      	subs	r4, r0, #0
 8003910:	d010      	beq.n	8003934 <main+0x290>
 8003912:	b672      	cpsid	i
  while (1)
 8003914:	e7fe      	b.n	8003914 <main+0x270>
 8003916:	46c0      	nop			; (mov r8, r8)
 8003918:	50000400 	.word	0x50000400
 800391c:	50000800 	.word	0x50000800
 8003920:	40021000 	.word	0x40021000
 8003924:	e000e100 	.word	0xe000e100
 8003928:	ff00ffff 	.word	0xff00ffff
 800392c:	00007cff 	.word	0x00007cff
 8003930:	40014800 	.word	0x40014800
  SET_BIT(RCC->APBENR2, Periphs);
 8003934:	2180      	movs	r1, #128	; 0x80
 8003936:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 8003938:	01c9      	lsls	r1, r1, #7
 800393a:	430a      	orrs	r2, r1
 800393c:	642a      	str	r2, [r5, #64]	; 0x40
  tmpreg = READ_BIT(RCC->APBENR2, Periphs);
 800393e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 8003940:	2001      	movs	r0, #1
 8003942:	400b      	ands	r3, r1
 8003944:	9303      	str	r3, [sp, #12]
  (void)tmpreg;
 8003946:	9b03      	ldr	r3, [sp, #12]
 8003948:	f7ff faf0 	bl	8002f2c <LL_IOP_GRP1_EnableClock>
  GPIO_InitStruct.Pin = LL_GPIO_PIN_9;
 800394c:	2380      	movs	r3, #128	; 0x80
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 800394e:	2001      	movs	r0, #1
  GPIO_InitStruct.Pin = LL_GPIO_PIN_9;
 8003950:	009b      	lsls	r3, r3, #2
 8003952:	9304      	str	r3, [sp, #16]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8003954:	3bff      	subs	r3, #255	; 0xff
 8003956:	3bff      	subs	r3, #255	; 0xff
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003958:	9009      	str	r0, [sp, #36]	; 0x24
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800395a:	a904      	add	r1, sp, #16
 800395c:	0038      	movs	r0, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 800395e:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003960:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003962:	9407      	str	r4, [sp, #28]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003964:	9408      	str	r4, [sp, #32]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003966:	f001 fb35 	bl	8004fd4 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
 800396a:	2380      	movs	r3, #128	; 0x80
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 800396c:	2001      	movs	r0, #1
  GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
 800396e:	00db      	lsls	r3, r3, #3
 8003970:	9304      	str	r3, [sp, #16]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8003972:	2302      	movs	r3, #2
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003974:	9009      	str	r0, [sp, #36]	; 0x24
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003976:	a904      	add	r1, sp, #16
 8003978:	0038      	movs	r0, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 800397a:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800397c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800397e:	9407      	str	r4, [sp, #28]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003980:	9408      	str	r4, [sp, #32]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003982:	f001 fb27 	bl	8004fd4 <LL_GPIO_Init>
  USART_InitStruct.BaudRate = 115200;
 8003986:	23e1      	movs	r3, #225	; 0xe1
 8003988:	025b      	lsls	r3, r3, #9
  USART_InitStruct.PrescalerValue = LL_USART_PRESCALER_DIV1;
 800398a:	9410      	str	r4, [sp, #64]	; 0x40
  USART_InitStruct.BaudRate = 115200;
 800398c:	6073      	str	r3, [r6, #4]
  USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 800398e:	230c      	movs	r3, #12
  USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 8003990:	60b4      	str	r4, [r6, #8]
  USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 8003992:	60f4      	str	r4, [r6, #12]
  USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 8003994:	6134      	str	r4, [r6, #16]
  USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 8003996:	61b4      	str	r4, [r6, #24]
  USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 8003998:	61f4      	str	r4, [r6, #28]
  LL_USART_Init(USART1, &USART_InitStruct);
 800399a:	4c5d      	ldr	r4, [pc, #372]	; (8003b10 <main+0x46c>)
 800399c:	0031      	movs	r1, r6
 800399e:	0020      	movs	r0, r4
  USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 80039a0:	6173      	str	r3, [r6, #20]
  LL_USART_Init(USART1, &USART_InitStruct);
 80039a2:	f001 fc3f 	bl	8005224 <LL_USART_Init>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80039a6:	f3ef 8210 	mrs	r2, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80039aa:	2001      	movs	r0, #1
 80039ac:	f380 8810 	msr	PRIMASK, r0
  *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
  * @retval None
  */
__STATIC_INLINE void LL_USART_SetTXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
{
  ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 80039b0:	68a3      	ldr	r3, [r4, #8]
 80039b2:	00db      	lsls	r3, r3, #3
 80039b4:	08db      	lsrs	r3, r3, #3
 80039b6:	60a3      	str	r3, [r4, #8]
 80039b8:	f382 8810 	msr	PRIMASK, r2
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80039bc:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80039c0:	f380 8810 	msr	PRIMASK, r0
  *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
  * @retval None
  */
__STATIC_INLINE void LL_USART_SetRXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
{
  ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 80039c4:	4953      	ldr	r1, [pc, #332]	; (8003b14 <main+0x470>)
 80039c6:	68a3      	ldr	r3, [r4, #8]
 80039c8:	400b      	ands	r3, r1
 80039ca:	60a3      	str	r3, [r4, #8]
 80039cc:	f382 8810 	msr	PRIMASK, r2
  CLEAR_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 80039d0:	4a51      	ldr	r2, [pc, #324]	; (8003b18 <main+0x474>)
 80039d2:	6823      	ldr	r3, [r4, #0]
 80039d4:	4013      	ands	r3, r2
 80039d6:	6023      	str	r3, [r4, #0]
{
  /* In Asynchronous mode, the following bits must be kept cleared:
  - LINEN, CLKEN bits in the USART_CR2 register,
  - SCEN, IREN and HDSEL bits in the USART_CR3 register.
  */
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80039d8:	6863      	ldr	r3, [r4, #4]
 80039da:	4a50      	ldr	r2, [pc, #320]	; (8003b1c <main+0x478>)
 80039dc:	4013      	ands	r3, r2
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 80039de:	222a      	movs	r2, #42	; 0x2a
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80039e0:	6063      	str	r3, [r4, #4]
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 80039e2:	68a3      	ldr	r3, [r4, #8]
 80039e4:	4393      	bics	r3, r2
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(const USART_TypeDef *USARTx)
{
  return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 80039e6:	2280      	movs	r2, #128	; 0x80
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 80039e8:	60a3      	str	r3, [r4, #8]
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 80039ea:	6823      	ldr	r3, [r4, #0]
  return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 80039ec:	0392      	lsls	r2, r2, #14
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 80039ee:	4303      	orrs	r3, r0
 80039f0:	6023      	str	r3, [r4, #0]
  return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 80039f2:	69e3      	ldr	r3, [r4, #28]
 80039f4:	4213      	tst	r3, r2
 80039f6:	d0fc      	beq.n	80039f2 <main+0x34e>
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(const USART_TypeDef *USARTx)
{
  return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
 80039f8:	2180      	movs	r1, #128	; 0x80
 80039fa:	69e3      	ldr	r3, [r4, #28]
 80039fc:	03c9      	lsls	r1, r1, #15
 80039fe:	420b      	tst	r3, r1
 8003a00:	d0f7      	beq.n	80039f2 <main+0x34e>
  LL_USART_InitTypeDef USART_InitStruct = {0};
 8003a02:	2220      	movs	r2, #32
 8003a04:	2100      	movs	r1, #0
 8003a06:	0030      	movs	r0, r6
 8003a08:	f001 fcd0 	bl	80053ac <memset>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003a0c:	2218      	movs	r2, #24
 8003a0e:	2100      	movs	r1, #0
 8003a10:	a80a      	add	r0, sp, #40	; 0x28
 8003a12:	f001 fccb 	bl	80053ac <memset>
  SET_BIT(RCC->APBENR1, Periphs);
 8003a16:	2180      	movs	r1, #128	; 0x80
 8003a18:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8003a1a:	0289      	lsls	r1, r1, #10
 8003a1c:	430a      	orrs	r2, r1
 8003a1e:	63ea      	str	r2, [r5, #60]	; 0x3c
  tmpreg = READ_BIT(RCC->APBENR1, Periphs);
 8003a20:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 8003a22:	2001      	movs	r0, #1
 8003a24:	400b      	ands	r3, r1
 8003a26:	9304      	str	r3, [sp, #16]
  (void)tmpreg;
 8003a28:	9b04      	ldr	r3, [sp, #16]
 8003a2a:	f7ff fa7f 	bl	8002f2c <LL_IOP_GRP1_EnableClock>
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a2e:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003a30:	2400      	movs	r4, #0
  GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 8003a32:	2304      	movs	r3, #4
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8003a34:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003a36:	2501      	movs	r5, #1
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a38:	a90a      	add	r1, sp, #40	; 0x28
 8003a3a:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 8003a3c:	930a      	str	r3, [sp, #40]	; 0x28
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8003a3e:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003a40:	940c      	str	r4, [sp, #48]	; 0x30
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003a42:	940d      	str	r4, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003a44:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003a46:	950f      	str	r5, [sp, #60]	; 0x3c
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a48:	f001 fac4 	bl	8004fd4 <LL_GPIO_Init>
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a4c:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Pin = LL_GPIO_PIN_3;
 8003a4e:	2308      	movs	r3, #8
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a50:	a90a      	add	r1, sp, #40	; 0x28
 8003a52:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = LL_GPIO_PIN_3;
 8003a54:	930a      	str	r3, [sp, #40]	; 0x28
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8003a56:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8003a58:	940c      	str	r4, [sp, #48]	; 0x30
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8003a5a:	940d      	str	r4, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8003a5c:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 8003a5e:	950f      	str	r5, [sp, #60]	; 0x3c
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003a60:	f001 fab8 	bl	8004fd4 <LL_GPIO_Init>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003a64:	22c7      	movs	r2, #199	; 0xc7
 8003a66:	21ff      	movs	r1, #255	; 0xff
 8003a68:	482d      	ldr	r0, [pc, #180]	; (8003b20 <main+0x47c>)
 8003a6a:	0092      	lsls	r2, r2, #2
 8003a6c:	5883      	ldr	r3, [r0, r2]
 8003a6e:	438b      	bics	r3, r1
 8003a70:	5083      	str	r3, [r0, r2]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003a72:	2380      	movs	r3, #128	; 0x80
 8003a74:	055b      	lsls	r3, r3, #21
 8003a76:	6003      	str	r3, [r0, #0]
  USART_InitStruct.BaudRate = 9600;
 8003a78:	2396      	movs	r3, #150	; 0x96
 8003a7a:	019b      	lsls	r3, r3, #6
  USART_InitStruct.PrescalerValue = LL_USART_PRESCALER_DIV1;
 8003a7c:	9410      	str	r4, [sp, #64]	; 0x40
  USART_InitStruct.BaudRate = 9600;
 8003a7e:	6073      	str	r3, [r6, #4]
  USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 8003a80:	230c      	movs	r3, #12
  USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 8003a82:	60b4      	str	r4, [r6, #8]
  USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 8003a84:	60f4      	str	r4, [r6, #12]
  USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 8003a86:	6134      	str	r4, [r6, #16]
  USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 8003a88:	61b4      	str	r4, [r6, #24]
  USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 8003a8a:	61f4      	str	r4, [r6, #28]
  LL_USART_Init(USART2, &USART_InitStruct);
 8003a8c:	4c25      	ldr	r4, [pc, #148]	; (8003b24 <main+0x480>)
 8003a8e:	0031      	movs	r1, r6
 8003a90:	0020      	movs	r0, r4
  USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 8003a92:	6173      	str	r3, [r6, #20]
  LL_USART_Init(USART2, &USART_InitStruct);
 8003a94:	f001 fbc6 	bl	8005224 <LL_USART_Init>
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003a98:	6863      	ldr	r3, [r4, #4]
 8003a9a:	4a20      	ldr	r2, [pc, #128]	; (8003b1c <main+0x478>)
  return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 8003a9c:	2180      	movs	r1, #128	; 0x80
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003a9e:	4013      	ands	r3, r2
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 8003aa0:	222a      	movs	r2, #42	; 0x2a
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003aa2:	6063      	str	r3, [r4, #4]
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 8003aa4:	68a3      	ldr	r3, [r4, #8]
  return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 8003aa6:	0389      	lsls	r1, r1, #14
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 8003aa8:	4393      	bics	r3, r2
 8003aaa:	60a3      	str	r3, [r4, #8]
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 8003aac:	6823      	ldr	r3, [r4, #0]
 8003aae:	431d      	orrs	r5, r3
  return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
 8003ab0:	2380      	movs	r3, #128	; 0x80
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 8003ab2:	6025      	str	r5, [r4, #0]
  return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
 8003ab4:	03db      	lsls	r3, r3, #15
  return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 8003ab6:	69e2      	ldr	r2, [r4, #28]
 8003ab8:	420a      	tst	r2, r1
 8003aba:	d0fc      	beq.n	8003ab6 <main+0x412>
  return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
 8003abc:	69e2      	ldr	r2, [r4, #28]
 8003abe:	421a      	tst	r2, r3
 8003ac0:	d0f9      	beq.n	8003ab6 <main+0x412>
  nmea_init(&gps, USART2, 1024);
 8003ac2:	2280      	movs	r2, #128	; 0x80
 8003ac4:	4c18      	ldr	r4, [pc, #96]	; (8003b28 <main+0x484>)
 8003ac6:	4917      	ldr	r1, [pc, #92]	; (8003b24 <main+0x480>)
 8003ac8:	00d2      	lsls	r2, r2, #3
 8003aca:	0020      	movs	r0, r4
 8003acc:	f000 f882 	bl	8003bd4 <nmea_init>
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8003ad0:	2301      	movs	r3, #1
 8003ad2:	4916      	ldr	r1, [pc, #88]	; (8003b2c <main+0x488>)
  hexPage = getHexAddressPage(DATA_PAGE);
 8003ad4:	4d16      	ldr	r5, [pc, #88]	; (8003b30 <main+0x48c>)
 8003ad6:	680a      	ldr	r2, [r1, #0]
 8003ad8:	4816      	ldr	r0, [pc, #88]	; (8003b34 <main+0x490>)
 8003ada:	431a      	orrs	r2, r3
 8003adc:	600a      	str	r2, [r1, #0]
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
{
  SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 8003ade:	68ca      	ldr	r2, [r1, #12]
 8003ae0:	4313      	orrs	r3, r2
 8003ae2:	60cb      	str	r3, [r1, #12]
  WriteToEEPROM(hexPage, 123);
 8003ae4:	217b      	movs	r1, #123	; 0x7b
  hexPage = getHexAddressPage(DATA_PAGE);
 8003ae6:	6028      	str	r0, [r5, #0]
  WriteToEEPROM(hexPage, 123);
 8003ae8:	f7ff fad0 	bl	800308c <WriteToEEPROM>
	return *(uint32_t*)hexAddress;
 8003aec:	682b      	ldr	r3, [r5, #0]
		LL_mDelay(300);
 8003aee:	2596      	movs	r5, #150	; 0x96
  temp = ReadFromEEPROM(hexPage);
 8003af0:	681a      	ldr	r2, [r3, #0]
 8003af2:	4b11      	ldr	r3, [pc, #68]	; (8003b38 <main+0x494>)
		LL_mDelay(300);
 8003af4:	006d      	lsls	r5, r5, #1
  temp = ReadFromEEPROM(hexPage);
 8003af6:	701a      	strb	r2, [r3, #0]
		nmea_loop(&gps);
 8003af8:	0020      	movs	r0, r4
 8003afa:	f000 f88d 	bl	8003c18 <nmea_loop>
		SendGpsDataToUsart1();
 8003afe:	f7ff fa39 	bl	8002f74 <SendGpsDataToUsart1>
		WSPR_Schedule();
 8003b02:	f7ff fd21 	bl	8003548 <WSPR_Schedule>
		LL_mDelay(300);
 8003b06:	0028      	movs	r0, r5
 8003b08:	f001 fbfa 	bl	8005300 <LL_mDelay>
	while (1) {
 8003b0c:	e7f4      	b.n	8003af8 <main+0x454>
 8003b0e:	46c0      	nop			; (mov r8, r8)
 8003b10:	40013800 	.word	0x40013800
 8003b14:	f1ffffff 	.word	0xf1ffffff
 8003b18:	dfffffff 	.word	0xdfffffff
 8003b1c:	ffffb7ff 	.word	0xffffb7ff
 8003b20:	e000e100 	.word	0xe000e100
 8003b24:	40004400 	.word	0x40004400
 8003b28:	200002cc 	.word	0x200002cc
 8003b2c:	40014800 	.word	0x40014800
 8003b30:	20000328 	.word	0x20000328
 8003b34:	0800f800 	.word	0x0800f800
 8003b38:	2000039f 	.word	0x2000039f

08003b3c <nmea_checksum>:
float nmea_convert(float raw_degrees);
uint8_t nmea_checksum(const char *sentence);

//###########################################################################################################################
uint8_t nmea_checksum(const char *sentence)
{
 8003b3c:	0001      	movs	r1, r0
	const char *n = sentence + 1;
 8003b3e:	1c42      	adds	r2, r0, #1
  uint8_t chk = 0;
 8003b40:	2000      	movs	r0, #0
{
 8003b42:	b510      	push	{r4, lr}
  while ('*' != *n && '\r' != *n)
 8003b44:	7813      	ldrb	r3, [r2, #0]
 8003b46:	2b2a      	cmp	r3, #42	; 0x2a
 8003b48:	d001      	beq.n	8003b4e <nmea_checksum+0x12>
 8003b4a:	2b0d      	cmp	r3, #13
 8003b4c:	d100      	bne.n	8003b50 <nmea_checksum+0x14>
      return 0;
    chk ^= (uint8_t) *n;
    n++;
  }
  return chk;
}
 8003b4e:	bd10      	pop	{r4, pc}
		if ('\0' == *n || n - sentence > 128)
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d005      	beq.n	8003b60 <nmea_checksum+0x24>
 8003b54:	1a54      	subs	r4, r2, r1
 8003b56:	2c80      	cmp	r4, #128	; 0x80
 8003b58:	dc02      	bgt.n	8003b60 <nmea_checksum+0x24>
    chk ^= (uint8_t) *n;
 8003b5a:	4058      	eors	r0, r3
    n++;
 8003b5c:	3201      	adds	r2, #1
 8003b5e:	e7f1      	b.n	8003b44 <nmea_checksum+0x8>
      return 0;
 8003b60:	2000      	movs	r0, #0
 8003b62:	e7f4      	b.n	8003b4e <nmea_checksum+0x12>

08003b64 <nmea_convert>:
//###########################################################################################################################
inline float nmea_convert(float raw_degrees)
{
 8003b64:	b570      	push	{r4, r5, r6, lr}
 8003b66:	1c05      	adds	r5, r0, #0
  int firstdigits = ((int)raw_degrees) / 100;
 8003b68:	f7fd fa9e 	bl	80010a8 <__aeabi_f2iz>
 8003b6c:	2164      	movs	r1, #100	; 0x64
 8003b6e:	f7fc fb77 	bl	8000260 <__divsi3>
  float nexttwodigits = raw_degrees - (float)(firstdigits * 100.0f);
 8003b72:	f7fd fab9 	bl	80010e8 <__aeabi_i2f>
 8003b76:	4907      	ldr	r1, [pc, #28]	; (8003b94 <nmea_convert+0x30>)
 8003b78:	1c04      	adds	r4, r0, #0
 8003b7a:	f7fc ffc1 	bl	8000b00 <__aeabi_fmul>
 8003b7e:	1c01      	adds	r1, r0, #0
 8003b80:	1c28      	adds	r0, r5, #0
 8003b82:	f7fd f8e3 	bl	8000d4c <__aeabi_fsub>
  return (float)(firstdigits + nexttwodigits / 60.0f);
 8003b86:	4904      	ldr	r1, [pc, #16]	; (8003b98 <nmea_convert+0x34>)
 8003b88:	f7fc fea2 	bl	80008d0 <__aeabi_fdiv>
 8003b8c:	1c21      	adds	r1, r4, #0
 8003b8e:	f7fc fd01 	bl	8000594 <__aeabi_fadd>
}
 8003b92:	bd70      	pop	{r4, r5, r6, pc}
 8003b94:	42c80000 	.word	0x42c80000
 8003b98:	42700000 	.word	0x42700000

08003b9c <nmea_callback>:
//###########################################################################################################################
inline void nmea_callback(nmea_t *nmea)
{
	if (LL_USART_IsActiveFlag_RXNE(nmea->usart))
 8003b9c:	6803      	ldr	r3, [r0, #0]
{
 8003b9e:	b510      	push	{r4, lr}
  return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE_RXFNE) == (USART_ISR_RXNE_RXFNE)) ? 1UL : 0UL);
 8003ba0:	69da      	ldr	r2, [r3, #28]
 8003ba2:	0004      	movs	r4, r0
 8003ba4:	0692      	lsls	r2, r2, #26
 8003ba6:	d504      	bpl.n	8003bb2 <nmea_callback+0x16>
  * @param  USARTx USART Instance
  * @retval Value between Min_Data=0x00 and Max_Data=0xFF
  */
__STATIC_INLINE uint8_t LL_USART_ReceiveData8(const USART_TypeDef *USARTx)
{
  return (uint8_t)(READ_BIT(USARTx->RDR, USART_RDR_RDR) & 0xFFU);
 8003ba8:	6a59      	ldr	r1, [r3, #36]	; 0x24
  {
    uint8_t tmp = LL_USART_ReceiveData8(nmea->usart);
		if (nmea->available)
 8003baa:	7c43      	ldrb	r3, [r0, #17]
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d004      	beq.n	8003bba <nmea_callback+0x1e>
      nmea->buf_time = HAL_GetTick();
    }
  }
  else
    nmea->usart->ICR = 0xFFFFFFFF;
}
 8003bb0:	bd10      	pop	{r4, pc}
    nmea->usart->ICR = 0xFFFFFFFF;
 8003bb2:	2201      	movs	r2, #1
 8003bb4:	4252      	negs	r2, r2
 8003bb6:	621a      	str	r2, [r3, #32]
 8003bb8:	e7fa      	b.n	8003bb0 <nmea_callback+0x14>
    if (nmea->buf_index < nmea->buf_size - 1)
 8003bba:	89c2      	ldrh	r2, [r0, #14]
 8003bbc:	8983      	ldrh	r3, [r0, #12]
 8003bbe:	3a01      	subs	r2, #1
 8003bc0:	4293      	cmp	r3, r2
 8003bc2:	daf5      	bge.n	8003bb0 <nmea_callback+0x14>
      nmea->buf[nmea->buf_index++] = tmp;
 8003bc4:	1c5a      	adds	r2, r3, #1
 8003bc6:	8182      	strh	r2, [r0, #12]
 8003bc8:	6882      	ldr	r2, [r0, #8]
 8003bca:	54d1      	strb	r1, [r2, r3]
      nmea->buf_time = HAL_GetTick();
 8003bcc:	f000 fd2c 	bl	8004628 <HAL_GetTick>
 8003bd0:	6060      	str	r0, [r4, #4]
 8003bd2:	e7ed      	b.n	8003bb0 <nmea_callback+0x14>

08003bd4 <nmea_init>:
//###########################################################################################################################
bool nmea_init(nmea_t *nmea, USART_TypeDef *usart, uint16_t buf_size)
{
 8003bd4:	b570      	push	{r4, r5, r6, lr}
 8003bd6:	000d      	movs	r5, r1
	if (nmea->buf != NULL)
 8003bd8:	6881      	ldr	r1, [r0, #8]
{
 8003bda:	0004      	movs	r4, r0
 8003bdc:	0016      	movs	r6, r2
	if (nmea->buf != NULL)
 8003bde:	2900      	cmp	r1, #0
 8003be0:	d001      	beq.n	8003be6 <nmea_init+0x12>
		return false;
 8003be2:	2000      	movs	r0, #0
	if (nmea->buf == NULL)
		return false;
	nmea->buf_size = buf_size;
	LL_USART_EnableIT_RXNE(nmea->usart);
	return true;
}
 8003be4:	bd70      	pop	{r4, r5, r6, pc}
	memset(nmea, 0, sizeof(nmea_t));
 8003be6:	2258      	movs	r2, #88	; 0x58
 8003be8:	3004      	adds	r0, #4
 8003bea:	f001 fbdf 	bl	80053ac <memset>
	nmea->buf = (char*) malloc(buf_size);
 8003bee:	0030      	movs	r0, r6
	nmea->usart = usart;
 8003bf0:	6025      	str	r5, [r4, #0]
	nmea->buf = (char*) malloc(buf_size);
 8003bf2:	f001 fbd1 	bl	8005398 <malloc>
 8003bf6:	60a0      	str	r0, [r4, #8]
	if (nmea->buf == NULL)
 8003bf8:	2800      	cmp	r0, #0
 8003bfa:	d0f2      	beq.n	8003be2 <nmea_init+0xe>
	nmea->buf_size = buf_size;
 8003bfc:	81e6      	strh	r6, [r4, #14]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003bfe:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c02:	2001      	movs	r0, #1
 8003c04:	f380 8810 	msr	PRIMASK, r0
  ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8003c08:	2320      	movs	r3, #32
 8003c0a:	6829      	ldr	r1, [r5, #0]
 8003c0c:	430b      	orrs	r3, r1
 8003c0e:	602b      	str	r3, [r5, #0]
 8003c10:	f382 8810 	msr	PRIMASK, r2
}
 8003c14:	e7e6      	b.n	8003be4 <nmea_init+0x10>
	...

08003c18 <nmea_loop>:
//###########################################################################################################################
void nmea_loop(nmea_t *nmea)
{
 8003c18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003c1a:	0004      	movs	r4, r0
 8003c1c:	b0a5      	sub	sp, #148	; 0x94
	while (nmea->lock)
 8003c1e:	7c27      	ldrb	r7, [r4, #16]
 8003c20:	2f00      	cmp	r7, #0
 8003c22:	d000      	beq.n	8003c26 <nmea_loop+0xe>
 8003c24:	e1c4      	b.n	8003fb0 <nmea_loop+0x398>
		nmea_delay(1);
	nmea->lock = true;
 8003c26:	2301      	movs	r3, #1
 8003c28:	7423      	strb	r3, [r4, #16]
	if ((nmea->buf_index > 0) && (HAL_GetTick() - nmea->buf_time >= 100))
 8003c2a:	89a3      	ldrh	r3, [r4, #12]
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d100      	bne.n	8003c32 <nmea_loop+0x1a>
 8003c30:	e1ba      	b.n	8003fa8 <nmea_loop+0x390>
 8003c32:	f000 fcf9 	bl	8004628 <HAL_GetTick>
 8003c36:	6863      	ldr	r3, [r4, #4]
 8003c38:	1ac0      	subs	r0, r0, r3
 8003c3a:	2863      	cmp	r0, #99	; 0x63
 8003c3c:	d800      	bhi.n	8003c40 <nmea_loop+0x28>
 8003c3e:	e1b3      	b.n	8003fa8 <nmea_loop+0x390>

		//	+++	decode $xxGGA
		do
		{
			end = false;
			found = strstr(nmea->buf, NMEA_GGA);
 8003c40:	4bcb      	ldr	r3, [pc, #812]	; (8003f70 <nmea_loop+0x358>)
 8003c42:	68a0      	ldr	r0, [r4, #8]
 8003c44:	6819      	ldr	r1, [r3, #0]
 8003c46:	f002 f9d3 	bl	8005ff0 <strstr>
 8003c4a:	1e06      	subs	r6, r0, #0
			if (found != NULL)
 8003c4c:	d034      	beq.n	8003cb8 <nmea_loop+0xa0>
			{
				found -= 3;
				if (found[0] != '$')
 8003c4e:	3e03      	subs	r6, #3
 8003c50:	7833      	ldrb	r3, [r6, #0]
 8003c52:	2b24      	cmp	r3, #36	; 0x24
 8003c54:	d130      	bne.n	8003cb8 <nmea_loop+0xa0>
					break;
				checksum = strstr(found, "*");
 8003c56:	212a      	movs	r1, #42	; 0x2a
 8003c58:	0030      	movs	r0, r6
 8003c5a:	f002 f9a7 	bl	8005fac <strchr>
 8003c5e:	1e05      	subs	r5, r0, #0
				if (checksum == NULL)
 8003c60:	d02a      	beq.n	8003cb8 <nmea_loop+0xa0>
					break;
				checksum_read[0] = *(checksum + 1);
 8003c62:	7843      	ldrb	r3, [r0, #1]
 8003c64:	aa02      	add	r2, sp, #8
 8003c66:	7013      	strb	r3, [r2, #0]
				checksum_read[1] = *(checksum + 2);
 8003c68:	7883      	ldrb	r3, [r0, #2]
				memset(line, 0, sizeof(line));
 8003c6a:	0039      	movs	r1, r7
				checksum_read[1] = *(checksum + 2);
 8003c6c:	7053      	strb	r3, [r2, #1]
				memset(line, 0, sizeof(line));
 8003c6e:	a804      	add	r0, sp, #16
 8003c70:	2280      	movs	r2, #128	; 0x80
 8003c72:	f001 fb9b 	bl	80053ac <memset>
				int cpy = checksum - found + 3;
 8003c76:	1baa      	subs	r2, r5, r6
 8003c78:	3203      	adds	r2, #3
				if (cpy > sizeof(line))
 8003c7a:	2a80      	cmp	r2, #128	; 0x80
 8003c7c:	d81c      	bhi.n	8003cb8 <nmea_loop+0xa0>
					break;
				strncpy(line, found, cpy);
 8003c7e:	0031      	movs	r1, r6
 8003c80:	a804      	add	r0, sp, #16
 8003c82:	f002 f9a1 	bl	8005fc8 <strncpy>
				uint8_t c = nmea_checksum(line);
 8003c86:	a804      	add	r0, sp, #16
 8003c88:	f7ff ff58 	bl	8003b3c <nmea_checksum>
				int cc = 0;
				sscanf(checksum_read, "%X", &cc);
 8003c8c:	49b9      	ldr	r1, [pc, #740]	; (8003f74 <nmea_loop+0x35c>)
				uint8_t c = nmea_checksum(line);
 8003c8e:	0005      	movs	r5, r0
				sscanf(checksum_read, "%X", &cc);
 8003c90:	aa03      	add	r2, sp, #12
 8003c92:	a802      	add	r0, sp, #8
				int cc = 0;
 8003c94:	9703      	str	r7, [sp, #12]
				sscanf(checksum_read, "%X", &cc);
 8003c96:	f002 f913 	bl	8005ec0 <siscanf>
				if (cc == c)
 8003c9a:	9b03      	ldr	r3, [sp, #12]
 8003c9c:	429d      	cmp	r5, r3
 8003c9e:	d10b      	bne.n	8003cb8 <nmea_loop+0xa0>
				{
					char *str = strtok(line, ",*");
 8003ca0:	4fb5      	ldr	r7, [pc, #724]	; (8003f78 <nmea_loop+0x360>)
 8003ca2:	a804      	add	r0, sp, #16
 8003ca4:	0039      	movs	r1, r7
 8003ca6:	f002 fff3 	bl	8006c90 <strtok>
					uint8_t index = 2;
 8003caa:	2602      	movs	r6, #2
					char *str = strtok(line, ",*");
 8003cac:	0005      	movs	r5, r0
					while (str != NULL)
 8003cae:	2d00      	cmp	r5, #0
 8003cb0:	d000      	beq.n	8003cb4 <nmea_loop+0x9c>
 8003cb2:	e181      	b.n	8003fb8 <nmea_loop+0x3a0>
						}
						index++;
						if (end)
							break;
					}
					nmea->available = true;
 8003cb4:	2301      	movs	r3, #1
 8003cb6:	7463      	strb	r3, [r4, #17]

		//	+++	decode $xxRMC
		do
		{
			end = false;
			found = strstr(nmea->buf, NMEA_RMC);
 8003cb8:	4fad      	ldr	r7, [pc, #692]	; (8003f70 <nmea_loop+0x358>)
 8003cba:	68a0      	ldr	r0, [r4, #8]
 8003cbc:	6879      	ldr	r1, [r7, #4]
 8003cbe:	f002 f997 	bl	8005ff0 <strstr>
 8003cc2:	1e06      	subs	r6, r0, #0
			if (found != NULL)
 8003cc4:	d036      	beq.n	8003d34 <nmea_loop+0x11c>
			{
				found -= 3;
				if (found[0] != '$')
 8003cc6:	3e03      	subs	r6, #3
 8003cc8:	7833      	ldrb	r3, [r6, #0]
 8003cca:	2b24      	cmp	r3, #36	; 0x24
 8003ccc:	d132      	bne.n	8003d34 <nmea_loop+0x11c>
					break;
				checksum = strstr(found, "*");
 8003cce:	212a      	movs	r1, #42	; 0x2a
 8003cd0:	0030      	movs	r0, r6
 8003cd2:	f002 f96b 	bl	8005fac <strchr>
 8003cd6:	1e05      	subs	r5, r0, #0
				if (checksum == NULL)
 8003cd8:	d02c      	beq.n	8003d34 <nmea_loop+0x11c>
					break;
				checksum_read[0] = *(checksum + 1);
 8003cda:	7843      	ldrb	r3, [r0, #1]
 8003cdc:	aa02      	add	r2, sp, #8
 8003cde:	7013      	strb	r3, [r2, #0]
				checksum_read[1] = *(checksum + 2);
 8003ce0:	7883      	ldrb	r3, [r0, #2]
				memset(line, 0, sizeof(line));
 8003ce2:	2100      	movs	r1, #0
				checksum_read[1] = *(checksum + 2);
 8003ce4:	7053      	strb	r3, [r2, #1]
				memset(line, 0, sizeof(line));
 8003ce6:	a804      	add	r0, sp, #16
 8003ce8:	2280      	movs	r2, #128	; 0x80
 8003cea:	f001 fb5f 	bl	80053ac <memset>
				int cpy = checksum - found + 3;
 8003cee:	1baa      	subs	r2, r5, r6
 8003cf0:	3203      	adds	r2, #3
				if (cpy > sizeof(line))
 8003cf2:	2a80      	cmp	r2, #128	; 0x80
 8003cf4:	d81e      	bhi.n	8003d34 <nmea_loop+0x11c>
					break;
				strncpy(line, found, cpy);
 8003cf6:	0031      	movs	r1, r6
 8003cf8:	a804      	add	r0, sp, #16
 8003cfa:	f002 f965 	bl	8005fc8 <strncpy>
				uint8_t c = nmea_checksum(line);
 8003cfe:	a804      	add	r0, sp, #16
 8003d00:	f7ff ff1c 	bl	8003b3c <nmea_checksum>
				int cc = 0;
 8003d04:	2300      	movs	r3, #0
				uint8_t c = nmea_checksum(line);
 8003d06:	0005      	movs	r5, r0
				sscanf(checksum_read, "%X", &cc);
 8003d08:	499a      	ldr	r1, [pc, #616]	; (8003f74 <nmea_loop+0x35c>)
 8003d0a:	aa03      	add	r2, sp, #12
 8003d0c:	a802      	add	r0, sp, #8
				int cc = 0;
 8003d0e:	9303      	str	r3, [sp, #12]
				sscanf(checksum_read, "%X", &cc);
 8003d10:	f002 f8d6 	bl	8005ec0 <siscanf>
				if (cc == c)
 8003d14:	9b03      	ldr	r3, [sp, #12]
 8003d16:	429d      	cmp	r5, r3
 8003d18:	d10c      	bne.n	8003d34 <nmea_loop+0x11c>
				{
					char *str = strtok(line, ",*");
 8003d1a:	4997      	ldr	r1, [pc, #604]	; (8003f78 <nmea_loop+0x360>)
 8003d1c:	a804      	add	r0, sp, #16
 8003d1e:	f002 ffb7 	bl	8006c90 <strtok>
					uint8_t index = 2;
 8003d22:	2302      	movs	r3, #2
					char *str = strtok(line, ",*");
 8003d24:	0005      	movs	r5, r0
								nmea->gnss.valid.course = 1;
							break;
							case 10:
								if (str[0] < '0' || str[0] > '9')
									break;
								nmea->gnss.date_d = ((str[0] - 48) * 10) + (str[1] - 48);
 8003d26:	260a      	movs	r6, #10
					uint8_t index = 2;
 8003d28:	9301      	str	r3, [sp, #4]
					while (str != NULL)
 8003d2a:	2d00      	cmp	r5, #0
 8003d2c:	d000      	beq.n	8003d30 <nmea_loop+0x118>
 8003d2e:	e1e2      	b.n	80040f6 <nmea_loop+0x4de>
						}
						index++;
						if (end)
							break;
					}
					nmea->available = true;
 8003d30:	2301      	movs	r3, #1
 8003d32:	7463      	strb	r3, [r4, #17]

		//	+++	decode &xxHDT
		do
		{
			end = false;
			found = strstr(nmea->buf, NMEA_HDT);
 8003d34:	68b9      	ldr	r1, [r7, #8]
 8003d36:	68a0      	ldr	r0, [r4, #8]
 8003d38:	f002 f95a 	bl	8005ff0 <strstr>
 8003d3c:	1e06      	subs	r6, r0, #0
			if (found != NULL)
 8003d3e:	d049      	beq.n	8003dd4 <nmea_loop+0x1bc>
			{
				found -= 3;
				if (found[0] != '$')
 8003d40:	3e03      	subs	r6, #3
 8003d42:	7833      	ldrb	r3, [r6, #0]
 8003d44:	2b24      	cmp	r3, #36	; 0x24
 8003d46:	d145      	bne.n	8003dd4 <nmea_loop+0x1bc>
					break;
				checksum = strstr(found, "*");
 8003d48:	212a      	movs	r1, #42	; 0x2a
 8003d4a:	0030      	movs	r0, r6
 8003d4c:	f002 f92e 	bl	8005fac <strchr>
 8003d50:	1e05      	subs	r5, r0, #0
				if (checksum == NULL)
 8003d52:	d03f      	beq.n	8003dd4 <nmea_loop+0x1bc>
					break;
				checksum_read[0] = *(checksum + 1);
 8003d54:	7843      	ldrb	r3, [r0, #1]
 8003d56:	aa02      	add	r2, sp, #8
 8003d58:	7013      	strb	r3, [r2, #0]
				checksum_read[1] = *(checksum + 2);
 8003d5a:	7883      	ldrb	r3, [r0, #2]
				memset(line, 0, sizeof(line));
 8003d5c:	2100      	movs	r1, #0
				checksum_read[1] = *(checksum + 2);
 8003d5e:	7053      	strb	r3, [r2, #1]
				memset(line, 0, sizeof(line));
 8003d60:	a804      	add	r0, sp, #16
 8003d62:	2280      	movs	r2, #128	; 0x80
 8003d64:	f001 fb22 	bl	80053ac <memset>
				int cpy = checksum - found + 3;
 8003d68:	1baa      	subs	r2, r5, r6
 8003d6a:	3203      	adds	r2, #3
				if (cpy > sizeof(line))
 8003d6c:	2a80      	cmp	r2, #128	; 0x80
 8003d6e:	d831      	bhi.n	8003dd4 <nmea_loop+0x1bc>
					break;
				strncpy(line, found, cpy);
 8003d70:	0031      	movs	r1, r6
 8003d72:	a804      	add	r0, sp, #16
 8003d74:	f002 f928 	bl	8005fc8 <strncpy>
				uint8_t c = nmea_checksum(line);
 8003d78:	a804      	add	r0, sp, #16
 8003d7a:	f7ff fedf 	bl	8003b3c <nmea_checksum>
				int cc = 0;
 8003d7e:	2600      	movs	r6, #0
				uint8_t c = nmea_checksum(line);
 8003d80:	0005      	movs	r5, r0
				sscanf(checksum_read, "%X", &cc);
 8003d82:	497c      	ldr	r1, [pc, #496]	; (8003f74 <nmea_loop+0x35c>)
 8003d84:	aa03      	add	r2, sp, #12
 8003d86:	a802      	add	r0, sp, #8
				int cc = 0;
 8003d88:	9603      	str	r6, [sp, #12]
				sscanf(checksum_read, "%X", &cc);
 8003d8a:	f002 f899 	bl	8005ec0 <siscanf>
				if (cc == c)
 8003d8e:	9b03      	ldr	r3, [sp, #12]
 8003d90:	429d      	cmp	r5, r3
 8003d92:	d11f      	bne.n	8003dd4 <nmea_loop+0x1bc>
				{
					char *str = strtok(line, ",*");
 8003d94:	4d78      	ldr	r5, [pc, #480]	; (8003f78 <nmea_loop+0x360>)
 8003d96:	a804      	add	r0, sp, #16
 8003d98:	0029      	movs	r1, r5
 8003d9a:	f002 ff79 	bl	8006c90 <strtok>
					uint8_t index = 2;
					while (str != NULL)
 8003d9e:	42b0      	cmp	r0, r6
 8003da0:	d016      	beq.n	8003dd0 <nmea_loop+0x1b8>
					{
						str = strtok(NULL, ",*");
 8003da2:	0029      	movs	r1, r5
 8003da4:	0030      	movs	r0, r6
 8003da6:	f002 ff73 	bl	8006c90 <strtok>
						switch (index)
						{
							case 2:
								if (str[0] < '0' || str[0] > '9')
 8003daa:	7803      	ldrb	r3, [r0, #0]
 8003dac:	3b30      	subs	r3, #48	; 0x30
 8003dae:	2b09      	cmp	r3, #9
 8003db0:	d80a      	bhi.n	8003dc8 <nmea_loop+0x1b0>
									break;
								nmea->compass.true_course_deg = (float)atof(str);
 8003db2:	f001 fabb 	bl	800532c <atof>
 8003db6:	f7ff f813 	bl	8002de0 <__aeabi_d2f>
								nmea->compass.valid.true_compass = 1;
 8003dba:	0022      	movs	r2, r4
 8003dbc:	2301      	movs	r3, #1
 8003dbe:	3240      	adds	r2, #64	; 0x40
 8003dc0:	7811      	ldrb	r1, [r2, #0]
								nmea->compass.true_course_deg = (float)atof(str);
 8003dc2:	6460      	str	r0, [r4, #68]	; 0x44
								nmea->compass.valid.true_compass = 1;
 8003dc4:	430b      	orrs	r3, r1
 8003dc6:	7013      	strb	r3, [r2, #0]
						str = strtok(NULL, ",*");
 8003dc8:	0029      	movs	r1, r5
 8003dca:	2000      	movs	r0, #0
 8003dcc:	f002 ff60 	bl	8006c90 <strtok>
						}
						index++;
						if (end)
							break;
					}
					nmea->available = true;
 8003dd0:	2301      	movs	r3, #1
 8003dd2:	7463      	strb	r3, [r4, #17]

		//	+++	decode &xxHDM
		do
		{
			end = false;
			found = strstr(nmea->buf, NMEA_HDM);
 8003dd4:	68f9      	ldr	r1, [r7, #12]
 8003dd6:	68a0      	ldr	r0, [r4, #8]
 8003dd8:	f002 f90a 	bl	8005ff0 <strstr>
 8003ddc:	1e06      	subs	r6, r0, #0
			if (found != NULL)
 8003dde:	d049      	beq.n	8003e74 <nmea_loop+0x25c>
			{
				found -= 3;
				if (found[0] != '$')
 8003de0:	3e03      	subs	r6, #3
 8003de2:	7833      	ldrb	r3, [r6, #0]
 8003de4:	2b24      	cmp	r3, #36	; 0x24
 8003de6:	d145      	bne.n	8003e74 <nmea_loop+0x25c>
					break;
				checksum = strstr(found, "*");
 8003de8:	212a      	movs	r1, #42	; 0x2a
 8003dea:	0030      	movs	r0, r6
 8003dec:	f002 f8de 	bl	8005fac <strchr>
 8003df0:	1e05      	subs	r5, r0, #0
				if (checksum == NULL)
 8003df2:	d03f      	beq.n	8003e74 <nmea_loop+0x25c>
					break;
				checksum_read[0] = *(checksum + 1);
 8003df4:	7843      	ldrb	r3, [r0, #1]
 8003df6:	aa02      	add	r2, sp, #8
 8003df8:	7013      	strb	r3, [r2, #0]
				checksum_read[1] = *(checksum + 2);
 8003dfa:	7883      	ldrb	r3, [r0, #2]
				memset(line, 0, sizeof(line));
 8003dfc:	2100      	movs	r1, #0
				checksum_read[1] = *(checksum + 2);
 8003dfe:	7053      	strb	r3, [r2, #1]
				memset(line, 0, sizeof(line));
 8003e00:	a804      	add	r0, sp, #16
 8003e02:	2280      	movs	r2, #128	; 0x80
 8003e04:	f001 fad2 	bl	80053ac <memset>
				int cpy = checksum - found + 3;
 8003e08:	1baa      	subs	r2, r5, r6
 8003e0a:	3203      	adds	r2, #3
				if (cpy > sizeof(line))
 8003e0c:	2a80      	cmp	r2, #128	; 0x80
 8003e0e:	d831      	bhi.n	8003e74 <nmea_loop+0x25c>
					break;
				strncpy(line, found, cpy);
 8003e10:	0031      	movs	r1, r6
 8003e12:	a804      	add	r0, sp, #16
 8003e14:	f002 f8d8 	bl	8005fc8 <strncpy>
				uint8_t c = nmea_checksum(line);
 8003e18:	a804      	add	r0, sp, #16
 8003e1a:	f7ff fe8f 	bl	8003b3c <nmea_checksum>
				int cc = 0;
 8003e1e:	2600      	movs	r6, #0
				uint8_t c = nmea_checksum(line);
 8003e20:	0005      	movs	r5, r0
				sscanf(checksum_read, "%X", &cc);
 8003e22:	4954      	ldr	r1, [pc, #336]	; (8003f74 <nmea_loop+0x35c>)
 8003e24:	aa03      	add	r2, sp, #12
 8003e26:	a802      	add	r0, sp, #8
				int cc = 0;
 8003e28:	9603      	str	r6, [sp, #12]
				sscanf(checksum_read, "%X", &cc);
 8003e2a:	f002 f849 	bl	8005ec0 <siscanf>
				if (cc == c)
 8003e2e:	9b03      	ldr	r3, [sp, #12]
 8003e30:	429d      	cmp	r5, r3
 8003e32:	d11f      	bne.n	8003e74 <nmea_loop+0x25c>
				{
					char *str = strtok(line, ",*");
 8003e34:	4d50      	ldr	r5, [pc, #320]	; (8003f78 <nmea_loop+0x360>)
 8003e36:	a804      	add	r0, sp, #16
 8003e38:	0029      	movs	r1, r5
 8003e3a:	f002 ff29 	bl	8006c90 <strtok>
					uint8_t index = 2;
					while (str != NULL)
 8003e3e:	42b0      	cmp	r0, r6
 8003e40:	d016      	beq.n	8003e70 <nmea_loop+0x258>
					{
						str = strtok(NULL, ",*");
 8003e42:	0029      	movs	r1, r5
 8003e44:	0030      	movs	r0, r6
 8003e46:	f002 ff23 	bl	8006c90 <strtok>
						switch (index)
						{
							case 2:
								if (str[0] < '0' || str[0] > '9')
 8003e4a:	7803      	ldrb	r3, [r0, #0]
 8003e4c:	3b30      	subs	r3, #48	; 0x30
 8003e4e:	2b09      	cmp	r3, #9
 8003e50:	d80a      	bhi.n	8003e68 <nmea_loop+0x250>
									break;
								nmea->compass.mag_course_deg = (float)atof(str);
 8003e52:	f001 fa6b 	bl	800532c <atof>
 8003e56:	f7fe ffc3 	bl	8002de0 <__aeabi_d2f>
								nmea->compass.valid.mag_compass = 1;
 8003e5a:	0022      	movs	r2, r4
 8003e5c:	2302      	movs	r3, #2
 8003e5e:	3240      	adds	r2, #64	; 0x40
 8003e60:	7811      	ldrb	r1, [r2, #0]
								nmea->compass.mag_course_deg = (float)atof(str);
 8003e62:	64a0      	str	r0, [r4, #72]	; 0x48
								nmea->compass.valid.mag_compass = 1;
 8003e64:	430b      	orrs	r3, r1
 8003e66:	7013      	strb	r3, [r2, #0]
						str = strtok(NULL, ",*");
 8003e68:	0029      	movs	r1, r5
 8003e6a:	2000      	movs	r0, #0
 8003e6c:	f002 ff10 	bl	8006c90 <strtok>
						}
						index++;
						if (end)
							break;
					}
					nmea->available = true;
 8003e70:	2301      	movs	r3, #1
 8003e72:	7463      	strb	r3, [r4, #17]

		//	+++	decode &xxDPT
		do
		{
			end = false;
			found = strstr(nmea->buf, NMEA_DPT);
 8003e74:	6939      	ldr	r1, [r7, #16]
 8003e76:	68a0      	ldr	r0, [r4, #8]
 8003e78:	f002 f8ba 	bl	8005ff0 <strstr>
 8003e7c:	1e06      	subs	r6, r0, #0
			if (found != NULL)
 8003e7e:	d03e      	beq.n	8003efe <nmea_loop+0x2e6>
			{
				found -= 3;
				if (found[0] != '$')
 8003e80:	3e03      	subs	r6, #3
 8003e82:	7833      	ldrb	r3, [r6, #0]
 8003e84:	2b24      	cmp	r3, #36	; 0x24
 8003e86:	d13a      	bne.n	8003efe <nmea_loop+0x2e6>
					break;
				checksum = strstr(found, "*");
 8003e88:	212a      	movs	r1, #42	; 0x2a
 8003e8a:	0030      	movs	r0, r6
 8003e8c:	f002 f88e 	bl	8005fac <strchr>
 8003e90:	1e05      	subs	r5, r0, #0
				if (checksum == NULL)
 8003e92:	d034      	beq.n	8003efe <nmea_loop+0x2e6>
					break;
				checksum_read[0] = *(checksum + 1);
 8003e94:	7843      	ldrb	r3, [r0, #1]
 8003e96:	aa02      	add	r2, sp, #8
 8003e98:	7013      	strb	r3, [r2, #0]
				checksum_read[1] = *(checksum + 2);
 8003e9a:	7883      	ldrb	r3, [r0, #2]
				memset(line, 0, sizeof(line));
 8003e9c:	2100      	movs	r1, #0
				checksum_read[1] = *(checksum + 2);
 8003e9e:	7053      	strb	r3, [r2, #1]
				memset(line, 0, sizeof(line));
 8003ea0:	a804      	add	r0, sp, #16
 8003ea2:	2280      	movs	r2, #128	; 0x80
 8003ea4:	f001 fa82 	bl	80053ac <memset>
				int cpy = checksum - found + 3;
 8003ea8:	1baa      	subs	r2, r5, r6
 8003eaa:	3203      	adds	r2, #3
				if (cpy > sizeof(line))
 8003eac:	2a80      	cmp	r2, #128	; 0x80
 8003eae:	d826      	bhi.n	8003efe <nmea_loop+0x2e6>
					break;
				strncpy(line, found, cpy);
 8003eb0:	0031      	movs	r1, r6
 8003eb2:	a804      	add	r0, sp, #16
 8003eb4:	f002 f888 	bl	8005fc8 <strncpy>
				uint8_t c = nmea_checksum(line);
 8003eb8:	a804      	add	r0, sp, #16
 8003eba:	f7ff fe3f 	bl	8003b3c <nmea_checksum>
				int cc = 0;
 8003ebe:	2300      	movs	r3, #0
				uint8_t c = nmea_checksum(line);
 8003ec0:	0005      	movs	r5, r0
				sscanf(checksum_read, "%X", &cc);
 8003ec2:	492c      	ldr	r1, [pc, #176]	; (8003f74 <nmea_loop+0x35c>)
 8003ec4:	aa03      	add	r2, sp, #12
 8003ec6:	a802      	add	r0, sp, #8
				int cc = 0;
 8003ec8:	9303      	str	r3, [sp, #12]
				sscanf(checksum_read, "%X", &cc);
 8003eca:	f001 fff9 	bl	8005ec0 <siscanf>
				if (cc == c)
 8003ece:	9b03      	ldr	r3, [sp, #12]
 8003ed0:	429d      	cmp	r5, r3
 8003ed2:	d114      	bne.n	8003efe <nmea_loop+0x2e6>
				{
					char *str = strtok(line, ",*");
 8003ed4:	4928      	ldr	r1, [pc, #160]	; (8003f78 <nmea_loop+0x360>)
 8003ed6:	a804      	add	r0, sp, #16
 8003ed8:	f002 feda 	bl	8006c90 <strtok>
					uint8_t index = 2;
 8003edc:	2602      	movs	r6, #2
					char *str = strtok(line, ",*");
 8003ede:	0005      	movs	r5, r0
					while (str != NULL)
 8003ee0:	2d00      	cmp	r5, #0
 8003ee2:	d00a      	beq.n	8003efa <nmea_loop+0x2e2>
					{
						str = strtok(NULL, ",*");
 8003ee4:	2000      	movs	r0, #0
 8003ee6:	4924      	ldr	r1, [pc, #144]	; (8003f78 <nmea_loop+0x360>)
 8003ee8:	f002 fed2 	bl	8006c90 <strtok>
 8003eec:	0005      	movs	r5, r0
						switch (index)
 8003eee:	2e02      	cmp	r6, #2
 8003ef0:	d100      	bne.n	8003ef4 <nmea_loop+0x2dc>
 8003ef2:	e1b4      	b.n	800425e <nmea_loop+0x646>
 8003ef4:	2e03      	cmp	r6, #3
 8003ef6:	d100      	bne.n	8003efa <nmea_loop+0x2e2>
 8003ef8:	e1c3      	b.n	8004282 <nmea_loop+0x66a>
						}
						index++;
						if (end)
							break;
					}
					nmea->available = true;
 8003efa:	2301      	movs	r3, #1
 8003efc:	7463      	strb	r3, [r4, #17]

		//	+++	decode &xxMTW
		do
		{
			end = false;
			found = strstr(nmea->buf, NMEA_MTW);
 8003efe:	6979      	ldr	r1, [r7, #20]
 8003f00:	68a0      	ldr	r0, [r4, #8]
 8003f02:	f002 f875 	bl	8005ff0 <strstr>
 8003f06:	1e06      	subs	r6, r0, #0
			if (found != NULL)
 8003f08:	d047      	beq.n	8003f9a <nmea_loop+0x382>
			{
				found -= 3;
				if (found[0] != '$')
 8003f0a:	3e03      	subs	r6, #3
 8003f0c:	7833      	ldrb	r3, [r6, #0]
 8003f0e:	2b24      	cmp	r3, #36	; 0x24
 8003f10:	d143      	bne.n	8003f9a <nmea_loop+0x382>
					break;
				checksum = strstr(found, "*");
 8003f12:	212a      	movs	r1, #42	; 0x2a
 8003f14:	0030      	movs	r0, r6
 8003f16:	f002 f849 	bl	8005fac <strchr>
 8003f1a:	1e05      	subs	r5, r0, #0
				if (checksum == NULL)
 8003f1c:	d03d      	beq.n	8003f9a <nmea_loop+0x382>
					break;
				checksum_read[0] = *(checksum + 1);
 8003f1e:	7843      	ldrb	r3, [r0, #1]
 8003f20:	aa02      	add	r2, sp, #8
 8003f22:	7013      	strb	r3, [r2, #0]
				checksum_read[1] = *(checksum + 2);
 8003f24:	7883      	ldrb	r3, [r0, #2]
				memset(line, 0, sizeof(line));
 8003f26:	2100      	movs	r1, #0
				checksum_read[1] = *(checksum + 2);
 8003f28:	7053      	strb	r3, [r2, #1]
				memset(line, 0, sizeof(line));
 8003f2a:	a804      	add	r0, sp, #16
 8003f2c:	2280      	movs	r2, #128	; 0x80
 8003f2e:	f001 fa3d 	bl	80053ac <memset>
				int cpy = checksum - found + 3;
 8003f32:	1baa      	subs	r2, r5, r6
 8003f34:	3203      	adds	r2, #3
				if (cpy > sizeof(line))
 8003f36:	2a80      	cmp	r2, #128	; 0x80
 8003f38:	d82f      	bhi.n	8003f9a <nmea_loop+0x382>
					break;
				strncpy(line, found, cpy);
 8003f3a:	0031      	movs	r1, r6
 8003f3c:	a804      	add	r0, sp, #16
 8003f3e:	f002 f843 	bl	8005fc8 <strncpy>
				uint8_t c = nmea_checksum(line);
 8003f42:	a804      	add	r0, sp, #16
 8003f44:	f7ff fdfa 	bl	8003b3c <nmea_checksum>
				int cc = 0;
 8003f48:	2300      	movs	r3, #0
				uint8_t c = nmea_checksum(line);
 8003f4a:	0005      	movs	r5, r0
				sscanf(checksum_read, "%X", &cc);
 8003f4c:	4909      	ldr	r1, [pc, #36]	; (8003f74 <nmea_loop+0x35c>)
 8003f4e:	aa03      	add	r2, sp, #12
 8003f50:	a802      	add	r0, sp, #8
				int cc = 0;
 8003f52:	9303      	str	r3, [sp, #12]
				sscanf(checksum_read, "%X", &cc);
 8003f54:	f001 ffb4 	bl	8005ec0 <siscanf>
				if (cc == c)
 8003f58:	9b03      	ldr	r3, [sp, #12]
 8003f5a:	429d      	cmp	r5, r3
 8003f5c:	d11d      	bne.n	8003f9a <nmea_loop+0x382>
				{
					char *str = strtok(line, ",*");
 8003f5e:	4f06      	ldr	r7, [pc, #24]	; (8003f78 <nmea_loop+0x360>)
 8003f60:	a804      	add	r0, sp, #16
 8003f62:	0039      	movs	r1, r7
 8003f64:	f002 fe94 	bl	8006c90 <strtok>
					uint8_t index = 2;
 8003f68:	2602      	movs	r6, #2
					char *str = strtok(line, ",*");
 8003f6a:	0005      	movs	r5, r0
 8003f6c:	e006      	b.n	8003f7c <nmea_loop+0x364>
 8003f6e:	46c0      	nop			; (mov r8, r8)
 8003f70:	20000078 	.word	0x20000078
 8003f74:	0800a5c6 	.word	0x0800a5c6
 8003f78:	0800a5c9 	.word	0x0800a5c9
					while (str != NULL)
 8003f7c:	2d00      	cmp	r5, #0
 8003f7e:	d00a      	beq.n	8003f96 <nmea_loop+0x37e>
					{
						str = strtok(NULL, ",*");
 8003f80:	0039      	movs	r1, r7
 8003f82:	2000      	movs	r0, #0
 8003f84:	f002 fe84 	bl	8006c90 <strtok>
 8003f88:	0005      	movs	r5, r0
						switch (index)
 8003f8a:	2e02      	cmp	r6, #2
 8003f8c:	d100      	bne.n	8003f90 <nmea_loop+0x378>
 8003f8e:	e186      	b.n	800429e <nmea_loop+0x686>
 8003f90:	2e03      	cmp	r6, #3
 8003f92:	d100      	bne.n	8003f96 <nmea_loop+0x37e>
 8003f94:	e18f      	b.n	80042b6 <nmea_loop+0x69e>
						}
						index++;
						if (end)
							break;
					}
					nmea->available = true;
 8003f96:	2301      	movs	r3, #1
 8003f98:	7463      	strb	r3, [r4, #17]
			}
		}
		while (0);
		//	---	decode $xxMTW

    memset(nmea->buf, 0, nmea->buf_size);
 8003f9a:	2100      	movs	r1, #0
 8003f9c:	89e2      	ldrh	r2, [r4, #14]
 8003f9e:	68a0      	ldr	r0, [r4, #8]
 8003fa0:	f001 fa04 	bl	80053ac <memset>
    nmea->buf_index = 0;
 8003fa4:	2300      	movs	r3, #0
 8003fa6:	81a3      	strh	r3, [r4, #12]
	}
	nmea->lock = false;
 8003fa8:	2300      	movs	r3, #0
 8003faa:	7423      	strb	r3, [r4, #16]
}
 8003fac:	b025      	add	sp, #148	; 0x94
 8003fae:	bdf0      	pop	{r4, r5, r6, r7, pc}
		nmea_delay(1);
 8003fb0:	2001      	movs	r0, #1
 8003fb2:	f000 fb3f 	bl	8004634 <HAL_Delay>
 8003fb6:	e632      	b.n	8003c1e <nmea_loop+0x6>
						str = strtok(NULL, ",*");
 8003fb8:	0039      	movs	r1, r7
 8003fba:	2000      	movs	r0, #0
 8003fbc:	f002 fe68 	bl	8006c90 <strtok>
 8003fc0:	0005      	movs	r5, r0
						switch (index)
 8003fc2:	1eb0      	subs	r0, r6, #2
 8003fc4:	2808      	cmp	r0, #8
 8003fc6:	d900      	bls.n	8003fca <nmea_loop+0x3b2>
 8003fc8:	e674      	b.n	8003cb4 <nmea_loop+0x9c>
 8003fca:	f7fc f8ab 	bl	8000124 <__gnu_thumb1_case_uqi>
 8003fce:	2305      	.short	0x2305
 8003fd0:	2d554a30 	.word	0x2d554a30
 8003fd4:	7a6f      	.short	0x7a6f
 8003fd6:	87          	.byte	0x87
 8003fd7:	00          	.byte	0x00
								if (str[0] < '0' || str[0] > '9')
 8003fd8:	782b      	ldrb	r3, [r5, #0]
 8003fda:	3b30      	subs	r3, #48	; 0x30
 8003fdc:	b2db      	uxtb	r3, r3
 8003fde:	2b09      	cmp	r3, #9
 8003fe0:	d822      	bhi.n	8004028 <nmea_loop+0x410>
								nmea->gnss.time_h = ((str[0] - 48) * 10) + (str[1] - 48);
 8003fe2:	220a      	movs	r2, #10
 8003fe4:	4353      	muls	r3, r2
 8003fe6:	7869      	ldrb	r1, [r5, #1]
 8003fe8:	3930      	subs	r1, #48	; 0x30
 8003fea:	18cb      	adds	r3, r1, r3
 8003fec:	75e3      	strb	r3, [r4, #23]
								nmea->gnss.time_m = ((str[2] - 48) * 10) + (str[3] - 48);
 8003fee:	78ab      	ldrb	r3, [r5, #2]
 8003ff0:	78e9      	ldrb	r1, [r5, #3]
 8003ff2:	3b30      	subs	r3, #48	; 0x30
 8003ff4:	4353      	muls	r3, r2
 8003ff6:	3930      	subs	r1, #48	; 0x30
 8003ff8:	185b      	adds	r3, r3, r1
 8003ffa:	7623      	strb	r3, [r4, #24]
								nmea->gnss.time_s = ((str[4] - 48) * 10) + (str[5] - 48);
 8003ffc:	792b      	ldrb	r3, [r5, #4]
 8003ffe:	3b30      	subs	r3, #48	; 0x30
 8004000:	435a      	muls	r2, r3
 8004002:	796b      	ldrb	r3, [r5, #5]
 8004004:	3b30      	subs	r3, #48	; 0x30
 8004006:	18d2      	adds	r2, r2, r3
								nmea->gnss.valid.time = 1;
 8004008:	2302      	movs	r3, #2
								nmea->gnss.time_s = ((str[4] - 48) * 10) + (str[5] - 48);
 800400a:	7662      	strb	r2, [r4, #25]
								nmea->gnss.valid.time = 1;
 800400c:	7d22      	ldrb	r2, [r4, #20]
								nmea->gnss.valid.altitude = 1;
 800400e:	4313      	orrs	r3, r2
 8004010:	7523      	strb	r3, [r4, #20]
							break;
 8004012:	e009      	b.n	8004028 <nmea_loop+0x410>
								if (str[0] < '0' || str[0] > '9')
 8004014:	782b      	ldrb	r3, [r5, #0]
 8004016:	3b30      	subs	r3, #48	; 0x30
 8004018:	2b09      	cmp	r3, #9
 800401a:	d805      	bhi.n	8004028 <nmea_loop+0x410>
								nmea->gnss.latitude_tmp = (float)atof(str);
 800401c:	0028      	movs	r0, r5
 800401e:	f001 f985 	bl	800532c <atof>
 8004022:	f7fe fedd 	bl	8002de0 <__aeabi_d2f>
 8004026:	6220      	str	r0, [r4, #32]
						index++;
 8004028:	3601      	adds	r6, #1
 800402a:	b2f6      	uxtb	r6, r6
						if (end)
 800402c:	e63f      	b.n	8003cae <nmea_loop+0x96>
								if (strcmp(str, "S") == 0)
 800402e:	0028      	movs	r0, r5
 8004030:	49ad      	ldr	r1, [pc, #692]	; (80042e8 <nmea_loop+0x6d0>)
 8004032:	f7fc f865 	bl	8000100 <strcmp>
 8004036:	2800      	cmp	r0, #0
 8004038:	d109      	bne.n	800404e <nmea_loop+0x436>
									nmea->gnss.latitude_deg = -nmea_convert(nmea->gnss.latitude_tmp);
 800403a:	6a20      	ldr	r0, [r4, #32]
 800403c:	f7ff fd92 	bl	8003b64 <nmea_convert>
 8004040:	2380      	movs	r3, #128	; 0x80
 8004042:	061b      	lsls	r3, r3, #24
 8004044:	18c0      	adds	r0, r0, r3
									nmea->gnss.valid.latitude = 1;
 8004046:	2308      	movs	r3, #8
 8004048:	7d22      	ldrb	r2, [r4, #20]
									nmea->gnss.latitude_deg = nmea_convert(nmea->gnss.latitude_tmp);
 800404a:	62a0      	str	r0, [r4, #40]	; 0x28
									nmea->gnss.valid.latitude = 1;
 800404c:	e7df      	b.n	800400e <nmea_loop+0x3f6>
								else if (strcmp(str, "N") == 0)
 800404e:	0028      	movs	r0, r5
 8004050:	49a6      	ldr	r1, [pc, #664]	; (80042ec <nmea_loop+0x6d4>)
 8004052:	f7fc f855 	bl	8000100 <strcmp>
 8004056:	2800      	cmp	r0, #0
 8004058:	d1e6      	bne.n	8004028 <nmea_loop+0x410>
									nmea->gnss.latitude_deg = nmea_convert(nmea->gnss.latitude_tmp);
 800405a:	6a20      	ldr	r0, [r4, #32]
 800405c:	f7ff fd82 	bl	8003b64 <nmea_convert>
 8004060:	e7f1      	b.n	8004046 <nmea_loop+0x42e>
								if (str[0] < '0' || str[0] > '9')
 8004062:	782b      	ldrb	r3, [r5, #0]
 8004064:	3b30      	subs	r3, #48	; 0x30
 8004066:	2b09      	cmp	r3, #9
 8004068:	d8de      	bhi.n	8004028 <nmea_loop+0x410>
								nmea->gnss.longitude_tmp = (float)atof(str);
 800406a:	0028      	movs	r0, r5
 800406c:	f001 f95e 	bl	800532c <atof>
 8004070:	f7fe feb6 	bl	8002de0 <__aeabi_d2f>
 8004074:	6260      	str	r0, [r4, #36]	; 0x24
							break;
 8004076:	e7d7      	b.n	8004028 <nmea_loop+0x410>
								if (strcmp(str, "W") == 0)
 8004078:	0028      	movs	r0, r5
 800407a:	499d      	ldr	r1, [pc, #628]	; (80042f0 <nmea_loop+0x6d8>)
 800407c:	f7fc f840 	bl	8000100 <strcmp>
 8004080:	2800      	cmp	r0, #0
 8004082:	d109      	bne.n	8004098 <nmea_loop+0x480>
									nmea->gnss.longitude_deg = -nmea_convert(nmea->gnss.longitude_tmp);
 8004084:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8004086:	f7ff fd6d 	bl	8003b64 <nmea_convert>
 800408a:	2380      	movs	r3, #128	; 0x80
 800408c:	061b      	lsls	r3, r3, #24
 800408e:	18c0      	adds	r0, r0, r3
									nmea->gnss.valid.longitude = 1;
 8004090:	2310      	movs	r3, #16
 8004092:	7d22      	ldrb	r2, [r4, #20]
									nmea->gnss.longitude_deg = nmea_convert(nmea->gnss.longitude_tmp);
 8004094:	62e0      	str	r0, [r4, #44]	; 0x2c
									nmea->gnss.valid.longitude = 1;
 8004096:	e7ba      	b.n	800400e <nmea_loop+0x3f6>
								else if (strcmp(str, "E") == 0)
 8004098:	0028      	movs	r0, r5
 800409a:	4996      	ldr	r1, [pc, #600]	; (80042f4 <nmea_loop+0x6dc>)
 800409c:	f7fc f830 	bl	8000100 <strcmp>
 80040a0:	2800      	cmp	r0, #0
 80040a2:	d1c1      	bne.n	8004028 <nmea_loop+0x410>
									nmea->gnss.longitude_deg = nmea_convert(nmea->gnss.longitude_tmp);
 80040a4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80040a6:	f7ff fd5d 	bl	8003b64 <nmea_convert>
 80040aa:	e7f1      	b.n	8004090 <nmea_loop+0x478>
								if (str[0] < '0' || str[0] > '9')
 80040ac:	782b      	ldrb	r3, [r5, #0]
 80040ae:	3b30      	subs	r3, #48	; 0x30
 80040b0:	2b09      	cmp	r3, #9
 80040b2:	d8b9      	bhi.n	8004028 <nmea_loop+0x410>
								nmea->gnss.satellite = atoi(str);
 80040b4:	0028      	movs	r0, r5
 80040b6:	f001 f93e 	bl	8005336 <atoi>
								nmea->gnss.valid.satellite = 1;
 80040ba:	2301      	movs	r3, #1
 80040bc:	7d22      	ldrb	r2, [r4, #20]
								nmea->gnss.satellite = atoi(str);
 80040be:	75a0      	strb	r0, [r4, #22]
								nmea->gnss.valid.satellite = 1;
 80040c0:	e7a5      	b.n	800400e <nmea_loop+0x3f6>
								if (str[0] < '0' || str[0] > '9')
 80040c2:	782b      	ldrb	r3, [r5, #0]
 80040c4:	3b30      	subs	r3, #48	; 0x30
 80040c6:	2b09      	cmp	r3, #9
 80040c8:	d8ae      	bhi.n	8004028 <nmea_loop+0x410>
								nmea->gnss.precision_m = (float)atof(str);
 80040ca:	0028      	movs	r0, r5
 80040cc:	f001 f92e 	bl	800532c <atof>
 80040d0:	f7fe fe86 	bl	8002de0 <__aeabi_d2f>
								nmea->gnss.valid.precision = 1;
 80040d4:	2220      	movs	r2, #32
 80040d6:	7d23      	ldrb	r3, [r4, #20]
								nmea->gnss.precision_m = (float)atof(str);
 80040d8:	6320      	str	r0, [r4, #48]	; 0x30
								nmea->gnss.valid.precision = 1;
 80040da:	e798      	b.n	800400e <nmea_loop+0x3f6>
								if (str[0] < '0' || str[0] > '9')
 80040dc:	782b      	ldrb	r3, [r5, #0]
 80040de:	3b30      	subs	r3, #48	; 0x30
 80040e0:	2b09      	cmp	r3, #9
 80040e2:	d8a1      	bhi.n	8004028 <nmea_loop+0x410>
								nmea->gnss.altitude_m = (float)atof(str);
 80040e4:	0028      	movs	r0, r5
 80040e6:	f001 f921 	bl	800532c <atof>
 80040ea:	f7fe fe79 	bl	8002de0 <__aeabi_d2f>
								nmea->gnss.valid.altitude = 1;
 80040ee:	2240      	movs	r2, #64	; 0x40
 80040f0:	7d23      	ldrb	r3, [r4, #20]
								nmea->gnss.altitude_m = (float)atof(str);
 80040f2:	6360      	str	r0, [r4, #52]	; 0x34
								nmea->gnss.valid.altitude = 1;
 80040f4:	e78b      	b.n	800400e <nmea_loop+0x3f6>
						str = strtok(NULL, ",*");
 80040f6:	2000      	movs	r0, #0
 80040f8:	497f      	ldr	r1, [pc, #508]	; (80042f8 <nmea_loop+0x6e0>)
 80040fa:	f002 fdc9 	bl	8006c90 <strtok>
						switch (index)
 80040fe:	9b01      	ldr	r3, [sp, #4]
						str = strtok(NULL, ",*");
 8004100:	0005      	movs	r5, r0
						switch (index)
 8004102:	1e98      	subs	r0, r3, #2
 8004104:	2808      	cmp	r0, #8
 8004106:	d900      	bls.n	800410a <nmea_loop+0x4f2>
 8004108:	e612      	b.n	8003d30 <nmea_loop+0x118>
 800410a:	f7fc f80b 	bl	8000124 <__gnu_thumb1_case_uqi>
 800410e:	2c05      	.short	0x2c05
 8004110:	564b3122 	.word	0x564b3122
 8004114:	7e70      	.short	0x7e70
 8004116:	8d          	.byte	0x8d
 8004117:	00          	.byte	0x00
								if (str[0] < '0' || str[0] > '9')
 8004118:	782b      	ldrb	r3, [r5, #0]
 800411a:	3b30      	subs	r3, #48	; 0x30
 800411c:	b2db      	uxtb	r3, r3
 800411e:	2b09      	cmp	r3, #9
 8004120:	d821      	bhi.n	8004166 <nmea_loop+0x54e>
								nmea->gnss.time_h = ((str[0] - 48) * 10) + (str[1] - 48);
 8004122:	4373      	muls	r3, r6
 8004124:	786a      	ldrb	r2, [r5, #1]
 8004126:	3a30      	subs	r2, #48	; 0x30
 8004128:	18d3      	adds	r3, r2, r3
 800412a:	75e3      	strb	r3, [r4, #23]
								nmea->gnss.time_m = ((str[2] - 48) * 10) + (str[3] - 48);
 800412c:	78ab      	ldrb	r3, [r5, #2]
 800412e:	78ea      	ldrb	r2, [r5, #3]
 8004130:	3b30      	subs	r3, #48	; 0x30
 8004132:	4373      	muls	r3, r6
 8004134:	3a30      	subs	r2, #48	; 0x30
 8004136:	189b      	adds	r3, r3, r2
 8004138:	7623      	strb	r3, [r4, #24]
								nmea->gnss.time_s = ((str[4] - 48) * 10) + (str[5] - 48);
 800413a:	792b      	ldrb	r3, [r5, #4]
 800413c:	796a      	ldrb	r2, [r5, #5]
 800413e:	3b30      	subs	r3, #48	; 0x30
 8004140:	4373      	muls	r3, r6
 8004142:	3a30      	subs	r2, #48	; 0x30
 8004144:	189b      	adds	r3, r3, r2
 8004146:	7663      	strb	r3, [r4, #25]
								nmea->gnss.valid.time = 1;
 8004148:	2302      	movs	r3, #2
 800414a:	7d22      	ldrb	r2, [r4, #20]
								nmea->gnss.valid.date = 1;
 800414c:	4313      	orrs	r3, r2
 800414e:	7523      	strb	r3, [r4, #20]
							break;
 8004150:	e009      	b.n	8004166 <nmea_loop+0x54e>
								if (str[0] < '0' || str[0] > '9')
 8004152:	782b      	ldrb	r3, [r5, #0]
 8004154:	3b30      	subs	r3, #48	; 0x30
 8004156:	2b09      	cmp	r3, #9
 8004158:	d805      	bhi.n	8004166 <nmea_loop+0x54e>
								nmea->gnss.latitude_tmp = (float)atof(str);
 800415a:	0028      	movs	r0, r5
 800415c:	f001 f8e6 	bl	800532c <atof>
 8004160:	f7fe fe3e 	bl	8002de0 <__aeabi_d2f>
 8004164:	6220      	str	r0, [r4, #32]
						index++;
 8004166:	9b01      	ldr	r3, [sp, #4]
 8004168:	3301      	adds	r3, #1
 800416a:	b2db      	uxtb	r3, r3
 800416c:	9301      	str	r3, [sp, #4]
						if (end)
 800416e:	e5dc      	b.n	8003d2a <nmea_loop+0x112>
									if (strcmp(str, "S") == 0)
 8004170:	0028      	movs	r0, r5
 8004172:	495d      	ldr	r1, [pc, #372]	; (80042e8 <nmea_loop+0x6d0>)
 8004174:	f7fb ffc4 	bl	8000100 <strcmp>
 8004178:	2800      	cmp	r0, #0
 800417a:	d109      	bne.n	8004190 <nmea_loop+0x578>
										nmea->gnss.latitude_deg = -nmea_convert(nmea->gnss.latitude_tmp);
 800417c:	6a20      	ldr	r0, [r4, #32]
 800417e:	f7ff fcf1 	bl	8003b64 <nmea_convert>
 8004182:	2380      	movs	r3, #128	; 0x80
 8004184:	061b      	lsls	r3, r3, #24
 8004186:	18c0      	adds	r0, r0, r3
									nmea->gnss.valid.latitude = 1;
 8004188:	2308      	movs	r3, #8
 800418a:	7d22      	ldrb	r2, [r4, #20]
									nmea->gnss.latitude_deg = nmea_convert(nmea->gnss.latitude_tmp);
 800418c:	62a0      	str	r0, [r4, #40]	; 0x28
									nmea->gnss.valid.latitude = 1;
 800418e:	e7dd      	b.n	800414c <nmea_loop+0x534>
								else if (strcmp(str, "N") == 0)
 8004190:	0028      	movs	r0, r5
 8004192:	4956      	ldr	r1, [pc, #344]	; (80042ec <nmea_loop+0x6d4>)
 8004194:	f7fb ffb4 	bl	8000100 <strcmp>
 8004198:	2800      	cmp	r0, #0
 800419a:	d1e4      	bne.n	8004166 <nmea_loop+0x54e>
									nmea->gnss.latitude_deg = nmea_convert(nmea->gnss.latitude_tmp);
 800419c:	6a20      	ldr	r0, [r4, #32]
 800419e:	f7ff fce1 	bl	8003b64 <nmea_convert>
 80041a2:	e7f1      	b.n	8004188 <nmea_loop+0x570>
								if (str[0] < '0' || str[0] > '9')
 80041a4:	782b      	ldrb	r3, [r5, #0]
 80041a6:	3b30      	subs	r3, #48	; 0x30
 80041a8:	2b09      	cmp	r3, #9
 80041aa:	d8dc      	bhi.n	8004166 <nmea_loop+0x54e>
								nmea->gnss.longitude_tmp = (float)atof(str);
 80041ac:	0028      	movs	r0, r5
 80041ae:	f001 f8bd 	bl	800532c <atof>
 80041b2:	f7fe fe15 	bl	8002de0 <__aeabi_d2f>
 80041b6:	6260      	str	r0, [r4, #36]	; 0x24
							break;
 80041b8:	e7d5      	b.n	8004166 <nmea_loop+0x54e>
								if (strcmp(str, "W") == 0)
 80041ba:	0028      	movs	r0, r5
 80041bc:	494c      	ldr	r1, [pc, #304]	; (80042f0 <nmea_loop+0x6d8>)
 80041be:	f7fb ff9f 	bl	8000100 <strcmp>
 80041c2:	2800      	cmp	r0, #0
 80041c4:	d109      	bne.n	80041da <nmea_loop+0x5c2>
									nmea->gnss.longitude_deg = -nmea_convert(nmea->gnss.longitude_tmp);
 80041c6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80041c8:	f7ff fccc 	bl	8003b64 <nmea_convert>
 80041cc:	2380      	movs	r3, #128	; 0x80
 80041ce:	061b      	lsls	r3, r3, #24
 80041d0:	18c0      	adds	r0, r0, r3
									nmea->gnss.valid.longitude = 1;
 80041d2:	2310      	movs	r3, #16
 80041d4:	7d22      	ldrb	r2, [r4, #20]
									nmea->gnss.longitude_deg = nmea_convert(nmea->gnss.longitude_tmp);
 80041d6:	62e0      	str	r0, [r4, #44]	; 0x2c
									nmea->gnss.valid.longitude = 1;
 80041d8:	e7b8      	b.n	800414c <nmea_loop+0x534>
								else if (strcmp(str, "E") == 0)
 80041da:	0028      	movs	r0, r5
 80041dc:	4945      	ldr	r1, [pc, #276]	; (80042f4 <nmea_loop+0x6dc>)
 80041de:	f7fb ff8f 	bl	8000100 <strcmp>
 80041e2:	2800      	cmp	r0, #0
 80041e4:	d1bf      	bne.n	8004166 <nmea_loop+0x54e>
									nmea->gnss.longitude_deg = nmea_convert(nmea->gnss.longitude_tmp);
 80041e6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80041e8:	f7ff fcbc 	bl	8003b64 <nmea_convert>
 80041ec:	e7f1      	b.n	80041d2 <nmea_loop+0x5ba>
								if (str[0] < '0' || str[0] > '9')
 80041ee:	782b      	ldrb	r3, [r5, #0]
 80041f0:	3b30      	subs	r3, #48	; 0x30
 80041f2:	2b09      	cmp	r3, #9
 80041f4:	d8b7      	bhi.n	8004166 <nmea_loop+0x54e>
								nmea->gnss.speed_knots = (float)atof(str);
 80041f6:	0028      	movs	r0, r5
 80041f8:	f001 f898 	bl	800532c <atof>
 80041fc:	f7fe fdf0 	bl	8002de0 <__aeabi_d2f>
								nmea->gnss.valid.speed_knots = 1;
 8004200:	2380      	movs	r3, #128	; 0x80
 8004202:	7d22      	ldrb	r2, [r4, #20]
								nmea->gnss.speed_knots = (float)atof(str);
 8004204:	63a0      	str	r0, [r4, #56]	; 0x38
								nmea->gnss.valid.speed_knots = 1;
 8004206:	425b      	negs	r3, r3
 8004208:	e7a0      	b.n	800414c <nmea_loop+0x534>
								if (str[0] < '0' || str[0] > '9')
 800420a:	782b      	ldrb	r3, [r5, #0]
 800420c:	3b30      	subs	r3, #48	; 0x30
 800420e:	2b09      	cmp	r3, #9
 8004210:	d8a9      	bhi.n	8004166 <nmea_loop+0x54e>
								nmea->gnss.course_deg = (float)atof(str);
 8004212:	0028      	movs	r0, r5
 8004214:	f001 f88a 	bl	800532c <atof>
 8004218:	f7fe fde2 	bl	8002de0 <__aeabi_d2f>
								nmea->gnss.valid.course = 1;
 800421c:	2301      	movs	r3, #1
 800421e:	7d62      	ldrb	r2, [r4, #21]
								nmea->gnss.course_deg = (float)atof(str);
 8004220:	63e0      	str	r0, [r4, #60]	; 0x3c
								nmea->gnss.valid.course = 1;
 8004222:	4313      	orrs	r3, r2
 8004224:	7563      	strb	r3, [r4, #21]
							break;
 8004226:	e79e      	b.n	8004166 <nmea_loop+0x54e>
								if (str[0] < '0' || str[0] > '9')
 8004228:	782b      	ldrb	r3, [r5, #0]
 800422a:	3b30      	subs	r3, #48	; 0x30
 800422c:	b2db      	uxtb	r3, r3
 800422e:	2b09      	cmp	r3, #9
 8004230:	d899      	bhi.n	8004166 <nmea_loop+0x54e>
								nmea->gnss.date_d = ((str[0] - 48) * 10) + (str[1] - 48);
 8004232:	4373      	muls	r3, r6
 8004234:	786a      	ldrb	r2, [r5, #1]
 8004236:	3a30      	subs	r2, #48	; 0x30
 8004238:	18d3      	adds	r3, r2, r3
 800423a:	7723      	strb	r3, [r4, #28]
								nmea->gnss.date_m = ((str[2] - 48) * 10) + (str[3] - 48);
 800423c:	78ab      	ldrb	r3, [r5, #2]
 800423e:	78ea      	ldrb	r2, [r5, #3]
 8004240:	3b30      	subs	r3, #48	; 0x30
 8004242:	4373      	muls	r3, r6
 8004244:	3a30      	subs	r2, #48	; 0x30
 8004246:	189b      	adds	r3, r3, r2
 8004248:	76e3      	strb	r3, [r4, #27]
								nmea->gnss.date_y = ((str[4] - 48) * 10) + (str[5] - 48);
 800424a:	792b      	ldrb	r3, [r5, #4]
 800424c:	796a      	ldrb	r2, [r5, #5]
 800424e:	3b30      	subs	r3, #48	; 0x30
 8004250:	4373      	muls	r3, r6
 8004252:	3a30      	subs	r2, #48	; 0x30
 8004254:	189b      	adds	r3, r3, r2
 8004256:	76a3      	strb	r3, [r4, #26]
								nmea->gnss.valid.date = 1;
 8004258:	2204      	movs	r2, #4
 800425a:	7d23      	ldrb	r3, [r4, #20]
 800425c:	e776      	b.n	800414c <nmea_loop+0x534>
								if (str[0] < '0' || str[0] > '9')
 800425e:	7803      	ldrb	r3, [r0, #0]
 8004260:	3b30      	subs	r3, #48	; 0x30
 8004262:	2b09      	cmp	r3, #9
 8004264:	d80a      	bhi.n	800427c <nmea_loop+0x664>
								nmea->sounder.depth_m = (float)atof(str);
 8004266:	f001 f861 	bl	800532c <atof>
 800426a:	f7fe fdb9 	bl	8002de0 <__aeabi_d2f>
								nmea->sounder.valid.depth = 1;
 800426e:	0022      	movs	r2, r4
 8004270:	2101      	movs	r1, #1
 8004272:	324c      	adds	r2, #76	; 0x4c
 8004274:	7813      	ldrb	r3, [r2, #0]
								nmea->sounder.depth_m = (float)atof(str);
 8004276:	6520      	str	r0, [r4, #80]	; 0x50
								nmea->sounder.valid.depth_offset = 1;
 8004278:	430b      	orrs	r3, r1
 800427a:	7013      	strb	r3, [r2, #0]
						index++;
 800427c:	3601      	adds	r6, #1
 800427e:	b2f6      	uxtb	r6, r6
						if (end)
 8004280:	e62e      	b.n	8003ee0 <nmea_loop+0x2c8>
								if (str[0] < '0' || str[0] > '9')
 8004282:	7803      	ldrb	r3, [r0, #0]
 8004284:	3b30      	subs	r3, #48	; 0x30
 8004286:	2b09      	cmp	r3, #9
 8004288:	d8f8      	bhi.n	800427c <nmea_loop+0x664>
								nmea->sounder.depth_offset_m = (float)atof(str);
 800428a:	f001 f84f 	bl	800532c <atof>
 800428e:	f7fe fda7 	bl	8002de0 <__aeabi_d2f>
								nmea->sounder.valid.depth_offset = 1;
 8004292:	0022      	movs	r2, r4
 8004294:	324c      	adds	r2, #76	; 0x4c
 8004296:	2102      	movs	r1, #2
 8004298:	7813      	ldrb	r3, [r2, #0]
								nmea->sounder.depth_offset_m = (float)atof(str);
 800429a:	6560      	str	r0, [r4, #84]	; 0x54
								nmea->sounder.valid.depth_offset = 1;
 800429c:	e7ec      	b.n	8004278 <nmea_loop+0x660>
								if (str[0] < '0' || str[0] > '9')
 800429e:	7803      	ldrb	r3, [r0, #0]
 80042a0:	3b30      	subs	r3, #48	; 0x30
 80042a2:	2b09      	cmp	r3, #9
 80042a4:	d804      	bhi.n	80042b0 <nmea_loop+0x698>
								nmea->sounder.temp_c = (float)atof(str);
 80042a6:	f001 f841 	bl	800532c <atof>
 80042aa:	f7fe fd99 	bl	8002de0 <__aeabi_d2f>
 80042ae:	65a0      	str	r0, [r4, #88]	; 0x58
						index++;
 80042b0:	3601      	adds	r6, #1
 80042b2:	b2f6      	uxtb	r6, r6
						if (end)
 80042b4:	e662      	b.n	8003f7c <nmea_loop+0x364>
								if (str[0] == 'C')
 80042b6:	7803      	ldrb	r3, [r0, #0]
 80042b8:	2b43      	cmp	r3, #67	; 0x43
 80042ba:	d106      	bne.n	80042ca <nmea_loop+0x6b2>
									nmea->sounder.valid.temp = 1;
 80042bc:	0022      	movs	r2, r4
 80042be:	2304      	movs	r3, #4
 80042c0:	324c      	adds	r2, #76	; 0x4c
 80042c2:	7811      	ldrb	r1, [r2, #0]
 80042c4:	430b      	orrs	r3, r1
 80042c6:	7013      	strb	r3, [r2, #0]
 80042c8:	e7f2      	b.n	80042b0 <nmea_loop+0x698>
								else if (str[0] == 'F')
 80042ca:	2b46      	cmp	r3, #70	; 0x46
 80042cc:	d1f0      	bne.n	80042b0 <nmea_loop+0x698>
									nmea->sounder.temp_c = (nmea->sounder.temp_c - 32.0f) * 5.0f / 9.0f;
 80042ce:	2184      	movs	r1, #132	; 0x84
 80042d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80042d2:	05c9      	lsls	r1, r1, #23
 80042d4:	f7fc fd3a 	bl	8000d4c <__aeabi_fsub>
 80042d8:	4908      	ldr	r1, [pc, #32]	; (80042fc <nmea_loop+0x6e4>)
 80042da:	f7fc fc11 	bl	8000b00 <__aeabi_fmul>
 80042de:	4908      	ldr	r1, [pc, #32]	; (8004300 <nmea_loop+0x6e8>)
 80042e0:	f7fc faf6 	bl	80008d0 <__aeabi_fdiv>
 80042e4:	65a0      	str	r0, [r4, #88]	; 0x58
 80042e6:	e7e9      	b.n	80042bc <nmea_loop+0x6a4>
 80042e8:	0800a5cc 	.word	0x0800a5cc
 80042ec:	0800a686 	.word	0x0800a686
 80042f0:	0800a5e6 	.word	0x0800a5e6
 80042f4:	0800a5ce 	.word	0x0800a5ce
 80042f8:	0800a5c9 	.word	0x0800a5c9
 80042fc:	40a00000 	.word	0x40a00000
 8004300:	41100000 	.word	0x41100000

08004304 <nmea_available>:
//###########################################################################################################################
bool nmea_available(nmea_t *nmea)
{
	return nmea->available;
 8004304:	7c40      	ldrb	r0, [r0, #17]
}
 8004306:	4770      	bx	lr

08004308 <nmea_available_reset>:
//###########################################################################################################################
void nmea_available_reset(nmea_t *nmea)
{
 8004308:	b570      	push	{r4, r5, r6, lr}
 800430a:	0004      	movs	r4, r0
	while (nmea->lock)
 800430c:	7c25      	ldrb	r5, [r4, #16]
 800430e:	2d00      	cmp	r5, #0
 8004310:	d111      	bne.n	8004336 <nmea_available_reset+0x2e>
		nmea_delay(1);
	nmea->lock = true;
	memset(&nmea->gnss.valid, 0, sizeof(gnss_valid_t));
 8004312:	0020      	movs	r0, r4
 8004314:	0029      	movs	r1, r5
 8004316:	2202      	movs	r2, #2
 8004318:	3014      	adds	r0, #20
 800431a:	f001 f847 	bl	80053ac <memset>
	memset(&nmea->compass.valid, 0, sizeof(compass_valid_t));
 800431e:	0023      	movs	r3, r4
 8004320:	3340      	adds	r3, #64	; 0x40
 8004322:	701d      	strb	r5, [r3, #0]
	memset(&nmea->sounder.valid, 0, sizeof(sounder_valid_t));
 8004324:	731d      	strb	r5, [r3, #12]
	memset(nmea->buf, 0, nmea->buf_size);
 8004326:	0029      	movs	r1, r5
 8004328:	89e2      	ldrh	r2, [r4, #14]
 800432a:	68a0      	ldr	r0, [r4, #8]
 800432c:	f001 f83e 	bl	80053ac <memset>
	nmea->buf_index = 0;
 8004330:	81a5      	strh	r5, [r4, #12]
	nmea->available = false;
	nmea->lock = false;
 8004332:	8225      	strh	r5, [r4, #16]
}
 8004334:	bd70      	pop	{r4, r5, r6, pc}
		nmea_delay(1);
 8004336:	2001      	movs	r0, #1
 8004338:	f000 f97c 	bl	8004634 <HAL_Delay>
 800433c:	e7e6      	b.n	800430c <nmea_available_reset+0x4>

0800433e <nmea_gnss_time_h>:
//###########################################################################################################################
bool nmea_gnss_time_h(nmea_t *nmea, uint8_t *data)
{
 800433e:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 8004340:	d008      	beq.n	8004354 <nmea_gnss_time_h+0x16>
		return false;
	if (nmea->gnss.valid.time == 1)
 8004342:	7d02      	ldrb	r2, [r0, #20]
		return false;
 8004344:	2000      	movs	r0, #0
	if (nmea->gnss.valid.time == 1)
 8004346:	0792      	lsls	r2, r2, #30
 8004348:	d504      	bpl.n	8004354 <nmea_gnss_time_h+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.time_h;
		return true;
 800434a:	3001      	adds	r0, #1
		if (data != NULL)
 800434c:	2900      	cmp	r1, #0
 800434e:	d001      	beq.n	8004354 <nmea_gnss_time_h+0x16>
			*data = nmea->gnss.time_h;
 8004350:	7ddb      	ldrb	r3, [r3, #23]
 8004352:	700b      	strb	r3, [r1, #0]
	}
	return false;
}
 8004354:	4770      	bx	lr

08004356 <nmea_gnss_time_m>:
//###########################################################################################################################
bool nmea_gnss_time_m(nmea_t *nmea, uint8_t *data)
{
 8004356:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 8004358:	d008      	beq.n	800436c <nmea_gnss_time_m+0x16>
		return false;
	if (nmea->gnss.valid.time == 1)
 800435a:	7d02      	ldrb	r2, [r0, #20]
		return false;
 800435c:	2000      	movs	r0, #0
	if (nmea->gnss.valid.time == 1)
 800435e:	0792      	lsls	r2, r2, #30
 8004360:	d504      	bpl.n	800436c <nmea_gnss_time_m+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.time_m;
		return true;
 8004362:	3001      	adds	r0, #1
		if (data != NULL)
 8004364:	2900      	cmp	r1, #0
 8004366:	d001      	beq.n	800436c <nmea_gnss_time_m+0x16>
			*data = nmea->gnss.time_m;
 8004368:	7e1b      	ldrb	r3, [r3, #24]
 800436a:	700b      	strb	r3, [r1, #0]
	}
	return false;
}
 800436c:	4770      	bx	lr

0800436e <nmea_gnss_time_s>:
//###########################################################################################################################
bool nmea_gnss_time_s(nmea_t *nmea, uint8_t *data)
{
 800436e:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 8004370:	d008      	beq.n	8004384 <nmea_gnss_time_s+0x16>
		return false;
	if (nmea->gnss.valid.time == 1)
 8004372:	7d02      	ldrb	r2, [r0, #20]
		return false;
 8004374:	2000      	movs	r0, #0
	if (nmea->gnss.valid.time == 1)
 8004376:	0792      	lsls	r2, r2, #30
 8004378:	d504      	bpl.n	8004384 <nmea_gnss_time_s+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.time_s;
		return true;
 800437a:	3001      	adds	r0, #1
		if (data != NULL)
 800437c:	2900      	cmp	r1, #0
 800437e:	d001      	beq.n	8004384 <nmea_gnss_time_s+0x16>
			*data = nmea->gnss.time_s;
 8004380:	7e5b      	ldrb	r3, [r3, #25]
 8004382:	700b      	strb	r3, [r1, #0]
	}
	return false;
}
 8004384:	4770      	bx	lr

08004386 <nmea_gnss_date_y>:
//###########################################################################################################################
bool nmea_gnss_date_y(nmea_t *nmea, uint8_t *data)
{
 8004386:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 8004388:	d008      	beq.n	800439c <nmea_gnss_date_y+0x16>
		return false;
	if (nmea->gnss.valid.date == 1)
 800438a:	7d02      	ldrb	r2, [r0, #20]
		return false;
 800438c:	2000      	movs	r0, #0
	if (nmea->gnss.valid.date == 1)
 800438e:	0752      	lsls	r2, r2, #29
 8004390:	d504      	bpl.n	800439c <nmea_gnss_date_y+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.date_y;
		return true;
 8004392:	3001      	adds	r0, #1
		if (data != NULL)
 8004394:	2900      	cmp	r1, #0
 8004396:	d001      	beq.n	800439c <nmea_gnss_date_y+0x16>
			*data = nmea->gnss.date_y;
 8004398:	7e9b      	ldrb	r3, [r3, #26]
 800439a:	700b      	strb	r3, [r1, #0]
	}
	return false;
}
 800439c:	4770      	bx	lr

0800439e <nmea_gnss_date_m>:
//###########################################################################################################################
bool nmea_gnss_date_m(nmea_t *nmea, uint8_t *data)
{
 800439e:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 80043a0:	d008      	beq.n	80043b4 <nmea_gnss_date_m+0x16>
		return false;
	if (nmea->gnss.valid.date == 1)
 80043a2:	7d02      	ldrb	r2, [r0, #20]
		return false;
 80043a4:	2000      	movs	r0, #0
	if (nmea->gnss.valid.date == 1)
 80043a6:	0752      	lsls	r2, r2, #29
 80043a8:	d504      	bpl.n	80043b4 <nmea_gnss_date_m+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.date_m;
		return true;
 80043aa:	3001      	adds	r0, #1
		if (data != NULL)
 80043ac:	2900      	cmp	r1, #0
 80043ae:	d001      	beq.n	80043b4 <nmea_gnss_date_m+0x16>
			*data = nmea->gnss.date_m;
 80043b0:	7edb      	ldrb	r3, [r3, #27]
 80043b2:	700b      	strb	r3, [r1, #0]
	}
	return false;
}
 80043b4:	4770      	bx	lr

080043b6 <nmea_gnss_date_d>:
//###########################################################################################################################
bool nmea_gnss_date_d(nmea_t *nmea, uint8_t *data)
{
 80043b6:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 80043b8:	d008      	beq.n	80043cc <nmea_gnss_date_d+0x16>
		return false;
	if (nmea->gnss.valid.date == 1)
 80043ba:	7d02      	ldrb	r2, [r0, #20]
		return false;
 80043bc:	2000      	movs	r0, #0
	if (nmea->gnss.valid.date == 1)
 80043be:	0752      	lsls	r2, r2, #29
 80043c0:	d504      	bpl.n	80043cc <nmea_gnss_date_d+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.date_d;
		return true;
 80043c2:	3001      	adds	r0, #1
		if (data != NULL)
 80043c4:	2900      	cmp	r1, #0
 80043c6:	d001      	beq.n	80043cc <nmea_gnss_date_d+0x16>
			*data = nmea->gnss.date_d;
 80043c8:	7f1b      	ldrb	r3, [r3, #28]
 80043ca:	700b      	strb	r3, [r1, #0]
	}
	return false;
}
 80043cc:	4770      	bx	lr

080043ce <nmea_gnss_latitude_deg>:
	}
	return false;
}
//###########################################################################################################################
bool nmea_gnss_latitude_deg(nmea_t *nmea, float *data)
{
 80043ce:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 80043d0:	d008      	beq.n	80043e4 <nmea_gnss_latitude_deg+0x16>
		return false;
	if (nmea->gnss.valid.latitude == 1)
 80043d2:	7d02      	ldrb	r2, [r0, #20]
		return false;
 80043d4:	2000      	movs	r0, #0
	if (nmea->gnss.valid.latitude == 1)
 80043d6:	0712      	lsls	r2, r2, #28
 80043d8:	d504      	bpl.n	80043e4 <nmea_gnss_latitude_deg+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.latitude_deg;
		return true;
 80043da:	3001      	adds	r0, #1
		if (data != NULL)
 80043dc:	2900      	cmp	r1, #0
 80043de:	d001      	beq.n	80043e4 <nmea_gnss_latitude_deg+0x16>
			*data = nmea->gnss.latitude_deg;
 80043e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043e2:	600b      	str	r3, [r1, #0]
	}
	return false;
}
 80043e4:	4770      	bx	lr

080043e6 <nmea_gnss_longitude_deg>:
//###########################################################################################################################
bool nmea_gnss_longitude_deg(nmea_t *nmea, float *data)
{
 80043e6:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 80043e8:	d008      	beq.n	80043fc <nmea_gnss_longitude_deg+0x16>
		return false;
	if (nmea->gnss.valid.longitude == 1)
 80043ea:	7d02      	ldrb	r2, [r0, #20]
		return false;
 80043ec:	2000      	movs	r0, #0
	if (nmea->gnss.valid.longitude == 1)
 80043ee:	06d2      	lsls	r2, r2, #27
 80043f0:	d504      	bpl.n	80043fc <nmea_gnss_longitude_deg+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.longitude_deg;
		return true;
 80043f2:	3001      	adds	r0, #1
		if (data != NULL)
 80043f4:	2900      	cmp	r1, #0
 80043f6:	d001      	beq.n	80043fc <nmea_gnss_longitude_deg+0x16>
			*data = nmea->gnss.longitude_deg;
 80043f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043fa:	600b      	str	r3, [r1, #0]
	}
	return false;
}
 80043fc:	4770      	bx	lr

080043fe <nmea_gnss_altitude_m>:
//###########################################################################################################################
bool nmea_gnss_altitude_m(nmea_t *nmea, float *data)
{
 80043fe:	1e03      	subs	r3, r0, #0
	if (nmea == NULL)
 8004400:	d008      	beq.n	8004414 <nmea_gnss_altitude_m+0x16>
		return false;
	if (nmea->gnss.valid.altitude == 1)
 8004402:	7d02      	ldrb	r2, [r0, #20]
		return false;
 8004404:	2000      	movs	r0, #0
	if (nmea->gnss.valid.altitude == 1)
 8004406:	0652      	lsls	r2, r2, #25
 8004408:	d504      	bpl.n	8004414 <nmea_gnss_altitude_m+0x16>
	{
		if (data != NULL)
			*data = nmea->gnss.altitude_m;
		return true;
 800440a:	3001      	adds	r0, #1
		if (data != NULL)
 800440c:	2900      	cmp	r1, #0
 800440e:	d001      	beq.n	8004414 <nmea_gnss_altitude_m+0x16>
			*data = nmea->gnss.altitude_m;
 8004410:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004412:	600b      	str	r3, [r1, #0]
	}
	return false;
}
 8004414:	4770      	bx	lr
	...

08004418 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004418:	2001      	movs	r0, #1
 800441a:	4b0a      	ldr	r3, [pc, #40]	; (8004444 <HAL_MspInit+0x2c>)
{
 800441c:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800441e:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8004420:	4301      	orrs	r1, r0
 8004422:	6419      	str	r1, [r3, #64]	; 0x40
  __HAL_RCC_PWR_CLK_ENABLE();
 8004424:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004426:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  __HAL_RCC_PWR_CLK_ENABLE();
 8004428:	0549      	lsls	r1, r1, #21
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800442a:	4002      	ands	r2, r0
 800442c:	9200      	str	r2, [sp, #0]
 800442e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8004430:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004432:	430a      	orrs	r2, r1
 8004434:	63da      	str	r2, [r3, #60]	; 0x3c
 8004436:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004438:	400b      	ands	r3, r1
 800443a:	9301      	str	r3, [sp, #4]
 800443c:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800443e:	b002      	add	sp, #8
 8004440:	4770      	bx	lr
 8004442:	46c0      	nop			; (mov r8, r8)
 8004444:	40021000 	.word	0x40021000

08004448 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004448:	e7fe      	b.n	8004448 <NMI_Handler>

0800444a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800444a:	e7fe      	b.n	800444a <HardFault_Handler>

0800444c <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800444c:	4770      	bx	lr

0800444e <PendSV_Handler>:
 800444e:	4770      	bx	lr

08004450 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004450:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004452:	f000 f8dd 	bl	8004610 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004456:	bd10      	pop	{r4, pc}

08004458 <TIM17_IRQHandler>:
  return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
 8004458:	4b08      	ldr	r3, [pc, #32]	; (800447c <TIM17_IRQHandler+0x24>)
 800445a:	691a      	ldr	r2, [r3, #16]
  * @brief This function handles TIM17 global interrupt.
  */
void TIM17_IRQHandler(void)
{
  /* USER CODE BEGIN TIM17_IRQn 0 */
	if (LL_TIM_IsActiveFlag_UPDATE(TIM17)) {
 800445c:	07d2      	lsls	r2, r2, #31
 800445e:	d50c      	bpl.n	800447a <TIM17_IRQHandler+0x22>
  WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 8004460:	2202      	movs	r2, #2
 8004462:	4252      	negs	r2, r2
 8004464:	611a      	str	r2, [r3, #16]
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
  uint32_t odr = READ_REG(GPIOx->ODR);
  WRITE_REG(GPIOx->BSRR, ((odr & PinMask) << 16u) | (~odr & PinMask));
 8004466:	2280      	movs	r2, #128	; 0x80
  uint32_t odr = READ_REG(GPIOx->ODR);
 8004468:	4905      	ldr	r1, [pc, #20]	; (8004480 <TIM17_IRQHandler+0x28>)
  WRITE_REG(GPIOx->BSRR, ((odr & PinMask) << 16u) | (~odr & PinMask));
 800446a:	03d2      	lsls	r2, r2, #15
  uint32_t odr = READ_REG(GPIOx->ODR);
 800446c:	6948      	ldr	r0, [r1, #20]
  WRITE_REG(GPIOx->BSRR, ((odr & PinMask) << 16u) | (~odr & PinMask));
 800446e:	0403      	lsls	r3, r0, #16
 8004470:	4013      	ands	r3, r2
 8004472:	2240      	movs	r2, #64	; 0x40
 8004474:	4382      	bics	r2, r0
 8004476:	4313      	orrs	r3, r2
 8004478:	618b      	str	r3, [r1, #24]
			}
  /* USER CODE END TIM17_IRQn 0 */
  /* USER CODE BEGIN TIM17_IRQn 1 */

  /* USER CODE END TIM17_IRQn 1 */
}
 800447a:	4770      	bx	lr
 800447c:	40014800 	.word	0x40014800
 8004480:	50000800 	.word	0x50000800

08004484 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI line 26.
  */
void USART2_IRQHandler(void)
{
 8004484:	b510      	push	{r4, lr}
  /* USER CODE BEGIN USART2_IRQn 0 */
	nmea_callback(&gps);
 8004486:	4802      	ldr	r0, [pc, #8]	; (8004490 <USART2_IRQHandler+0xc>)
 8004488:	f7ff fb88 	bl	8003b9c <nmea_callback>
  /* USER CODE END USART2_IRQn 0 */
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800448c:	bd10      	pop	{r4, pc}
 800448e:	46c0      	nop			; (mov r8, r8)
 8004490:	200002cc 	.word	0x200002cc

08004494 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8004494:	2001      	movs	r0, #1
 8004496:	4770      	bx	lr

08004498 <_kill>:

int _kill(int pid, int sig)
{
 8004498:	b510      	push	{r4, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800449a:	f000 ff53 	bl	8005344 <__errno>
 800449e:	2316      	movs	r3, #22
 80044a0:	6003      	str	r3, [r0, #0]
  return -1;
 80044a2:	2001      	movs	r0, #1
}
 80044a4:	4240      	negs	r0, r0
 80044a6:	bd10      	pop	{r4, pc}

080044a8 <_exit>:

void _exit (int status)
{
 80044a8:	b510      	push	{r4, lr}
  errno = EINVAL;
 80044aa:	f000 ff4b 	bl	8005344 <__errno>
 80044ae:	2316      	movs	r3, #22
 80044b0:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 80044b2:	e7fe      	b.n	80044b2 <_exit+0xa>

080044b4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80044b4:	b570      	push	{r4, r5, r6, lr}
 80044b6:	000e      	movs	r6, r1
 80044b8:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044ba:	2500      	movs	r5, #0
 80044bc:	42a5      	cmp	r5, r4
 80044be:	db01      	blt.n	80044c4 <_read+0x10>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 80044c0:	0020      	movs	r0, r4
 80044c2:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 80044c4:	e000      	b.n	80044c8 <_read+0x14>
 80044c6:	bf00      	nop
 80044c8:	5570      	strb	r0, [r6, r5]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044ca:	3501      	adds	r5, #1
 80044cc:	e7f6      	b.n	80044bc <_read+0x8>

080044ce <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80044ce:	b570      	push	{r4, r5, r6, lr}
 80044d0:	000e      	movs	r6, r1
 80044d2:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044d4:	2500      	movs	r5, #0
 80044d6:	42a5      	cmp	r5, r4
 80044d8:	db01      	blt.n	80044de <_write+0x10>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 80044da:	0020      	movs	r0, r4
 80044dc:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 80044de:	5d70      	ldrb	r0, [r6, r5]
 80044e0:	e000      	b.n	80044e4 <_write+0x16>
 80044e2:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044e4:	3501      	adds	r5, #1
 80044e6:	e7f6      	b.n	80044d6 <_write+0x8>

080044e8 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
 80044e8:	2001      	movs	r0, #1
}
 80044ea:	4240      	negs	r0, r0
 80044ec:	4770      	bx	lr

080044ee <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 80044ee:	2380      	movs	r3, #128	; 0x80
 80044f0:	019b      	lsls	r3, r3, #6
  return 0;
}
 80044f2:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 80044f4:	604b      	str	r3, [r1, #4]
}
 80044f6:	4770      	bx	lr

080044f8 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 80044f8:	2001      	movs	r0, #1
 80044fa:	4770      	bx	lr

080044fc <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 80044fc:	2000      	movs	r0, #0
 80044fe:	4770      	bx	lr

08004500 <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004500:	4a0b      	ldr	r2, [pc, #44]	; (8004530 <_sbrk+0x30>)
 8004502:	490c      	ldr	r1, [pc, #48]	; (8004534 <_sbrk+0x34>)
{
 8004504:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004506:	1a89      	subs	r1, r1, r2
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004508:	4a0b      	ldr	r2, [pc, #44]	; (8004538 <_sbrk+0x38>)
{
 800450a:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 800450c:	6810      	ldr	r0, [r2, #0]
 800450e:	2800      	cmp	r0, #0
 8004510:	d101      	bne.n	8004516 <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 8004512:	480a      	ldr	r0, [pc, #40]	; (800453c <_sbrk+0x3c>)
 8004514:	6010      	str	r0, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004516:	6810      	ldr	r0, [r2, #0]
 8004518:	18c3      	adds	r3, r0, r3
 800451a:	428b      	cmp	r3, r1
 800451c:	d906      	bls.n	800452c <_sbrk+0x2c>
  {
    errno = ENOMEM;
 800451e:	f000 ff11 	bl	8005344 <__errno>
 8004522:	230c      	movs	r3, #12
 8004524:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8004526:	2001      	movs	r0, #1
 8004528:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 800452a:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 800452c:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 800452e:	e7fc      	b.n	800452a <_sbrk+0x2a>
 8004530:	00000400 	.word	0x00000400
 8004534:	20002000 	.word	0x20002000
 8004538:	200003a4 	.word	0x200003a4
 800453c:	200003d8 	.word	0x200003d8

08004540 <SystemInit>:
{
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8004540:	4770      	bx	lr
	...

08004544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8004544:	480d      	ldr	r0, [pc, #52]	; (800457c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8004546:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 8004548:	f7ff fffa 	bl	8004540 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800454c:	480c      	ldr	r0, [pc, #48]	; (8004580 <LoopForever+0x6>)
  ldr r1, =_edata
 800454e:	490d      	ldr	r1, [pc, #52]	; (8004584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8004550:	4a0d      	ldr	r2, [pc, #52]	; (8004588 <LoopForever+0xe>)
  movs r3, #0
 8004552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8004554:	e002      	b.n	800455c <LoopCopyDataInit>

08004556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8004556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8004558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800455a:	3304      	adds	r3, #4

0800455c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800455c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800455e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8004560:	d3f9      	bcc.n	8004556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8004562:	4a0a      	ldr	r2, [pc, #40]	; (800458c <LoopForever+0x12>)
  ldr r4, =_ebss
 8004564:	4c0a      	ldr	r4, [pc, #40]	; (8004590 <LoopForever+0x16>)
  movs r3, #0
 8004566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8004568:	e001      	b.n	800456e <LoopFillZerobss>

0800456a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800456a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800456c:	3204      	adds	r2, #4

0800456e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800456e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8004570:	d3fb      	bcc.n	800456a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8004572:	f000 feed 	bl	8005350 <__libc_init_array>
/* Call the application s entry point.*/
  bl main
 8004576:	f7ff f895 	bl	80036a4 <main>

0800457a <LoopForever>:

LoopForever:
  b LoopForever
 800457a:	e7fe      	b.n	800457a <LoopForever>
  ldr   r0, =_estack
 800457c:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8004580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8004584:	200002a8 	.word	0x200002a8
  ldr r2, =_sidata
 8004588:	0800ab90 	.word	0x0800ab90
  ldr r2, =_sbss
 800458c:	200002a8 	.word	0x200002a8
  ldr r4, =_ebss
 8004590:	200003d8 	.word	0x200003d8

08004594 <ADC1_IRQHandler>:
 * @retval None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8004594:	e7fe      	b.n	8004594 <ADC1_IRQHandler>
	...

08004598 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004598:	b570      	push	{r4, r5, r6, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/ 
  if ((uint32_t)uwTickFreq != 0U)
 800459a:	4b10      	ldr	r3, [pc, #64]	; (80045dc <HAL_InitTick+0x44>)
{
 800459c:	0005      	movs	r5, r0
  if ((uint32_t)uwTickFreq != 0U)
 800459e:	7819      	ldrb	r1, [r3, #0]
 80045a0:	2900      	cmp	r1, #0
 80045a2:	d101      	bne.n	80045a8 <HAL_InitTick+0x10>
      status = HAL_ERROR;
    }
  }
  else
  {
    status = HAL_ERROR;
 80045a4:	2001      	movs	r0, #1
  }

  /* Return function status */
  return status;
}
 80045a6:	bd70      	pop	{r4, r5, r6, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
 80045a8:	20fa      	movs	r0, #250	; 0xfa
 80045aa:	0080      	lsls	r0, r0, #2
 80045ac:	f7fb fdce 	bl	800014c <__udivsi3>
 80045b0:	4b0b      	ldr	r3, [pc, #44]	; (80045e0 <HAL_InitTick+0x48>)
 80045b2:	0001      	movs	r1, r0
 80045b4:	6818      	ldr	r0, [r3, #0]
 80045b6:	f7fb fdc9 	bl	800014c <__udivsi3>
 80045ba:	f000 f877 	bl	80046ac <HAL_SYSTICK_Config>
 80045be:	1e04      	subs	r4, r0, #0
 80045c0:	d1f0      	bne.n	80045a4 <HAL_InitTick+0xc>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80045c2:	2d03      	cmp	r5, #3
 80045c4:	d8ee      	bhi.n	80045a4 <HAL_InitTick+0xc>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80045c6:	0002      	movs	r2, r0
 80045c8:	2001      	movs	r0, #1
 80045ca:	0029      	movs	r1, r5
 80045cc:	4240      	negs	r0, r0
 80045ce:	f000 f843 	bl	8004658 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80045d2:	4b04      	ldr	r3, [pc, #16]	; (80045e4 <HAL_InitTick+0x4c>)
 80045d4:	0020      	movs	r0, r4
 80045d6:	601d      	str	r5, [r3, #0]
  return status;
 80045d8:	e7e5      	b.n	80045a6 <HAL_InitTick+0xe>
 80045da:	46c0      	nop			; (mov r8, r8)
 80045dc:	20000094 	.word	0x20000094
 80045e0:	20000090 	.word	0x20000090
 80045e4:	20000098 	.word	0x20000098

080045e8 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80045e8:	2380      	movs	r3, #128	; 0x80
 80045ea:	4a08      	ldr	r2, [pc, #32]	; (800460c <HAL_Init+0x24>)
 80045ec:	005b      	lsls	r3, r3, #1
 80045ee:	6811      	ldr	r1, [r2, #0]
{
 80045f0:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80045f2:	430b      	orrs	r3, r1
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80045f4:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80045f6:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80045f8:	f7ff ffce 	bl	8004598 <HAL_InitTick>
 80045fc:	1e04      	subs	r4, r0, #0
 80045fe:	d103      	bne.n	8004608 <HAL_Init+0x20>
  HAL_MspInit();
 8004600:	f7ff ff0a 	bl	8004418 <HAL_MspInit>
}
 8004604:	0020      	movs	r0, r4
 8004606:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8004608:	2401      	movs	r4, #1
 800460a:	e7fb      	b.n	8004604 <HAL_Init+0x1c>
 800460c:	40022000 	.word	0x40022000

08004610 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8004610:	4a03      	ldr	r2, [pc, #12]	; (8004620 <HAL_IncTick+0x10>)
 8004612:	4b04      	ldr	r3, [pc, #16]	; (8004624 <HAL_IncTick+0x14>)
 8004614:	6811      	ldr	r1, [r2, #0]
 8004616:	781b      	ldrb	r3, [r3, #0]
 8004618:	185b      	adds	r3, r3, r1
 800461a:	6013      	str	r3, [r2, #0]
}
 800461c:	4770      	bx	lr
 800461e:	46c0      	nop			; (mov r8, r8)
 8004620:	200003a8 	.word	0x200003a8
 8004624:	20000094 	.word	0x20000094

08004628 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004628:	4b01      	ldr	r3, [pc, #4]	; (8004630 <HAL_GetTick+0x8>)
 800462a:	6818      	ldr	r0, [r3, #0]
}
 800462c:	4770      	bx	lr
 800462e:	46c0      	nop			; (mov r8, r8)
 8004630:	200003a8 	.word	0x200003a8

08004634 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004634:	b570      	push	{r4, r5, r6, lr}
 8004636:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004638:	f7ff fff6 	bl	8004628 <HAL_GetTick>
 800463c:	0005      	movs	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800463e:	1c63      	adds	r3, r4, #1
 8004640:	d002      	beq.n	8004648 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8004642:	4b04      	ldr	r3, [pc, #16]	; (8004654 <HAL_Delay+0x20>)
 8004644:	781b      	ldrb	r3, [r3, #0]
 8004646:	18e4      	adds	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004648:	f7ff ffee 	bl	8004628 <HAL_GetTick>
 800464c:	1b40      	subs	r0, r0, r5
 800464e:	42a0      	cmp	r0, r4
 8004650:	d3fa      	bcc.n	8004648 <HAL_Delay+0x14>
  {
  }
}
 8004652:	bd70      	pop	{r4, r5, r6, pc}
 8004654:	20000094 	.word	0x20000094

08004658 <HAL_NVIC_SetPriority>:
  *         with stm32g0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8004658:	b530      	push	{r4, r5, lr}
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800465a:	25ff      	movs	r5, #255	; 0xff
 800465c:	2403      	movs	r4, #3
 800465e:	002a      	movs	r2, r5
 8004660:	4004      	ands	r4, r0
 8004662:	00e4      	lsls	r4, r4, #3
 8004664:	40a2      	lsls	r2, r4
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8004666:	0189      	lsls	r1, r1, #6
 8004668:	4029      	ands	r1, r5
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800466a:	43d2      	mvns	r2, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800466c:	40a1      	lsls	r1, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800466e:	b2c3      	uxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
 8004670:	2800      	cmp	r0, #0
 8004672:	db0a      	blt.n	800468a <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004674:	24c0      	movs	r4, #192	; 0xc0
 8004676:	4b0b      	ldr	r3, [pc, #44]	; (80046a4 <HAL_NVIC_SetPriority+0x4c>)
 8004678:	0880      	lsrs	r0, r0, #2
 800467a:	0080      	lsls	r0, r0, #2
 800467c:	18c0      	adds	r0, r0, r3
 800467e:	00a4      	lsls	r4, r4, #2
 8004680:	5903      	ldr	r3, [r0, r4]
 8004682:	401a      	ands	r2, r3
 8004684:	4311      	orrs	r1, r2
 8004686:	5101      	str	r1, [r0, r4]
  UNUSED(SubPriority);

  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn, PreemptPriority);
}
 8004688:	bd30      	pop	{r4, r5, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800468a:	200f      	movs	r0, #15
 800468c:	4003      	ands	r3, r0
 800468e:	3b08      	subs	r3, #8
 8004690:	4805      	ldr	r0, [pc, #20]	; (80046a8 <HAL_NVIC_SetPriority+0x50>)
 8004692:	089b      	lsrs	r3, r3, #2
 8004694:	009b      	lsls	r3, r3, #2
 8004696:	181b      	adds	r3, r3, r0
 8004698:	69d8      	ldr	r0, [r3, #28]
 800469a:	4002      	ands	r2, r0
 800469c:	4311      	orrs	r1, r2
 800469e:	61d9      	str	r1, [r3, #28]
 80046a0:	e7f2      	b.n	8004688 <HAL_NVIC_SetPriority+0x30>
 80046a2:	46c0      	nop			; (mov r8, r8)
 80046a4:	e000e100 	.word	0xe000e100
 80046a8:	e000ed00 	.word	0xe000ed00

080046ac <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80046ac:	2280      	movs	r2, #128	; 0x80
 80046ae:	1e43      	subs	r3, r0, #1
 80046b0:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 80046b2:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80046b4:	4293      	cmp	r3, r2
 80046b6:	d20d      	bcs.n	80046d4 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80046b8:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80046ba:	4a07      	ldr	r2, [pc, #28]	; (80046d8 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80046bc:	4807      	ldr	r0, [pc, #28]	; (80046dc <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80046be:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80046c0:	6a03      	ldr	r3, [r0, #32]
 80046c2:	0609      	lsls	r1, r1, #24
 80046c4:	021b      	lsls	r3, r3, #8
 80046c6:	0a1b      	lsrs	r3, r3, #8
 80046c8:	430b      	orrs	r3, r1
 80046ca:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80046cc:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80046ce:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80046d0:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80046d2:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 80046d4:	4770      	bx	lr
 80046d6:	46c0      	nop			; (mov r8, r8)
 80046d8:	e000e010 	.word	0xe000e010
 80046dc:	e000ed00 	.word	0xe000ed00

080046e0 <HAL_FLASH_Unlock>:
  * @brief  Unlock the FLASH control register access.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Unlock(void)
{
  HAL_StatusTypeDef status = HAL_OK;
 80046e0:	2000      	movs	r0, #0

  if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0x00U)
 80046e2:	4b05      	ldr	r3, [pc, #20]	; (80046f8 <HAL_FLASH_Unlock+0x18>)
 80046e4:	695a      	ldr	r2, [r3, #20]
 80046e6:	4282      	cmp	r2, r0
 80046e8:	da05      	bge.n	80046f6 <HAL_FLASH_Unlock+0x16>
  {
    /* Authorize the FLASH Registers access */
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 80046ea:	4a04      	ldr	r2, [pc, #16]	; (80046fc <HAL_FLASH_Unlock+0x1c>)
 80046ec:	609a      	str	r2, [r3, #8]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 80046ee:	4a04      	ldr	r2, [pc, #16]	; (8004700 <HAL_FLASH_Unlock+0x20>)
 80046f0:	609a      	str	r2, [r3, #8]

    /* verify Flash is unlock */
    if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0x00U)
 80046f2:	6958      	ldr	r0, [r3, #20]
  HAL_StatusTypeDef status = HAL_OK;
 80046f4:	0fc0      	lsrs	r0, r0, #31
      status = HAL_ERROR;
    }
  }

  return status;
}
 80046f6:	4770      	bx	lr
 80046f8:	40022000 	.word	0x40022000
 80046fc:	45670123 	.word	0x45670123
 8004700:	cdef89ab 	.word	0xcdef89ab

08004704 <HAL_FLASH_Lock>:
HAL_StatusTypeDef HAL_FLASH_Lock(void)
{
  HAL_StatusTypeDef status = HAL_ERROR;

  /* Set the LOCK Bit to lock the FLASH Registers access */
  SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 8004704:	2280      	movs	r2, #128	; 0x80
 8004706:	4b04      	ldr	r3, [pc, #16]	; (8004718 <HAL_FLASH_Lock+0x14>)
 8004708:	0612      	lsls	r2, r2, #24
 800470a:	6959      	ldr	r1, [r3, #20]
 800470c:	430a      	orrs	r2, r1
 800470e:	615a      	str	r2, [r3, #20]

  /* verify Flash is locked */
  if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0x00u)
 8004710:	6958      	ldr	r0, [r3, #20]
 8004712:	43c0      	mvns	r0, r0
  {
    status = HAL_OK;
  }

  return status;
 8004714:	0fc0      	lsrs	r0, r0, #31
}
 8004716:	4770      	bx	lr
 8004718:	40022000 	.word	0x40022000

0800471c <FLASH_WaitForLastOperation>:
  * @brief  Wait for a FLASH operation to complete.
  * @param  Timeout maximum flash operation timeout
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
{
 800471c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800471e:	0004      	movs	r4, r0
  error = (FLASH_SR_BSY1 | FLASH_SR_BSY2);
#else
  error = FLASH_SR_BSY1;
#endif /* FLASH_DBANK_SUPPORT */

  while ((FLASH->SR & error) != 0x00U)
 8004720:	2780      	movs	r7, #128	; 0x80
  uint32_t timeout = HAL_GetTick() + Timeout;
 8004722:	f7ff ff81 	bl	8004628 <HAL_GetTick>
  while ((FLASH->SR & error) != 0x00U)
 8004726:	027f      	lsls	r7, r7, #9
  uint32_t timeout = HAL_GetTick() + Timeout;
 8004728:	1906      	adds	r6, r0, r4
  while ((FLASH->SR & error) != 0x00U)
 800472a:	4d12      	ldr	r5, [pc, #72]	; (8004774 <FLASH_WaitForLastOperation+0x58>)
 800472c:	692b      	ldr	r3, [r5, #16]
 800472e:	423b      	tst	r3, r7
 8004730:	d10b      	bne.n	800474a <FLASH_WaitForLastOperation+0x2e>
      return HAL_TIMEOUT;
    }
  }

  /* check flash errors */
  error = (FLASH->SR & FLASH_SR_ERRORS);
 8004732:	692a      	ldr	r2, [r5, #16]
 8004734:	4b10      	ldr	r3, [pc, #64]	; (8004778 <FLASH_WaitForLastOperation+0x5c>)
 8004736:	0011      	movs	r1, r2

  /* Clear SR register */
  FLASH->SR = FLASH_SR_CLEAR;
 8004738:	4810      	ldr	r0, [pc, #64]	; (800477c <FLASH_WaitForLastOperation+0x60>)
  error = (FLASH->SR & FLASH_SR_ERRORS);
 800473a:	4019      	ands	r1, r3
  FLASH->SR = FLASH_SR_CLEAR;
 800473c:	6128      	str	r0, [r5, #16]

  if (error != 0x00U)
 800473e:	421a      	tst	r2, r3
 8004740:	d009      	beq.n	8004756 <FLASH_WaitForLastOperation+0x3a>
  {
    /*Save the error code*/
    pFlash.ErrorCode = error;
 8004742:	4b0f      	ldr	r3, [pc, #60]	; (8004780 <FLASH_WaitForLastOperation+0x64>)
    return HAL_ERROR;
 8004744:	2001      	movs	r0, #1
    pFlash.ErrorCode = error;
 8004746:	6059      	str	r1, [r3, #4]
    return HAL_ERROR;
 8004748:	e004      	b.n	8004754 <FLASH_WaitForLastOperation+0x38>
    if (HAL_GetTick() >= timeout)
 800474a:	f7ff ff6d 	bl	8004628 <HAL_GetTick>
 800474e:	42b0      	cmp	r0, r6
 8004750:	d3eb      	bcc.n	800472a <FLASH_WaitForLastOperation+0xe>
      return HAL_TIMEOUT;
 8004752:	2003      	movs	r0, #3
      return HAL_TIMEOUT;
    }
  }

  return HAL_OK;
}
 8004754:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  timeout = HAL_GetTick() + Timeout;
 8004756:	f7ff ff67 	bl	8004628 <HAL_GetTick>
  while ((FLASH->SR & FLASH_SR_CFGBSY) != 0x00U)
 800475a:	2680      	movs	r6, #128	; 0x80
  timeout = HAL_GetTick() + Timeout;
 800475c:	1824      	adds	r4, r4, r0
  while ((FLASH->SR & FLASH_SR_CFGBSY) != 0x00U)
 800475e:	02f6      	lsls	r6, r6, #11
 8004760:	692b      	ldr	r3, [r5, #16]
 8004762:	0018      	movs	r0, r3
 8004764:	4030      	ands	r0, r6
 8004766:	4233      	tst	r3, r6
 8004768:	d0f4      	beq.n	8004754 <FLASH_WaitForLastOperation+0x38>
    if (HAL_GetTick() >= timeout)
 800476a:	f7ff ff5d 	bl	8004628 <HAL_GetTick>
 800476e:	4284      	cmp	r4, r0
 8004770:	d8f6      	bhi.n	8004760 <FLASH_WaitForLastOperation+0x44>
 8004772:	e7ee      	b.n	8004752 <FLASH_WaitForLastOperation+0x36>
 8004774:	40022000 	.word	0x40022000
 8004778:	000083fa 	.word	0x000083fa
 800477c:	000083fb 	.word	0x000083fb
 8004780:	200003ac 	.word	0x200003ac

08004784 <HAL_FLASH_Program>:
{
 8004784:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __HAL_LOCK(&pFlash);
 8004786:	4e17      	ldr	r6, [pc, #92]	; (80047e4 <HAL_FLASH_Program+0x60>)
{
 8004788:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(&pFlash);
 800478a:	7833      	ldrb	r3, [r6, #0]
{
 800478c:	0004      	movs	r4, r0
 800478e:	000d      	movs	r5, r1
  __HAL_LOCK(&pFlash);
 8004790:	2002      	movs	r0, #2
{
 8004792:	9200      	str	r2, [sp, #0]
  __HAL_LOCK(&pFlash);
 8004794:	2b01      	cmp	r3, #1
 8004796:	d01e      	beq.n	80047d6 <HAL_FLASH_Program+0x52>
 8004798:	2301      	movs	r3, #1
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 800479a:	20fa      	movs	r0, #250	; 0xfa
  __HAL_LOCK(&pFlash);
 800479c:	7033      	strb	r3, [r6, #0]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800479e:	2300      	movs	r3, #0
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 80047a0:	0080      	lsls	r0, r0, #2
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 80047a2:	6073      	str	r3, [r6, #4]
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 80047a4:	f7ff ffba 	bl	800471c <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 80047a8:	2800      	cmp	r0, #0
 80047aa:	d112      	bne.n	80047d2 <HAL_FLASH_Program+0x4e>
    if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 80047ac:	4f0e      	ldr	r7, [pc, #56]	; (80047e8 <HAL_FLASH_Program+0x64>)
 80047ae:	2c01      	cmp	r4, #1
 80047b0:	d112      	bne.n	80047d8 <HAL_FLASH_Program+0x54>
  * @retval None
  */
static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
{
  /* Set PG bit */
  SET_BIT(FLASH->CR, FLASH_CR_PG);
 80047b2:	697b      	ldr	r3, [r7, #20]
 80047b4:	4323      	orrs	r3, r4
 80047b6:	617b      	str	r3, [r7, #20]

  /* Program first word */
  *(uint32_t *)Address = (uint32_t)Data;
 80047b8:	9b00      	ldr	r3, [sp, #0]
 80047ba:	602b      	str	r3, [r5, #0]
           so that all instructions following the ISB are fetched from cache or memory,
           after the instruction has been completed.
 */
__STATIC_FORCEINLINE void __ISB(void)
{
  __ASM volatile ("isb 0xF":::"memory");
 80047bc:	f3bf 8f6f 	isb	sy
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(uint32_t *)(Address + 4U) = (uint32_t)(Data >> 32U);
 80047c0:	9b01      	ldr	r3, [sp, #4]
 80047c2:	606b      	str	r3, [r5, #4]
    status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 80047c4:	20fa      	movs	r0, #250	; 0xfa
 80047c6:	0080      	lsls	r0, r0, #2
 80047c8:	f7ff ffa8 	bl	800471c <FLASH_WaitForLastOperation>
    CLEAR_BIT(FLASH->CR, TypeProgram);
 80047cc:	697b      	ldr	r3, [r7, #20]
 80047ce:	43a3      	bics	r3, r4
 80047d0:	617b      	str	r3, [r7, #20]
  __HAL_UNLOCK(&pFlash);
 80047d2:	2300      	movs	r3, #0
 80047d4:	7033      	strb	r3, [r6, #0]
}
 80047d6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
      FLASH_Program_Fast(Address, (uint32_t)Data);
 80047d8:	0028      	movs	r0, r5
 80047da:	9900      	ldr	r1, [sp, #0]
 80047dc:	f005 fe28 	bl	800a430 <__FLASH_Program_Fast_veneer>
 80047e0:	e7f0      	b.n	80047c4 <HAL_FLASH_Program+0x40>
 80047e2:	46c0      	nop			; (mov r8, r8)
 80047e4:	200003ac 	.word	0x200003ac
 80047e8:	40022000 	.word	0x40022000

080047ec <FLASH_PageErase>:
  /* Check the parameters */
  assert_param(IS_FLASH_BANK(Banks));
  assert_param(IS_FLASH_PAGE(Page));

  /* Get configuration register, then clear page number */
  tmp = (FLASH->CR & ~FLASH_CR_PNB);
 80047ec:	4a04      	ldr	r2, [pc, #16]	; (8004800 <FLASH_PageErase+0x14>)
 80047ee:	4805      	ldr	r0, [pc, #20]	; (8004804 <FLASH_PageErase+0x18>)
 80047f0:	6953      	ldr	r3, [r2, #20]
    tmp &= ~FLASH_CR_BKER;
  }
#endif /* FLASH_DBANK_SUPPORT */

  /* Set page number, Page Erase bit & Start bit */
  FLASH->CR = (tmp | (FLASH_CR_STRT | (Page <<  FLASH_CR_PNB_Pos) | FLASH_CR_PER));
 80047f2:	00c9      	lsls	r1, r1, #3
  tmp = (FLASH->CR & ~FLASH_CR_PNB);
 80047f4:	4003      	ands	r3, r0
  FLASH->CR = (tmp | (FLASH_CR_STRT | (Page <<  FLASH_CR_PNB_Pos) | FLASH_CR_PER));
 80047f6:	4319      	orrs	r1, r3
 80047f8:	4b03      	ldr	r3, [pc, #12]	; (8004808 <FLASH_PageErase+0x1c>)
 80047fa:	4319      	orrs	r1, r3
 80047fc:	6151      	str	r1, [r2, #20]
}
 80047fe:	4770      	bx	lr
 8004800:	40022000 	.word	0x40022000
 8004804:	ffffe007 	.word	0xffffe007
 8004808:	00010002 	.word	0x00010002

0800480c <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        6 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 800480c:	b510      	push	{r4, lr}
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Modify voltage scaling range */
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 800480e:	4c11      	ldr	r4, [pc, #68]	; (8004854 <HAL_PWREx_ControlVoltageScaling+0x48>)
 8004810:	4911      	ldr	r1, [pc, #68]	; (8004858 <HAL_PWREx_ControlVoltageScaling+0x4c>)
 8004812:	6823      	ldr	r3, [r4, #0]
{
 8004814:	0002      	movs	r2, r0
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8004816:	400b      	ands	r3, r1
 8004818:	4303      	orrs	r3, r0
 800481a:	6023      	str	r3, [r4, #0]

  /* In case of Range 1 selected, we need to ensure that main regulator reaches new value */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 800481c:	2380      	movs	r3, #128	; 0x80
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800481e:	2000      	movs	r0, #0
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8004820:	009b      	lsls	r3, r3, #2
 8004822:	429a      	cmp	r2, r3
 8004824:	d10e      	bne.n	8004844 <HAL_PWREx_ControlVoltageScaling+0x38>
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 8004826:	4b0d      	ldr	r3, [pc, #52]	; (800485c <HAL_PWREx_ControlVoltageScaling+0x50>)
 8004828:	490d      	ldr	r1, [pc, #52]	; (8004860 <HAL_PWREx_ControlVoltageScaling+0x54>)
 800482a:	6818      	ldr	r0, [r3, #0]
 800482c:	2306      	movs	r3, #6
 800482e:	4358      	muls	r0, r3
 8004830:	f7fb fc8c 	bl	800014c <__udivsi3>
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8004834:	2280      	movs	r2, #128	; 0x80
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 8004836:	1c43      	adds	r3, r0, #1
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8004838:	00d2      	lsls	r2, r2, #3
 800483a:	6961      	ldr	r1, [r4, #20]
 800483c:	0008      	movs	r0, r1
 800483e:	4010      	ands	r0, r2
 8004840:	4211      	tst	r1, r2
 8004842:	d100      	bne.n	8004846 <HAL_PWREx_ControlVoltageScaling+0x3a>
}
 8004844:	bd10      	pop	{r4, pc}
      if (wait_loop_index != 0U)
 8004846:	2b00      	cmp	r3, #0
 8004848:	d001      	beq.n	800484e <HAL_PWREx_ControlVoltageScaling+0x42>
        wait_loop_index--;
 800484a:	3b01      	subs	r3, #1
 800484c:	e7f5      	b.n	800483a <HAL_PWREx_ControlVoltageScaling+0x2e>
        return HAL_TIMEOUT;
 800484e:	2003      	movs	r0, #3
 8004850:	e7f8      	b.n	8004844 <HAL_PWREx_ControlVoltageScaling+0x38>
 8004852:	46c0      	nop			; (mov r8, r8)
 8004854:	40007000 	.word	0x40007000
 8004858:	fffff9ff 	.word	0xfffff9ff
 800485c:	20000090 	.word	0x20000090
 8004860:	000f4240 	.word	0x000f4240

08004864 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004866:	0004      	movs	r4, r0
 8004868:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t temp_sysclksrc;
  uint32_t temp_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800486a:	2800      	cmp	r0, #0
 800486c:	d023      	beq.n	80048b6 <HAL_RCC_OscConfig+0x52>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	07db      	lsls	r3, r3, #31
 8004872:	d410      	bmi.n	8004896 <HAL_RCC_OscConfig+0x32>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004874:	6823      	ldr	r3, [r4, #0]
 8004876:	079b      	lsls	r3, r3, #30
 8004878:	d45e      	bmi.n	8004938 <HAL_RCC_OscConfig+0xd4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800487a:	6823      	ldr	r3, [r4, #0]
 800487c:	071b      	lsls	r3, r3, #28
 800487e:	d500      	bpl.n	8004882 <HAL_RCC_OscConfig+0x1e>
 8004880:	e0c3      	b.n	8004a0a <HAL_RCC_OscConfig+0x1a6>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004882:	6823      	ldr	r3, [r4, #0]
 8004884:	075b      	lsls	r3, r3, #29
 8004886:	d500      	bpl.n	800488a <HAL_RCC_OscConfig+0x26>
 8004888:	e0f4      	b.n	8004a74 <HAL_RCC_OscConfig+0x210>
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 800488a:	69e3      	ldr	r3, [r4, #28]
 800488c:	2b00      	cmp	r3, #0
 800488e:	d000      	beq.n	8004892 <HAL_RCC_OscConfig+0x2e>
 8004890:	e17a      	b.n	8004b88 <HAL_RCC_OscConfig+0x324>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8004892:	2000      	movs	r0, #0
 8004894:	e029      	b.n	80048ea <HAL_RCC_OscConfig+0x86>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8004896:	2238      	movs	r2, #56	; 0x38
 8004898:	4daf      	ldr	r5, [pc, #700]	; (8004b58 <HAL_RCC_OscConfig+0x2f4>)
 800489a:	68ab      	ldr	r3, [r5, #8]
 800489c:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 800489e:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 80048a0:	2b10      	cmp	r3, #16
 80048a2:	d10a      	bne.n	80048ba <HAL_RCC_OscConfig+0x56>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 80048a4:	43d2      	mvns	r2, r2
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 80048a6:	0793      	lsls	r3, r2, #30
 80048a8:	d109      	bne.n	80048be <HAL_RCC_OscConfig+0x5a>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80048aa:	682b      	ldr	r3, [r5, #0]
 80048ac:	039b      	lsls	r3, r3, #14
 80048ae:	d5e1      	bpl.n	8004874 <HAL_RCC_OscConfig+0x10>
 80048b0:	6863      	ldr	r3, [r4, #4]
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d1de      	bne.n	8004874 <HAL_RCC_OscConfig+0x10>
          return HAL_ERROR;
 80048b6:	2001      	movs	r0, #1
 80048b8:	e017      	b.n	80048ea <HAL_RCC_OscConfig+0x86>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE))
 80048ba:	2b08      	cmp	r3, #8
 80048bc:	d0f5      	beq.n	80048aa <HAL_RCC_OscConfig+0x46>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80048be:	2280      	movs	r2, #128	; 0x80
 80048c0:	6863      	ldr	r3, [r4, #4]
 80048c2:	0252      	lsls	r2, r2, #9
 80048c4:	4293      	cmp	r3, r2
 80048c6:	d112      	bne.n	80048ee <HAL_RCC_OscConfig+0x8a>
 80048c8:	682a      	ldr	r2, [r5, #0]
 80048ca:	4313      	orrs	r3, r2
 80048cc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80048ce:	f7ff feab 	bl	8004628 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80048d2:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 80048d4:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80048d6:	02bf      	lsls	r7, r7, #10
 80048d8:	682b      	ldr	r3, [r5, #0]
 80048da:	423b      	tst	r3, r7
 80048dc:	d1ca      	bne.n	8004874 <HAL_RCC_OscConfig+0x10>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80048de:	f7ff fea3 	bl	8004628 <HAL_GetTick>
 80048e2:	1b80      	subs	r0, r0, r6
 80048e4:	2864      	cmp	r0, #100	; 0x64
 80048e6:	d9f7      	bls.n	80048d8 <HAL_RCC_OscConfig+0x74>
            return HAL_TIMEOUT;
 80048e8:	2003      	movs	r0, #3
}
 80048ea:	b005      	add	sp, #20
 80048ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80048ee:	21a0      	movs	r1, #160	; 0xa0
 80048f0:	02c9      	lsls	r1, r1, #11
 80048f2:	428b      	cmp	r3, r1
 80048f4:	d108      	bne.n	8004908 <HAL_RCC_OscConfig+0xa4>
 80048f6:	2380      	movs	r3, #128	; 0x80
 80048f8:	6829      	ldr	r1, [r5, #0]
 80048fa:	02db      	lsls	r3, r3, #11
 80048fc:	430b      	orrs	r3, r1
 80048fe:	602b      	str	r3, [r5, #0]
 8004900:	682b      	ldr	r3, [r5, #0]
 8004902:	431a      	orrs	r2, r3
 8004904:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004906:	e7e2      	b.n	80048ce <HAL_RCC_OscConfig+0x6a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004908:	682a      	ldr	r2, [r5, #0]
 800490a:	4994      	ldr	r1, [pc, #592]	; (8004b5c <HAL_RCC_OscConfig+0x2f8>)
 800490c:	400a      	ands	r2, r1
 800490e:	602a      	str	r2, [r5, #0]
 8004910:	682a      	ldr	r2, [r5, #0]
 8004912:	4993      	ldr	r1, [pc, #588]	; (8004b60 <HAL_RCC_OscConfig+0x2fc>)
 8004914:	400a      	ands	r2, r1
 8004916:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004918:	2b00      	cmp	r3, #0
 800491a:	d1d8      	bne.n	80048ce <HAL_RCC_OscConfig+0x6a>
        tickstart = HAL_GetTick();
 800491c:	f7ff fe84 	bl	8004628 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8004920:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8004922:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8004924:	02bf      	lsls	r7, r7, #10
 8004926:	682b      	ldr	r3, [r5, #0]
 8004928:	423b      	tst	r3, r7
 800492a:	d0a3      	beq.n	8004874 <HAL_RCC_OscConfig+0x10>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800492c:	f7ff fe7c 	bl	8004628 <HAL_GetTick>
 8004930:	1b80      	subs	r0, r0, r6
 8004932:	2864      	cmp	r0, #100	; 0x64
 8004934:	d9f7      	bls.n	8004926 <HAL_RCC_OscConfig+0xc2>
 8004936:	e7d7      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8004938:	2338      	movs	r3, #56	; 0x38
 800493a:	4d87      	ldr	r5, [pc, #540]	; (8004b58 <HAL_RCC_OscConfig+0x2f4>)
 800493c:	68aa      	ldr	r2, [r5, #8]
 800493e:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8004940:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 8004942:	2b10      	cmp	r3, #16
 8004944:	d128      	bne.n	8004998 <HAL_RCC_OscConfig+0x134>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8004946:	2103      	movs	r1, #3
 8004948:	400a      	ands	r2, r1
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 800494a:	2a02      	cmp	r2, #2
 800494c:	d126      	bne.n	800499c <HAL_RCC_OscConfig+0x138>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800494e:	682a      	ldr	r2, [r5, #0]
 8004950:	0552      	lsls	r2, r2, #21
 8004952:	d502      	bpl.n	800495a <HAL_RCC_OscConfig+0xf6>
 8004954:	68e2      	ldr	r2, [r4, #12]
 8004956:	2a00      	cmp	r2, #0
 8004958:	d0ad      	beq.n	80048b6 <HAL_RCC_OscConfig+0x52>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800495a:	6869      	ldr	r1, [r5, #4]
 800495c:	6962      	ldr	r2, [r4, #20]
 800495e:	4881      	ldr	r0, [pc, #516]	; (8004b64 <HAL_RCC_OscConfig+0x300>)
 8004960:	0212      	lsls	r2, r2, #8
 8004962:	4001      	ands	r1, r0
 8004964:	430a      	orrs	r2, r1
 8004966:	606a      	str	r2, [r5, #4]
        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 8004968:	2b00      	cmp	r3, #0
 800496a:	d10d      	bne.n	8004988 <HAL_RCC_OscConfig+0x124>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 800496c:	682b      	ldr	r3, [r5, #0]
 800496e:	4a7e      	ldr	r2, [pc, #504]	; (8004b68 <HAL_RCC_OscConfig+0x304>)
 8004970:	4013      	ands	r3, r2
 8004972:	6922      	ldr	r2, [r4, #16]
 8004974:	4313      	orrs	r3, r2
 8004976:	602b      	str	r3, [r5, #0]
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 8004978:	682b      	ldr	r3, [r5, #0]
 800497a:	4a7c      	ldr	r2, [pc, #496]	; (8004b6c <HAL_RCC_OscConfig+0x308>)
 800497c:	049b      	lsls	r3, r3, #18
 800497e:	0f5b      	lsrs	r3, r3, #29
 8004980:	40da      	lsrs	r2, r3
 8004982:	0013      	movs	r3, r2
 8004984:	4a7a      	ldr	r2, [pc, #488]	; (8004b70 <HAL_RCC_OscConfig+0x30c>)
 8004986:	6013      	str	r3, [r2, #0]
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 8004988:	4b7a      	ldr	r3, [pc, #488]	; (8004b74 <HAL_RCC_OscConfig+0x310>)
 800498a:	6818      	ldr	r0, [r3, #0]
 800498c:	f7ff fe04 	bl	8004598 <HAL_InitTick>
 8004990:	2800      	cmp	r0, #0
 8004992:	d100      	bne.n	8004996 <HAL_RCC_OscConfig+0x132>
 8004994:	e771      	b.n	800487a <HAL_RCC_OscConfig+0x16>
 8004996:	e78e      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI))
 8004998:	2b00      	cmp	r3, #0
 800499a:	d0d8      	beq.n	800494e <HAL_RCC_OscConfig+0xea>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800499c:	68e3      	ldr	r3, [r4, #12]
 800499e:	2b00      	cmp	r3, #0
 80049a0:	d020      	beq.n	80049e4 <HAL_RCC_OscConfig+0x180>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80049a2:	682b      	ldr	r3, [r5, #0]
 80049a4:	4a70      	ldr	r2, [pc, #448]	; (8004b68 <HAL_RCC_OscConfig+0x304>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80049a6:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80049a8:	4013      	ands	r3, r2
 80049aa:	6922      	ldr	r2, [r4, #16]
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80049ac:	00ff      	lsls	r7, r7, #3
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80049ae:	4313      	orrs	r3, r2
 80049b0:	602b      	str	r3, [r5, #0]
        __HAL_RCC_HSI_ENABLE();
 80049b2:	2380      	movs	r3, #128	; 0x80
 80049b4:	682a      	ldr	r2, [r5, #0]
 80049b6:	005b      	lsls	r3, r3, #1
 80049b8:	4313      	orrs	r3, r2
 80049ba:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80049bc:	f7ff fe34 	bl	8004628 <HAL_GetTick>
 80049c0:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80049c2:	682b      	ldr	r3, [r5, #0]
 80049c4:	423b      	tst	r3, r7
 80049c6:	d007      	beq.n	80049d8 <HAL_RCC_OscConfig+0x174>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80049c8:	686a      	ldr	r2, [r5, #4]
 80049ca:	6963      	ldr	r3, [r4, #20]
 80049cc:	4965      	ldr	r1, [pc, #404]	; (8004b64 <HAL_RCC_OscConfig+0x300>)
 80049ce:	021b      	lsls	r3, r3, #8
 80049d0:	400a      	ands	r2, r1
 80049d2:	4313      	orrs	r3, r2
 80049d4:	606b      	str	r3, [r5, #4]
 80049d6:	e750      	b.n	800487a <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80049d8:	f7ff fe26 	bl	8004628 <HAL_GetTick>
 80049dc:	1b80      	subs	r0, r0, r6
 80049de:	2802      	cmp	r0, #2
 80049e0:	d9ef      	bls.n	80049c2 <HAL_RCC_OscConfig+0x15e>
 80049e2:	e781      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_HSI_DISABLE();
 80049e4:	682b      	ldr	r3, [r5, #0]
 80049e6:	4a64      	ldr	r2, [pc, #400]	; (8004b78 <HAL_RCC_OscConfig+0x314>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 80049e8:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_HSI_DISABLE();
 80049ea:	4013      	ands	r3, r2
 80049ec:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80049ee:	f7ff fe1b 	bl	8004628 <HAL_GetTick>
 80049f2:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 80049f4:	00ff      	lsls	r7, r7, #3
 80049f6:	682b      	ldr	r3, [r5, #0]
 80049f8:	423b      	tst	r3, r7
 80049fa:	d100      	bne.n	80049fe <HAL_RCC_OscConfig+0x19a>
 80049fc:	e73d      	b.n	800487a <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80049fe:	f7ff fe13 	bl	8004628 <HAL_GetTick>
 8004a02:	1b80      	subs	r0, r0, r6
 8004a04:	2802      	cmp	r0, #2
 8004a06:	d9f6      	bls.n	80049f6 <HAL_RCC_OscConfig+0x192>
 8004a08:	e76e      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8004a0a:	2238      	movs	r2, #56	; 0x38
 8004a0c:	4d52      	ldr	r5, [pc, #328]	; (8004b58 <HAL_RCC_OscConfig+0x2f4>)
 8004a0e:	68ab      	ldr	r3, [r5, #8]
 8004a10:	4013      	ands	r3, r2
 8004a12:	2b18      	cmp	r3, #24
 8004a14:	d108      	bne.n	8004a28 <HAL_RCC_OscConfig+0x1c4>
      if ((((RCC->CSR) & RCC_CSR_LSIRDY) != 0U) && (RCC_OscInitStruct->LSIState == RCC_LSI_OFF))
 8004a16:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8004a18:	079b      	lsls	r3, r3, #30
 8004a1a:	d400      	bmi.n	8004a1e <HAL_RCC_OscConfig+0x1ba>
 8004a1c:	e731      	b.n	8004882 <HAL_RCC_OscConfig+0x1e>
 8004a1e:	69a3      	ldr	r3, [r4, #24]
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	d000      	beq.n	8004a26 <HAL_RCC_OscConfig+0x1c2>
 8004a24:	e72d      	b.n	8004882 <HAL_RCC_OscConfig+0x1e>
 8004a26:	e746      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004a28:	69a2      	ldr	r2, [r4, #24]
 8004a2a:	2301      	movs	r3, #1
 8004a2c:	2a00      	cmp	r2, #0
 8004a2e:	d010      	beq.n	8004a52 <HAL_RCC_OscConfig+0x1ee>
        __HAL_RCC_LSI_ENABLE();
 8004a30:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8004a32:	2702      	movs	r7, #2
        __HAL_RCC_LSI_ENABLE();
 8004a34:	4313      	orrs	r3, r2
 8004a36:	662b      	str	r3, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 8004a38:	f7ff fdf6 	bl	8004628 <HAL_GetTick>
 8004a3c:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8004a3e:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8004a40:	423b      	tst	r3, r7
 8004a42:	d000      	beq.n	8004a46 <HAL_RCC_OscConfig+0x1e2>
 8004a44:	e71d      	b.n	8004882 <HAL_RCC_OscConfig+0x1e>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004a46:	f7ff fdef 	bl	8004628 <HAL_GetTick>
 8004a4a:	1b80      	subs	r0, r0, r6
 8004a4c:	2802      	cmp	r0, #2
 8004a4e:	d9f6      	bls.n	8004a3e <HAL_RCC_OscConfig+0x1da>
 8004a50:	e74a      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_LSI_DISABLE();
 8004a52:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8004a54:	2702      	movs	r7, #2
        __HAL_RCC_LSI_DISABLE();
 8004a56:	439a      	bics	r2, r3
 8004a58:	662a      	str	r2, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 8004a5a:	f7ff fde5 	bl	8004628 <HAL_GetTick>
 8004a5e:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8004a60:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8004a62:	423b      	tst	r3, r7
 8004a64:	d100      	bne.n	8004a68 <HAL_RCC_OscConfig+0x204>
 8004a66:	e70c      	b.n	8004882 <HAL_RCC_OscConfig+0x1e>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004a68:	f7ff fdde 	bl	8004628 <HAL_GetTick>
 8004a6c:	1b80      	subs	r0, r0, r6
 8004a6e:	2802      	cmp	r0, #2
 8004a70:	d9f6      	bls.n	8004a60 <HAL_RCC_OscConfig+0x1fc>
 8004a72:	e739      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 8004a74:	2238      	movs	r2, #56	; 0x38
 8004a76:	4d38      	ldr	r5, [pc, #224]	; (8004b58 <HAL_RCC_OscConfig+0x2f4>)
 8004a78:	68ab      	ldr	r3, [r5, #8]
 8004a7a:	4013      	ands	r3, r2
 8004a7c:	2b20      	cmp	r3, #32
 8004a7e:	d108      	bne.n	8004a92 <HAL_RCC_OscConfig+0x22e>
      if ((((RCC->BDCR) & RCC_BDCR_LSERDY) != 0U) && (RCC_OscInitStruct->LSEState == RCC_LSE_OFF))
 8004a80:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8004a82:	079b      	lsls	r3, r3, #30
 8004a84:	d400      	bmi.n	8004a88 <HAL_RCC_OscConfig+0x224>
 8004a86:	e700      	b.n	800488a <HAL_RCC_OscConfig+0x26>
 8004a88:	68a3      	ldr	r3, [r4, #8]
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	d000      	beq.n	8004a90 <HAL_RCC_OscConfig+0x22c>
 8004a8e:	e6fc      	b.n	800488a <HAL_RCC_OscConfig+0x26>
 8004a90:	e711      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8004a92:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8004a94:	2100      	movs	r1, #0
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8004a96:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8004a98:	0552      	lsls	r2, r2, #21
    FlagStatus       pwrclkchanged = RESET;
 8004a9a:	9100      	str	r1, [sp, #0]
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8004a9c:	4213      	tst	r3, r2
 8004a9e:	d108      	bne.n	8004ab2 <HAL_RCC_OscConfig+0x24e>
        __HAL_RCC_PWR_CLK_ENABLE();
 8004aa0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8004aa2:	4313      	orrs	r3, r2
 8004aa4:	63eb      	str	r3, [r5, #60]	; 0x3c
 8004aa6:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8004aa8:	4013      	ands	r3, r2
 8004aaa:	9303      	str	r3, [sp, #12]
 8004aac:	9b03      	ldr	r3, [sp, #12]
        pwrclkchanged = SET;
 8004aae:	2301      	movs	r3, #1
 8004ab0:	9300      	str	r3, [sp, #0]
      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8004ab2:	2780      	movs	r7, #128	; 0x80
 8004ab4:	4e31      	ldr	r6, [pc, #196]	; (8004b7c <HAL_RCC_OscConfig+0x318>)
 8004ab6:	007f      	lsls	r7, r7, #1
 8004ab8:	6833      	ldr	r3, [r6, #0]
 8004aba:	423b      	tst	r3, r7
 8004abc:	d015      	beq.n	8004aea <HAL_RCC_OscConfig+0x286>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004abe:	68a3      	ldr	r3, [r4, #8]
 8004ac0:	2b01      	cmp	r3, #1
 8004ac2:	d122      	bne.n	8004b0a <HAL_RCC_OscConfig+0x2a6>
 8004ac4:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004ac6:	4313      	orrs	r3, r2
 8004ac8:	65eb      	str	r3, [r5, #92]	; 0x5c
        tickstart = HAL_GetTick();
 8004aca:	f7ff fdad 	bl	8004628 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004ace:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8004ad0:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004ad2:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8004ad4:	423b      	tst	r3, r7
 8004ad6:	d038      	beq.n	8004b4a <HAL_RCC_OscConfig+0x2e6>
      if (pwrclkchanged == SET)
 8004ad8:	9b00      	ldr	r3, [sp, #0]
 8004ada:	2b01      	cmp	r3, #1
 8004adc:	d000      	beq.n	8004ae0 <HAL_RCC_OscConfig+0x27c>
 8004ade:	e6d4      	b.n	800488a <HAL_RCC_OscConfig+0x26>
        __HAL_RCC_PWR_CLK_DISABLE();
 8004ae0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8004ae2:	4a27      	ldr	r2, [pc, #156]	; (8004b80 <HAL_RCC_OscConfig+0x31c>)
 8004ae4:	4013      	ands	r3, r2
 8004ae6:	63eb      	str	r3, [r5, #60]	; 0x3c
 8004ae8:	e6cf      	b.n	800488a <HAL_RCC_OscConfig+0x26>
        SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8004aea:	6833      	ldr	r3, [r6, #0]
 8004aec:	433b      	orrs	r3, r7
 8004aee:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8004af0:	f7ff fd9a 	bl	8004628 <HAL_GetTick>
 8004af4:	9001      	str	r0, [sp, #4]
        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8004af6:	6833      	ldr	r3, [r6, #0]
 8004af8:	423b      	tst	r3, r7
 8004afa:	d1e0      	bne.n	8004abe <HAL_RCC_OscConfig+0x25a>
          if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004afc:	f7ff fd94 	bl	8004628 <HAL_GetTick>
 8004b00:	9b01      	ldr	r3, [sp, #4]
 8004b02:	1ac0      	subs	r0, r0, r3
 8004b04:	2802      	cmp	r0, #2
 8004b06:	d9f6      	bls.n	8004af6 <HAL_RCC_OscConfig+0x292>
 8004b08:	e6ee      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004b0a:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004b0c:	2b05      	cmp	r3, #5
 8004b0e:	d105      	bne.n	8004b1c <HAL_RCC_OscConfig+0x2b8>
 8004b10:	3b01      	subs	r3, #1
 8004b12:	4313      	orrs	r3, r2
 8004b14:	65eb      	str	r3, [r5, #92]	; 0x5c
 8004b16:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004b18:	2301      	movs	r3, #1
 8004b1a:	e7d4      	b.n	8004ac6 <HAL_RCC_OscConfig+0x262>
 8004b1c:	2101      	movs	r1, #1
 8004b1e:	438a      	bics	r2, r1
 8004b20:	65ea      	str	r2, [r5, #92]	; 0x5c
 8004b22:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004b24:	3103      	adds	r1, #3
 8004b26:	438a      	bics	r2, r1
 8004b28:	65ea      	str	r2, [r5, #92]	; 0x5c
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d1cd      	bne.n	8004aca <HAL_RCC_OscConfig+0x266>
        tickstart = HAL_GetTick();
 8004b2e:	f7ff fd7b 	bl	8004628 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004b32:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8004b34:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004b36:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8004b38:	423b      	tst	r3, r7
 8004b3a:	d0cd      	beq.n	8004ad8 <HAL_RCC_OscConfig+0x274>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004b3c:	f7ff fd74 	bl	8004628 <HAL_GetTick>
 8004b40:	4b10      	ldr	r3, [pc, #64]	; (8004b84 <HAL_RCC_OscConfig+0x320>)
 8004b42:	1b80      	subs	r0, r0, r6
 8004b44:	4298      	cmp	r0, r3
 8004b46:	d9f6      	bls.n	8004b36 <HAL_RCC_OscConfig+0x2d2>
 8004b48:	e6ce      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004b4a:	f7ff fd6d 	bl	8004628 <HAL_GetTick>
 8004b4e:	4b0d      	ldr	r3, [pc, #52]	; (8004b84 <HAL_RCC_OscConfig+0x320>)
 8004b50:	1b80      	subs	r0, r0, r6
 8004b52:	4298      	cmp	r0, r3
 8004b54:	d9bd      	bls.n	8004ad2 <HAL_RCC_OscConfig+0x26e>
 8004b56:	e6c7      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
 8004b58:	40021000 	.word	0x40021000
 8004b5c:	fffeffff 	.word	0xfffeffff
 8004b60:	fffbffff 	.word	0xfffbffff
 8004b64:	ffff80ff 	.word	0xffff80ff
 8004b68:	ffffc7ff 	.word	0xffffc7ff
 8004b6c:	00f42400 	.word	0x00f42400
 8004b70:	20000090 	.word	0x20000090
 8004b74:	20000098 	.word	0x20000098
 8004b78:	fffffeff 	.word	0xfffffeff
 8004b7c:	40007000 	.word	0x40007000
 8004b80:	efffffff 	.word	0xefffffff
 8004b84:	00001388 	.word	0x00001388
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004b88:	2138      	movs	r1, #56	; 0x38
 8004b8a:	4d3f      	ldr	r5, [pc, #252]	; (8004c88 <HAL_RCC_OscConfig+0x424>)
 8004b8c:	68aa      	ldr	r2, [r5, #8]
 8004b8e:	400a      	ands	r2, r1
 8004b90:	2a10      	cmp	r2, #16
 8004b92:	d053      	beq.n	8004c3c <HAL_RCC_OscConfig+0x3d8>
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8004b94:	4a3d      	ldr	r2, [pc, #244]	; (8004c8c <HAL_RCC_OscConfig+0x428>)
 8004b96:	2b02      	cmp	r3, #2
 8004b98:	d138      	bne.n	8004c0c <HAL_RCC_OscConfig+0x3a8>
        __HAL_RCC_PLL_DISABLE();
 8004b9a:	682b      	ldr	r3, [r5, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004b9c:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 8004b9e:	4013      	ands	r3, r2
 8004ba0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8004ba2:	f7ff fd41 	bl	8004628 <HAL_GetTick>
 8004ba6:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004ba8:	04bf      	lsls	r7, r7, #18
 8004baa:	682b      	ldr	r3, [r5, #0]
 8004bac:	423b      	tst	r3, r7
 8004bae:	d127      	bne.n	8004c00 <HAL_RCC_OscConfig+0x39c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004bb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8004bb2:	6a23      	ldr	r3, [r4, #32]
 8004bb4:	68ea      	ldr	r2, [r5, #12]
 8004bb6:	430b      	orrs	r3, r1
 8004bb8:	4935      	ldr	r1, [pc, #212]	; (8004c90 <HAL_RCC_OscConfig+0x42c>)
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004bba:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004bbc:	400a      	ands	r2, r1
 8004bbe:	4313      	orrs	r3, r2
 8004bc0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004bc2:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004bc4:	4313      	orrs	r3, r2
 8004bc6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004bc8:	4313      	orrs	r3, r2
 8004bca:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004bcc:	0212      	lsls	r2, r2, #8
 8004bce:	4313      	orrs	r3, r2
 8004bd0:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_ENABLE();
 8004bd2:	2380      	movs	r3, #128	; 0x80
 8004bd4:	682a      	ldr	r2, [r5, #0]
 8004bd6:	045b      	lsls	r3, r3, #17
 8004bd8:	4313      	orrs	r3, r2
 8004bda:	602b      	str	r3, [r5, #0]
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLRCLK);
 8004bdc:	2380      	movs	r3, #128	; 0x80
 8004bde:	68ea      	ldr	r2, [r5, #12]
 8004be0:	055b      	lsls	r3, r3, #21
 8004be2:	4313      	orrs	r3, r2
 8004be4:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 8004be6:	f7ff fd1f 	bl	8004628 <HAL_GetTick>
 8004bea:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004bec:	682b      	ldr	r3, [r5, #0]
 8004bee:	4233      	tst	r3, r6
 8004bf0:	d000      	beq.n	8004bf4 <HAL_RCC_OscConfig+0x390>
 8004bf2:	e64e      	b.n	8004892 <HAL_RCC_OscConfig+0x2e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004bf4:	f7ff fd18 	bl	8004628 <HAL_GetTick>
 8004bf8:	1b00      	subs	r0, r0, r4
 8004bfa:	2802      	cmp	r0, #2
 8004bfc:	d9f6      	bls.n	8004bec <HAL_RCC_OscConfig+0x388>
 8004bfe:	e673      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004c00:	f7ff fd12 	bl	8004628 <HAL_GetTick>
 8004c04:	1b80      	subs	r0, r0, r6
 8004c06:	2802      	cmp	r0, #2
 8004c08:	d9cf      	bls.n	8004baa <HAL_RCC_OscConfig+0x346>
 8004c0a:	e66d      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_PLL_DISABLE();
 8004c0c:	682b      	ldr	r3, [r5, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004c0e:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 8004c10:	4013      	ands	r3, r2
 8004c12:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8004c14:	f7ff fd08 	bl	8004628 <HAL_GetTick>
 8004c18:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004c1a:	04b6      	lsls	r6, r6, #18
 8004c1c:	682b      	ldr	r3, [r5, #0]
 8004c1e:	0018      	movs	r0, r3
 8004c20:	4030      	ands	r0, r6
 8004c22:	4233      	tst	r3, r6
 8004c24:	d104      	bne.n	8004c30 <HAL_RCC_OscConfig+0x3cc>
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLREN);
 8004c26:	68eb      	ldr	r3, [r5, #12]
 8004c28:	4a1a      	ldr	r2, [pc, #104]	; (8004c94 <HAL_RCC_OscConfig+0x430>)
 8004c2a:	4013      	ands	r3, r2
 8004c2c:	60eb      	str	r3, [r5, #12]
 8004c2e:	e65c      	b.n	80048ea <HAL_RCC_OscConfig+0x86>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004c30:	f7ff fcfa 	bl	8004628 <HAL_GetTick>
 8004c34:	1b00      	subs	r0, r0, r4
 8004c36:	2802      	cmp	r0, #2
 8004c38:	d9f0      	bls.n	8004c1c <HAL_RCC_OscConfig+0x3b8>
 8004c3a:	e655      	b.n	80048e8 <HAL_RCC_OscConfig+0x84>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004c3c:	2b01      	cmp	r3, #1
 8004c3e:	d100      	bne.n	8004c42 <HAL_RCC_OscConfig+0x3de>
 8004c40:	e639      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004c42:	2203      	movs	r2, #3
        temp_pllckcfg = RCC->PLLCFGR;
 8004c44:	68eb      	ldr	r3, [r5, #12]
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004c46:	6a21      	ldr	r1, [r4, #32]
 8004c48:	401a      	ands	r2, r3
 8004c4a:	428a      	cmp	r2, r1
 8004c4c:	d000      	beq.n	8004c50 <HAL_RCC_OscConfig+0x3ec>
 8004c4e:	e632      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004c50:	2270      	movs	r2, #112	; 0x70
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004c52:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004c54:	401a      	ands	r2, r3
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004c56:	428a      	cmp	r2, r1
 8004c58:	d000      	beq.n	8004c5c <HAL_RCC_OscConfig+0x3f8>
 8004c5a:	e62c      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004c5c:	21fe      	movs	r1, #254	; 0xfe
 8004c5e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004c60:	01c9      	lsls	r1, r1, #7
 8004c62:	4019      	ands	r1, r3
 8004c64:	0212      	lsls	r2, r2, #8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004c66:	4291      	cmp	r1, r2
 8004c68:	d000      	beq.n	8004c6c <HAL_RCC_OscConfig+0x408>
 8004c6a:	e624      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004c6c:	22f8      	movs	r2, #248	; 0xf8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004c6e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004c70:	0392      	lsls	r2, r2, #14
 8004c72:	401a      	ands	r2, r3
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004c74:	428a      	cmp	r2, r1
 8004c76:	d000      	beq.n	8004c7a <HAL_RCC_OscConfig+0x416>
 8004c78:	e61d      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004c7a:	6b22      	ldr	r2, [r4, #48]	; 0x30
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != RCC_OscInitStruct->PLL.PLLR))
 8004c7c:	0f5b      	lsrs	r3, r3, #29
 8004c7e:	075b      	lsls	r3, r3, #29
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004c80:	4293      	cmp	r3, r2
 8004c82:	d100      	bne.n	8004c86 <HAL_RCC_OscConfig+0x422>
 8004c84:	e605      	b.n	8004892 <HAL_RCC_OscConfig+0x2e>
 8004c86:	e616      	b.n	80048b6 <HAL_RCC_OscConfig+0x52>
 8004c88:	40021000 	.word	0x40021000
 8004c8c:	feffffff 	.word	0xfeffffff
 8004c90:	1fc1808c 	.word	0x1fc1808c
 8004c94:	effefffc 	.word	0xeffefffc

08004c98 <HAL_RCC_GetSysClockFreq>:
uint32_t HAL_RCC_GetSysClockFreq(void)
{
  uint32_t pllvco, pllsource, pllr, pllm, hsidiv;
  uint32_t sysclockfreq;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8004c98:	2338      	movs	r3, #56	; 0x38
{
 8004c9a:	b570      	push	{r4, r5, r6, lr}
  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8004c9c:	4c1e      	ldr	r4, [pc, #120]	; (8004d18 <HAL_RCC_GetSysClockFreq+0x80>)
 8004c9e:	68a2      	ldr	r2, [r4, #8]
 8004ca0:	421a      	tst	r2, r3
 8004ca2:	d105      	bne.n	8004cb0 <HAL_RCC_GetSysClockFreq+0x18>
  {
    /* HSISYS can be derived for HSI16 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 8004ca4:	6823      	ldr	r3, [r4, #0]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 8004ca6:	481d      	ldr	r0, [pc, #116]	; (8004d1c <HAL_RCC_GetSysClockFreq+0x84>)
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 8004ca8:	049b      	lsls	r3, r3, #18
 8004caa:	0f5b      	lsrs	r3, r3, #29
    sysclockfreq = (HSI_VALUE / hsidiv);
 8004cac:	40d8      	lsrs	r0, r3
  {
    sysclockfreq = 0U;
  }

  return sysclockfreq;
}
 8004cae:	bd70      	pop	{r4, r5, r6, pc}
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8004cb0:	68a2      	ldr	r2, [r4, #8]
 8004cb2:	401a      	ands	r2, r3
 8004cb4:	2a08      	cmp	r2, #8
 8004cb6:	d02a      	beq.n	8004d0e <HAL_RCC_GetSysClockFreq+0x76>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004cb8:	68a2      	ldr	r2, [r4, #8]
 8004cba:	401a      	ands	r2, r3
 8004cbc:	2a10      	cmp	r2, #16
 8004cbe:	d11a      	bne.n	8004cf6 <HAL_RCC_GetSysClockFreq+0x5e>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8004cc0:	68e3      	ldr	r3, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8004cc2:	68e1      	ldr	r1, [r4, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8004cc4:	43db      	mvns	r3, r3
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8004cc6:	0649      	lsls	r1, r1, #25
 8004cc8:	0f49      	lsrs	r1, r1, #29
 8004cca:	257f      	movs	r5, #127	; 0x7f
 8004ccc:	3101      	adds	r1, #1
    switch (pllsource)
 8004cce:	079b      	lsls	r3, r3, #30
 8004cd0:	d10c      	bne.n	8004cec <HAL_RCC_GetSysClockFreq+0x54>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8004cd2:	68e3      	ldr	r3, [r4, #12]
 8004cd4:	4812      	ldr	r0, [pc, #72]	; (8004d20 <HAL_RCC_GetSysClockFreq+0x88>)
 8004cd6:	0a1b      	lsrs	r3, r3, #8
 8004cd8:	401d      	ands	r5, r3
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8004cda:	f7fb fa37 	bl	800014c <__udivsi3>
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 8004cde:	68e1      	ldr	r1, [r4, #12]
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8004ce0:	4368      	muls	r0, r5
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 8004ce2:	0f49      	lsrs	r1, r1, #29
 8004ce4:	3101      	adds	r1, #1
    sysclockfreq = pllvco / pllr;
 8004ce6:	f7fb fa31 	bl	800014c <__udivsi3>
 8004cea:	e7e0      	b.n	8004cae <HAL_RCC_GetSysClockFreq+0x16>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8004cec:	68e3      	ldr	r3, [r4, #12]
 8004cee:	480b      	ldr	r0, [pc, #44]	; (8004d1c <HAL_RCC_GetSysClockFreq+0x84>)
 8004cf0:	0a1b      	lsrs	r3, r3, #8
 8004cf2:	401d      	ands	r5, r3
 8004cf4:	e7f1      	b.n	8004cda <HAL_RCC_GetSysClockFreq+0x42>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 8004cf6:	68a2      	ldr	r2, [r4, #8]
 8004cf8:	401a      	ands	r2, r3
 8004cfa:	2a20      	cmp	r2, #32
 8004cfc:	d009      	beq.n	8004d12 <HAL_RCC_GetSysClockFreq+0x7a>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8004cfe:	68a2      	ldr	r2, [r4, #8]
    sysclockfreq = 0U;
 8004d00:	2000      	movs	r0, #0
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8004d02:	4013      	ands	r3, r2
 8004d04:	2b18      	cmp	r3, #24
 8004d06:	d1d2      	bne.n	8004cae <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = LSI_VALUE;
 8004d08:	20fa      	movs	r0, #250	; 0xfa
 8004d0a:	01c0      	lsls	r0, r0, #7
  return sysclockfreq;
 8004d0c:	e7cf      	b.n	8004cae <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = HSE_VALUE;
 8004d0e:	4804      	ldr	r0, [pc, #16]	; (8004d20 <HAL_RCC_GetSysClockFreq+0x88>)
 8004d10:	e7cd      	b.n	8004cae <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = LSE_VALUE;
 8004d12:	2080      	movs	r0, #128	; 0x80
 8004d14:	0200      	lsls	r0, r0, #8
 8004d16:	e7ca      	b.n	8004cae <HAL_RCC_GetSysClockFreq+0x16>
 8004d18:	40021000 	.word	0x40021000
 8004d1c:	00f42400 	.word	0x00f42400
 8004d20:	007a1200 	.word	0x007a1200

08004d24 <HAL_RCC_ClockConfig>:
{
 8004d24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004d26:	0004      	movs	r4, r0
 8004d28:	000d      	movs	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8004d2a:	2800      	cmp	r0, #0
 8004d2c:	d101      	bne.n	8004d32 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8004d2e:	2001      	movs	r0, #1
}
 8004d30:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8004d32:	2707      	movs	r7, #7
 8004d34:	4e4a      	ldr	r6, [pc, #296]	; (8004e60 <HAL_RCC_ClockConfig+0x13c>)
 8004d36:	6833      	ldr	r3, [r6, #0]
 8004d38:	403b      	ands	r3, r7
 8004d3a:	428b      	cmp	r3, r1
 8004d3c:	d32a      	bcc.n	8004d94 <HAL_RCC_ClockConfig+0x70>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004d3e:	6821      	ldr	r1, [r4, #0]
 8004d40:	078b      	lsls	r3, r1, #30
 8004d42:	d43b      	bmi.n	8004dbc <HAL_RCC_ClockConfig+0x98>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004d44:	07cb      	lsls	r3, r1, #31
 8004d46:	d448      	bmi.n	8004dda <HAL_RCC_ClockConfig+0xb6>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8004d48:	2707      	movs	r7, #7
 8004d4a:	6833      	ldr	r3, [r6, #0]
 8004d4c:	403b      	ands	r3, r7
 8004d4e:	42ab      	cmp	r3, r5
 8004d50:	d90a      	bls.n	8004d68 <HAL_RCC_ClockConfig+0x44>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004d52:	6833      	ldr	r3, [r6, #0]
 8004d54:	43bb      	bics	r3, r7
 8004d56:	432b      	orrs	r3, r5
 8004d58:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8004d5a:	f7ff fc65 	bl	8004628 <HAL_GetTick>
 8004d5e:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8004d60:	6833      	ldr	r3, [r6, #0]
 8004d62:	403b      	ands	r3, r7
 8004d64:	42ab      	cmp	r3, r5
 8004d66:	d16b      	bne.n	8004e40 <HAL_RCC_ClockConfig+0x11c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004d68:	6823      	ldr	r3, [r4, #0]
 8004d6a:	4d3e      	ldr	r5, [pc, #248]	; (8004e64 <HAL_RCC_ClockConfig+0x140>)
 8004d6c:	075b      	lsls	r3, r3, #29
 8004d6e:	d46f      	bmi.n	8004e50 <HAL_RCC_ClockConfig+0x12c>
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 8004d70:	f7ff ff92 	bl	8004c98 <HAL_RCC_GetSysClockFreq>
 8004d74:	68ab      	ldr	r3, [r5, #8]
 8004d76:	4a3c      	ldr	r2, [pc, #240]	; (8004e68 <HAL_RCC_ClockConfig+0x144>)
 8004d78:	051b      	lsls	r3, r3, #20
 8004d7a:	0f1b      	lsrs	r3, r3, #28
 8004d7c:	009b      	lsls	r3, r3, #2
 8004d7e:	589b      	ldr	r3, [r3, r2]
 8004d80:	221f      	movs	r2, #31
 8004d82:	4013      	ands	r3, r2
 8004d84:	40d8      	lsrs	r0, r3
 8004d86:	4b39      	ldr	r3, [pc, #228]	; (8004e6c <HAL_RCC_ClockConfig+0x148>)
 8004d88:	6018      	str	r0, [r3, #0]
  return HAL_InitTick(uwTickPrio);
 8004d8a:	4b39      	ldr	r3, [pc, #228]	; (8004e70 <HAL_RCC_ClockConfig+0x14c>)
 8004d8c:	6818      	ldr	r0, [r3, #0]
 8004d8e:	f7ff fc03 	bl	8004598 <HAL_InitTick>
 8004d92:	e7cd      	b.n	8004d30 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004d94:	6833      	ldr	r3, [r6, #0]
 8004d96:	43bb      	bics	r3, r7
 8004d98:	430b      	orrs	r3, r1
 8004d9a:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8004d9c:	f7ff fc44 	bl	8004628 <HAL_GetTick>
 8004da0:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8004da2:	6833      	ldr	r3, [r6, #0]
 8004da4:	403b      	ands	r3, r7
 8004da6:	42ab      	cmp	r3, r5
 8004da8:	d0c9      	beq.n	8004d3e <HAL_RCC_ClockConfig+0x1a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004daa:	f7ff fc3d 	bl	8004628 <HAL_GetTick>
 8004dae:	9b01      	ldr	r3, [sp, #4]
 8004db0:	1ac0      	subs	r0, r0, r3
 8004db2:	4b30      	ldr	r3, [pc, #192]	; (8004e74 <HAL_RCC_ClockConfig+0x150>)
 8004db4:	4298      	cmp	r0, r3
 8004db6:	d9f4      	bls.n	8004da2 <HAL_RCC_ClockConfig+0x7e>
        return HAL_TIMEOUT;
 8004db8:	2003      	movs	r0, #3
 8004dba:	e7b9      	b.n	8004d30 <HAL_RCC_ClockConfig+0xc>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004dbc:	4a29      	ldr	r2, [pc, #164]	; (8004e64 <HAL_RCC_ClockConfig+0x140>)
 8004dbe:	074b      	lsls	r3, r1, #29
 8004dc0:	d504      	bpl.n	8004dcc <HAL_RCC_ClockConfig+0xa8>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8004dc2:	23e0      	movs	r3, #224	; 0xe0
 8004dc4:	6890      	ldr	r0, [r2, #8]
 8004dc6:	01db      	lsls	r3, r3, #7
 8004dc8:	4303      	orrs	r3, r0
 8004dca:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004dcc:	6893      	ldr	r3, [r2, #8]
 8004dce:	482a      	ldr	r0, [pc, #168]	; (8004e78 <HAL_RCC_ClockConfig+0x154>)
 8004dd0:	4003      	ands	r3, r0
 8004dd2:	68a0      	ldr	r0, [r4, #8]
 8004dd4:	4303      	orrs	r3, r0
 8004dd6:	6093      	str	r3, [r2, #8]
 8004dd8:	e7b4      	b.n	8004d44 <HAL_RCC_ClockConfig+0x20>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004dda:	6862      	ldr	r2, [r4, #4]
 8004ddc:	4f21      	ldr	r7, [pc, #132]	; (8004e64 <HAL_RCC_ClockConfig+0x140>)
 8004dde:	2a01      	cmp	r2, #1
 8004de0:	d119      	bne.n	8004e16 <HAL_RCC_ClockConfig+0xf2>
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004de2:	683b      	ldr	r3, [r7, #0]
 8004de4:	039b      	lsls	r3, r3, #14
 8004de6:	d5a2      	bpl.n	8004d2e <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8004de8:	2107      	movs	r1, #7
 8004dea:	68bb      	ldr	r3, [r7, #8]
 8004dec:	438b      	bics	r3, r1
 8004dee:	4313      	orrs	r3, r2
 8004df0:	60bb      	str	r3, [r7, #8]
    tickstart = HAL_GetTick();
 8004df2:	f7ff fc19 	bl	8004628 <HAL_GetTick>
 8004df6:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004df8:	2338      	movs	r3, #56	; 0x38
 8004dfa:	68ba      	ldr	r2, [r7, #8]
 8004dfc:	401a      	ands	r2, r3
 8004dfe:	6863      	ldr	r3, [r4, #4]
 8004e00:	00db      	lsls	r3, r3, #3
 8004e02:	429a      	cmp	r2, r3
 8004e04:	d0a0      	beq.n	8004d48 <HAL_RCC_ClockConfig+0x24>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004e06:	f7ff fc0f 	bl	8004628 <HAL_GetTick>
 8004e0a:	9b01      	ldr	r3, [sp, #4]
 8004e0c:	1ac0      	subs	r0, r0, r3
 8004e0e:	4b19      	ldr	r3, [pc, #100]	; (8004e74 <HAL_RCC_ClockConfig+0x150>)
 8004e10:	4298      	cmp	r0, r3
 8004e12:	d9f1      	bls.n	8004df8 <HAL_RCC_ClockConfig+0xd4>
 8004e14:	e7d0      	b.n	8004db8 <HAL_RCC_ClockConfig+0x94>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004e16:	2a02      	cmp	r2, #2
 8004e18:	d103      	bne.n	8004e22 <HAL_RCC_ClockConfig+0xfe>
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004e1a:	683b      	ldr	r3, [r7, #0]
 8004e1c:	019b      	lsls	r3, r3, #6
 8004e1e:	d4e3      	bmi.n	8004de8 <HAL_RCC_ClockConfig+0xc4>
 8004e20:	e785      	b.n	8004d2e <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8004e22:	2a00      	cmp	r2, #0
 8004e24:	d103      	bne.n	8004e2e <HAL_RCC_ClockConfig+0x10a>
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8004e26:	683b      	ldr	r3, [r7, #0]
 8004e28:	055b      	lsls	r3, r3, #21
 8004e2a:	d4dd      	bmi.n	8004de8 <HAL_RCC_ClockConfig+0xc4>
 8004e2c:	e77f      	b.n	8004d2e <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 8004e2e:	2302      	movs	r3, #2
 8004e30:	2a03      	cmp	r2, #3
 8004e32:	d103      	bne.n	8004e3c <HAL_RCC_ClockConfig+0x118>
      if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8004e34:	6e39      	ldr	r1, [r7, #96]	; 0x60
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004e36:	4219      	tst	r1, r3
 8004e38:	d1d6      	bne.n	8004de8 <HAL_RCC_ClockConfig+0xc4>
 8004e3a:	e778      	b.n	8004d2e <HAL_RCC_ClockConfig+0xa>
 8004e3c:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8004e3e:	e7fa      	b.n	8004e36 <HAL_RCC_ClockConfig+0x112>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004e40:	f7ff fbf2 	bl	8004628 <HAL_GetTick>
 8004e44:	9b01      	ldr	r3, [sp, #4]
 8004e46:	1ac0      	subs	r0, r0, r3
 8004e48:	4b0a      	ldr	r3, [pc, #40]	; (8004e74 <HAL_RCC_ClockConfig+0x150>)
 8004e4a:	4298      	cmp	r0, r3
 8004e4c:	d988      	bls.n	8004d60 <HAL_RCC_ClockConfig+0x3c>
 8004e4e:	e7b3      	b.n	8004db8 <HAL_RCC_ClockConfig+0x94>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8004e50:	68ab      	ldr	r3, [r5, #8]
 8004e52:	4a0a      	ldr	r2, [pc, #40]	; (8004e7c <HAL_RCC_ClockConfig+0x158>)
 8004e54:	4013      	ands	r3, r2
 8004e56:	68e2      	ldr	r2, [r4, #12]
 8004e58:	4313      	orrs	r3, r2
 8004e5a:	60ab      	str	r3, [r5, #8]
 8004e5c:	e788      	b.n	8004d70 <HAL_RCC_ClockConfig+0x4c>
 8004e5e:	46c0      	nop			; (mov r8, r8)
 8004e60:	40022000 	.word	0x40022000
 8004e64:	40021000 	.word	0x40021000
 8004e68:	0800a5e8 	.word	0x0800a5e8
 8004e6c:	20000090 	.word	0x20000090
 8004e70:	20000098 	.word	0x20000098
 8004e74:	00001388 	.word	0x00001388
 8004e78:	fffff0ff 	.word	0xfffff0ff
 8004e7c:	ffff8fff 	.word	0xffff8fff

08004e80 <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8004e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e82:	0005      	movs	r5, r0

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*-------------------------- RTC clock source configuration ----------------------*/
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8004e84:	682b      	ldr	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8004e86:	2000      	movs	r0, #0
{
 8004e88:	b085      	sub	sp, #20
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8004e8a:	039b      	lsls	r3, r3, #14
 8004e8c:	d53b      	bpl.n	8004f06 <HAL_RCCEx_PeriphCLKConfig+0x86>

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004e8e:	2280      	movs	r2, #128	; 0x80
 8004e90:	4c48      	ldr	r4, [pc, #288]	; (8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004e92:	0552      	lsls	r2, r2, #21
 8004e94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    FlagStatus       pwrclkchanged = RESET;
 8004e96:	9000      	str	r0, [sp, #0]
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004e98:	4213      	tst	r3, r2
 8004e9a:	d108      	bne.n	8004eae <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004e9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004e9e:	4313      	orrs	r3, r2
 8004ea0:	63e3      	str	r3, [r4, #60]	; 0x3c
 8004ea2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004ea4:	4013      	ands	r3, r2
 8004ea6:	9303      	str	r3, [sp, #12]
 8004ea8:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8004eaa:	2301      	movs	r3, #1
 8004eac:	9300      	str	r3, [sp, #0]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8004eae:	2780      	movs	r7, #128	; 0x80
 8004eb0:	4e41      	ldr	r6, [pc, #260]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x138>)
 8004eb2:	007f      	lsls	r7, r7, #1
 8004eb4:	6833      	ldr	r3, [r6, #0]
 8004eb6:	433b      	orrs	r3, r7
 8004eb8:	6033      	str	r3, [r6, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8004eba:	f7ff fbb5 	bl	8004628 <HAL_GetTick>
 8004ebe:	9001      	str	r0, [sp, #4]

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8004ec0:	6833      	ldr	r3, [r6, #0]
 8004ec2:	423b      	tst	r3, r7
 8004ec4:	d011      	beq.n	8004eea <HAL_RCCEx_PeriphCLKConfig+0x6a>
    }

    if (ret == HAL_OK)
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8004ec6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004ec8:	23c0      	movs	r3, #192	; 0xc0
 8004eca:	0011      	movs	r1, r2
 8004ecc:	009b      	lsls	r3, r3, #2
 8004ece:	4e3b      	ldr	r6, [pc, #236]	; (8004fbc <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8004ed0:	4019      	ands	r1, r3

      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 8004ed2:	421a      	tst	r2, r3
 8004ed4:	d002      	beq.n	8004edc <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8004ed6:	696b      	ldr	r3, [r5, #20]
 8004ed8:	4299      	cmp	r1, r3
 8004eda:	d14d      	bne.n	8004f78 <HAL_RCCEx_PeriphCLKConfig+0xf8>
      }

      if (ret == HAL_OK)
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004edc:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8004ede:	2000      	movs	r0, #0
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004ee0:	401e      	ands	r6, r3
 8004ee2:	696b      	ldr	r3, [r5, #20]
 8004ee4:	431e      	orrs	r6, r3
 8004ee6:	65e6      	str	r6, [r4, #92]	; 0x5c
 8004ee8:	e006      	b.n	8004ef8 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004eea:	f7ff fb9d 	bl	8004628 <HAL_GetTick>
 8004eee:	9b01      	ldr	r3, [sp, #4]
 8004ef0:	1ac0      	subs	r0, r0, r3
 8004ef2:	2802      	cmp	r0, #2
 8004ef4:	d9e4      	bls.n	8004ec0 <HAL_RCCEx_PeriphCLKConfig+0x40>
        ret = HAL_TIMEOUT;
 8004ef6:	2003      	movs	r0, #3
      /* set overall return value */
      status = ret;
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8004ef8:	9b00      	ldr	r3, [sp, #0]
 8004efa:	2b01      	cmp	r3, #1
 8004efc:	d103      	bne.n	8004f06 <HAL_RCCEx_PeriphCLKConfig+0x86>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004efe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004f00:	4a2f      	ldr	r2, [pc, #188]	; (8004fc0 <HAL_RCCEx_PeriphCLKConfig+0x140>)
 8004f02:	4013      	ands	r3, r2
 8004f04:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8004f06:	682a      	ldr	r2, [r5, #0]
 8004f08:	07d3      	lsls	r3, r2, #31
 8004f0a:	d506      	bpl.n	8004f1a <HAL_RCCEx_PeriphCLKConfig+0x9a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8004f0c:	2403      	movs	r4, #3
 8004f0e:	4929      	ldr	r1, [pc, #164]	; (8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004f10:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 8004f12:	43a3      	bics	r3, r4
 8004f14:	686c      	ldr	r4, [r5, #4]
 8004f16:	4323      	orrs	r3, r4
 8004f18:	654b      	str	r3, [r1, #84]	; 0x54
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
  }
#endif /* RCC_CCIPR_LPTIM2SEL */

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8004f1a:	0693      	lsls	r3, r2, #26
 8004f1c:	d506      	bpl.n	8004f2c <HAL_RCCEx_PeriphCLKConfig+0xac>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8004f1e:	4925      	ldr	r1, [pc, #148]	; (8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004f20:	4c28      	ldr	r4, [pc, #160]	; (8004fc4 <HAL_RCCEx_PeriphCLKConfig+0x144>)
 8004f22:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 8004f24:	4023      	ands	r3, r4
 8004f26:	68ac      	ldr	r4, [r5, #8]
 8004f28:	4323      	orrs	r3, r4
 8004f2a:	654b      	str	r3, [r1, #84]	; 0x54
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
    }
  }
#endif /* RNG */
  /*-------------------------- ADC clock source configuration ----------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8004f2c:	0453      	lsls	r3, r2, #17
 8004f2e:	d50f      	bpl.n	8004f50 <HAL_RCCEx_PeriphCLKConfig+0xd0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8004f30:	4920      	ldr	r1, [pc, #128]	; (8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004f32:	692c      	ldr	r4, [r5, #16]
 8004f34:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 8004f36:	009b      	lsls	r3, r3, #2
 8004f38:	089b      	lsrs	r3, r3, #2
 8004f3a:	4323      	orrs	r3, r4
 8004f3c:	654b      	str	r3, [r1, #84]	; 0x54

    if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLADC)
 8004f3e:	2380      	movs	r3, #128	; 0x80
 8004f40:	05db      	lsls	r3, r3, #23
 8004f42:	429c      	cmp	r4, r3
 8004f44:	d104      	bne.n	8004f50 <HAL_RCCEx_PeriphCLKConfig+0xd0>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 8004f46:	2380      	movs	r3, #128	; 0x80
 8004f48:	68cc      	ldr	r4, [r1, #12]
 8004f4a:	025b      	lsls	r3, r3, #9
 8004f4c:	4323      	orrs	r3, r4
 8004f4e:	60cb      	str	r3, [r1, #12]
    }
  }
#endif /* RCC_CCIPR_TIM15SEL */

  /*-------------------------- I2S1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S1) == RCC_PERIPHCLK_I2S1)
 8004f50:	0513      	lsls	r3, r2, #20
 8004f52:	d50f      	bpl.n	8004f74 <HAL_RCCEx_PeriphCLKConfig+0xf4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2S1CLKSOURCE(PeriphClkInit->I2s1ClockSelection));

    /* Configure the I2S1 clock source */
    __HAL_RCC_I2S1_CONFIG(PeriphClkInit->I2s1ClockSelection);
 8004f54:	4a17      	ldr	r2, [pc, #92]	; (8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004f56:	4c1c      	ldr	r4, [pc, #112]	; (8004fc8 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 8004f58:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8004f5a:	68e9      	ldr	r1, [r5, #12]
 8004f5c:	4023      	ands	r3, r4
 8004f5e:	430b      	orrs	r3, r1
 8004f60:	6553      	str	r3, [r2, #84]	; 0x54

    if (PeriphClkInit->I2s1ClockSelection == RCC_I2S1CLKSOURCE_PLL)
 8004f62:	2380      	movs	r3, #128	; 0x80
 8004f64:	01db      	lsls	r3, r3, #7
 8004f66:	4299      	cmp	r1, r3
 8004f68:	d104      	bne.n	8004f74 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 8004f6a:	2380      	movs	r3, #128	; 0x80
 8004f6c:	68d1      	ldr	r1, [r2, #12]
 8004f6e:	025b      	lsls	r3, r3, #9
 8004f70:	430b      	orrs	r3, r1
 8004f72:	60d3      	str	r3, [r2, #12]
    }
  }
#endif /* FDCAN1 || FDCAN2 */

  return status;
}
 8004f74:	b005      	add	sp, #20
 8004f76:	bdf0      	pop	{r4, r5, r6, r7, pc}
        __HAL_RCC_BACKUPRESET_FORCE();
 8004f78:	2380      	movs	r3, #128	; 0x80
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8004f7a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_FORCE();
 8004f7c:	6de0      	ldr	r0, [r4, #92]	; 0x5c
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8004f7e:	0011      	movs	r1, r2
        __HAL_RCC_BACKUPRESET_FORCE();
 8004f80:	025b      	lsls	r3, r3, #9
 8004f82:	4303      	orrs	r3, r0
 8004f84:	65e3      	str	r3, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_RELEASE();
 8004f86:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8004f88:	4810      	ldr	r0, [pc, #64]	; (8004fcc <HAL_RCCEx_PeriphCLKConfig+0x14c>)
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8004f8a:	4031      	ands	r1, r6
        __HAL_RCC_BACKUPRESET_RELEASE();
 8004f8c:	4003      	ands	r3, r0
 8004f8e:	65e3      	str	r3, [r4, #92]	; 0x5c
        RCC->BDCR = tmpregister;
 8004f90:	65e1      	str	r1, [r4, #92]	; 0x5c
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8004f92:	07d3      	lsls	r3, r2, #31
 8004f94:	d5a2      	bpl.n	8004edc <HAL_RCCEx_PeriphCLKConfig+0x5c>
        tickstart = HAL_GetTick();
 8004f96:	f7ff fb47 	bl	8004628 <HAL_GetTick>
 8004f9a:	0007      	movs	r7, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004f9c:	2202      	movs	r2, #2
 8004f9e:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8004fa0:	4213      	tst	r3, r2
 8004fa2:	d19b      	bne.n	8004edc <HAL_RCCEx_PeriphCLKConfig+0x5c>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004fa4:	f7ff fb40 	bl	8004628 <HAL_GetTick>
 8004fa8:	4b09      	ldr	r3, [pc, #36]	; (8004fd0 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8004faa:	1bc0      	subs	r0, r0, r7
 8004fac:	4298      	cmp	r0, r3
 8004fae:	d9f5      	bls.n	8004f9c <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8004fb0:	e7a1      	b.n	8004ef6 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004fb2:	46c0      	nop			; (mov r8, r8)
 8004fb4:	40021000 	.word	0x40021000
 8004fb8:	40007000 	.word	0x40007000
 8004fbc:	fffffcff 	.word	0xfffffcff
 8004fc0:	efffffff 	.word	0xefffffff
 8004fc4:	ffffcfff 	.word	0xffffcfff
 8004fc8:	ffff3fff 	.word	0xffff3fff
 8004fcc:	fffeffff 	.word	0xfffeffff
 8004fd0:	00001388 	.word	0x00001388

08004fd4 <LL_GPIO_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: GPIO registers are initialized according to GPIO_InitStruct content
  *          - ERROR:   Not applicable
  */
ErrorStatus LL_GPIO_Init(GPIO_TypeDef *GPIOx, LL_GPIO_InitTypeDef *GPIO_InitStruct)
{
 8004fd4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004fd6:	0002      	movs	r2, r0
  assert_param(IS_LL_GPIO_MODE(GPIO_InitStruct->Mode));
  assert_param(IS_LL_GPIO_PULL(GPIO_InitStruct->Pull));

  /* ------------------------- Configure the port pins ---------------- */
  /* Initialize  pinpos on first pin set */
  pinpos = 0;
 8004fd8:	2700      	movs	r7, #0

  /* Configure the port pins */
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00u)
 8004fda:	680c      	ldr	r4, [r1, #0]
 8004fdc:	0020      	movs	r0, r4
 8004fde:	40f8      	lsrs	r0, r7
 8004fe0:	d100      	bne.n	8004fe4 <LL_GPIO_Init+0x10>
    }
    pinpos++;
  }

  return (SUCCESS);
}
 8004fe2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    currentpin = (GPIO_InitStruct->Pin) & (0x00000001uL << pinpos);
 8004fe4:	2001      	movs	r0, #1
 8004fe6:	0023      	movs	r3, r4
 8004fe8:	40b8      	lsls	r0, r7
 8004fea:	4003      	ands	r3, r0
    if (currentpin != 0x00u)
 8004fec:	4204      	tst	r4, r0
 8004fee:	d033      	beq.n	8005058 <LL_GPIO_Init+0x84>
      if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
 8004ff0:	6848      	ldr	r0, [r1, #4]
  MODIFY_REG(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDR_OSPEED0), ((Pin * Pin) * Speed));
 8004ff2:	2403      	movs	r4, #3
 8004ff4:	4684      	mov	ip, r0
 8004ff6:	0018      	movs	r0, r3
 8004ff8:	4665      	mov	r5, ip
 8004ffa:	4358      	muls	r0, r3
 8004ffc:	4344      	muls	r4, r0
 8004ffe:	3d01      	subs	r5, #1
 8005000:	43e4      	mvns	r4, r4
 8005002:	2d01      	cmp	r5, #1
 8005004:	d80b      	bhi.n	800501e <LL_GPIO_Init+0x4a>
 8005006:	688d      	ldr	r5, [r1, #8]
 8005008:	6896      	ldr	r6, [r2, #8]
 800500a:	4345      	muls	r5, r0
 800500c:	4026      	ands	r6, r4
 800500e:	4335      	orrs	r5, r6
  MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 8005010:	68ce      	ldr	r6, [r1, #12]
  MODIFY_REG(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDR_OSPEED0), ((Pin * Pin) * Speed));
 8005012:	6095      	str	r5, [r2, #8]
  MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 8005014:	435e      	muls	r6, r3
 8005016:	6855      	ldr	r5, [r2, #4]
 8005018:	439d      	bics	r5, r3
 800501a:	4335      	orrs	r5, r6
 800501c:	6055      	str	r5, [r2, #4]
  MODIFY_REG(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0), ((Pin * Pin) * Pull));
 800501e:	690d      	ldr	r5, [r1, #16]
 8005020:	68d6      	ldr	r6, [r2, #12]
 8005022:	4345      	muls	r5, r0
 8005024:	4026      	ands	r6, r4
 8005026:	4335      	orrs	r5, r6
 8005028:	60d5      	str	r5, [r2, #12]
      if (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE)
 800502a:	4665      	mov	r5, ip
 800502c:	2d02      	cmp	r5, #2
 800502e:	d10d      	bne.n	800504c <LL_GPIO_Init+0x78>
          LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 8005030:	694d      	ldr	r5, [r1, #20]
 8005032:	9501      	str	r5, [sp, #4]
        if (currentpin < LL_GPIO_PIN_8)
 8005034:	2bff      	cmp	r3, #255	; 0xff
 8005036:	d811      	bhi.n	800505c <LL_GPIO_Init+0x88>
  MODIFY_REG(GPIOx->AFR[0], ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFSEL0),
 8005038:	0003      	movs	r3, r0
 800503a:	250f      	movs	r5, #15
 800503c:	4343      	muls	r3, r0
 800503e:	435d      	muls	r5, r3
 8005040:	6a16      	ldr	r6, [r2, #32]
 8005042:	43ae      	bics	r6, r5
 8005044:	9d01      	ldr	r5, [sp, #4]
 8005046:	436b      	muls	r3, r5
 8005048:	431e      	orrs	r6, r3
 800504a:	6216      	str	r6, [r2, #32]
  MODIFY_REG(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0), ((Pin * Pin) * Mode));
 800504c:	6813      	ldr	r3, [r2, #0]
 800504e:	4023      	ands	r3, r4
 8005050:	4664      	mov	r4, ip
 8005052:	4360      	muls	r0, r4
 8005054:	4303      	orrs	r3, r0
 8005056:	6013      	str	r3, [r2, #0]
    pinpos++;
 8005058:	3701      	adds	r7, #1
 800505a:	e7be      	b.n	8004fda <LL_GPIO_Init+0x6>
  MODIFY_REG(GPIOx->AFR[1], (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AFRH_AFSEL8),
 800505c:	260f      	movs	r6, #15
 800505e:	0a1b      	lsrs	r3, r3, #8
 8005060:	435b      	muls	r3, r3
 8005062:	435b      	muls	r3, r3
 8005064:	435e      	muls	r6, r3
 8005066:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8005068:	43b5      	bics	r5, r6
 800506a:	9e01      	ldr	r6, [sp, #4]
 800506c:	4373      	muls	r3, r6
 800506e:	431d      	orrs	r5, r3
 8005070:	6255      	str	r5, [r2, #36]	; 0x24
}
 8005072:	e7eb      	b.n	800504c <LL_GPIO_Init+0x78>

08005074 <RCC_GetHCLKClockFreq>:
  *         @arg @ref LL_RCC_SYSCLK_DIV_256
  *         @arg @ref LL_RCC_SYSCLK_DIV_512
  */
__STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
{
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
 8005074:	4b05      	ldr	r3, [pc, #20]	; (800508c <RCC_GetHCLKClockFreq+0x18>)
  * @retval HCLK clock frequency (in Hz)
  */
static uint32_t RCC_GetHCLKClockFreq(uint32_t SYSCLK_Frequency)
{
  /* HCLK clock frequency */
  return __LL_RCC_CALC_HCLK_FREQ(SYSCLK_Frequency, LL_RCC_GetAHBPrescaler());
 8005076:	4a06      	ldr	r2, [pc, #24]	; (8005090 <RCC_GetHCLKClockFreq+0x1c>)
 8005078:	689b      	ldr	r3, [r3, #8]
 800507a:	051b      	lsls	r3, r3, #20
 800507c:	0f1b      	lsrs	r3, r3, #28
 800507e:	009b      	lsls	r3, r3, #2
 8005080:	589b      	ldr	r3, [r3, r2]
 8005082:	221f      	movs	r2, #31
 8005084:	4013      	ands	r3, r2
 8005086:	40d8      	lsrs	r0, r3
}
 8005088:	4770      	bx	lr
 800508a:	46c0      	nop			; (mov r8, r8)
 800508c:	40021000 	.word	0x40021000
 8005090:	0800a5e8 	.word	0x0800a5e8

08005094 <RCC_GetPCLK1ClockFreq>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
{
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
 8005094:	4b05      	ldr	r3, [pc, #20]	; (80050ac <RCC_GetPCLK1ClockFreq+0x18>)
  * @retval PCLK1 clock frequency (in Hz)
  */
static uint32_t RCC_GetPCLK1ClockFreq(uint32_t HCLK_Frequency)
{
  /* PCLK1 clock frequency */
  return __LL_RCC_CALC_PCLK1_FREQ(HCLK_Frequency, LL_RCC_GetAPB1Prescaler());
 8005096:	4a06      	ldr	r2, [pc, #24]	; (80050b0 <RCC_GetPCLK1ClockFreq+0x1c>)
 8005098:	689b      	ldr	r3, [r3, #8]
 800509a:	045b      	lsls	r3, r3, #17
 800509c:	0f5b      	lsrs	r3, r3, #29
 800509e:	009b      	lsls	r3, r3, #2
 80050a0:	589b      	ldr	r3, [r3, r2]
 80050a2:	221f      	movs	r2, #31
 80050a4:	4013      	ands	r3, r2
 80050a6:	40d8      	lsrs	r0, r3
}
 80050a8:	4770      	bx	lr
 80050aa:	46c0      	nop			; (mov r8, r8)
 80050ac:	40021000 	.word	0x40021000
 80050b0:	0800a628 	.word	0x0800a628

080050b4 <RCC_GetSystemClockFreq>:
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 80050b4:	2138      	movs	r1, #56	; 0x38
 80050b6:	4b15      	ldr	r3, [pc, #84]	; (800510c <RCC_GetSystemClockFreq+0x58>)
{
 80050b8:	b510      	push	{r4, lr}
 80050ba:	689a      	ldr	r2, [r3, #8]
 80050bc:	400a      	ands	r2, r1
  switch (LL_RCC_GetSysClkSource())
 80050be:	2a08      	cmp	r2, #8
 80050c0:	d021      	beq.n	8005106 <RCC_GetSystemClockFreq+0x52>
 80050c2:	2a10      	cmp	r2, #16
 80050c4:	d119      	bne.n	80050fa <RCC_GetSystemClockFreq+0x46>
  *         @arg @ref LL_RCC_PLLSOURCE_HSI
  *         @arg @ref LL_RCC_PLLSOURCE_HSE
  */
__STATIC_INLINE uint32_t LL_RCC_PLL_GetMainSource(void)
{
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC));
 80050c6:	68d8      	ldr	r0, [r3, #12]
 80050c8:	3a0d      	subs	r2, #13
 80050ca:	4010      	ands	r0, r2
    case LL_RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pllinputfreq = HSI_VALUE;
      break;

    case LL_RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pllinputfreq = HSE_VALUE;
 80050cc:	3803      	subs	r0, #3
 80050ce:	1e42      	subs	r2, r0, #1
 80050d0:	4190      	sbcs	r0, r2
 80050d2:	4a0f      	ldr	r2, [pc, #60]	; (8005110 <RCC_GetSystemClockFreq+0x5c>)
 80050d4:	4240      	negs	r0, r0
 80050d6:	4010      	ands	r0, r2
 80050d8:	1880      	adds	r0, r0, r2
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >>  RCC_PLLCFGR_PLLN_Pos);
 80050da:	68da      	ldr	r2, [r3, #12]
  *         @arg @ref LL_RCC_PLLM_DIV_7
  *         @arg @ref LL_RCC_PLLM_DIV_8
  */
__STATIC_INLINE uint32_t LL_RCC_PLL_GetDivider(void)
{
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM));
 80050dc:	68d9      	ldr	r1, [r3, #12]
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR));
 80050de:	68dc      	ldr	r4, [r3, #12]

    default:
      pllinputfreq = HSI_VALUE;
      break;
  }
  return __LL_RCC_CALC_PLLCLK_FREQ(pllinputfreq, LL_RCC_PLL_GetDivider(),
 80050e0:	0649      	lsls	r1, r1, #25
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >>  RCC_PLLCFGR_PLLN_Pos);
 80050e2:	0453      	lsls	r3, r2, #17
 80050e4:	0e5b      	lsrs	r3, r3, #25
 80050e6:	0f49      	lsrs	r1, r1, #29
 80050e8:	3101      	adds	r1, #1
 80050ea:	4358      	muls	r0, r3
 80050ec:	f7fb f82e 	bl	800014c <__udivsi3>
 80050f0:	0f61      	lsrs	r1, r4, #29
 80050f2:	3101      	adds	r1, #1
 80050f4:	f7fb f82a 	bl	800014c <__udivsi3>
}
 80050f8:	bd10      	pop	{r4, pc}
      hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80050fa:	681b      	ldr	r3, [r3, #0]
      frequency = (HSI_VALUE / hsidiv);
 80050fc:	4805      	ldr	r0, [pc, #20]	; (8005114 <RCC_GetSystemClockFreq+0x60>)
      hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80050fe:	049b      	lsls	r3, r3, #18
 8005100:	0f5b      	lsrs	r3, r3, #29
      frequency = (HSI_VALUE / hsidiv);
 8005102:	40d8      	lsrs	r0, r3
  return frequency;
 8005104:	e7f8      	b.n	80050f8 <RCC_GetSystemClockFreq+0x44>
  switch (LL_RCC_GetSysClkSource())
 8005106:	4802      	ldr	r0, [pc, #8]	; (8005110 <RCC_GetSystemClockFreq+0x5c>)
  return frequency;
 8005108:	e7f6      	b.n	80050f8 <RCC_GetSystemClockFreq+0x44>
 800510a:	46c0      	nop			; (mov r8, r8)
 800510c:	40021000 	.word	0x40021000
 8005110:	007a1200 	.word	0x007a1200
 8005114:	00f42400 	.word	0x00f42400

08005118 <LL_RCC_GetSystemClocksFreq>:
{
 8005118:	b510      	push	{r4, lr}
 800511a:	0004      	movs	r4, r0
  RCC_Clocks->SYSCLK_Frequency = RCC_GetSystemClockFreq();
 800511c:	f7ff ffca 	bl	80050b4 <RCC_GetSystemClockFreq>
 8005120:	6020      	str	r0, [r4, #0]
  RCC_Clocks->HCLK_Frequency   = RCC_GetHCLKClockFreq(RCC_Clocks->SYSCLK_Frequency);
 8005122:	f7ff ffa7 	bl	8005074 <RCC_GetHCLKClockFreq>
 8005126:	6060      	str	r0, [r4, #4]
  RCC_Clocks->PCLK1_Frequency  = RCC_GetPCLK1ClockFreq(RCC_Clocks->HCLK_Frequency);
 8005128:	f7ff ffb4 	bl	8005094 <RCC_GetPCLK1ClockFreq>
 800512c:	60a0      	str	r0, [r4, #8]
}
 800512e:	bd10      	pop	{r4, pc}

08005130 <LL_RCC_GetUSARTClockFreq>:
{
 8005130:	0003      	movs	r3, r0
 8005132:	b510      	push	{r4, lr}
  uint32_t usart_frequency = LL_RCC_PERIPH_FREQUENCY_NO;
 8005134:	2000      	movs	r0, #0
  if (USARTxSource == LL_RCC_USART1_CLKSOURCE)
 8005136:	2b03      	cmp	r3, #3
 8005138:	d110      	bne.n	800515c <LL_RCC_GetUSARTClockFreq+0x2c>
  return (uint32_t)(READ_BIT(RCC->CCIPR, USARTx) | (USARTx << 16U));
 800513a:	4a15      	ldr	r2, [pc, #84]	; (8005190 <LL_RCC_GetUSARTClockFreq+0x60>)
 800513c:	6d50      	ldr	r0, [r2, #84]	; 0x54
 800513e:	4003      	ands	r3, r0
 8005140:	20c0      	movs	r0, #192	; 0xc0
 8005142:	0280      	lsls	r0, r0, #10
 8005144:	4318      	orrs	r0, r3
    switch (LL_RCC_GetUSARTClockSource(USARTxSource))
 8005146:	4b13      	ldr	r3, [pc, #76]	; (8005194 <LL_RCC_GetUSARTClockFreq+0x64>)
 8005148:	4298      	cmp	r0, r3
 800514a:	d008      	beq.n	800515e <LL_RCC_GetUSARTClockFreq+0x2e>
 800514c:	4b12      	ldr	r3, [pc, #72]	; (8005198 <LL_RCC_GetUSARTClockFreq+0x68>)
 800514e:	4298      	cmp	r0, r3
 8005150:	d00e      	beq.n	8005170 <LL_RCC_GetUSARTClockFreq+0x40>
 8005152:	4b12      	ldr	r3, [pc, #72]	; (800519c <LL_RCC_GetUSARTClockFreq+0x6c>)
 8005154:	4298      	cmp	r0, r3
 8005156:	d114      	bne.n	8005182 <LL_RCC_GetUSARTClockFreq+0x52>
        usart_frequency = RCC_GetSystemClockFreq();
 8005158:	f7ff ffac 	bl	80050b4 <RCC_GetSystemClockFreq>
}
 800515c:	bd10      	pop	{r4, pc}
  return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY)) ? 1UL : 0UL);
 800515e:	6812      	ldr	r2, [r2, #0]
 8005160:	2380      	movs	r3, #128	; 0x80
 8005162:	0010      	movs	r0, r2
 8005164:	00db      	lsls	r3, r3, #3
 8005166:	4018      	ands	r0, r3
 8005168:	421a      	tst	r2, r3
 800516a:	d0f7      	beq.n	800515c <LL_RCC_GetUSARTClockFreq+0x2c>
          usart_frequency = HSI_VALUE;
 800516c:	480c      	ldr	r0, [pc, #48]	; (80051a0 <LL_RCC_GetUSARTClockFreq+0x70>)
 800516e:	e7f5      	b.n	800515c <LL_RCC_GetUSARTClockFreq+0x2c>
  return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY)) ? 1UL : 0UL);
 8005170:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8005172:	2302      	movs	r3, #2
 8005174:	0010      	movs	r0, r2
 8005176:	4018      	ands	r0, r3
 8005178:	421a      	tst	r2, r3
 800517a:	d0ef      	beq.n	800515c <LL_RCC_GetUSARTClockFreq+0x2c>
          usart_frequency = LSE_VALUE;
 800517c:	2080      	movs	r0, #128	; 0x80
 800517e:	0200      	lsls	r0, r0, #8
 8005180:	e7ec      	b.n	800515c <LL_RCC_GetUSARTClockFreq+0x2c>
        usart_frequency = RCC_GetPCLK1ClockFreq(RCC_GetHCLKClockFreq(RCC_GetSystemClockFreq()));
 8005182:	f7ff ff97 	bl	80050b4 <RCC_GetSystemClockFreq>
 8005186:	f7ff ff75 	bl	8005074 <RCC_GetHCLKClockFreq>
 800518a:	f7ff ff83 	bl	8005094 <RCC_GetPCLK1ClockFreq>
        break;
 800518e:	e7e5      	b.n	800515c <LL_RCC_GetUSARTClockFreq+0x2c>
 8005190:	40021000 	.word	0x40021000
 8005194:	00030002 	.word	0x00030002
 8005198:	00030003 	.word	0x00030003
 800519c:	00030001 	.word	0x00030001
 80051a0:	00f42400 	.word	0x00f42400

080051a4 <LL_TIM_Init>:
  assert_param(IS_LL_TIM_COUNTERMODE(TIM_InitStruct->CounterMode));
  assert_param(IS_LL_TIM_CLOCKDIVISION(TIM_InitStruct->ClockDivision));

  tmpcr1 = LL_TIM_ReadReg(TIMx, CR1);

  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80051a4:	4a19      	ldr	r2, [pc, #100]	; (800520c <LL_TIM_Init+0x68>)
{
 80051a6:	b510      	push	{r4, lr}
  tmpcr1 = LL_TIM_ReadReg(TIMx, CR1);
 80051a8:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80051aa:	4290      	cmp	r0, r2
 80051ac:	d002      	beq.n	80051b4 <LL_TIM_Init+0x10>
 80051ae:	4c18      	ldr	r4, [pc, #96]	; (8005210 <LL_TIM_Init+0x6c>)
 80051b0:	42a0      	cmp	r0, r4
 80051b2:	d108      	bne.n	80051c6 <LL_TIM_Init+0x22>
  {
    /* Select the Counter Mode */
    MODIFY_REG(tmpcr1, (TIM_CR1_DIR | TIM_CR1_CMS), TIM_InitStruct->CounterMode);
 80051b4:	2470      	movs	r4, #112	; 0x70
 80051b6:	43a3      	bics	r3, r4
 80051b8:	684c      	ldr	r4, [r1, #4]
 80051ba:	4323      	orrs	r3, r4
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80051bc:	4290      	cmp	r0, r2
 80051be:	d00b      	beq.n	80051d8 <LL_TIM_Init+0x34>
 80051c0:	4c13      	ldr	r4, [pc, #76]	; (8005210 <LL_TIM_Init+0x6c>)
 80051c2:	42a0      	cmp	r0, r4
 80051c4:	d008      	beq.n	80051d8 <LL_TIM_Init+0x34>
 80051c6:	4c13      	ldr	r4, [pc, #76]	; (8005214 <LL_TIM_Init+0x70>)
 80051c8:	42a0      	cmp	r0, r4
 80051ca:	d005      	beq.n	80051d8 <LL_TIM_Init+0x34>
 80051cc:	4c12      	ldr	r4, [pc, #72]	; (8005218 <LL_TIM_Init+0x74>)
 80051ce:	42a0      	cmp	r0, r4
 80051d0:	d002      	beq.n	80051d8 <LL_TIM_Init+0x34>
 80051d2:	4c12      	ldr	r4, [pc, #72]	; (800521c <LL_TIM_Init+0x78>)
 80051d4:	42a0      	cmp	r0, r4
 80051d6:	d103      	bne.n	80051e0 <LL_TIM_Init+0x3c>
  {
    /* Set the clock division */
    MODIFY_REG(tmpcr1, TIM_CR1_CKD, TIM_InitStruct->ClockDivision);
 80051d8:	4c11      	ldr	r4, [pc, #68]	; (8005220 <LL_TIM_Init+0x7c>)
 80051da:	4023      	ands	r3, r4
 80051dc:	68cc      	ldr	r4, [r1, #12]
 80051de:	4323      	orrs	r3, r4
  }

  /* Write to TIMx CR1 */
  LL_TIM_WriteReg(TIMx, CR1, tmpcr1);
 80051e0:	6003      	str	r3, [r0, #0]
  WRITE_REG(TIMx->ARR, AutoReload);
 80051e2:	688b      	ldr	r3, [r1, #8]
 80051e4:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Autoreload value */
  LL_TIM_SetAutoReload(TIMx, TIM_InitStruct->Autoreload);

  /* Set the Prescaler value */
  LL_TIM_SetPrescaler(TIMx, TIM_InitStruct->Prescaler);
 80051e6:	880b      	ldrh	r3, [r1, #0]
  WRITE_REG(TIMx->PSC, Prescaler);
 80051e8:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80051ea:	4290      	cmp	r0, r2
 80051ec:	d005      	beq.n	80051fa <LL_TIM_Init+0x56>
 80051ee:	4b0a      	ldr	r3, [pc, #40]	; (8005218 <LL_TIM_Init+0x74>)
 80051f0:	4298      	cmp	r0, r3
 80051f2:	d002      	beq.n	80051fa <LL_TIM_Init+0x56>
 80051f4:	4b09      	ldr	r3, [pc, #36]	; (800521c <LL_TIM_Init+0x78>)
 80051f6:	4298      	cmp	r0, r3
 80051f8:	d101      	bne.n	80051fe <LL_TIM_Init+0x5a>
  {
    /* Set the Repetition Counter value */
    LL_TIM_SetRepetitionCounter(TIMx, TIM_InitStruct->RepetitionCounter);
 80051fa:	690b      	ldr	r3, [r1, #16]
  WRITE_REG(TIMx->RCR, RepetitionCounter);
 80051fc:	6303      	str	r3, [r0, #48]	; 0x30
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_GenerateEvent_UPDATE(TIM_TypeDef *TIMx)
{
  SET_BIT(TIMx->EGR, TIM_EGR_UG);
 80051fe:	2301      	movs	r3, #1
 8005200:	6942      	ldr	r2, [r0, #20]
 8005202:	4313      	orrs	r3, r2
 8005204:	6143      	str	r3, [r0, #20]
  /* Generate an update event to reload the Prescaler
     and the repetition counter value (if applicable) immediately */
  LL_TIM_GenerateEvent_UPDATE(TIMx);

  return SUCCESS;
}
 8005206:	2000      	movs	r0, #0
 8005208:	bd10      	pop	{r4, pc}
 800520a:	46c0      	nop			; (mov r8, r8)
 800520c:	40012c00 	.word	0x40012c00
 8005210:	40000400 	.word	0x40000400
 8005214:	40002000 	.word	0x40002000
 8005218:	40014400 	.word	0x40014400
 800521c:	40014800 	.word	0x40014800
 8005220:	fffffcff 	.word	0xfffffcff

08005224 <LL_USART_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: USART registers are initialized according to USART_InitStruct content
  *          - ERROR: Problem occurred during USART Registers initialization
  */
ErrorStatus LL_USART_Init(USART_TypeDef *USARTx, const LL_USART_InitTypeDef *USART_InitStruct)
{
 8005224:	b5f0      	push	{r4, r5, r6, r7, lr}
  ErrorStatus status = ERROR;
 8005226:	2601      	movs	r6, #1
  return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 8005228:	6803      	ldr	r3, [r0, #0]
{
 800522a:	0004      	movs	r4, r0
 800522c:	000d      	movs	r5, r1
 800522e:	b085      	sub	sp, #20
  assert_param(IS_LL_USART_HWCONTROL(USART_InitStruct->HardwareFlowControl));
  assert_param(IS_LL_USART_OVERSAMPLING(USART_InitStruct->OverSampling));

  /* USART needs to be in disabled state, in order to be able to configure some bits in
     CRx registers */
  if (LL_USART_IsEnabled(USARTx) == 0U)
 8005230:	4233      	tst	r3, r6
 8005232:	d148      	bne.n	80052c6 <LL_USART_Init+0xa2>
     * - DataWidth:          USART_CR1_M bits according to USART_InitStruct->DataWidth value
     * - Parity:             USART_CR1_PCE, USART_CR1_PS bits according to USART_InitStruct->Parity value
     * - TransferDirection:  USART_CR1_TE, USART_CR1_RE bits according to USART_InitStruct->TransferDirection value
     * - Oversampling:       USART_CR1_OVER8 bit according to USART_InitStruct->OverSampling value.
     */
    MODIFY_REG(USARTx->CR1,
 8005234:	688b      	ldr	r3, [r1, #8]
 8005236:	6909      	ldr	r1, [r1, #16]
 8005238:	6802      	ldr	r2, [r0, #0]
 800523a:	430b      	orrs	r3, r1
 800523c:	6969      	ldr	r1, [r5, #20]
 800523e:	430b      	orrs	r3, r1
 8005240:	69e9      	ldr	r1, [r5, #28]
 8005242:	430b      	orrs	r3, r1
 8005244:	4927      	ldr	r1, [pc, #156]	; (80052e4 <LL_USART_Init+0xc0>)
 8005246:	400a      	ands	r2, r1
 8005248:	4313      	orrs	r3, r2
 800524a:	6003      	str	r3, [r0, #0]
  MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 800524c:	6843      	ldr	r3, [r0, #4]
 800524e:	4a26      	ldr	r2, [pc, #152]	; (80052e8 <LL_USART_Init+0xc4>)
 8005250:	4013      	ands	r3, r2
 8005252:	68ea      	ldr	r2, [r5, #12]
 8005254:	4313      	orrs	r3, r2
 8005256:	6043      	str	r3, [r0, #4]
  MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 8005258:	6883      	ldr	r3, [r0, #8]
 800525a:	4a24      	ldr	r2, [pc, #144]	; (80052ec <LL_USART_Init+0xc8>)
 800525c:	4013      	ands	r3, r2
 800525e:	69aa      	ldr	r2, [r5, #24]
 8005260:	4313      	orrs	r3, r2
 8005262:	6083      	str	r3, [r0, #8]
    LL_USART_SetHWFlowCtrl(USARTx, USART_InitStruct->HardwareFlowControl);

    /*---------------------------- USART BRR Configuration ---------------------
     * Retrieve Clock frequency used for USART Peripheral
     */
    if (USARTx == USART1)
 8005264:	4b22      	ldr	r3, [pc, #136]	; (80052f0 <LL_USART_Init+0xcc>)
 8005266:	4298      	cmp	r0, r3
 8005268:	d122      	bne.n	80052b0 <LL_USART_Init+0x8c>
    {
      periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART1_CLKSOURCE);
 800526a:	2003      	movs	r0, #3
 800526c:	f7ff ff60 	bl	8005130 <LL_RCC_GetUSARTClockFreq>
    /* Configure the USART Baud Rate :
       - prescaler value is required
       - valid baud rate value (different from 0) is required
       - Peripheral clock as returned by RCC service, should be valid (different from 0).
    */
    if ((periphclk != LL_RCC_PERIPH_FREQUENCY_NO)
 8005270:	2800      	cmp	r0, #0
 8005272:	d020      	beq.n	80052b6 <LL_USART_Init+0x92>
        && (USART_InitStruct->BaudRate != 0U))
 8005274:	686f      	ldr	r7, [r5, #4]
 8005276:	2f00      	cmp	r7, #0
 8005278:	d01d      	beq.n	80052b6 <LL_USART_Init+0x92>
    {
      status = SUCCESS;
      LL_USART_SetBaudRate(USARTx,
 800527a:	682b      	ldr	r3, [r5, #0]
      status = SUCCESS;
 800527c:	2600      	movs	r6, #0
  if (PrescalerValue > LL_USART_PRESCALER_DIV256)
 800527e:	2b0b      	cmp	r3, #11
 8005280:	d81a      	bhi.n	80052b8 <LL_USART_Init+0x94>
    usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
 8005282:	4a1c      	ldr	r2, [pc, #112]	; (80052f4 <LL_USART_Init+0xd0>)
 8005284:	009b      	lsls	r3, r3, #2
 8005286:	5899      	ldr	r1, [r3, r2]
 8005288:	f7fa ff60 	bl	800014c <__udivsi3>
  else if (OverSampling == LL_USART_OVERSAMPLING_8)
 800528c:	2280      	movs	r2, #128	; 0x80
 800528e:	69e9      	ldr	r1, [r5, #28]
    usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
 8005290:	087b      	lsrs	r3, r7, #1
  else if (OverSampling == LL_USART_OVERSAMPLING_8)
 8005292:	0212      	lsls	r2, r2, #8
 8005294:	4291      	cmp	r1, r2
 8005296:	d11e      	bne.n	80052d6 <LL_USART_Init+0xb2>
    usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
 8005298:	0040      	lsls	r0, r0, #1
 800529a:	18c0      	adds	r0, r0, r3
 800529c:	0039      	movs	r1, r7
 800529e:	f7fa ff55 	bl	800014c <__udivsi3>
    brrtemp = usartdiv & 0xFFF0U;
 80052a2:	4b15      	ldr	r3, [pc, #84]	; (80052f8 <LL_USART_Init+0xd4>)
 80052a4:	4003      	ands	r3, r0
    brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80052a6:	0700      	lsls	r0, r0, #28
 80052a8:	0f40      	lsrs	r0, r0, #29
 80052aa:	4318      	orrs	r0, r3
    USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
 80052ac:	60e0      	str	r0, [r4, #12]
 80052ae:	e003      	b.n	80052b8 <LL_USART_Init+0x94>
    else if (USARTx == USART2)
 80052b0:	4b12      	ldr	r3, [pc, #72]	; (80052fc <LL_USART_Init+0xd8>)
 80052b2:	4298      	cmp	r0, r3
 80052b4:	d00a      	beq.n	80052cc <LL_USART_Init+0xa8>
  ErrorStatus status = ERROR;
 80052b6:	2601      	movs	r6, #1
  MODIFY_REG(USARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
 80052b8:	220f      	movs	r2, #15
 80052ba:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80052bc:	682b      	ldr	r3, [r5, #0]
 80052be:	4391      	bics	r1, r2
 80052c0:	b29b      	uxth	r3, r3
 80052c2:	430b      	orrs	r3, r1
 80052c4:	62e3      	str	r3, [r4, #44]	; 0x2c
    LL_USART_SetPrescaler(USARTx, USART_InitStruct->PrescalerValue);
  }
  /* Endif (=> USART not in Disabled state => return ERROR) */

  return (status);
}
 80052c6:	0030      	movs	r0, r6
 80052c8:	b005      	add	sp, #20
 80052ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
      LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 80052cc:	a801      	add	r0, sp, #4
 80052ce:	f7ff ff23 	bl	8005118 <LL_RCC_GetSystemClocksFreq>
      periphclk = RCC_Clocks.PCLK1_Frequency;
 80052d2:	9803      	ldr	r0, [sp, #12]
 80052d4:	e7cc      	b.n	8005270 <LL_USART_Init+0x4c>
    USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
 80052d6:	0039      	movs	r1, r7
 80052d8:	18c0      	adds	r0, r0, r3
 80052da:	f7fa ff37 	bl	800014c <__udivsi3>
 80052de:	b280      	uxth	r0, r0
 80052e0:	e7e4      	b.n	80052ac <LL_USART_Init+0x88>
 80052e2:	46c0      	nop			; (mov r8, r8)
 80052e4:	efff69f3 	.word	0xefff69f3
 80052e8:	ffffcfff 	.word	0xffffcfff
 80052ec:	fffffcff 	.word	0xfffffcff
 80052f0:	40013800 	.word	0x40013800
 80052f4:	0800a648 	.word	0x0800a648
 80052f8:	0000fff0 	.word	0x0000fff0
 80052fc:	40004400 	.word	0x40004400

08005300 <LL_mDelay>:
  * @param  Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
void LL_mDelay(uint32_t Delay)
{
  __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 8005300:	4a09      	ldr	r2, [pc, #36]	; (8005328 <LL_mDelay+0x28>)
{
 8005302:	b082      	sub	sp, #8
  __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 8005304:	6813      	ldr	r3, [r2, #0]
 8005306:	9301      	str	r3, [sp, #4]
   uint32_t tmpDelay; /* MISRAC2012-Rule-17.8 */
  /* Add this code to indicate that local variable is not used */
  ((void)tmp);
 8005308:	9b01      	ldr	r3, [sp, #4]
  tmpDelay  = Delay;
  /* Add a period to guaranty minimum wait */
  if (tmpDelay  < LL_MAX_DELAY)
  {
    tmpDelay ++;
 800530a:	1c43      	adds	r3, r0, #1
 800530c:	1e59      	subs	r1, r3, #1
 800530e:	418b      	sbcs	r3, r1
 8005310:	18c0      	adds	r0, r0, r3
  }

  while (tmpDelay  != 0U)
  {
    if ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) != 0U)
 8005312:	2380      	movs	r3, #128	; 0x80
 8005314:	025b      	lsls	r3, r3, #9
  while (tmpDelay  != 0U)
 8005316:	2800      	cmp	r0, #0
 8005318:	d101      	bne.n	800531e <LL_mDelay+0x1e>
    {
      tmpDelay --;
    }
  }
}
 800531a:	b002      	add	sp, #8
 800531c:	4770      	bx	lr
    if ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) != 0U)
 800531e:	6811      	ldr	r1, [r2, #0]
 8005320:	4219      	tst	r1, r3
 8005322:	d0f8      	beq.n	8005316 <LL_mDelay+0x16>
      tmpDelay --;
 8005324:	3801      	subs	r0, #1
 8005326:	e7f6      	b.n	8005316 <LL_mDelay+0x16>
 8005328:	e000e010 	.word	0xe000e010

0800532c <atof>:
 800532c:	b510      	push	{r4, lr}
 800532e:	2100      	movs	r1, #0
 8005330:	f001 fca0 	bl	8006c74 <strtod>
 8005334:	bd10      	pop	{r4, pc}

08005336 <atoi>:
 8005336:	b510      	push	{r4, lr}
 8005338:	220a      	movs	r2, #10
 800533a:	2100      	movs	r1, #0
 800533c:	f001 fd9e 	bl	8006e7c <strtol>
 8005340:	bd10      	pop	{r4, pc}
	...

08005344 <__errno>:
 8005344:	4b01      	ldr	r3, [pc, #4]	; (800534c <__errno+0x8>)
 8005346:	6818      	ldr	r0, [r3, #0]
 8005348:	4770      	bx	lr
 800534a:	46c0      	nop			; (mov r8, r8)
 800534c:	2000009c 	.word	0x2000009c

08005350 <__libc_init_array>:
 8005350:	b570      	push	{r4, r5, r6, lr}
 8005352:	2600      	movs	r6, #0
 8005354:	4d0c      	ldr	r5, [pc, #48]	; (8005388 <__libc_init_array+0x38>)
 8005356:	4c0d      	ldr	r4, [pc, #52]	; (800538c <__libc_init_array+0x3c>)
 8005358:	1b64      	subs	r4, r4, r5
 800535a:	10a4      	asrs	r4, r4, #2
 800535c:	42a6      	cmp	r6, r4
 800535e:	d109      	bne.n	8005374 <__libc_init_array+0x24>
 8005360:	2600      	movs	r6, #0
 8005362:	f005 f857 	bl	800a414 <_init>
 8005366:	4d0a      	ldr	r5, [pc, #40]	; (8005390 <__libc_init_array+0x40>)
 8005368:	4c0a      	ldr	r4, [pc, #40]	; (8005394 <__libc_init_array+0x44>)
 800536a:	1b64      	subs	r4, r4, r5
 800536c:	10a4      	asrs	r4, r4, #2
 800536e:	42a6      	cmp	r6, r4
 8005370:	d105      	bne.n	800537e <__libc_init_array+0x2e>
 8005372:	bd70      	pop	{r4, r5, r6, pc}
 8005374:	00b3      	lsls	r3, r6, #2
 8005376:	58eb      	ldr	r3, [r5, r3]
 8005378:	4798      	blx	r3
 800537a:	3601      	adds	r6, #1
 800537c:	e7ee      	b.n	800535c <__libc_init_array+0xc>
 800537e:	00b3      	lsls	r3, r6, #2
 8005380:	58eb      	ldr	r3, [r5, r3]
 8005382:	4798      	blx	r3
 8005384:	3601      	adds	r6, #1
 8005386:	e7f2      	b.n	800536e <__libc_init_array+0x1e>
 8005388:	0800ab88 	.word	0x0800ab88
 800538c:	0800ab88 	.word	0x0800ab88
 8005390:	0800ab88 	.word	0x0800ab88
 8005394:	0800ab8c 	.word	0x0800ab8c

08005398 <malloc>:
 8005398:	b510      	push	{r4, lr}
 800539a:	4b03      	ldr	r3, [pc, #12]	; (80053a8 <malloc+0x10>)
 800539c:	0001      	movs	r1, r0
 800539e:	6818      	ldr	r0, [r3, #0]
 80053a0:	f000 f878 	bl	8005494 <_malloc_r>
 80053a4:	bd10      	pop	{r4, pc}
 80053a6:	46c0      	nop			; (mov r8, r8)
 80053a8:	2000009c 	.word	0x2000009c

080053ac <memset>:
 80053ac:	0003      	movs	r3, r0
 80053ae:	1882      	adds	r2, r0, r2
 80053b0:	4293      	cmp	r3, r2
 80053b2:	d100      	bne.n	80053b6 <memset+0xa>
 80053b4:	4770      	bx	lr
 80053b6:	7019      	strb	r1, [r3, #0]
 80053b8:	3301      	adds	r3, #1
 80053ba:	e7f9      	b.n	80053b0 <memset+0x4>

080053bc <_free_r>:
 80053bc:	b570      	push	{r4, r5, r6, lr}
 80053be:	0005      	movs	r5, r0
 80053c0:	2900      	cmp	r1, #0
 80053c2:	d010      	beq.n	80053e6 <_free_r+0x2a>
 80053c4:	1f0c      	subs	r4, r1, #4
 80053c6:	6823      	ldr	r3, [r4, #0]
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	da00      	bge.n	80053ce <_free_r+0x12>
 80053cc:	18e4      	adds	r4, r4, r3
 80053ce:	0028      	movs	r0, r5
 80053d0:	f003 f80c 	bl	80083ec <__malloc_lock>
 80053d4:	4a1d      	ldr	r2, [pc, #116]	; (800544c <_free_r+0x90>)
 80053d6:	6813      	ldr	r3, [r2, #0]
 80053d8:	2b00      	cmp	r3, #0
 80053da:	d105      	bne.n	80053e8 <_free_r+0x2c>
 80053dc:	6063      	str	r3, [r4, #4]
 80053de:	6014      	str	r4, [r2, #0]
 80053e0:	0028      	movs	r0, r5
 80053e2:	f003 f80b 	bl	80083fc <__malloc_unlock>
 80053e6:	bd70      	pop	{r4, r5, r6, pc}
 80053e8:	42a3      	cmp	r3, r4
 80053ea:	d908      	bls.n	80053fe <_free_r+0x42>
 80053ec:	6821      	ldr	r1, [r4, #0]
 80053ee:	1860      	adds	r0, r4, r1
 80053f0:	4283      	cmp	r3, r0
 80053f2:	d1f3      	bne.n	80053dc <_free_r+0x20>
 80053f4:	6818      	ldr	r0, [r3, #0]
 80053f6:	685b      	ldr	r3, [r3, #4]
 80053f8:	1841      	adds	r1, r0, r1
 80053fa:	6021      	str	r1, [r4, #0]
 80053fc:	e7ee      	b.n	80053dc <_free_r+0x20>
 80053fe:	001a      	movs	r2, r3
 8005400:	685b      	ldr	r3, [r3, #4]
 8005402:	2b00      	cmp	r3, #0
 8005404:	d001      	beq.n	800540a <_free_r+0x4e>
 8005406:	42a3      	cmp	r3, r4
 8005408:	d9f9      	bls.n	80053fe <_free_r+0x42>
 800540a:	6811      	ldr	r1, [r2, #0]
 800540c:	1850      	adds	r0, r2, r1
 800540e:	42a0      	cmp	r0, r4
 8005410:	d10b      	bne.n	800542a <_free_r+0x6e>
 8005412:	6820      	ldr	r0, [r4, #0]
 8005414:	1809      	adds	r1, r1, r0
 8005416:	1850      	adds	r0, r2, r1
 8005418:	6011      	str	r1, [r2, #0]
 800541a:	4283      	cmp	r3, r0
 800541c:	d1e0      	bne.n	80053e0 <_free_r+0x24>
 800541e:	6818      	ldr	r0, [r3, #0]
 8005420:	685b      	ldr	r3, [r3, #4]
 8005422:	1841      	adds	r1, r0, r1
 8005424:	6011      	str	r1, [r2, #0]
 8005426:	6053      	str	r3, [r2, #4]
 8005428:	e7da      	b.n	80053e0 <_free_r+0x24>
 800542a:	42a0      	cmp	r0, r4
 800542c:	d902      	bls.n	8005434 <_free_r+0x78>
 800542e:	230c      	movs	r3, #12
 8005430:	602b      	str	r3, [r5, #0]
 8005432:	e7d5      	b.n	80053e0 <_free_r+0x24>
 8005434:	6821      	ldr	r1, [r4, #0]
 8005436:	1860      	adds	r0, r4, r1
 8005438:	4283      	cmp	r3, r0
 800543a:	d103      	bne.n	8005444 <_free_r+0x88>
 800543c:	6818      	ldr	r0, [r3, #0]
 800543e:	685b      	ldr	r3, [r3, #4]
 8005440:	1841      	adds	r1, r0, r1
 8005442:	6021      	str	r1, [r4, #0]
 8005444:	6063      	str	r3, [r4, #4]
 8005446:	6054      	str	r4, [r2, #4]
 8005448:	e7ca      	b.n	80053e0 <_free_r+0x24>
 800544a:	46c0      	nop			; (mov r8, r8)
 800544c:	200003c8 	.word	0x200003c8

08005450 <sbrk_aligned>:
 8005450:	b570      	push	{r4, r5, r6, lr}
 8005452:	4e0f      	ldr	r6, [pc, #60]	; (8005490 <sbrk_aligned+0x40>)
 8005454:	000d      	movs	r5, r1
 8005456:	6831      	ldr	r1, [r6, #0]
 8005458:	0004      	movs	r4, r0
 800545a:	2900      	cmp	r1, #0
 800545c:	d102      	bne.n	8005464 <sbrk_aligned+0x14>
 800545e:	f000 fcfd 	bl	8005e5c <_sbrk_r>
 8005462:	6030      	str	r0, [r6, #0]
 8005464:	0029      	movs	r1, r5
 8005466:	0020      	movs	r0, r4
 8005468:	f000 fcf8 	bl	8005e5c <_sbrk_r>
 800546c:	1c43      	adds	r3, r0, #1
 800546e:	d00a      	beq.n	8005486 <sbrk_aligned+0x36>
 8005470:	2303      	movs	r3, #3
 8005472:	1cc5      	adds	r5, r0, #3
 8005474:	439d      	bics	r5, r3
 8005476:	42a8      	cmp	r0, r5
 8005478:	d007      	beq.n	800548a <sbrk_aligned+0x3a>
 800547a:	1a29      	subs	r1, r5, r0
 800547c:	0020      	movs	r0, r4
 800547e:	f000 fced 	bl	8005e5c <_sbrk_r>
 8005482:	1c43      	adds	r3, r0, #1
 8005484:	d101      	bne.n	800548a <sbrk_aligned+0x3a>
 8005486:	2501      	movs	r5, #1
 8005488:	426d      	negs	r5, r5
 800548a:	0028      	movs	r0, r5
 800548c:	bd70      	pop	{r4, r5, r6, pc}
 800548e:	46c0      	nop			; (mov r8, r8)
 8005490:	200003cc 	.word	0x200003cc

08005494 <_malloc_r>:
 8005494:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005496:	2203      	movs	r2, #3
 8005498:	1ccb      	adds	r3, r1, #3
 800549a:	4393      	bics	r3, r2
 800549c:	3308      	adds	r3, #8
 800549e:	0006      	movs	r6, r0
 80054a0:	001f      	movs	r7, r3
 80054a2:	2b0c      	cmp	r3, #12
 80054a4:	d232      	bcs.n	800550c <_malloc_r+0x78>
 80054a6:	270c      	movs	r7, #12
 80054a8:	42b9      	cmp	r1, r7
 80054aa:	d831      	bhi.n	8005510 <_malloc_r+0x7c>
 80054ac:	0030      	movs	r0, r6
 80054ae:	f002 ff9d 	bl	80083ec <__malloc_lock>
 80054b2:	4d32      	ldr	r5, [pc, #200]	; (800557c <_malloc_r+0xe8>)
 80054b4:	682b      	ldr	r3, [r5, #0]
 80054b6:	001c      	movs	r4, r3
 80054b8:	2c00      	cmp	r4, #0
 80054ba:	d12e      	bne.n	800551a <_malloc_r+0x86>
 80054bc:	0039      	movs	r1, r7
 80054be:	0030      	movs	r0, r6
 80054c0:	f7ff ffc6 	bl	8005450 <sbrk_aligned>
 80054c4:	0004      	movs	r4, r0
 80054c6:	1c43      	adds	r3, r0, #1
 80054c8:	d11e      	bne.n	8005508 <_malloc_r+0x74>
 80054ca:	682c      	ldr	r4, [r5, #0]
 80054cc:	0025      	movs	r5, r4
 80054ce:	2d00      	cmp	r5, #0
 80054d0:	d14a      	bne.n	8005568 <_malloc_r+0xd4>
 80054d2:	6823      	ldr	r3, [r4, #0]
 80054d4:	0029      	movs	r1, r5
 80054d6:	18e3      	adds	r3, r4, r3
 80054d8:	0030      	movs	r0, r6
 80054da:	9301      	str	r3, [sp, #4]
 80054dc:	f000 fcbe 	bl	8005e5c <_sbrk_r>
 80054e0:	9b01      	ldr	r3, [sp, #4]
 80054e2:	4283      	cmp	r3, r0
 80054e4:	d143      	bne.n	800556e <_malloc_r+0xda>
 80054e6:	6823      	ldr	r3, [r4, #0]
 80054e8:	3703      	adds	r7, #3
 80054ea:	1aff      	subs	r7, r7, r3
 80054ec:	2303      	movs	r3, #3
 80054ee:	439f      	bics	r7, r3
 80054f0:	3708      	adds	r7, #8
 80054f2:	2f0c      	cmp	r7, #12
 80054f4:	d200      	bcs.n	80054f8 <_malloc_r+0x64>
 80054f6:	270c      	movs	r7, #12
 80054f8:	0039      	movs	r1, r7
 80054fa:	0030      	movs	r0, r6
 80054fc:	f7ff ffa8 	bl	8005450 <sbrk_aligned>
 8005500:	1c43      	adds	r3, r0, #1
 8005502:	d034      	beq.n	800556e <_malloc_r+0xda>
 8005504:	6823      	ldr	r3, [r4, #0]
 8005506:	19df      	adds	r7, r3, r7
 8005508:	6027      	str	r7, [r4, #0]
 800550a:	e013      	b.n	8005534 <_malloc_r+0xa0>
 800550c:	2b00      	cmp	r3, #0
 800550e:	dacb      	bge.n	80054a8 <_malloc_r+0x14>
 8005510:	230c      	movs	r3, #12
 8005512:	2500      	movs	r5, #0
 8005514:	6033      	str	r3, [r6, #0]
 8005516:	0028      	movs	r0, r5
 8005518:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800551a:	6822      	ldr	r2, [r4, #0]
 800551c:	1bd1      	subs	r1, r2, r7
 800551e:	d420      	bmi.n	8005562 <_malloc_r+0xce>
 8005520:	290b      	cmp	r1, #11
 8005522:	d917      	bls.n	8005554 <_malloc_r+0xc0>
 8005524:	19e2      	adds	r2, r4, r7
 8005526:	6027      	str	r7, [r4, #0]
 8005528:	42a3      	cmp	r3, r4
 800552a:	d111      	bne.n	8005550 <_malloc_r+0xbc>
 800552c:	602a      	str	r2, [r5, #0]
 800552e:	6863      	ldr	r3, [r4, #4]
 8005530:	6011      	str	r1, [r2, #0]
 8005532:	6053      	str	r3, [r2, #4]
 8005534:	0030      	movs	r0, r6
 8005536:	0025      	movs	r5, r4
 8005538:	f002 ff60 	bl	80083fc <__malloc_unlock>
 800553c:	2207      	movs	r2, #7
 800553e:	350b      	adds	r5, #11
 8005540:	1d23      	adds	r3, r4, #4
 8005542:	4395      	bics	r5, r2
 8005544:	1aea      	subs	r2, r5, r3
 8005546:	429d      	cmp	r5, r3
 8005548:	d0e5      	beq.n	8005516 <_malloc_r+0x82>
 800554a:	1b5b      	subs	r3, r3, r5
 800554c:	50a3      	str	r3, [r4, r2]
 800554e:	e7e2      	b.n	8005516 <_malloc_r+0x82>
 8005550:	605a      	str	r2, [r3, #4]
 8005552:	e7ec      	b.n	800552e <_malloc_r+0x9a>
 8005554:	6862      	ldr	r2, [r4, #4]
 8005556:	42a3      	cmp	r3, r4
 8005558:	d101      	bne.n	800555e <_malloc_r+0xca>
 800555a:	602a      	str	r2, [r5, #0]
 800555c:	e7ea      	b.n	8005534 <_malloc_r+0xa0>
 800555e:	605a      	str	r2, [r3, #4]
 8005560:	e7e8      	b.n	8005534 <_malloc_r+0xa0>
 8005562:	0023      	movs	r3, r4
 8005564:	6864      	ldr	r4, [r4, #4]
 8005566:	e7a7      	b.n	80054b8 <_malloc_r+0x24>
 8005568:	002c      	movs	r4, r5
 800556a:	686d      	ldr	r5, [r5, #4]
 800556c:	e7af      	b.n	80054ce <_malloc_r+0x3a>
 800556e:	230c      	movs	r3, #12
 8005570:	0030      	movs	r0, r6
 8005572:	6033      	str	r3, [r6, #0]
 8005574:	f002 ff42 	bl	80083fc <__malloc_unlock>
 8005578:	e7cd      	b.n	8005516 <_malloc_r+0x82>
 800557a:	46c0      	nop			; (mov r8, r8)
 800557c:	200003c8 	.word	0x200003c8

08005580 <__cvt>:
 8005580:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005582:	001e      	movs	r6, r3
 8005584:	2300      	movs	r3, #0
 8005586:	0014      	movs	r4, r2
 8005588:	b08b      	sub	sp, #44	; 0x2c
 800558a:	429e      	cmp	r6, r3
 800558c:	da04      	bge.n	8005598 <__cvt+0x18>
 800558e:	2180      	movs	r1, #128	; 0x80
 8005590:	0609      	lsls	r1, r1, #24
 8005592:	1873      	adds	r3, r6, r1
 8005594:	001e      	movs	r6, r3
 8005596:	232d      	movs	r3, #45	; 0x2d
 8005598:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800559a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800559c:	7013      	strb	r3, [r2, #0]
 800559e:	2320      	movs	r3, #32
 80055a0:	2203      	movs	r2, #3
 80055a2:	439f      	bics	r7, r3
 80055a4:	2f46      	cmp	r7, #70	; 0x46
 80055a6:	d007      	beq.n	80055b8 <__cvt+0x38>
 80055a8:	003b      	movs	r3, r7
 80055aa:	3b45      	subs	r3, #69	; 0x45
 80055ac:	4259      	negs	r1, r3
 80055ae:	414b      	adcs	r3, r1
 80055b0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80055b2:	3a01      	subs	r2, #1
 80055b4:	18cb      	adds	r3, r1, r3
 80055b6:	9310      	str	r3, [sp, #64]	; 0x40
 80055b8:	ab09      	add	r3, sp, #36	; 0x24
 80055ba:	9304      	str	r3, [sp, #16]
 80055bc:	ab08      	add	r3, sp, #32
 80055be:	9303      	str	r3, [sp, #12]
 80055c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80055c2:	9200      	str	r2, [sp, #0]
 80055c4:	9302      	str	r3, [sp, #8]
 80055c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80055c8:	0022      	movs	r2, r4
 80055ca:	9301      	str	r3, [sp, #4]
 80055cc:	0033      	movs	r3, r6
 80055ce:	f001 fd31 	bl	8007034 <_dtoa_r>
 80055d2:	0005      	movs	r5, r0
 80055d4:	2f47      	cmp	r7, #71	; 0x47
 80055d6:	d102      	bne.n	80055de <__cvt+0x5e>
 80055d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80055da:	07db      	lsls	r3, r3, #31
 80055dc:	d528      	bpl.n	8005630 <__cvt+0xb0>
 80055de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80055e0:	18eb      	adds	r3, r5, r3
 80055e2:	9307      	str	r3, [sp, #28]
 80055e4:	2f46      	cmp	r7, #70	; 0x46
 80055e6:	d114      	bne.n	8005612 <__cvt+0x92>
 80055e8:	782b      	ldrb	r3, [r5, #0]
 80055ea:	2b30      	cmp	r3, #48	; 0x30
 80055ec:	d10c      	bne.n	8005608 <__cvt+0x88>
 80055ee:	2200      	movs	r2, #0
 80055f0:	2300      	movs	r3, #0
 80055f2:	0020      	movs	r0, r4
 80055f4:	0031      	movs	r1, r6
 80055f6:	f7fa ff2f 	bl	8000458 <__aeabi_dcmpeq>
 80055fa:	2800      	cmp	r0, #0
 80055fc:	d104      	bne.n	8005608 <__cvt+0x88>
 80055fe:	2301      	movs	r3, #1
 8005600:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005602:	1a9b      	subs	r3, r3, r2
 8005604:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005606:	6013      	str	r3, [r2, #0]
 8005608:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800560a:	9a07      	ldr	r2, [sp, #28]
 800560c:	681b      	ldr	r3, [r3, #0]
 800560e:	18d3      	adds	r3, r2, r3
 8005610:	9307      	str	r3, [sp, #28]
 8005612:	2200      	movs	r2, #0
 8005614:	2300      	movs	r3, #0
 8005616:	0020      	movs	r0, r4
 8005618:	0031      	movs	r1, r6
 800561a:	f7fa ff1d 	bl	8000458 <__aeabi_dcmpeq>
 800561e:	2800      	cmp	r0, #0
 8005620:	d001      	beq.n	8005626 <__cvt+0xa6>
 8005622:	9b07      	ldr	r3, [sp, #28]
 8005624:	9309      	str	r3, [sp, #36]	; 0x24
 8005626:	2230      	movs	r2, #48	; 0x30
 8005628:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800562a:	9907      	ldr	r1, [sp, #28]
 800562c:	428b      	cmp	r3, r1
 800562e:	d306      	bcc.n	800563e <__cvt+0xbe>
 8005630:	0028      	movs	r0, r5
 8005632:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005634:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005636:	1b5b      	subs	r3, r3, r5
 8005638:	6013      	str	r3, [r2, #0]
 800563a:	b00b      	add	sp, #44	; 0x2c
 800563c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800563e:	1c59      	adds	r1, r3, #1
 8005640:	9109      	str	r1, [sp, #36]	; 0x24
 8005642:	701a      	strb	r2, [r3, #0]
 8005644:	e7f0      	b.n	8005628 <__cvt+0xa8>

08005646 <__exponent>:
 8005646:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005648:	1c83      	adds	r3, r0, #2
 800564a:	b087      	sub	sp, #28
 800564c:	9303      	str	r3, [sp, #12]
 800564e:	0005      	movs	r5, r0
 8005650:	000c      	movs	r4, r1
 8005652:	232b      	movs	r3, #43	; 0x2b
 8005654:	7002      	strb	r2, [r0, #0]
 8005656:	2900      	cmp	r1, #0
 8005658:	da01      	bge.n	800565e <__exponent+0x18>
 800565a:	424c      	negs	r4, r1
 800565c:	3302      	adds	r3, #2
 800565e:	706b      	strb	r3, [r5, #1]
 8005660:	2c09      	cmp	r4, #9
 8005662:	dd31      	ble.n	80056c8 <__exponent+0x82>
 8005664:	270a      	movs	r7, #10
 8005666:	ab04      	add	r3, sp, #16
 8005668:	1dde      	adds	r6, r3, #7
 800566a:	0020      	movs	r0, r4
 800566c:	0039      	movs	r1, r7
 800566e:	9601      	str	r6, [sp, #4]
 8005670:	f7fa fedc 	bl	800042c <__aeabi_idivmod>
 8005674:	3e01      	subs	r6, #1
 8005676:	3130      	adds	r1, #48	; 0x30
 8005678:	0020      	movs	r0, r4
 800567a:	7031      	strb	r1, [r6, #0]
 800567c:	0039      	movs	r1, r7
 800567e:	9402      	str	r4, [sp, #8]
 8005680:	f7fa fdee 	bl	8000260 <__divsi3>
 8005684:	9b02      	ldr	r3, [sp, #8]
 8005686:	0004      	movs	r4, r0
 8005688:	2b63      	cmp	r3, #99	; 0x63
 800568a:	dcee      	bgt.n	800566a <__exponent+0x24>
 800568c:	9b01      	ldr	r3, [sp, #4]
 800568e:	3430      	adds	r4, #48	; 0x30
 8005690:	1e9a      	subs	r2, r3, #2
 8005692:	0013      	movs	r3, r2
 8005694:	9903      	ldr	r1, [sp, #12]
 8005696:	7014      	strb	r4, [r2, #0]
 8005698:	a804      	add	r0, sp, #16
 800569a:	3007      	adds	r0, #7
 800569c:	4298      	cmp	r0, r3
 800569e:	d80e      	bhi.n	80056be <__exponent+0x78>
 80056a0:	ab04      	add	r3, sp, #16
 80056a2:	3307      	adds	r3, #7
 80056a4:	2000      	movs	r0, #0
 80056a6:	429a      	cmp	r2, r3
 80056a8:	d804      	bhi.n	80056b4 <__exponent+0x6e>
 80056aa:	ab04      	add	r3, sp, #16
 80056ac:	3009      	adds	r0, #9
 80056ae:	18c0      	adds	r0, r0, r3
 80056b0:	9b01      	ldr	r3, [sp, #4]
 80056b2:	1ac0      	subs	r0, r0, r3
 80056b4:	9b03      	ldr	r3, [sp, #12]
 80056b6:	1818      	adds	r0, r3, r0
 80056b8:	1b40      	subs	r0, r0, r5
 80056ba:	b007      	add	sp, #28
 80056bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80056be:	7818      	ldrb	r0, [r3, #0]
 80056c0:	3301      	adds	r3, #1
 80056c2:	7008      	strb	r0, [r1, #0]
 80056c4:	3101      	adds	r1, #1
 80056c6:	e7e7      	b.n	8005698 <__exponent+0x52>
 80056c8:	2330      	movs	r3, #48	; 0x30
 80056ca:	18e4      	adds	r4, r4, r3
 80056cc:	70ab      	strb	r3, [r5, #2]
 80056ce:	1d28      	adds	r0, r5, #4
 80056d0:	70ec      	strb	r4, [r5, #3]
 80056d2:	e7f1      	b.n	80056b8 <__exponent+0x72>

080056d4 <_printf_float>:
 80056d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80056d6:	b095      	sub	sp, #84	; 0x54
 80056d8:	000c      	movs	r4, r1
 80056da:	9209      	str	r2, [sp, #36]	; 0x24
 80056dc:	001e      	movs	r6, r3
 80056de:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80056e0:	0007      	movs	r7, r0
 80056e2:	f002 fe45 	bl	8008370 <_localeconv_r>
 80056e6:	6803      	ldr	r3, [r0, #0]
 80056e8:	0018      	movs	r0, r3
 80056ea:	930c      	str	r3, [sp, #48]	; 0x30
 80056ec:	f7fa fd12 	bl	8000114 <strlen>
 80056f0:	2300      	movs	r3, #0
 80056f2:	9312      	str	r3, [sp, #72]	; 0x48
 80056f4:	7e23      	ldrb	r3, [r4, #24]
 80056f6:	2207      	movs	r2, #7
 80056f8:	930a      	str	r3, [sp, #40]	; 0x28
 80056fa:	6823      	ldr	r3, [r4, #0]
 80056fc:	900e      	str	r0, [sp, #56]	; 0x38
 80056fe:	930d      	str	r3, [sp, #52]	; 0x34
 8005700:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005702:	682b      	ldr	r3, [r5, #0]
 8005704:	05c9      	lsls	r1, r1, #23
 8005706:	d547      	bpl.n	8005798 <_printf_float+0xc4>
 8005708:	189b      	adds	r3, r3, r2
 800570a:	4393      	bics	r3, r2
 800570c:	001a      	movs	r2, r3
 800570e:	3208      	adds	r2, #8
 8005710:	602a      	str	r2, [r5, #0]
 8005712:	681a      	ldr	r2, [r3, #0]
 8005714:	685b      	ldr	r3, [r3, #4]
 8005716:	64a2      	str	r2, [r4, #72]	; 0x48
 8005718:	64e3      	str	r3, [r4, #76]	; 0x4c
 800571a:	2201      	movs	r2, #1
 800571c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800571e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8005720:	930b      	str	r3, [sp, #44]	; 0x2c
 8005722:	006b      	lsls	r3, r5, #1
 8005724:	085b      	lsrs	r3, r3, #1
 8005726:	930f      	str	r3, [sp, #60]	; 0x3c
 8005728:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800572a:	4ba7      	ldr	r3, [pc, #668]	; (80059c8 <_printf_float+0x2f4>)
 800572c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800572e:	4252      	negs	r2, r2
 8005730:	f7fd fa64 	bl	8002bfc <__aeabi_dcmpun>
 8005734:	2800      	cmp	r0, #0
 8005736:	d131      	bne.n	800579c <_printf_float+0xc8>
 8005738:	2201      	movs	r2, #1
 800573a:	4ba3      	ldr	r3, [pc, #652]	; (80059c8 <_printf_float+0x2f4>)
 800573c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800573e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005740:	4252      	negs	r2, r2
 8005742:	f7fa fe99 	bl	8000478 <__aeabi_dcmple>
 8005746:	2800      	cmp	r0, #0
 8005748:	d128      	bne.n	800579c <_printf_float+0xc8>
 800574a:	2200      	movs	r2, #0
 800574c:	2300      	movs	r3, #0
 800574e:	0029      	movs	r1, r5
 8005750:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005752:	f7fa fe87 	bl	8000464 <__aeabi_dcmplt>
 8005756:	2800      	cmp	r0, #0
 8005758:	d003      	beq.n	8005762 <_printf_float+0x8e>
 800575a:	0023      	movs	r3, r4
 800575c:	222d      	movs	r2, #45	; 0x2d
 800575e:	3343      	adds	r3, #67	; 0x43
 8005760:	701a      	strb	r2, [r3, #0]
 8005762:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005764:	4d99      	ldr	r5, [pc, #612]	; (80059cc <_printf_float+0x2f8>)
 8005766:	2b47      	cmp	r3, #71	; 0x47
 8005768:	d900      	bls.n	800576c <_printf_float+0x98>
 800576a:	4d99      	ldr	r5, [pc, #612]	; (80059d0 <_printf_float+0x2fc>)
 800576c:	2303      	movs	r3, #3
 800576e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005770:	6123      	str	r3, [r4, #16]
 8005772:	3301      	adds	r3, #1
 8005774:	439a      	bics	r2, r3
 8005776:	2300      	movs	r3, #0
 8005778:	6022      	str	r2, [r4, #0]
 800577a:	930b      	str	r3, [sp, #44]	; 0x2c
 800577c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800577e:	0021      	movs	r1, r4
 8005780:	0038      	movs	r0, r7
 8005782:	9600      	str	r6, [sp, #0]
 8005784:	aa13      	add	r2, sp, #76	; 0x4c
 8005786:	f000 f9e7 	bl	8005b58 <_printf_common>
 800578a:	1c43      	adds	r3, r0, #1
 800578c:	d000      	beq.n	8005790 <_printf_float+0xbc>
 800578e:	e0a2      	b.n	80058d6 <_printf_float+0x202>
 8005790:	2001      	movs	r0, #1
 8005792:	4240      	negs	r0, r0
 8005794:	b015      	add	sp, #84	; 0x54
 8005796:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005798:	3307      	adds	r3, #7
 800579a:	e7b6      	b.n	800570a <_printf_float+0x36>
 800579c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800579e:	002b      	movs	r3, r5
 80057a0:	0010      	movs	r0, r2
 80057a2:	0029      	movs	r1, r5
 80057a4:	f7fd fa2a 	bl	8002bfc <__aeabi_dcmpun>
 80057a8:	2800      	cmp	r0, #0
 80057aa:	d00b      	beq.n	80057c4 <_printf_float+0xf0>
 80057ac:	2d00      	cmp	r5, #0
 80057ae:	da03      	bge.n	80057b8 <_printf_float+0xe4>
 80057b0:	0023      	movs	r3, r4
 80057b2:	222d      	movs	r2, #45	; 0x2d
 80057b4:	3343      	adds	r3, #67	; 0x43
 80057b6:	701a      	strb	r2, [r3, #0]
 80057b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80057ba:	4d86      	ldr	r5, [pc, #536]	; (80059d4 <_printf_float+0x300>)
 80057bc:	2b47      	cmp	r3, #71	; 0x47
 80057be:	d9d5      	bls.n	800576c <_printf_float+0x98>
 80057c0:	4d85      	ldr	r5, [pc, #532]	; (80059d8 <_printf_float+0x304>)
 80057c2:	e7d3      	b.n	800576c <_printf_float+0x98>
 80057c4:	2220      	movs	r2, #32
 80057c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80057c8:	6863      	ldr	r3, [r4, #4]
 80057ca:	4391      	bics	r1, r2
 80057cc:	910f      	str	r1, [sp, #60]	; 0x3c
 80057ce:	1c5a      	adds	r2, r3, #1
 80057d0:	d149      	bne.n	8005866 <_printf_float+0x192>
 80057d2:	3307      	adds	r3, #7
 80057d4:	6063      	str	r3, [r4, #4]
 80057d6:	2380      	movs	r3, #128	; 0x80
 80057d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80057da:	00db      	lsls	r3, r3, #3
 80057dc:	4313      	orrs	r3, r2
 80057de:	2200      	movs	r2, #0
 80057e0:	9206      	str	r2, [sp, #24]
 80057e2:	aa12      	add	r2, sp, #72	; 0x48
 80057e4:	9205      	str	r2, [sp, #20]
 80057e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80057e8:	a908      	add	r1, sp, #32
 80057ea:	9204      	str	r2, [sp, #16]
 80057ec:	aa11      	add	r2, sp, #68	; 0x44
 80057ee:	9203      	str	r2, [sp, #12]
 80057f0:	2223      	movs	r2, #35	; 0x23
 80057f2:	6023      	str	r3, [r4, #0]
 80057f4:	9301      	str	r3, [sp, #4]
 80057f6:	6863      	ldr	r3, [r4, #4]
 80057f8:	1852      	adds	r2, r2, r1
 80057fa:	9202      	str	r2, [sp, #8]
 80057fc:	9300      	str	r3, [sp, #0]
 80057fe:	0038      	movs	r0, r7
 8005800:	002b      	movs	r3, r5
 8005802:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005804:	f7ff febc 	bl	8005580 <__cvt>
 8005808:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800580a:	0005      	movs	r5, r0
 800580c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800580e:	2b47      	cmp	r3, #71	; 0x47
 8005810:	d108      	bne.n	8005824 <_printf_float+0x150>
 8005812:	1ccb      	adds	r3, r1, #3
 8005814:	db02      	blt.n	800581c <_printf_float+0x148>
 8005816:	6863      	ldr	r3, [r4, #4]
 8005818:	4299      	cmp	r1, r3
 800581a:	dd48      	ble.n	80058ae <_printf_float+0x1da>
 800581c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800581e:	3b02      	subs	r3, #2
 8005820:	b2db      	uxtb	r3, r3
 8005822:	930a      	str	r3, [sp, #40]	; 0x28
 8005824:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005826:	2b65      	cmp	r3, #101	; 0x65
 8005828:	d824      	bhi.n	8005874 <_printf_float+0x1a0>
 800582a:	0020      	movs	r0, r4
 800582c:	001a      	movs	r2, r3
 800582e:	3901      	subs	r1, #1
 8005830:	3050      	adds	r0, #80	; 0x50
 8005832:	9111      	str	r1, [sp, #68]	; 0x44
 8005834:	f7ff ff07 	bl	8005646 <__exponent>
 8005838:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800583a:	900b      	str	r0, [sp, #44]	; 0x2c
 800583c:	1813      	adds	r3, r2, r0
 800583e:	6123      	str	r3, [r4, #16]
 8005840:	2a01      	cmp	r2, #1
 8005842:	dc02      	bgt.n	800584a <_printf_float+0x176>
 8005844:	6822      	ldr	r2, [r4, #0]
 8005846:	07d2      	lsls	r2, r2, #31
 8005848:	d501      	bpl.n	800584e <_printf_float+0x17a>
 800584a:	3301      	adds	r3, #1
 800584c:	6123      	str	r3, [r4, #16]
 800584e:	2323      	movs	r3, #35	; 0x23
 8005850:	aa08      	add	r2, sp, #32
 8005852:	189b      	adds	r3, r3, r2
 8005854:	781b      	ldrb	r3, [r3, #0]
 8005856:	2b00      	cmp	r3, #0
 8005858:	d100      	bne.n	800585c <_printf_float+0x188>
 800585a:	e78f      	b.n	800577c <_printf_float+0xa8>
 800585c:	0023      	movs	r3, r4
 800585e:	222d      	movs	r2, #45	; 0x2d
 8005860:	3343      	adds	r3, #67	; 0x43
 8005862:	701a      	strb	r2, [r3, #0]
 8005864:	e78a      	b.n	800577c <_printf_float+0xa8>
 8005866:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005868:	2a47      	cmp	r2, #71	; 0x47
 800586a:	d1b4      	bne.n	80057d6 <_printf_float+0x102>
 800586c:	2b00      	cmp	r3, #0
 800586e:	d1b2      	bne.n	80057d6 <_printf_float+0x102>
 8005870:	3301      	adds	r3, #1
 8005872:	e7af      	b.n	80057d4 <_printf_float+0x100>
 8005874:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005876:	2b66      	cmp	r3, #102	; 0x66
 8005878:	d11b      	bne.n	80058b2 <_printf_float+0x1de>
 800587a:	6863      	ldr	r3, [r4, #4]
 800587c:	2900      	cmp	r1, #0
 800587e:	dd0d      	ble.n	800589c <_printf_float+0x1c8>
 8005880:	6121      	str	r1, [r4, #16]
 8005882:	2b00      	cmp	r3, #0
 8005884:	d102      	bne.n	800588c <_printf_float+0x1b8>
 8005886:	6822      	ldr	r2, [r4, #0]
 8005888:	07d2      	lsls	r2, r2, #31
 800588a:	d502      	bpl.n	8005892 <_printf_float+0x1be>
 800588c:	3301      	adds	r3, #1
 800588e:	1859      	adds	r1, r3, r1
 8005890:	6121      	str	r1, [r4, #16]
 8005892:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005894:	65a3      	str	r3, [r4, #88]	; 0x58
 8005896:	2300      	movs	r3, #0
 8005898:	930b      	str	r3, [sp, #44]	; 0x2c
 800589a:	e7d8      	b.n	800584e <_printf_float+0x17a>
 800589c:	2b00      	cmp	r3, #0
 800589e:	d103      	bne.n	80058a8 <_printf_float+0x1d4>
 80058a0:	2201      	movs	r2, #1
 80058a2:	6821      	ldr	r1, [r4, #0]
 80058a4:	4211      	tst	r1, r2
 80058a6:	d000      	beq.n	80058aa <_printf_float+0x1d6>
 80058a8:	1c9a      	adds	r2, r3, #2
 80058aa:	6122      	str	r2, [r4, #16]
 80058ac:	e7f1      	b.n	8005892 <_printf_float+0x1be>
 80058ae:	2367      	movs	r3, #103	; 0x67
 80058b0:	930a      	str	r3, [sp, #40]	; 0x28
 80058b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80058b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80058b6:	4293      	cmp	r3, r2
 80058b8:	db06      	blt.n	80058c8 <_printf_float+0x1f4>
 80058ba:	6822      	ldr	r2, [r4, #0]
 80058bc:	6123      	str	r3, [r4, #16]
 80058be:	07d2      	lsls	r2, r2, #31
 80058c0:	d5e7      	bpl.n	8005892 <_printf_float+0x1be>
 80058c2:	3301      	adds	r3, #1
 80058c4:	6123      	str	r3, [r4, #16]
 80058c6:	e7e4      	b.n	8005892 <_printf_float+0x1be>
 80058c8:	2101      	movs	r1, #1
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	dc01      	bgt.n	80058d2 <_printf_float+0x1fe>
 80058ce:	1849      	adds	r1, r1, r1
 80058d0:	1ac9      	subs	r1, r1, r3
 80058d2:	1852      	adds	r2, r2, r1
 80058d4:	e7e9      	b.n	80058aa <_printf_float+0x1d6>
 80058d6:	6822      	ldr	r2, [r4, #0]
 80058d8:	0553      	lsls	r3, r2, #21
 80058da:	d407      	bmi.n	80058ec <_printf_float+0x218>
 80058dc:	6923      	ldr	r3, [r4, #16]
 80058de:	002a      	movs	r2, r5
 80058e0:	0038      	movs	r0, r7
 80058e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80058e4:	47b0      	blx	r6
 80058e6:	1c43      	adds	r3, r0, #1
 80058e8:	d128      	bne.n	800593c <_printf_float+0x268>
 80058ea:	e751      	b.n	8005790 <_printf_float+0xbc>
 80058ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80058ee:	2b65      	cmp	r3, #101	; 0x65
 80058f0:	d800      	bhi.n	80058f4 <_printf_float+0x220>
 80058f2:	e0e1      	b.n	8005ab8 <_printf_float+0x3e4>
 80058f4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80058f6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80058f8:	2200      	movs	r2, #0
 80058fa:	2300      	movs	r3, #0
 80058fc:	f7fa fdac 	bl	8000458 <__aeabi_dcmpeq>
 8005900:	2800      	cmp	r0, #0
 8005902:	d031      	beq.n	8005968 <_printf_float+0x294>
 8005904:	2301      	movs	r3, #1
 8005906:	0038      	movs	r0, r7
 8005908:	4a34      	ldr	r2, [pc, #208]	; (80059dc <_printf_float+0x308>)
 800590a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800590c:	47b0      	blx	r6
 800590e:	1c43      	adds	r3, r0, #1
 8005910:	d100      	bne.n	8005914 <_printf_float+0x240>
 8005912:	e73d      	b.n	8005790 <_printf_float+0xbc>
 8005914:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005916:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005918:	4293      	cmp	r3, r2
 800591a:	db02      	blt.n	8005922 <_printf_float+0x24e>
 800591c:	6823      	ldr	r3, [r4, #0]
 800591e:	07db      	lsls	r3, r3, #31
 8005920:	d50c      	bpl.n	800593c <_printf_float+0x268>
 8005922:	0038      	movs	r0, r7
 8005924:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005926:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005928:	9909      	ldr	r1, [sp, #36]	; 0x24
 800592a:	47b0      	blx	r6
 800592c:	2500      	movs	r5, #0
 800592e:	1c43      	adds	r3, r0, #1
 8005930:	d100      	bne.n	8005934 <_printf_float+0x260>
 8005932:	e72d      	b.n	8005790 <_printf_float+0xbc>
 8005934:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005936:	3b01      	subs	r3, #1
 8005938:	42ab      	cmp	r3, r5
 800593a:	dc0a      	bgt.n	8005952 <_printf_float+0x27e>
 800593c:	6823      	ldr	r3, [r4, #0]
 800593e:	079b      	lsls	r3, r3, #30
 8005940:	d500      	bpl.n	8005944 <_printf_float+0x270>
 8005942:	e106      	b.n	8005b52 <_printf_float+0x47e>
 8005944:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005946:	68e0      	ldr	r0, [r4, #12]
 8005948:	4298      	cmp	r0, r3
 800594a:	db00      	blt.n	800594e <_printf_float+0x27a>
 800594c:	e722      	b.n	8005794 <_printf_float+0xc0>
 800594e:	0018      	movs	r0, r3
 8005950:	e720      	b.n	8005794 <_printf_float+0xc0>
 8005952:	0022      	movs	r2, r4
 8005954:	2301      	movs	r3, #1
 8005956:	0038      	movs	r0, r7
 8005958:	9909      	ldr	r1, [sp, #36]	; 0x24
 800595a:	321a      	adds	r2, #26
 800595c:	47b0      	blx	r6
 800595e:	1c43      	adds	r3, r0, #1
 8005960:	d100      	bne.n	8005964 <_printf_float+0x290>
 8005962:	e715      	b.n	8005790 <_printf_float+0xbc>
 8005964:	3501      	adds	r5, #1
 8005966:	e7e5      	b.n	8005934 <_printf_float+0x260>
 8005968:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800596a:	2b00      	cmp	r3, #0
 800596c:	dc38      	bgt.n	80059e0 <_printf_float+0x30c>
 800596e:	2301      	movs	r3, #1
 8005970:	0038      	movs	r0, r7
 8005972:	4a1a      	ldr	r2, [pc, #104]	; (80059dc <_printf_float+0x308>)
 8005974:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005976:	47b0      	blx	r6
 8005978:	1c43      	adds	r3, r0, #1
 800597a:	d100      	bne.n	800597e <_printf_float+0x2aa>
 800597c:	e708      	b.n	8005790 <_printf_float+0xbc>
 800597e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005980:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005982:	4313      	orrs	r3, r2
 8005984:	d102      	bne.n	800598c <_printf_float+0x2b8>
 8005986:	6823      	ldr	r3, [r4, #0]
 8005988:	07db      	lsls	r3, r3, #31
 800598a:	d5d7      	bpl.n	800593c <_printf_float+0x268>
 800598c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800598e:	0038      	movs	r0, r7
 8005990:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005992:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005994:	47b0      	blx	r6
 8005996:	1c43      	adds	r3, r0, #1
 8005998:	d100      	bne.n	800599c <_printf_float+0x2c8>
 800599a:	e6f9      	b.n	8005790 <_printf_float+0xbc>
 800599c:	2300      	movs	r3, #0
 800599e:	930a      	str	r3, [sp, #40]	; 0x28
 80059a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80059a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80059a4:	425b      	negs	r3, r3
 80059a6:	4293      	cmp	r3, r2
 80059a8:	dc01      	bgt.n	80059ae <_printf_float+0x2da>
 80059aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80059ac:	e797      	b.n	80058de <_printf_float+0x20a>
 80059ae:	0022      	movs	r2, r4
 80059b0:	2301      	movs	r3, #1
 80059b2:	0038      	movs	r0, r7
 80059b4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80059b6:	321a      	adds	r2, #26
 80059b8:	47b0      	blx	r6
 80059ba:	1c43      	adds	r3, r0, #1
 80059bc:	d100      	bne.n	80059c0 <_printf_float+0x2ec>
 80059be:	e6e7      	b.n	8005790 <_printf_float+0xbc>
 80059c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059c2:	3301      	adds	r3, #1
 80059c4:	e7eb      	b.n	800599e <_printf_float+0x2ca>
 80059c6:	46c0      	nop			; (mov r8, r8)
 80059c8:	7fefffff 	.word	0x7fefffff
 80059cc:	0800a67c 	.word	0x0800a67c
 80059d0:	0800a680 	.word	0x0800a680
 80059d4:	0800a684 	.word	0x0800a684
 80059d8:	0800a688 	.word	0x0800a688
 80059dc:	0800ab11 	.word	0x0800ab11
 80059e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80059e2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80059e4:	920a      	str	r2, [sp, #40]	; 0x28
 80059e6:	429a      	cmp	r2, r3
 80059e8:	dd00      	ble.n	80059ec <_printf_float+0x318>
 80059ea:	930a      	str	r3, [sp, #40]	; 0x28
 80059ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059ee:	2b00      	cmp	r3, #0
 80059f0:	dc3c      	bgt.n	8005a6c <_printf_float+0x398>
 80059f2:	2300      	movs	r3, #0
 80059f4:	930d      	str	r3, [sp, #52]	; 0x34
 80059f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059f8:	43db      	mvns	r3, r3
 80059fa:	17db      	asrs	r3, r3, #31
 80059fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80059fe:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005a00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005a02:	930b      	str	r3, [sp, #44]	; 0x2c
 8005a04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a06:	4013      	ands	r3, r2
 8005a08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005a0a:	1ad3      	subs	r3, r2, r3
 8005a0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005a0e:	4293      	cmp	r3, r2
 8005a10:	dc34      	bgt.n	8005a7c <_printf_float+0x3a8>
 8005a12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005a14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005a16:	4293      	cmp	r3, r2
 8005a18:	db3d      	blt.n	8005a96 <_printf_float+0x3c2>
 8005a1a:	6823      	ldr	r3, [r4, #0]
 8005a1c:	07db      	lsls	r3, r3, #31
 8005a1e:	d43a      	bmi.n	8005a96 <_printf_float+0x3c2>
 8005a20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005a22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a24:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005a26:	1ad3      	subs	r3, r2, r3
 8005a28:	1a52      	subs	r2, r2, r1
 8005a2a:	920a      	str	r2, [sp, #40]	; 0x28
 8005a2c:	429a      	cmp	r2, r3
 8005a2e:	dd00      	ble.n	8005a32 <_printf_float+0x35e>
 8005a30:	930a      	str	r3, [sp, #40]	; 0x28
 8005a32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a34:	2b00      	cmp	r3, #0
 8005a36:	dc36      	bgt.n	8005aa6 <_printf_float+0x3d2>
 8005a38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a3a:	2500      	movs	r5, #0
 8005a3c:	43db      	mvns	r3, r3
 8005a3e:	17db      	asrs	r3, r3, #31
 8005a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8005a42:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005a44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005a46:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005a48:	1a9b      	subs	r3, r3, r2
 8005a4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005a4c:	400a      	ands	r2, r1
 8005a4e:	1a9b      	subs	r3, r3, r2
 8005a50:	42ab      	cmp	r3, r5
 8005a52:	dc00      	bgt.n	8005a56 <_printf_float+0x382>
 8005a54:	e772      	b.n	800593c <_printf_float+0x268>
 8005a56:	0022      	movs	r2, r4
 8005a58:	2301      	movs	r3, #1
 8005a5a:	0038      	movs	r0, r7
 8005a5c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005a5e:	321a      	adds	r2, #26
 8005a60:	47b0      	blx	r6
 8005a62:	1c43      	adds	r3, r0, #1
 8005a64:	d100      	bne.n	8005a68 <_printf_float+0x394>
 8005a66:	e693      	b.n	8005790 <_printf_float+0xbc>
 8005a68:	3501      	adds	r5, #1
 8005a6a:	e7ea      	b.n	8005a42 <_printf_float+0x36e>
 8005a6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a6e:	002a      	movs	r2, r5
 8005a70:	0038      	movs	r0, r7
 8005a72:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005a74:	47b0      	blx	r6
 8005a76:	1c43      	adds	r3, r0, #1
 8005a78:	d1bb      	bne.n	80059f2 <_printf_float+0x31e>
 8005a7a:	e689      	b.n	8005790 <_printf_float+0xbc>
 8005a7c:	0022      	movs	r2, r4
 8005a7e:	2301      	movs	r3, #1
 8005a80:	0038      	movs	r0, r7
 8005a82:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005a84:	321a      	adds	r2, #26
 8005a86:	47b0      	blx	r6
 8005a88:	1c43      	adds	r3, r0, #1
 8005a8a:	d100      	bne.n	8005a8e <_printf_float+0x3ba>
 8005a8c:	e680      	b.n	8005790 <_printf_float+0xbc>
 8005a8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005a90:	3301      	adds	r3, #1
 8005a92:	930d      	str	r3, [sp, #52]	; 0x34
 8005a94:	e7b3      	b.n	80059fe <_printf_float+0x32a>
 8005a96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a98:	0038      	movs	r0, r7
 8005a9a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005a9c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005a9e:	47b0      	blx	r6
 8005aa0:	1c43      	adds	r3, r0, #1
 8005aa2:	d1bd      	bne.n	8005a20 <_printf_float+0x34c>
 8005aa4:	e674      	b.n	8005790 <_printf_float+0xbc>
 8005aa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005aa8:	0038      	movs	r0, r7
 8005aaa:	18ea      	adds	r2, r5, r3
 8005aac:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005aae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ab0:	47b0      	blx	r6
 8005ab2:	1c43      	adds	r3, r0, #1
 8005ab4:	d1c0      	bne.n	8005a38 <_printf_float+0x364>
 8005ab6:	e66b      	b.n	8005790 <_printf_float+0xbc>
 8005ab8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005aba:	2b01      	cmp	r3, #1
 8005abc:	dc02      	bgt.n	8005ac4 <_printf_float+0x3f0>
 8005abe:	2301      	movs	r3, #1
 8005ac0:	421a      	tst	r2, r3
 8005ac2:	d034      	beq.n	8005b2e <_printf_float+0x45a>
 8005ac4:	2301      	movs	r3, #1
 8005ac6:	002a      	movs	r2, r5
 8005ac8:	0038      	movs	r0, r7
 8005aca:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005acc:	47b0      	blx	r6
 8005ace:	1c43      	adds	r3, r0, #1
 8005ad0:	d100      	bne.n	8005ad4 <_printf_float+0x400>
 8005ad2:	e65d      	b.n	8005790 <_printf_float+0xbc>
 8005ad4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ad6:	0038      	movs	r0, r7
 8005ad8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005ada:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005adc:	47b0      	blx	r6
 8005ade:	1c43      	adds	r3, r0, #1
 8005ae0:	d100      	bne.n	8005ae4 <_printf_float+0x410>
 8005ae2:	e655      	b.n	8005790 <_printf_float+0xbc>
 8005ae4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005ae6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005ae8:	2200      	movs	r2, #0
 8005aea:	2300      	movs	r3, #0
 8005aec:	f7fa fcb4 	bl	8000458 <__aeabi_dcmpeq>
 8005af0:	2800      	cmp	r0, #0
 8005af2:	d11a      	bne.n	8005b2a <_printf_float+0x456>
 8005af4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005af6:	1c6a      	adds	r2, r5, #1
 8005af8:	3b01      	subs	r3, #1
 8005afa:	0038      	movs	r0, r7
 8005afc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005afe:	47b0      	blx	r6
 8005b00:	1c43      	adds	r3, r0, #1
 8005b02:	d10e      	bne.n	8005b22 <_printf_float+0x44e>
 8005b04:	e644      	b.n	8005790 <_printf_float+0xbc>
 8005b06:	0022      	movs	r2, r4
 8005b08:	2301      	movs	r3, #1
 8005b0a:	0038      	movs	r0, r7
 8005b0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005b0e:	321a      	adds	r2, #26
 8005b10:	47b0      	blx	r6
 8005b12:	1c43      	adds	r3, r0, #1
 8005b14:	d100      	bne.n	8005b18 <_printf_float+0x444>
 8005b16:	e63b      	b.n	8005790 <_printf_float+0xbc>
 8005b18:	3501      	adds	r5, #1
 8005b1a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005b1c:	3b01      	subs	r3, #1
 8005b1e:	42ab      	cmp	r3, r5
 8005b20:	dcf1      	bgt.n	8005b06 <_printf_float+0x432>
 8005b22:	0022      	movs	r2, r4
 8005b24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005b26:	3250      	adds	r2, #80	; 0x50
 8005b28:	e6da      	b.n	80058e0 <_printf_float+0x20c>
 8005b2a:	2500      	movs	r5, #0
 8005b2c:	e7f5      	b.n	8005b1a <_printf_float+0x446>
 8005b2e:	002a      	movs	r2, r5
 8005b30:	e7e3      	b.n	8005afa <_printf_float+0x426>
 8005b32:	0022      	movs	r2, r4
 8005b34:	2301      	movs	r3, #1
 8005b36:	0038      	movs	r0, r7
 8005b38:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005b3a:	3219      	adds	r2, #25
 8005b3c:	47b0      	blx	r6
 8005b3e:	1c43      	adds	r3, r0, #1
 8005b40:	d100      	bne.n	8005b44 <_printf_float+0x470>
 8005b42:	e625      	b.n	8005790 <_printf_float+0xbc>
 8005b44:	3501      	adds	r5, #1
 8005b46:	68e3      	ldr	r3, [r4, #12]
 8005b48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005b4a:	1a9b      	subs	r3, r3, r2
 8005b4c:	42ab      	cmp	r3, r5
 8005b4e:	dcf0      	bgt.n	8005b32 <_printf_float+0x45e>
 8005b50:	e6f8      	b.n	8005944 <_printf_float+0x270>
 8005b52:	2500      	movs	r5, #0
 8005b54:	e7f7      	b.n	8005b46 <_printf_float+0x472>
 8005b56:	46c0      	nop			; (mov r8, r8)

08005b58 <_printf_common>:
 8005b58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005b5a:	0015      	movs	r5, r2
 8005b5c:	9301      	str	r3, [sp, #4]
 8005b5e:	688a      	ldr	r2, [r1, #8]
 8005b60:	690b      	ldr	r3, [r1, #16]
 8005b62:	000c      	movs	r4, r1
 8005b64:	9000      	str	r0, [sp, #0]
 8005b66:	4293      	cmp	r3, r2
 8005b68:	da00      	bge.n	8005b6c <_printf_common+0x14>
 8005b6a:	0013      	movs	r3, r2
 8005b6c:	0022      	movs	r2, r4
 8005b6e:	602b      	str	r3, [r5, #0]
 8005b70:	3243      	adds	r2, #67	; 0x43
 8005b72:	7812      	ldrb	r2, [r2, #0]
 8005b74:	2a00      	cmp	r2, #0
 8005b76:	d001      	beq.n	8005b7c <_printf_common+0x24>
 8005b78:	3301      	adds	r3, #1
 8005b7a:	602b      	str	r3, [r5, #0]
 8005b7c:	6823      	ldr	r3, [r4, #0]
 8005b7e:	069b      	lsls	r3, r3, #26
 8005b80:	d502      	bpl.n	8005b88 <_printf_common+0x30>
 8005b82:	682b      	ldr	r3, [r5, #0]
 8005b84:	3302      	adds	r3, #2
 8005b86:	602b      	str	r3, [r5, #0]
 8005b88:	6822      	ldr	r2, [r4, #0]
 8005b8a:	2306      	movs	r3, #6
 8005b8c:	0017      	movs	r7, r2
 8005b8e:	401f      	ands	r7, r3
 8005b90:	421a      	tst	r2, r3
 8005b92:	d027      	beq.n	8005be4 <_printf_common+0x8c>
 8005b94:	0023      	movs	r3, r4
 8005b96:	3343      	adds	r3, #67	; 0x43
 8005b98:	781b      	ldrb	r3, [r3, #0]
 8005b9a:	1e5a      	subs	r2, r3, #1
 8005b9c:	4193      	sbcs	r3, r2
 8005b9e:	6822      	ldr	r2, [r4, #0]
 8005ba0:	0692      	lsls	r2, r2, #26
 8005ba2:	d430      	bmi.n	8005c06 <_printf_common+0xae>
 8005ba4:	0022      	movs	r2, r4
 8005ba6:	9901      	ldr	r1, [sp, #4]
 8005ba8:	9800      	ldr	r0, [sp, #0]
 8005baa:	9e08      	ldr	r6, [sp, #32]
 8005bac:	3243      	adds	r2, #67	; 0x43
 8005bae:	47b0      	blx	r6
 8005bb0:	1c43      	adds	r3, r0, #1
 8005bb2:	d025      	beq.n	8005c00 <_printf_common+0xa8>
 8005bb4:	2306      	movs	r3, #6
 8005bb6:	6820      	ldr	r0, [r4, #0]
 8005bb8:	682a      	ldr	r2, [r5, #0]
 8005bba:	68e1      	ldr	r1, [r4, #12]
 8005bbc:	2500      	movs	r5, #0
 8005bbe:	4003      	ands	r3, r0
 8005bc0:	2b04      	cmp	r3, #4
 8005bc2:	d103      	bne.n	8005bcc <_printf_common+0x74>
 8005bc4:	1a8d      	subs	r5, r1, r2
 8005bc6:	43eb      	mvns	r3, r5
 8005bc8:	17db      	asrs	r3, r3, #31
 8005bca:	401d      	ands	r5, r3
 8005bcc:	68a3      	ldr	r3, [r4, #8]
 8005bce:	6922      	ldr	r2, [r4, #16]
 8005bd0:	4293      	cmp	r3, r2
 8005bd2:	dd01      	ble.n	8005bd8 <_printf_common+0x80>
 8005bd4:	1a9b      	subs	r3, r3, r2
 8005bd6:	18ed      	adds	r5, r5, r3
 8005bd8:	2700      	movs	r7, #0
 8005bda:	42bd      	cmp	r5, r7
 8005bdc:	d120      	bne.n	8005c20 <_printf_common+0xc8>
 8005bde:	2000      	movs	r0, #0
 8005be0:	e010      	b.n	8005c04 <_printf_common+0xac>
 8005be2:	3701      	adds	r7, #1
 8005be4:	68e3      	ldr	r3, [r4, #12]
 8005be6:	682a      	ldr	r2, [r5, #0]
 8005be8:	1a9b      	subs	r3, r3, r2
 8005bea:	42bb      	cmp	r3, r7
 8005bec:	ddd2      	ble.n	8005b94 <_printf_common+0x3c>
 8005bee:	0022      	movs	r2, r4
 8005bf0:	2301      	movs	r3, #1
 8005bf2:	9901      	ldr	r1, [sp, #4]
 8005bf4:	9800      	ldr	r0, [sp, #0]
 8005bf6:	9e08      	ldr	r6, [sp, #32]
 8005bf8:	3219      	adds	r2, #25
 8005bfa:	47b0      	blx	r6
 8005bfc:	1c43      	adds	r3, r0, #1
 8005bfe:	d1f0      	bne.n	8005be2 <_printf_common+0x8a>
 8005c00:	2001      	movs	r0, #1
 8005c02:	4240      	negs	r0, r0
 8005c04:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005c06:	2030      	movs	r0, #48	; 0x30
 8005c08:	18e1      	adds	r1, r4, r3
 8005c0a:	3143      	adds	r1, #67	; 0x43
 8005c0c:	7008      	strb	r0, [r1, #0]
 8005c0e:	0021      	movs	r1, r4
 8005c10:	1c5a      	adds	r2, r3, #1
 8005c12:	3145      	adds	r1, #69	; 0x45
 8005c14:	7809      	ldrb	r1, [r1, #0]
 8005c16:	18a2      	adds	r2, r4, r2
 8005c18:	3243      	adds	r2, #67	; 0x43
 8005c1a:	3302      	adds	r3, #2
 8005c1c:	7011      	strb	r1, [r2, #0]
 8005c1e:	e7c1      	b.n	8005ba4 <_printf_common+0x4c>
 8005c20:	0022      	movs	r2, r4
 8005c22:	2301      	movs	r3, #1
 8005c24:	9901      	ldr	r1, [sp, #4]
 8005c26:	9800      	ldr	r0, [sp, #0]
 8005c28:	9e08      	ldr	r6, [sp, #32]
 8005c2a:	321a      	adds	r2, #26
 8005c2c:	47b0      	blx	r6
 8005c2e:	1c43      	adds	r3, r0, #1
 8005c30:	d0e6      	beq.n	8005c00 <_printf_common+0xa8>
 8005c32:	3701      	adds	r7, #1
 8005c34:	e7d1      	b.n	8005bda <_printf_common+0x82>
	...

08005c38 <_printf_i>:
 8005c38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c3a:	b08b      	sub	sp, #44	; 0x2c
 8005c3c:	9206      	str	r2, [sp, #24]
 8005c3e:	000a      	movs	r2, r1
 8005c40:	3243      	adds	r2, #67	; 0x43
 8005c42:	9307      	str	r3, [sp, #28]
 8005c44:	9005      	str	r0, [sp, #20]
 8005c46:	9204      	str	r2, [sp, #16]
 8005c48:	7e0a      	ldrb	r2, [r1, #24]
 8005c4a:	000c      	movs	r4, r1
 8005c4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c4e:	2a78      	cmp	r2, #120	; 0x78
 8005c50:	d807      	bhi.n	8005c62 <_printf_i+0x2a>
 8005c52:	2a62      	cmp	r2, #98	; 0x62
 8005c54:	d809      	bhi.n	8005c6a <_printf_i+0x32>
 8005c56:	2a00      	cmp	r2, #0
 8005c58:	d100      	bne.n	8005c5c <_printf_i+0x24>
 8005c5a:	e0c1      	b.n	8005de0 <_printf_i+0x1a8>
 8005c5c:	2a58      	cmp	r2, #88	; 0x58
 8005c5e:	d100      	bne.n	8005c62 <_printf_i+0x2a>
 8005c60:	e08c      	b.n	8005d7c <_printf_i+0x144>
 8005c62:	0026      	movs	r6, r4
 8005c64:	3642      	adds	r6, #66	; 0x42
 8005c66:	7032      	strb	r2, [r6, #0]
 8005c68:	e022      	b.n	8005cb0 <_printf_i+0x78>
 8005c6a:	0010      	movs	r0, r2
 8005c6c:	3863      	subs	r0, #99	; 0x63
 8005c6e:	2815      	cmp	r0, #21
 8005c70:	d8f7      	bhi.n	8005c62 <_printf_i+0x2a>
 8005c72:	f7fa fa61 	bl	8000138 <__gnu_thumb1_case_shi>
 8005c76:	0016      	.short	0x0016
 8005c78:	fff6001f 	.word	0xfff6001f
 8005c7c:	fff6fff6 	.word	0xfff6fff6
 8005c80:	001ffff6 	.word	0x001ffff6
 8005c84:	fff6fff6 	.word	0xfff6fff6
 8005c88:	fff6fff6 	.word	0xfff6fff6
 8005c8c:	003600a8 	.word	0x003600a8
 8005c90:	fff6009a 	.word	0xfff6009a
 8005c94:	00b9fff6 	.word	0x00b9fff6
 8005c98:	0036fff6 	.word	0x0036fff6
 8005c9c:	fff6fff6 	.word	0xfff6fff6
 8005ca0:	009e      	.short	0x009e
 8005ca2:	0026      	movs	r6, r4
 8005ca4:	681a      	ldr	r2, [r3, #0]
 8005ca6:	3642      	adds	r6, #66	; 0x42
 8005ca8:	1d11      	adds	r1, r2, #4
 8005caa:	6019      	str	r1, [r3, #0]
 8005cac:	6813      	ldr	r3, [r2, #0]
 8005cae:	7033      	strb	r3, [r6, #0]
 8005cb0:	2301      	movs	r3, #1
 8005cb2:	e0a7      	b.n	8005e04 <_printf_i+0x1cc>
 8005cb4:	6808      	ldr	r0, [r1, #0]
 8005cb6:	6819      	ldr	r1, [r3, #0]
 8005cb8:	1d0a      	adds	r2, r1, #4
 8005cba:	0605      	lsls	r5, r0, #24
 8005cbc:	d50b      	bpl.n	8005cd6 <_printf_i+0x9e>
 8005cbe:	680d      	ldr	r5, [r1, #0]
 8005cc0:	601a      	str	r2, [r3, #0]
 8005cc2:	2d00      	cmp	r5, #0
 8005cc4:	da03      	bge.n	8005cce <_printf_i+0x96>
 8005cc6:	232d      	movs	r3, #45	; 0x2d
 8005cc8:	9a04      	ldr	r2, [sp, #16]
 8005cca:	426d      	negs	r5, r5
 8005ccc:	7013      	strb	r3, [r2, #0]
 8005cce:	4b61      	ldr	r3, [pc, #388]	; (8005e54 <_printf_i+0x21c>)
 8005cd0:	270a      	movs	r7, #10
 8005cd2:	9303      	str	r3, [sp, #12]
 8005cd4:	e01b      	b.n	8005d0e <_printf_i+0xd6>
 8005cd6:	680d      	ldr	r5, [r1, #0]
 8005cd8:	601a      	str	r2, [r3, #0]
 8005cda:	0641      	lsls	r1, r0, #25
 8005cdc:	d5f1      	bpl.n	8005cc2 <_printf_i+0x8a>
 8005cde:	b22d      	sxth	r5, r5
 8005ce0:	e7ef      	b.n	8005cc2 <_printf_i+0x8a>
 8005ce2:	680d      	ldr	r5, [r1, #0]
 8005ce4:	6819      	ldr	r1, [r3, #0]
 8005ce6:	1d08      	adds	r0, r1, #4
 8005ce8:	6018      	str	r0, [r3, #0]
 8005cea:	062e      	lsls	r6, r5, #24
 8005cec:	d501      	bpl.n	8005cf2 <_printf_i+0xba>
 8005cee:	680d      	ldr	r5, [r1, #0]
 8005cf0:	e003      	b.n	8005cfa <_printf_i+0xc2>
 8005cf2:	066d      	lsls	r5, r5, #25
 8005cf4:	d5fb      	bpl.n	8005cee <_printf_i+0xb6>
 8005cf6:	680d      	ldr	r5, [r1, #0]
 8005cf8:	b2ad      	uxth	r5, r5
 8005cfa:	4b56      	ldr	r3, [pc, #344]	; (8005e54 <_printf_i+0x21c>)
 8005cfc:	2708      	movs	r7, #8
 8005cfe:	9303      	str	r3, [sp, #12]
 8005d00:	2a6f      	cmp	r2, #111	; 0x6f
 8005d02:	d000      	beq.n	8005d06 <_printf_i+0xce>
 8005d04:	3702      	adds	r7, #2
 8005d06:	0023      	movs	r3, r4
 8005d08:	2200      	movs	r2, #0
 8005d0a:	3343      	adds	r3, #67	; 0x43
 8005d0c:	701a      	strb	r2, [r3, #0]
 8005d0e:	6863      	ldr	r3, [r4, #4]
 8005d10:	60a3      	str	r3, [r4, #8]
 8005d12:	2b00      	cmp	r3, #0
 8005d14:	db03      	blt.n	8005d1e <_printf_i+0xe6>
 8005d16:	2204      	movs	r2, #4
 8005d18:	6821      	ldr	r1, [r4, #0]
 8005d1a:	4391      	bics	r1, r2
 8005d1c:	6021      	str	r1, [r4, #0]
 8005d1e:	2d00      	cmp	r5, #0
 8005d20:	d102      	bne.n	8005d28 <_printf_i+0xf0>
 8005d22:	9e04      	ldr	r6, [sp, #16]
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	d00c      	beq.n	8005d42 <_printf_i+0x10a>
 8005d28:	9e04      	ldr	r6, [sp, #16]
 8005d2a:	0028      	movs	r0, r5
 8005d2c:	0039      	movs	r1, r7
 8005d2e:	f7fa fa93 	bl	8000258 <__aeabi_uidivmod>
 8005d32:	9b03      	ldr	r3, [sp, #12]
 8005d34:	3e01      	subs	r6, #1
 8005d36:	5c5b      	ldrb	r3, [r3, r1]
 8005d38:	7033      	strb	r3, [r6, #0]
 8005d3a:	002b      	movs	r3, r5
 8005d3c:	0005      	movs	r5, r0
 8005d3e:	429f      	cmp	r7, r3
 8005d40:	d9f3      	bls.n	8005d2a <_printf_i+0xf2>
 8005d42:	2f08      	cmp	r7, #8
 8005d44:	d109      	bne.n	8005d5a <_printf_i+0x122>
 8005d46:	6823      	ldr	r3, [r4, #0]
 8005d48:	07db      	lsls	r3, r3, #31
 8005d4a:	d506      	bpl.n	8005d5a <_printf_i+0x122>
 8005d4c:	6863      	ldr	r3, [r4, #4]
 8005d4e:	6922      	ldr	r2, [r4, #16]
 8005d50:	4293      	cmp	r3, r2
 8005d52:	dc02      	bgt.n	8005d5a <_printf_i+0x122>
 8005d54:	2330      	movs	r3, #48	; 0x30
 8005d56:	3e01      	subs	r6, #1
 8005d58:	7033      	strb	r3, [r6, #0]
 8005d5a:	9b04      	ldr	r3, [sp, #16]
 8005d5c:	1b9b      	subs	r3, r3, r6
 8005d5e:	6123      	str	r3, [r4, #16]
 8005d60:	9b07      	ldr	r3, [sp, #28]
 8005d62:	0021      	movs	r1, r4
 8005d64:	9300      	str	r3, [sp, #0]
 8005d66:	9805      	ldr	r0, [sp, #20]
 8005d68:	9b06      	ldr	r3, [sp, #24]
 8005d6a:	aa09      	add	r2, sp, #36	; 0x24
 8005d6c:	f7ff fef4 	bl	8005b58 <_printf_common>
 8005d70:	1c43      	adds	r3, r0, #1
 8005d72:	d14c      	bne.n	8005e0e <_printf_i+0x1d6>
 8005d74:	2001      	movs	r0, #1
 8005d76:	4240      	negs	r0, r0
 8005d78:	b00b      	add	sp, #44	; 0x2c
 8005d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d7c:	3145      	adds	r1, #69	; 0x45
 8005d7e:	700a      	strb	r2, [r1, #0]
 8005d80:	4a34      	ldr	r2, [pc, #208]	; (8005e54 <_printf_i+0x21c>)
 8005d82:	9203      	str	r2, [sp, #12]
 8005d84:	681a      	ldr	r2, [r3, #0]
 8005d86:	6821      	ldr	r1, [r4, #0]
 8005d88:	ca20      	ldmia	r2!, {r5}
 8005d8a:	601a      	str	r2, [r3, #0]
 8005d8c:	0608      	lsls	r0, r1, #24
 8005d8e:	d516      	bpl.n	8005dbe <_printf_i+0x186>
 8005d90:	07cb      	lsls	r3, r1, #31
 8005d92:	d502      	bpl.n	8005d9a <_printf_i+0x162>
 8005d94:	2320      	movs	r3, #32
 8005d96:	4319      	orrs	r1, r3
 8005d98:	6021      	str	r1, [r4, #0]
 8005d9a:	2710      	movs	r7, #16
 8005d9c:	2d00      	cmp	r5, #0
 8005d9e:	d1b2      	bne.n	8005d06 <_printf_i+0xce>
 8005da0:	2320      	movs	r3, #32
 8005da2:	6822      	ldr	r2, [r4, #0]
 8005da4:	439a      	bics	r2, r3
 8005da6:	6022      	str	r2, [r4, #0]
 8005da8:	e7ad      	b.n	8005d06 <_printf_i+0xce>
 8005daa:	2220      	movs	r2, #32
 8005dac:	6809      	ldr	r1, [r1, #0]
 8005dae:	430a      	orrs	r2, r1
 8005db0:	6022      	str	r2, [r4, #0]
 8005db2:	0022      	movs	r2, r4
 8005db4:	2178      	movs	r1, #120	; 0x78
 8005db6:	3245      	adds	r2, #69	; 0x45
 8005db8:	7011      	strb	r1, [r2, #0]
 8005dba:	4a27      	ldr	r2, [pc, #156]	; (8005e58 <_printf_i+0x220>)
 8005dbc:	e7e1      	b.n	8005d82 <_printf_i+0x14a>
 8005dbe:	0648      	lsls	r0, r1, #25
 8005dc0:	d5e6      	bpl.n	8005d90 <_printf_i+0x158>
 8005dc2:	b2ad      	uxth	r5, r5
 8005dc4:	e7e4      	b.n	8005d90 <_printf_i+0x158>
 8005dc6:	681a      	ldr	r2, [r3, #0]
 8005dc8:	680d      	ldr	r5, [r1, #0]
 8005dca:	1d10      	adds	r0, r2, #4
 8005dcc:	6949      	ldr	r1, [r1, #20]
 8005dce:	6018      	str	r0, [r3, #0]
 8005dd0:	6813      	ldr	r3, [r2, #0]
 8005dd2:	062e      	lsls	r6, r5, #24
 8005dd4:	d501      	bpl.n	8005dda <_printf_i+0x1a2>
 8005dd6:	6019      	str	r1, [r3, #0]
 8005dd8:	e002      	b.n	8005de0 <_printf_i+0x1a8>
 8005dda:	066d      	lsls	r5, r5, #25
 8005ddc:	d5fb      	bpl.n	8005dd6 <_printf_i+0x19e>
 8005dde:	8019      	strh	r1, [r3, #0]
 8005de0:	2300      	movs	r3, #0
 8005de2:	9e04      	ldr	r6, [sp, #16]
 8005de4:	6123      	str	r3, [r4, #16]
 8005de6:	e7bb      	b.n	8005d60 <_printf_i+0x128>
 8005de8:	681a      	ldr	r2, [r3, #0]
 8005dea:	1d11      	adds	r1, r2, #4
 8005dec:	6019      	str	r1, [r3, #0]
 8005dee:	6816      	ldr	r6, [r2, #0]
 8005df0:	2100      	movs	r1, #0
 8005df2:	0030      	movs	r0, r6
 8005df4:	6862      	ldr	r2, [r4, #4]
 8005df6:	f002 fae5 	bl	80083c4 <memchr>
 8005dfa:	2800      	cmp	r0, #0
 8005dfc:	d001      	beq.n	8005e02 <_printf_i+0x1ca>
 8005dfe:	1b80      	subs	r0, r0, r6
 8005e00:	6060      	str	r0, [r4, #4]
 8005e02:	6863      	ldr	r3, [r4, #4]
 8005e04:	6123      	str	r3, [r4, #16]
 8005e06:	2300      	movs	r3, #0
 8005e08:	9a04      	ldr	r2, [sp, #16]
 8005e0a:	7013      	strb	r3, [r2, #0]
 8005e0c:	e7a8      	b.n	8005d60 <_printf_i+0x128>
 8005e0e:	6923      	ldr	r3, [r4, #16]
 8005e10:	0032      	movs	r2, r6
 8005e12:	9906      	ldr	r1, [sp, #24]
 8005e14:	9805      	ldr	r0, [sp, #20]
 8005e16:	9d07      	ldr	r5, [sp, #28]
 8005e18:	47a8      	blx	r5
 8005e1a:	1c43      	adds	r3, r0, #1
 8005e1c:	d0aa      	beq.n	8005d74 <_printf_i+0x13c>
 8005e1e:	6823      	ldr	r3, [r4, #0]
 8005e20:	079b      	lsls	r3, r3, #30
 8005e22:	d415      	bmi.n	8005e50 <_printf_i+0x218>
 8005e24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e26:	68e0      	ldr	r0, [r4, #12]
 8005e28:	4298      	cmp	r0, r3
 8005e2a:	daa5      	bge.n	8005d78 <_printf_i+0x140>
 8005e2c:	0018      	movs	r0, r3
 8005e2e:	e7a3      	b.n	8005d78 <_printf_i+0x140>
 8005e30:	0022      	movs	r2, r4
 8005e32:	2301      	movs	r3, #1
 8005e34:	9906      	ldr	r1, [sp, #24]
 8005e36:	9805      	ldr	r0, [sp, #20]
 8005e38:	9e07      	ldr	r6, [sp, #28]
 8005e3a:	3219      	adds	r2, #25
 8005e3c:	47b0      	blx	r6
 8005e3e:	1c43      	adds	r3, r0, #1
 8005e40:	d098      	beq.n	8005d74 <_printf_i+0x13c>
 8005e42:	3501      	adds	r5, #1
 8005e44:	68e3      	ldr	r3, [r4, #12]
 8005e46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005e48:	1a9b      	subs	r3, r3, r2
 8005e4a:	42ab      	cmp	r3, r5
 8005e4c:	dcf0      	bgt.n	8005e30 <_printf_i+0x1f8>
 8005e4e:	e7e9      	b.n	8005e24 <_printf_i+0x1ec>
 8005e50:	2500      	movs	r5, #0
 8005e52:	e7f7      	b.n	8005e44 <_printf_i+0x20c>
 8005e54:	0800a68c 	.word	0x0800a68c
 8005e58:	0800a69d 	.word	0x0800a69d

08005e5c <_sbrk_r>:
 8005e5c:	2300      	movs	r3, #0
 8005e5e:	b570      	push	{r4, r5, r6, lr}
 8005e60:	4d06      	ldr	r5, [pc, #24]	; (8005e7c <_sbrk_r+0x20>)
 8005e62:	0004      	movs	r4, r0
 8005e64:	0008      	movs	r0, r1
 8005e66:	602b      	str	r3, [r5, #0]
 8005e68:	f7fe fb4a 	bl	8004500 <_sbrk>
 8005e6c:	1c43      	adds	r3, r0, #1
 8005e6e:	d103      	bne.n	8005e78 <_sbrk_r+0x1c>
 8005e70:	682b      	ldr	r3, [r5, #0]
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d000      	beq.n	8005e78 <_sbrk_r+0x1c>
 8005e76:	6023      	str	r3, [r4, #0]
 8005e78:	bd70      	pop	{r4, r5, r6, pc}
 8005e7a:	46c0      	nop			; (mov r8, r8)
 8005e7c:	200003d0 	.word	0x200003d0

08005e80 <siprintf>:
 8005e80:	b40e      	push	{r1, r2, r3}
 8005e82:	b500      	push	{lr}
 8005e84:	490b      	ldr	r1, [pc, #44]	; (8005eb4 <siprintf+0x34>)
 8005e86:	b09c      	sub	sp, #112	; 0x70
 8005e88:	ab1d      	add	r3, sp, #116	; 0x74
 8005e8a:	9002      	str	r0, [sp, #8]
 8005e8c:	9006      	str	r0, [sp, #24]
 8005e8e:	9107      	str	r1, [sp, #28]
 8005e90:	9104      	str	r1, [sp, #16]
 8005e92:	4809      	ldr	r0, [pc, #36]	; (8005eb8 <siprintf+0x38>)
 8005e94:	4909      	ldr	r1, [pc, #36]	; (8005ebc <siprintf+0x3c>)
 8005e96:	cb04      	ldmia	r3!, {r2}
 8005e98:	9105      	str	r1, [sp, #20]
 8005e9a:	6800      	ldr	r0, [r0, #0]
 8005e9c:	a902      	add	r1, sp, #8
 8005e9e:	9301      	str	r3, [sp, #4]
 8005ea0:	f003 f80c 	bl	8008ebc <_svfiprintf_r>
 8005ea4:	2300      	movs	r3, #0
 8005ea6:	9a02      	ldr	r2, [sp, #8]
 8005ea8:	7013      	strb	r3, [r2, #0]
 8005eaa:	b01c      	add	sp, #112	; 0x70
 8005eac:	bc08      	pop	{r3}
 8005eae:	b003      	add	sp, #12
 8005eb0:	4718      	bx	r3
 8005eb2:	46c0      	nop			; (mov r8, r8)
 8005eb4:	7fffffff 	.word	0x7fffffff
 8005eb8:	2000009c 	.word	0x2000009c
 8005ebc:	ffff0208 	.word	0xffff0208

08005ec0 <siscanf>:
 8005ec0:	b40e      	push	{r1, r2, r3}
 8005ec2:	b530      	push	{r4, r5, lr}
 8005ec4:	2381      	movs	r3, #129	; 0x81
 8005ec6:	b09c      	sub	sp, #112	; 0x70
 8005ec8:	466a      	mov	r2, sp
 8005eca:	ac1f      	add	r4, sp, #124	; 0x7c
 8005ecc:	009b      	lsls	r3, r3, #2
 8005ece:	cc20      	ldmia	r4!, {r5}
 8005ed0:	8293      	strh	r3, [r2, #20]
 8005ed2:	9002      	str	r0, [sp, #8]
 8005ed4:	9006      	str	r0, [sp, #24]
 8005ed6:	f7fa f91d 	bl	8000114 <strlen>
 8005eda:	4b0b      	ldr	r3, [pc, #44]	; (8005f08 <siscanf+0x48>)
 8005edc:	466a      	mov	r2, sp
 8005ede:	930b      	str	r3, [sp, #44]	; 0x2c
 8005ee0:	2300      	movs	r3, #0
 8005ee2:	9003      	str	r0, [sp, #12]
 8005ee4:	9007      	str	r0, [sp, #28]
 8005ee6:	4809      	ldr	r0, [pc, #36]	; (8005f0c <siscanf+0x4c>)
 8005ee8:	930f      	str	r3, [sp, #60]	; 0x3c
 8005eea:	9314      	str	r3, [sp, #80]	; 0x50
 8005eec:	3b01      	subs	r3, #1
 8005eee:	82d3      	strh	r3, [r2, #22]
 8005ef0:	a902      	add	r1, sp, #8
 8005ef2:	0023      	movs	r3, r4
 8005ef4:	002a      	movs	r2, r5
 8005ef6:	6800      	ldr	r0, [r0, #0]
 8005ef8:	9401      	str	r4, [sp, #4]
 8005efa:	f003 f93b 	bl	8009174 <__ssvfiscanf_r>
 8005efe:	b01c      	add	sp, #112	; 0x70
 8005f00:	bc30      	pop	{r4, r5}
 8005f02:	bc08      	pop	{r3}
 8005f04:	b003      	add	sp, #12
 8005f06:	4718      	bx	r3
 8005f08:	08005f39 	.word	0x08005f39
 8005f0c:	2000009c 	.word	0x2000009c

08005f10 <__sread>:
 8005f10:	b570      	push	{r4, r5, r6, lr}
 8005f12:	000c      	movs	r4, r1
 8005f14:	250e      	movs	r5, #14
 8005f16:	5f49      	ldrsh	r1, [r1, r5]
 8005f18:	f003 fd6e 	bl	80099f8 <_read_r>
 8005f1c:	2800      	cmp	r0, #0
 8005f1e:	db03      	blt.n	8005f28 <__sread+0x18>
 8005f20:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005f22:	181b      	adds	r3, r3, r0
 8005f24:	6563      	str	r3, [r4, #84]	; 0x54
 8005f26:	bd70      	pop	{r4, r5, r6, pc}
 8005f28:	89a3      	ldrh	r3, [r4, #12]
 8005f2a:	4a02      	ldr	r2, [pc, #8]	; (8005f34 <__sread+0x24>)
 8005f2c:	4013      	ands	r3, r2
 8005f2e:	81a3      	strh	r3, [r4, #12]
 8005f30:	e7f9      	b.n	8005f26 <__sread+0x16>
 8005f32:	46c0      	nop			; (mov r8, r8)
 8005f34:	ffffefff 	.word	0xffffefff

08005f38 <__seofread>:
 8005f38:	2000      	movs	r0, #0
 8005f3a:	4770      	bx	lr

08005f3c <__swrite>:
 8005f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f3e:	001f      	movs	r7, r3
 8005f40:	898b      	ldrh	r3, [r1, #12]
 8005f42:	0005      	movs	r5, r0
 8005f44:	000c      	movs	r4, r1
 8005f46:	0016      	movs	r6, r2
 8005f48:	05db      	lsls	r3, r3, #23
 8005f4a:	d505      	bpl.n	8005f58 <__swrite+0x1c>
 8005f4c:	230e      	movs	r3, #14
 8005f4e:	5ec9      	ldrsh	r1, [r1, r3]
 8005f50:	2200      	movs	r2, #0
 8005f52:	2302      	movs	r3, #2
 8005f54:	f002 fa10 	bl	8008378 <_lseek_r>
 8005f58:	89a3      	ldrh	r3, [r4, #12]
 8005f5a:	4a05      	ldr	r2, [pc, #20]	; (8005f70 <__swrite+0x34>)
 8005f5c:	0028      	movs	r0, r5
 8005f5e:	4013      	ands	r3, r2
 8005f60:	81a3      	strh	r3, [r4, #12]
 8005f62:	0032      	movs	r2, r6
 8005f64:	230e      	movs	r3, #14
 8005f66:	5ee1      	ldrsh	r1, [r4, r3]
 8005f68:	003b      	movs	r3, r7
 8005f6a:	f000 ff93 	bl	8006e94 <_write_r>
 8005f6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f70:	ffffefff 	.word	0xffffefff

08005f74 <__sseek>:
 8005f74:	b570      	push	{r4, r5, r6, lr}
 8005f76:	000c      	movs	r4, r1
 8005f78:	250e      	movs	r5, #14
 8005f7a:	5f49      	ldrsh	r1, [r1, r5]
 8005f7c:	f002 f9fc 	bl	8008378 <_lseek_r>
 8005f80:	89a3      	ldrh	r3, [r4, #12]
 8005f82:	1c42      	adds	r2, r0, #1
 8005f84:	d103      	bne.n	8005f8e <__sseek+0x1a>
 8005f86:	4a05      	ldr	r2, [pc, #20]	; (8005f9c <__sseek+0x28>)
 8005f88:	4013      	ands	r3, r2
 8005f8a:	81a3      	strh	r3, [r4, #12]
 8005f8c:	bd70      	pop	{r4, r5, r6, pc}
 8005f8e:	2280      	movs	r2, #128	; 0x80
 8005f90:	0152      	lsls	r2, r2, #5
 8005f92:	4313      	orrs	r3, r2
 8005f94:	81a3      	strh	r3, [r4, #12]
 8005f96:	6560      	str	r0, [r4, #84]	; 0x54
 8005f98:	e7f8      	b.n	8005f8c <__sseek+0x18>
 8005f9a:	46c0      	nop			; (mov r8, r8)
 8005f9c:	ffffefff 	.word	0xffffefff

08005fa0 <__sclose>:
 8005fa0:	b510      	push	{r4, lr}
 8005fa2:	230e      	movs	r3, #14
 8005fa4:	5ec9      	ldrsh	r1, [r1, r3]
 8005fa6:	f000 ffa7 	bl	8006ef8 <_close_r>
 8005faa:	bd10      	pop	{r4, pc}

08005fac <strchr>:
 8005fac:	b2c9      	uxtb	r1, r1
 8005fae:	7803      	ldrb	r3, [r0, #0]
 8005fb0:	2b00      	cmp	r3, #0
 8005fb2:	d004      	beq.n	8005fbe <strchr+0x12>
 8005fb4:	428b      	cmp	r3, r1
 8005fb6:	d100      	bne.n	8005fba <strchr+0xe>
 8005fb8:	4770      	bx	lr
 8005fba:	3001      	adds	r0, #1
 8005fbc:	e7f7      	b.n	8005fae <strchr+0x2>
 8005fbe:	424b      	negs	r3, r1
 8005fc0:	4159      	adcs	r1, r3
 8005fc2:	4249      	negs	r1, r1
 8005fc4:	4008      	ands	r0, r1
 8005fc6:	e7f7      	b.n	8005fb8 <strchr+0xc>

08005fc8 <strncpy>:
 8005fc8:	0003      	movs	r3, r0
 8005fca:	b530      	push	{r4, r5, lr}
 8005fcc:	001d      	movs	r5, r3
 8005fce:	2a00      	cmp	r2, #0
 8005fd0:	d006      	beq.n	8005fe0 <strncpy+0x18>
 8005fd2:	780c      	ldrb	r4, [r1, #0]
 8005fd4:	3a01      	subs	r2, #1
 8005fd6:	3301      	adds	r3, #1
 8005fd8:	702c      	strb	r4, [r5, #0]
 8005fda:	3101      	adds	r1, #1
 8005fdc:	2c00      	cmp	r4, #0
 8005fde:	d1f5      	bne.n	8005fcc <strncpy+0x4>
 8005fe0:	2100      	movs	r1, #0
 8005fe2:	189a      	adds	r2, r3, r2
 8005fe4:	4293      	cmp	r3, r2
 8005fe6:	d100      	bne.n	8005fea <strncpy+0x22>
 8005fe8:	bd30      	pop	{r4, r5, pc}
 8005fea:	7019      	strb	r1, [r3, #0]
 8005fec:	3301      	adds	r3, #1
 8005fee:	e7f9      	b.n	8005fe4 <strncpy+0x1c>

08005ff0 <strstr>:
 8005ff0:	780a      	ldrb	r2, [r1, #0]
 8005ff2:	b530      	push	{r4, r5, lr}
 8005ff4:	2a00      	cmp	r2, #0
 8005ff6:	d10c      	bne.n	8006012 <strstr+0x22>
 8005ff8:	bd30      	pop	{r4, r5, pc}
 8005ffa:	429a      	cmp	r2, r3
 8005ffc:	d108      	bne.n	8006010 <strstr+0x20>
 8005ffe:	2301      	movs	r3, #1
 8006000:	5ccc      	ldrb	r4, [r1, r3]
 8006002:	2c00      	cmp	r4, #0
 8006004:	d0f8      	beq.n	8005ff8 <strstr+0x8>
 8006006:	5cc5      	ldrb	r5, [r0, r3]
 8006008:	42a5      	cmp	r5, r4
 800600a:	d101      	bne.n	8006010 <strstr+0x20>
 800600c:	3301      	adds	r3, #1
 800600e:	e7f7      	b.n	8006000 <strstr+0x10>
 8006010:	3001      	adds	r0, #1
 8006012:	7803      	ldrb	r3, [r0, #0]
 8006014:	2b00      	cmp	r3, #0
 8006016:	d1f0      	bne.n	8005ffa <strstr+0xa>
 8006018:	0018      	movs	r0, r3
 800601a:	e7ed      	b.n	8005ff8 <strstr+0x8>

0800601c <sulp>:
 800601c:	b570      	push	{r4, r5, r6, lr}
 800601e:	0016      	movs	r6, r2
 8006020:	000d      	movs	r5, r1
 8006022:	f002 fd77 	bl	8008b14 <__ulp>
 8006026:	2e00      	cmp	r6, #0
 8006028:	d00d      	beq.n	8006046 <sulp+0x2a>
 800602a:	236b      	movs	r3, #107	; 0x6b
 800602c:	006a      	lsls	r2, r5, #1
 800602e:	0d52      	lsrs	r2, r2, #21
 8006030:	1a9b      	subs	r3, r3, r2
 8006032:	2b00      	cmp	r3, #0
 8006034:	dd07      	ble.n	8006046 <sulp+0x2a>
 8006036:	2400      	movs	r4, #0
 8006038:	4a03      	ldr	r2, [pc, #12]	; (8006048 <sulp+0x2c>)
 800603a:	051b      	lsls	r3, r3, #20
 800603c:	189d      	adds	r5, r3, r2
 800603e:	002b      	movs	r3, r5
 8006040:	0022      	movs	r2, r4
 8006042:	f7fb ffdd 	bl	8002000 <__aeabi_dmul>
 8006046:	bd70      	pop	{r4, r5, r6, pc}
 8006048:	3ff00000 	.word	0x3ff00000

0800604c <_strtod_l>:
 800604c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800604e:	001d      	movs	r5, r3
 8006050:	2300      	movs	r3, #0
 8006052:	b0a5      	sub	sp, #148	; 0x94
 8006054:	9320      	str	r3, [sp, #128]	; 0x80
 8006056:	4bac      	ldr	r3, [pc, #688]	; (8006308 <_strtod_l+0x2bc>)
 8006058:	9005      	str	r0, [sp, #20]
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	9108      	str	r1, [sp, #32]
 800605e:	0018      	movs	r0, r3
 8006060:	9307      	str	r3, [sp, #28]
 8006062:	921b      	str	r2, [sp, #108]	; 0x6c
 8006064:	f7fa f856 	bl	8000114 <strlen>
 8006068:	2600      	movs	r6, #0
 800606a:	0004      	movs	r4, r0
 800606c:	2700      	movs	r7, #0
 800606e:	9b08      	ldr	r3, [sp, #32]
 8006070:	931f      	str	r3, [sp, #124]	; 0x7c
 8006072:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8006074:	7813      	ldrb	r3, [r2, #0]
 8006076:	2b2b      	cmp	r3, #43	; 0x2b
 8006078:	d058      	beq.n	800612c <_strtod_l+0xe0>
 800607a:	d844      	bhi.n	8006106 <_strtod_l+0xba>
 800607c:	2b0d      	cmp	r3, #13
 800607e:	d83d      	bhi.n	80060fc <_strtod_l+0xb0>
 8006080:	2b08      	cmp	r3, #8
 8006082:	d83d      	bhi.n	8006100 <_strtod_l+0xb4>
 8006084:	2b00      	cmp	r3, #0
 8006086:	d047      	beq.n	8006118 <_strtod_l+0xcc>
 8006088:	2300      	movs	r3, #0
 800608a:	930e      	str	r3, [sp, #56]	; 0x38
 800608c:	2200      	movs	r2, #0
 800608e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8006090:	920a      	str	r2, [sp, #40]	; 0x28
 8006092:	9306      	str	r3, [sp, #24]
 8006094:	781b      	ldrb	r3, [r3, #0]
 8006096:	2b30      	cmp	r3, #48	; 0x30
 8006098:	d000      	beq.n	800609c <_strtod_l+0x50>
 800609a:	e07f      	b.n	800619c <_strtod_l+0x150>
 800609c:	9b06      	ldr	r3, [sp, #24]
 800609e:	3220      	adds	r2, #32
 80060a0:	785b      	ldrb	r3, [r3, #1]
 80060a2:	4393      	bics	r3, r2
 80060a4:	2b58      	cmp	r3, #88	; 0x58
 80060a6:	d000      	beq.n	80060aa <_strtod_l+0x5e>
 80060a8:	e06e      	b.n	8006188 <_strtod_l+0x13c>
 80060aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80060ac:	9502      	str	r5, [sp, #8]
 80060ae:	9301      	str	r3, [sp, #4]
 80060b0:	ab20      	add	r3, sp, #128	; 0x80
 80060b2:	9300      	str	r3, [sp, #0]
 80060b4:	4a95      	ldr	r2, [pc, #596]	; (800630c <_strtod_l+0x2c0>)
 80060b6:	ab21      	add	r3, sp, #132	; 0x84
 80060b8:	9805      	ldr	r0, [sp, #20]
 80060ba:	a91f      	add	r1, sp, #124	; 0x7c
 80060bc:	f001 fe4e 	bl	8007d5c <__gethex>
 80060c0:	2307      	movs	r3, #7
 80060c2:	0005      	movs	r5, r0
 80060c4:	0004      	movs	r4, r0
 80060c6:	401d      	ands	r5, r3
 80060c8:	4218      	tst	r0, r3
 80060ca:	d006      	beq.n	80060da <_strtod_l+0x8e>
 80060cc:	2d06      	cmp	r5, #6
 80060ce:	d12f      	bne.n	8006130 <_strtod_l+0xe4>
 80060d0:	9b06      	ldr	r3, [sp, #24]
 80060d2:	3301      	adds	r3, #1
 80060d4:	931f      	str	r3, [sp, #124]	; 0x7c
 80060d6:	2300      	movs	r3, #0
 80060d8:	930e      	str	r3, [sp, #56]	; 0x38
 80060da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80060dc:	2b00      	cmp	r3, #0
 80060de:	d002      	beq.n	80060e6 <_strtod_l+0x9a>
 80060e0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80060e2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80060e4:	601a      	str	r2, [r3, #0]
 80060e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d01c      	beq.n	8006126 <_strtod_l+0xda>
 80060ec:	2380      	movs	r3, #128	; 0x80
 80060ee:	0032      	movs	r2, r6
 80060f0:	061b      	lsls	r3, r3, #24
 80060f2:	18fb      	adds	r3, r7, r3
 80060f4:	0010      	movs	r0, r2
 80060f6:	0019      	movs	r1, r3
 80060f8:	b025      	add	sp, #148	; 0x94
 80060fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80060fc:	2b20      	cmp	r3, #32
 80060fe:	d1c3      	bne.n	8006088 <_strtod_l+0x3c>
 8006100:	3201      	adds	r2, #1
 8006102:	921f      	str	r2, [sp, #124]	; 0x7c
 8006104:	e7b5      	b.n	8006072 <_strtod_l+0x26>
 8006106:	2b2d      	cmp	r3, #45	; 0x2d
 8006108:	d1be      	bne.n	8006088 <_strtod_l+0x3c>
 800610a:	3b2c      	subs	r3, #44	; 0x2c
 800610c:	930e      	str	r3, [sp, #56]	; 0x38
 800610e:	1c53      	adds	r3, r2, #1
 8006110:	931f      	str	r3, [sp, #124]	; 0x7c
 8006112:	7853      	ldrb	r3, [r2, #1]
 8006114:	2b00      	cmp	r3, #0
 8006116:	d1b9      	bne.n	800608c <_strtod_l+0x40>
 8006118:	9b08      	ldr	r3, [sp, #32]
 800611a:	931f      	str	r3, [sp, #124]	; 0x7c
 800611c:	2300      	movs	r3, #0
 800611e:	930e      	str	r3, [sp, #56]	; 0x38
 8006120:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006122:	2b00      	cmp	r3, #0
 8006124:	d1dc      	bne.n	80060e0 <_strtod_l+0x94>
 8006126:	0032      	movs	r2, r6
 8006128:	003b      	movs	r3, r7
 800612a:	e7e3      	b.n	80060f4 <_strtod_l+0xa8>
 800612c:	2300      	movs	r3, #0
 800612e:	e7ed      	b.n	800610c <_strtod_l+0xc0>
 8006130:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8006132:	2a00      	cmp	r2, #0
 8006134:	d007      	beq.n	8006146 <_strtod_l+0xfa>
 8006136:	2135      	movs	r1, #53	; 0x35
 8006138:	a822      	add	r0, sp, #136	; 0x88
 800613a:	f002 fdec 	bl	8008d16 <__copybits>
 800613e:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006140:	9805      	ldr	r0, [sp, #20]
 8006142:	f002 f9a7 	bl	8008494 <_Bfree>
 8006146:	1e68      	subs	r0, r5, #1
 8006148:	2804      	cmp	r0, #4
 800614a:	d806      	bhi.n	800615a <_strtod_l+0x10e>
 800614c:	f7f9 ffea 	bl	8000124 <__gnu_thumb1_case_uqi>
 8006150:	1816030b 	.word	0x1816030b
 8006154:	0b          	.byte	0x0b
 8006155:	00          	.byte	0x00
 8006156:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8006158:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 800615a:	0723      	lsls	r3, r4, #28
 800615c:	d5bd      	bpl.n	80060da <_strtod_l+0x8e>
 800615e:	2380      	movs	r3, #128	; 0x80
 8006160:	061b      	lsls	r3, r3, #24
 8006162:	431f      	orrs	r7, r3
 8006164:	e7b9      	b.n	80060da <_strtod_l+0x8e>
 8006166:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006168:	4a69      	ldr	r2, [pc, #420]	; (8006310 <_strtod_l+0x2c4>)
 800616a:	496a      	ldr	r1, [pc, #424]	; (8006314 <_strtod_l+0x2c8>)
 800616c:	401a      	ands	r2, r3
 800616e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006170:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8006172:	185b      	adds	r3, r3, r1
 8006174:	051b      	lsls	r3, r3, #20
 8006176:	431a      	orrs	r2, r3
 8006178:	0017      	movs	r7, r2
 800617a:	e7ee      	b.n	800615a <_strtod_l+0x10e>
 800617c:	4f66      	ldr	r7, [pc, #408]	; (8006318 <_strtod_l+0x2cc>)
 800617e:	e7ec      	b.n	800615a <_strtod_l+0x10e>
 8006180:	2601      	movs	r6, #1
 8006182:	4f66      	ldr	r7, [pc, #408]	; (800631c <_strtod_l+0x2d0>)
 8006184:	4276      	negs	r6, r6
 8006186:	e7e8      	b.n	800615a <_strtod_l+0x10e>
 8006188:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800618a:	1c5a      	adds	r2, r3, #1
 800618c:	921f      	str	r2, [sp, #124]	; 0x7c
 800618e:	785b      	ldrb	r3, [r3, #1]
 8006190:	2b30      	cmp	r3, #48	; 0x30
 8006192:	d0f9      	beq.n	8006188 <_strtod_l+0x13c>
 8006194:	2b00      	cmp	r3, #0
 8006196:	d0a0      	beq.n	80060da <_strtod_l+0x8e>
 8006198:	2301      	movs	r3, #1
 800619a:	930a      	str	r3, [sp, #40]	; 0x28
 800619c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800619e:	220a      	movs	r2, #10
 80061a0:	9310      	str	r3, [sp, #64]	; 0x40
 80061a2:	2300      	movs	r3, #0
 80061a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80061a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80061a8:	9309      	str	r3, [sp, #36]	; 0x24
 80061aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80061ac:	7805      	ldrb	r5, [r0, #0]
 80061ae:	002b      	movs	r3, r5
 80061b0:	3b30      	subs	r3, #48	; 0x30
 80061b2:	b2d9      	uxtb	r1, r3
 80061b4:	2909      	cmp	r1, #9
 80061b6:	d927      	bls.n	8006208 <_strtod_l+0x1bc>
 80061b8:	0022      	movs	r2, r4
 80061ba:	9907      	ldr	r1, [sp, #28]
 80061bc:	f003 fc72 	bl	8009aa4 <strncmp>
 80061c0:	2800      	cmp	r0, #0
 80061c2:	d033      	beq.n	800622c <_strtod_l+0x1e0>
 80061c4:	2000      	movs	r0, #0
 80061c6:	002b      	movs	r3, r5
 80061c8:	4684      	mov	ip, r0
 80061ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80061cc:	900c      	str	r0, [sp, #48]	; 0x30
 80061ce:	9206      	str	r2, [sp, #24]
 80061d0:	2220      	movs	r2, #32
 80061d2:	0019      	movs	r1, r3
 80061d4:	4391      	bics	r1, r2
 80061d6:	000a      	movs	r2, r1
 80061d8:	2100      	movs	r1, #0
 80061da:	9107      	str	r1, [sp, #28]
 80061dc:	2a45      	cmp	r2, #69	; 0x45
 80061de:	d000      	beq.n	80061e2 <_strtod_l+0x196>
 80061e0:	e0c5      	b.n	800636e <_strtod_l+0x322>
 80061e2:	9b06      	ldr	r3, [sp, #24]
 80061e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80061e6:	4303      	orrs	r3, r0
 80061e8:	4313      	orrs	r3, r2
 80061ea:	428b      	cmp	r3, r1
 80061ec:	d094      	beq.n	8006118 <_strtod_l+0xcc>
 80061ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80061f0:	9308      	str	r3, [sp, #32]
 80061f2:	3301      	adds	r3, #1
 80061f4:	931f      	str	r3, [sp, #124]	; 0x7c
 80061f6:	9b08      	ldr	r3, [sp, #32]
 80061f8:	785b      	ldrb	r3, [r3, #1]
 80061fa:	2b2b      	cmp	r3, #43	; 0x2b
 80061fc:	d076      	beq.n	80062ec <_strtod_l+0x2a0>
 80061fe:	000c      	movs	r4, r1
 8006200:	2b2d      	cmp	r3, #45	; 0x2d
 8006202:	d179      	bne.n	80062f8 <_strtod_l+0x2ac>
 8006204:	2401      	movs	r4, #1
 8006206:	e072      	b.n	80062ee <_strtod_l+0x2a2>
 8006208:	9909      	ldr	r1, [sp, #36]	; 0x24
 800620a:	2908      	cmp	r1, #8
 800620c:	dc09      	bgt.n	8006222 <_strtod_l+0x1d6>
 800620e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006210:	4351      	muls	r1, r2
 8006212:	185b      	adds	r3, r3, r1
 8006214:	930b      	str	r3, [sp, #44]	; 0x2c
 8006216:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006218:	3001      	adds	r0, #1
 800621a:	3301      	adds	r3, #1
 800621c:	9309      	str	r3, [sp, #36]	; 0x24
 800621e:	901f      	str	r0, [sp, #124]	; 0x7c
 8006220:	e7c3      	b.n	80061aa <_strtod_l+0x15e>
 8006222:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006224:	4351      	muls	r1, r2
 8006226:	185b      	adds	r3, r3, r1
 8006228:	930f      	str	r3, [sp, #60]	; 0x3c
 800622a:	e7f4      	b.n	8006216 <_strtod_l+0x1ca>
 800622c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800622e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006230:	191c      	adds	r4, r3, r4
 8006232:	941f      	str	r4, [sp, #124]	; 0x7c
 8006234:	7823      	ldrb	r3, [r4, #0]
 8006236:	2a00      	cmp	r2, #0
 8006238:	d039      	beq.n	80062ae <_strtod_l+0x262>
 800623a:	900c      	str	r0, [sp, #48]	; 0x30
 800623c:	9206      	str	r2, [sp, #24]
 800623e:	001a      	movs	r2, r3
 8006240:	3a30      	subs	r2, #48	; 0x30
 8006242:	2a09      	cmp	r2, #9
 8006244:	d912      	bls.n	800626c <_strtod_l+0x220>
 8006246:	2201      	movs	r2, #1
 8006248:	4694      	mov	ip, r2
 800624a:	e7c1      	b.n	80061d0 <_strtod_l+0x184>
 800624c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800624e:	3001      	adds	r0, #1
 8006250:	1c5a      	adds	r2, r3, #1
 8006252:	921f      	str	r2, [sp, #124]	; 0x7c
 8006254:	785b      	ldrb	r3, [r3, #1]
 8006256:	2b30      	cmp	r3, #48	; 0x30
 8006258:	d0f8      	beq.n	800624c <_strtod_l+0x200>
 800625a:	001a      	movs	r2, r3
 800625c:	3a31      	subs	r2, #49	; 0x31
 800625e:	2a08      	cmp	r2, #8
 8006260:	d83f      	bhi.n	80062e2 <_strtod_l+0x296>
 8006262:	900c      	str	r0, [sp, #48]	; 0x30
 8006264:	2000      	movs	r0, #0
 8006266:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8006268:	9006      	str	r0, [sp, #24]
 800626a:	9210      	str	r2, [sp, #64]	; 0x40
 800626c:	001a      	movs	r2, r3
 800626e:	1c41      	adds	r1, r0, #1
 8006270:	3a30      	subs	r2, #48	; 0x30
 8006272:	2b30      	cmp	r3, #48	; 0x30
 8006274:	d015      	beq.n	80062a2 <_strtod_l+0x256>
 8006276:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006278:	185b      	adds	r3, r3, r1
 800627a:	210a      	movs	r1, #10
 800627c:	930c      	str	r3, [sp, #48]	; 0x30
 800627e:	9b06      	ldr	r3, [sp, #24]
 8006280:	18c4      	adds	r4, r0, r3
 8006282:	42a3      	cmp	r3, r4
 8006284:	d115      	bne.n	80062b2 <_strtod_l+0x266>
 8006286:	9906      	ldr	r1, [sp, #24]
 8006288:	9b06      	ldr	r3, [sp, #24]
 800628a:	3101      	adds	r1, #1
 800628c:	1809      	adds	r1, r1, r0
 800628e:	181b      	adds	r3, r3, r0
 8006290:	9106      	str	r1, [sp, #24]
 8006292:	2b08      	cmp	r3, #8
 8006294:	dc1b      	bgt.n	80062ce <_strtod_l+0x282>
 8006296:	230a      	movs	r3, #10
 8006298:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800629a:	434b      	muls	r3, r1
 800629c:	2100      	movs	r1, #0
 800629e:	18d3      	adds	r3, r2, r3
 80062a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80062a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80062a4:	0008      	movs	r0, r1
 80062a6:	1c5a      	adds	r2, r3, #1
 80062a8:	921f      	str	r2, [sp, #124]	; 0x7c
 80062aa:	785b      	ldrb	r3, [r3, #1]
 80062ac:	e7c7      	b.n	800623e <_strtod_l+0x1f2>
 80062ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80062b0:	e7d1      	b.n	8006256 <_strtod_l+0x20a>
 80062b2:	2b08      	cmp	r3, #8
 80062b4:	dc04      	bgt.n	80062c0 <_strtod_l+0x274>
 80062b6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80062b8:	434d      	muls	r5, r1
 80062ba:	950b      	str	r5, [sp, #44]	; 0x2c
 80062bc:	3301      	adds	r3, #1
 80062be:	e7e0      	b.n	8006282 <_strtod_l+0x236>
 80062c0:	1c5d      	adds	r5, r3, #1
 80062c2:	2d10      	cmp	r5, #16
 80062c4:	dcfa      	bgt.n	80062bc <_strtod_l+0x270>
 80062c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80062c8:	434d      	muls	r5, r1
 80062ca:	950f      	str	r5, [sp, #60]	; 0x3c
 80062cc:	e7f6      	b.n	80062bc <_strtod_l+0x270>
 80062ce:	9b06      	ldr	r3, [sp, #24]
 80062d0:	2100      	movs	r1, #0
 80062d2:	2b10      	cmp	r3, #16
 80062d4:	dce5      	bgt.n	80062a2 <_strtod_l+0x256>
 80062d6:	230a      	movs	r3, #10
 80062d8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80062da:	4343      	muls	r3, r0
 80062dc:	18d3      	adds	r3, r2, r3
 80062de:	930f      	str	r3, [sp, #60]	; 0x3c
 80062e0:	e7df      	b.n	80062a2 <_strtod_l+0x256>
 80062e2:	2200      	movs	r2, #0
 80062e4:	920c      	str	r2, [sp, #48]	; 0x30
 80062e6:	9206      	str	r2, [sp, #24]
 80062e8:	3201      	adds	r2, #1
 80062ea:	e7ad      	b.n	8006248 <_strtod_l+0x1fc>
 80062ec:	2400      	movs	r4, #0
 80062ee:	9b08      	ldr	r3, [sp, #32]
 80062f0:	3302      	adds	r3, #2
 80062f2:	931f      	str	r3, [sp, #124]	; 0x7c
 80062f4:	9b08      	ldr	r3, [sp, #32]
 80062f6:	789b      	ldrb	r3, [r3, #2]
 80062f8:	001a      	movs	r2, r3
 80062fa:	3a30      	subs	r2, #48	; 0x30
 80062fc:	2a09      	cmp	r2, #9
 80062fe:	d913      	bls.n	8006328 <_strtod_l+0x2dc>
 8006300:	9a08      	ldr	r2, [sp, #32]
 8006302:	921f      	str	r2, [sp, #124]	; 0x7c
 8006304:	2200      	movs	r2, #0
 8006306:	e031      	b.n	800636c <_strtod_l+0x320>
 8006308:	0800a990 	.word	0x0800a990
 800630c:	0800a6b0 	.word	0x0800a6b0
 8006310:	ffefffff 	.word	0xffefffff
 8006314:	00000433 	.word	0x00000433
 8006318:	7ff00000 	.word	0x7ff00000
 800631c:	7fffffff 	.word	0x7fffffff
 8006320:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8006322:	1c5a      	adds	r2, r3, #1
 8006324:	921f      	str	r2, [sp, #124]	; 0x7c
 8006326:	785b      	ldrb	r3, [r3, #1]
 8006328:	2b30      	cmp	r3, #48	; 0x30
 800632a:	d0f9      	beq.n	8006320 <_strtod_l+0x2d4>
 800632c:	2200      	movs	r2, #0
 800632e:	9207      	str	r2, [sp, #28]
 8006330:	001a      	movs	r2, r3
 8006332:	3a31      	subs	r2, #49	; 0x31
 8006334:	2a08      	cmp	r2, #8
 8006336:	d81a      	bhi.n	800636e <_strtod_l+0x322>
 8006338:	3b30      	subs	r3, #48	; 0x30
 800633a:	001a      	movs	r2, r3
 800633c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800633e:	9307      	str	r3, [sp, #28]
 8006340:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8006342:	1c59      	adds	r1, r3, #1
 8006344:	911f      	str	r1, [sp, #124]	; 0x7c
 8006346:	785b      	ldrb	r3, [r3, #1]
 8006348:	001d      	movs	r5, r3
 800634a:	3d30      	subs	r5, #48	; 0x30
 800634c:	2d09      	cmp	r5, #9
 800634e:	d939      	bls.n	80063c4 <_strtod_l+0x378>
 8006350:	9d07      	ldr	r5, [sp, #28]
 8006352:	1b49      	subs	r1, r1, r5
 8006354:	4db0      	ldr	r5, [pc, #704]	; (8006618 <_strtod_l+0x5cc>)
 8006356:	9507      	str	r5, [sp, #28]
 8006358:	2908      	cmp	r1, #8
 800635a:	dc03      	bgt.n	8006364 <_strtod_l+0x318>
 800635c:	9207      	str	r2, [sp, #28]
 800635e:	42aa      	cmp	r2, r5
 8006360:	dd00      	ble.n	8006364 <_strtod_l+0x318>
 8006362:	9507      	str	r5, [sp, #28]
 8006364:	2c00      	cmp	r4, #0
 8006366:	d002      	beq.n	800636e <_strtod_l+0x322>
 8006368:	9a07      	ldr	r2, [sp, #28]
 800636a:	4252      	negs	r2, r2
 800636c:	9207      	str	r2, [sp, #28]
 800636e:	9a06      	ldr	r2, [sp, #24]
 8006370:	2a00      	cmp	r2, #0
 8006372:	d14b      	bne.n	800640c <_strtod_l+0x3c0>
 8006374:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006376:	4310      	orrs	r0, r2
 8006378:	d000      	beq.n	800637c <_strtod_l+0x330>
 800637a:	e6ae      	b.n	80060da <_strtod_l+0x8e>
 800637c:	4662      	mov	r2, ip
 800637e:	2a00      	cmp	r2, #0
 8006380:	d000      	beq.n	8006384 <_strtod_l+0x338>
 8006382:	e6c9      	b.n	8006118 <_strtod_l+0xcc>
 8006384:	2b69      	cmp	r3, #105	; 0x69
 8006386:	d025      	beq.n	80063d4 <_strtod_l+0x388>
 8006388:	dc21      	bgt.n	80063ce <_strtod_l+0x382>
 800638a:	2b49      	cmp	r3, #73	; 0x49
 800638c:	d022      	beq.n	80063d4 <_strtod_l+0x388>
 800638e:	2b4e      	cmp	r3, #78	; 0x4e
 8006390:	d000      	beq.n	8006394 <_strtod_l+0x348>
 8006392:	e6c1      	b.n	8006118 <_strtod_l+0xcc>
 8006394:	49a1      	ldr	r1, [pc, #644]	; (800661c <_strtod_l+0x5d0>)
 8006396:	a81f      	add	r0, sp, #124	; 0x7c
 8006398:	f001 ff2e 	bl	80081f8 <__match>
 800639c:	2800      	cmp	r0, #0
 800639e:	d100      	bne.n	80063a2 <_strtod_l+0x356>
 80063a0:	e6ba      	b.n	8006118 <_strtod_l+0xcc>
 80063a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80063a4:	781b      	ldrb	r3, [r3, #0]
 80063a6:	2b28      	cmp	r3, #40	; 0x28
 80063a8:	d12a      	bne.n	8006400 <_strtod_l+0x3b4>
 80063aa:	499d      	ldr	r1, [pc, #628]	; (8006620 <_strtod_l+0x5d4>)
 80063ac:	aa22      	add	r2, sp, #136	; 0x88
 80063ae:	a81f      	add	r0, sp, #124	; 0x7c
 80063b0:	f001 ff36 	bl	8008220 <__hexnan>
 80063b4:	2805      	cmp	r0, #5
 80063b6:	d123      	bne.n	8006400 <_strtod_l+0x3b4>
 80063b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80063ba:	4a9a      	ldr	r2, [pc, #616]	; (8006624 <_strtod_l+0x5d8>)
 80063bc:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80063be:	431a      	orrs	r2, r3
 80063c0:	0017      	movs	r7, r2
 80063c2:	e68a      	b.n	80060da <_strtod_l+0x8e>
 80063c4:	210a      	movs	r1, #10
 80063c6:	434a      	muls	r2, r1
 80063c8:	18d2      	adds	r2, r2, r3
 80063ca:	3a30      	subs	r2, #48	; 0x30
 80063cc:	e7b8      	b.n	8006340 <_strtod_l+0x2f4>
 80063ce:	2b6e      	cmp	r3, #110	; 0x6e
 80063d0:	d0e0      	beq.n	8006394 <_strtod_l+0x348>
 80063d2:	e6a1      	b.n	8006118 <_strtod_l+0xcc>
 80063d4:	4994      	ldr	r1, [pc, #592]	; (8006628 <_strtod_l+0x5dc>)
 80063d6:	a81f      	add	r0, sp, #124	; 0x7c
 80063d8:	f001 ff0e 	bl	80081f8 <__match>
 80063dc:	2800      	cmp	r0, #0
 80063de:	d100      	bne.n	80063e2 <_strtod_l+0x396>
 80063e0:	e69a      	b.n	8006118 <_strtod_l+0xcc>
 80063e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80063e4:	4991      	ldr	r1, [pc, #580]	; (800662c <_strtod_l+0x5e0>)
 80063e6:	3b01      	subs	r3, #1
 80063e8:	a81f      	add	r0, sp, #124	; 0x7c
 80063ea:	931f      	str	r3, [sp, #124]	; 0x7c
 80063ec:	f001 ff04 	bl	80081f8 <__match>
 80063f0:	2800      	cmp	r0, #0
 80063f2:	d102      	bne.n	80063fa <_strtod_l+0x3ae>
 80063f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80063f6:	3301      	adds	r3, #1
 80063f8:	931f      	str	r3, [sp, #124]	; 0x7c
 80063fa:	2600      	movs	r6, #0
 80063fc:	4f89      	ldr	r7, [pc, #548]	; (8006624 <_strtod_l+0x5d8>)
 80063fe:	e66c      	b.n	80060da <_strtod_l+0x8e>
 8006400:	488b      	ldr	r0, [pc, #556]	; (8006630 <_strtod_l+0x5e4>)
 8006402:	f003 fb0d 	bl	8009a20 <nan>
 8006406:	0006      	movs	r6, r0
 8006408:	000f      	movs	r7, r1
 800640a:	e666      	b.n	80060da <_strtod_l+0x8e>
 800640c:	9b07      	ldr	r3, [sp, #28]
 800640e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006410:	1a9b      	subs	r3, r3, r2
 8006412:	930a      	str	r3, [sp, #40]	; 0x28
 8006414:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006416:	2b00      	cmp	r3, #0
 8006418:	d101      	bne.n	800641e <_strtod_l+0x3d2>
 800641a:	9b06      	ldr	r3, [sp, #24]
 800641c:	9309      	str	r3, [sp, #36]	; 0x24
 800641e:	9c06      	ldr	r4, [sp, #24]
 8006420:	2c10      	cmp	r4, #16
 8006422:	dd00      	ble.n	8006426 <_strtod_l+0x3da>
 8006424:	2410      	movs	r4, #16
 8006426:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006428:	f7fc fc6c 	bl	8002d04 <__aeabi_ui2d>
 800642c:	9b06      	ldr	r3, [sp, #24]
 800642e:	0006      	movs	r6, r0
 8006430:	000f      	movs	r7, r1
 8006432:	2b09      	cmp	r3, #9
 8006434:	dd15      	ble.n	8006462 <_strtod_l+0x416>
 8006436:	0022      	movs	r2, r4
 8006438:	4b7e      	ldr	r3, [pc, #504]	; (8006634 <_strtod_l+0x5e8>)
 800643a:	3a09      	subs	r2, #9
 800643c:	00d2      	lsls	r2, r2, #3
 800643e:	189b      	adds	r3, r3, r2
 8006440:	681a      	ldr	r2, [r3, #0]
 8006442:	685b      	ldr	r3, [r3, #4]
 8006444:	f7fb fddc 	bl	8002000 <__aeabi_dmul>
 8006448:	0006      	movs	r6, r0
 800644a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800644c:	000f      	movs	r7, r1
 800644e:	f7fc fc59 	bl	8002d04 <__aeabi_ui2d>
 8006452:	0002      	movs	r2, r0
 8006454:	000b      	movs	r3, r1
 8006456:	0030      	movs	r0, r6
 8006458:	0039      	movs	r1, r7
 800645a:	f7fa fe93 	bl	8001184 <__aeabi_dadd>
 800645e:	0006      	movs	r6, r0
 8006460:	000f      	movs	r7, r1
 8006462:	9b06      	ldr	r3, [sp, #24]
 8006464:	2b0f      	cmp	r3, #15
 8006466:	dc39      	bgt.n	80064dc <_strtod_l+0x490>
 8006468:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800646a:	2b00      	cmp	r3, #0
 800646c:	d100      	bne.n	8006470 <_strtod_l+0x424>
 800646e:	e634      	b.n	80060da <_strtod_l+0x8e>
 8006470:	dd24      	ble.n	80064bc <_strtod_l+0x470>
 8006472:	2b16      	cmp	r3, #22
 8006474:	dc09      	bgt.n	800648a <_strtod_l+0x43e>
 8006476:	496f      	ldr	r1, [pc, #444]	; (8006634 <_strtod_l+0x5e8>)
 8006478:	00db      	lsls	r3, r3, #3
 800647a:	18c9      	adds	r1, r1, r3
 800647c:	0032      	movs	r2, r6
 800647e:	6808      	ldr	r0, [r1, #0]
 8006480:	6849      	ldr	r1, [r1, #4]
 8006482:	003b      	movs	r3, r7
 8006484:	f7fb fdbc 	bl	8002000 <__aeabi_dmul>
 8006488:	e7bd      	b.n	8006406 <_strtod_l+0x3ba>
 800648a:	2325      	movs	r3, #37	; 0x25
 800648c:	9a06      	ldr	r2, [sp, #24]
 800648e:	1a9b      	subs	r3, r3, r2
 8006490:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006492:	4293      	cmp	r3, r2
 8006494:	db22      	blt.n	80064dc <_strtod_l+0x490>
 8006496:	240f      	movs	r4, #15
 8006498:	9b06      	ldr	r3, [sp, #24]
 800649a:	4d66      	ldr	r5, [pc, #408]	; (8006634 <_strtod_l+0x5e8>)
 800649c:	1ae4      	subs	r4, r4, r3
 800649e:	00e1      	lsls	r1, r4, #3
 80064a0:	1869      	adds	r1, r5, r1
 80064a2:	0032      	movs	r2, r6
 80064a4:	6808      	ldr	r0, [r1, #0]
 80064a6:	6849      	ldr	r1, [r1, #4]
 80064a8:	003b      	movs	r3, r7
 80064aa:	f7fb fda9 	bl	8002000 <__aeabi_dmul>
 80064ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80064b0:	1b1c      	subs	r4, r3, r4
 80064b2:	00e4      	lsls	r4, r4, #3
 80064b4:	192c      	adds	r4, r5, r4
 80064b6:	6822      	ldr	r2, [r4, #0]
 80064b8:	6863      	ldr	r3, [r4, #4]
 80064ba:	e7e3      	b.n	8006484 <_strtod_l+0x438>
 80064bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80064be:	3316      	adds	r3, #22
 80064c0:	db0c      	blt.n	80064dc <_strtod_l+0x490>
 80064c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80064c4:	9a07      	ldr	r2, [sp, #28]
 80064c6:	0030      	movs	r0, r6
 80064c8:	1a9a      	subs	r2, r3, r2
 80064ca:	4b5a      	ldr	r3, [pc, #360]	; (8006634 <_strtod_l+0x5e8>)
 80064cc:	00d2      	lsls	r2, r2, #3
 80064ce:	189b      	adds	r3, r3, r2
 80064d0:	0039      	movs	r1, r7
 80064d2:	681a      	ldr	r2, [r3, #0]
 80064d4:	685b      	ldr	r3, [r3, #4]
 80064d6:	f7fb f991 	bl	80017fc <__aeabi_ddiv>
 80064da:	e794      	b.n	8006406 <_strtod_l+0x3ba>
 80064dc:	9b06      	ldr	r3, [sp, #24]
 80064de:	1b1c      	subs	r4, r3, r4
 80064e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80064e2:	18e4      	adds	r4, r4, r3
 80064e4:	2c00      	cmp	r4, #0
 80064e6:	dd72      	ble.n	80065ce <_strtod_l+0x582>
 80064e8:	230f      	movs	r3, #15
 80064ea:	0021      	movs	r1, r4
 80064ec:	4019      	ands	r1, r3
 80064ee:	421c      	tst	r4, r3
 80064f0:	d00a      	beq.n	8006508 <_strtod_l+0x4bc>
 80064f2:	00cb      	lsls	r3, r1, #3
 80064f4:	494f      	ldr	r1, [pc, #316]	; (8006634 <_strtod_l+0x5e8>)
 80064f6:	0032      	movs	r2, r6
 80064f8:	18c9      	adds	r1, r1, r3
 80064fa:	6808      	ldr	r0, [r1, #0]
 80064fc:	6849      	ldr	r1, [r1, #4]
 80064fe:	003b      	movs	r3, r7
 8006500:	f7fb fd7e 	bl	8002000 <__aeabi_dmul>
 8006504:	0006      	movs	r6, r0
 8006506:	000f      	movs	r7, r1
 8006508:	230f      	movs	r3, #15
 800650a:	439c      	bics	r4, r3
 800650c:	d04a      	beq.n	80065a4 <_strtod_l+0x558>
 800650e:	3326      	adds	r3, #38	; 0x26
 8006510:	33ff      	adds	r3, #255	; 0xff
 8006512:	429c      	cmp	r4, r3
 8006514:	dd22      	ble.n	800655c <_strtod_l+0x510>
 8006516:	2300      	movs	r3, #0
 8006518:	9306      	str	r3, [sp, #24]
 800651a:	9307      	str	r3, [sp, #28]
 800651c:	930b      	str	r3, [sp, #44]	; 0x2c
 800651e:	9309      	str	r3, [sp, #36]	; 0x24
 8006520:	2322      	movs	r3, #34	; 0x22
 8006522:	2600      	movs	r6, #0
 8006524:	9a05      	ldr	r2, [sp, #20]
 8006526:	4f3f      	ldr	r7, [pc, #252]	; (8006624 <_strtod_l+0x5d8>)
 8006528:	6013      	str	r3, [r2, #0]
 800652a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800652c:	42b3      	cmp	r3, r6
 800652e:	d100      	bne.n	8006532 <_strtod_l+0x4e6>
 8006530:	e5d3      	b.n	80060da <_strtod_l+0x8e>
 8006532:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006534:	9805      	ldr	r0, [sp, #20]
 8006536:	f001 ffad 	bl	8008494 <_Bfree>
 800653a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800653c:	9805      	ldr	r0, [sp, #20]
 800653e:	f001 ffa9 	bl	8008494 <_Bfree>
 8006542:	9907      	ldr	r1, [sp, #28]
 8006544:	9805      	ldr	r0, [sp, #20]
 8006546:	f001 ffa5 	bl	8008494 <_Bfree>
 800654a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800654c:	9805      	ldr	r0, [sp, #20]
 800654e:	f001 ffa1 	bl	8008494 <_Bfree>
 8006552:	9906      	ldr	r1, [sp, #24]
 8006554:	9805      	ldr	r0, [sp, #20]
 8006556:	f001 ff9d 	bl	8008494 <_Bfree>
 800655a:	e5be      	b.n	80060da <_strtod_l+0x8e>
 800655c:	2300      	movs	r3, #0
 800655e:	0030      	movs	r0, r6
 8006560:	0039      	movs	r1, r7
 8006562:	4d35      	ldr	r5, [pc, #212]	; (8006638 <_strtod_l+0x5ec>)
 8006564:	1124      	asrs	r4, r4, #4
 8006566:	9308      	str	r3, [sp, #32]
 8006568:	2c01      	cmp	r4, #1
 800656a:	dc1e      	bgt.n	80065aa <_strtod_l+0x55e>
 800656c:	2b00      	cmp	r3, #0
 800656e:	d001      	beq.n	8006574 <_strtod_l+0x528>
 8006570:	0006      	movs	r6, r0
 8006572:	000f      	movs	r7, r1
 8006574:	4b31      	ldr	r3, [pc, #196]	; (800663c <_strtod_l+0x5f0>)
 8006576:	0032      	movs	r2, r6
 8006578:	18ff      	adds	r7, r7, r3
 800657a:	9b08      	ldr	r3, [sp, #32]
 800657c:	00dd      	lsls	r5, r3, #3
 800657e:	4b2e      	ldr	r3, [pc, #184]	; (8006638 <_strtod_l+0x5ec>)
 8006580:	195d      	adds	r5, r3, r5
 8006582:	6828      	ldr	r0, [r5, #0]
 8006584:	6869      	ldr	r1, [r5, #4]
 8006586:	003b      	movs	r3, r7
 8006588:	f7fb fd3a 	bl	8002000 <__aeabi_dmul>
 800658c:	4b25      	ldr	r3, [pc, #148]	; (8006624 <_strtod_l+0x5d8>)
 800658e:	4a2c      	ldr	r2, [pc, #176]	; (8006640 <_strtod_l+0x5f4>)
 8006590:	0006      	movs	r6, r0
 8006592:	400b      	ands	r3, r1
 8006594:	4293      	cmp	r3, r2
 8006596:	d8be      	bhi.n	8006516 <_strtod_l+0x4ca>
 8006598:	4a2a      	ldr	r2, [pc, #168]	; (8006644 <_strtod_l+0x5f8>)
 800659a:	4293      	cmp	r3, r2
 800659c:	d913      	bls.n	80065c6 <_strtod_l+0x57a>
 800659e:	2601      	movs	r6, #1
 80065a0:	4f29      	ldr	r7, [pc, #164]	; (8006648 <_strtod_l+0x5fc>)
 80065a2:	4276      	negs	r6, r6
 80065a4:	2300      	movs	r3, #0
 80065a6:	9308      	str	r3, [sp, #32]
 80065a8:	e087      	b.n	80066ba <_strtod_l+0x66e>
 80065aa:	2201      	movs	r2, #1
 80065ac:	4214      	tst	r4, r2
 80065ae:	d004      	beq.n	80065ba <_strtod_l+0x56e>
 80065b0:	682a      	ldr	r2, [r5, #0]
 80065b2:	686b      	ldr	r3, [r5, #4]
 80065b4:	f7fb fd24 	bl	8002000 <__aeabi_dmul>
 80065b8:	2301      	movs	r3, #1
 80065ba:	9a08      	ldr	r2, [sp, #32]
 80065bc:	1064      	asrs	r4, r4, #1
 80065be:	3201      	adds	r2, #1
 80065c0:	9208      	str	r2, [sp, #32]
 80065c2:	3508      	adds	r5, #8
 80065c4:	e7d0      	b.n	8006568 <_strtod_l+0x51c>
 80065c6:	23d4      	movs	r3, #212	; 0xd4
 80065c8:	049b      	lsls	r3, r3, #18
 80065ca:	18cf      	adds	r7, r1, r3
 80065cc:	e7ea      	b.n	80065a4 <_strtod_l+0x558>
 80065ce:	2c00      	cmp	r4, #0
 80065d0:	d0e8      	beq.n	80065a4 <_strtod_l+0x558>
 80065d2:	4264      	negs	r4, r4
 80065d4:	220f      	movs	r2, #15
 80065d6:	0023      	movs	r3, r4
 80065d8:	4013      	ands	r3, r2
 80065da:	4214      	tst	r4, r2
 80065dc:	d00a      	beq.n	80065f4 <_strtod_l+0x5a8>
 80065de:	00da      	lsls	r2, r3, #3
 80065e0:	4b14      	ldr	r3, [pc, #80]	; (8006634 <_strtod_l+0x5e8>)
 80065e2:	0030      	movs	r0, r6
 80065e4:	189b      	adds	r3, r3, r2
 80065e6:	0039      	movs	r1, r7
 80065e8:	681a      	ldr	r2, [r3, #0]
 80065ea:	685b      	ldr	r3, [r3, #4]
 80065ec:	f7fb f906 	bl	80017fc <__aeabi_ddiv>
 80065f0:	0006      	movs	r6, r0
 80065f2:	000f      	movs	r7, r1
 80065f4:	1124      	asrs	r4, r4, #4
 80065f6:	d0d5      	beq.n	80065a4 <_strtod_l+0x558>
 80065f8:	2c1f      	cmp	r4, #31
 80065fa:	dd27      	ble.n	800664c <_strtod_l+0x600>
 80065fc:	2300      	movs	r3, #0
 80065fe:	9306      	str	r3, [sp, #24]
 8006600:	9307      	str	r3, [sp, #28]
 8006602:	930b      	str	r3, [sp, #44]	; 0x2c
 8006604:	9309      	str	r3, [sp, #36]	; 0x24
 8006606:	2322      	movs	r3, #34	; 0x22
 8006608:	9a05      	ldr	r2, [sp, #20]
 800660a:	2600      	movs	r6, #0
 800660c:	6013      	str	r3, [r2, #0]
 800660e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006610:	2700      	movs	r7, #0
 8006612:	2b00      	cmp	r3, #0
 8006614:	d18d      	bne.n	8006532 <_strtod_l+0x4e6>
 8006616:	e560      	b.n	80060da <_strtod_l+0x8e>
 8006618:	00004e1f 	.word	0x00004e1f
 800661c:	0800a689 	.word	0x0800a689
 8006620:	0800a6c4 	.word	0x0800a6c4
 8006624:	7ff00000 	.word	0x7ff00000
 8006628:	0800a681 	.word	0x0800a681
 800662c:	0800a8b4 	.word	0x0800a8b4
 8006630:	0800a5c5 	.word	0x0800a5c5
 8006634:	0800aa28 	.word	0x0800aa28
 8006638:	0800aa00 	.word	0x0800aa00
 800663c:	fcb00000 	.word	0xfcb00000
 8006640:	7ca00000 	.word	0x7ca00000
 8006644:	7c900000 	.word	0x7c900000
 8006648:	7fefffff 	.word	0x7fefffff
 800664c:	2310      	movs	r3, #16
 800664e:	0022      	movs	r2, r4
 8006650:	401a      	ands	r2, r3
 8006652:	9208      	str	r2, [sp, #32]
 8006654:	421c      	tst	r4, r3
 8006656:	d001      	beq.n	800665c <_strtod_l+0x610>
 8006658:	335a      	adds	r3, #90	; 0x5a
 800665a:	9308      	str	r3, [sp, #32]
 800665c:	0030      	movs	r0, r6
 800665e:	0039      	movs	r1, r7
 8006660:	2300      	movs	r3, #0
 8006662:	4dc5      	ldr	r5, [pc, #788]	; (8006978 <_strtod_l+0x92c>)
 8006664:	2201      	movs	r2, #1
 8006666:	4214      	tst	r4, r2
 8006668:	d004      	beq.n	8006674 <_strtod_l+0x628>
 800666a:	682a      	ldr	r2, [r5, #0]
 800666c:	686b      	ldr	r3, [r5, #4]
 800666e:	f7fb fcc7 	bl	8002000 <__aeabi_dmul>
 8006672:	2301      	movs	r3, #1
 8006674:	1064      	asrs	r4, r4, #1
 8006676:	3508      	adds	r5, #8
 8006678:	2c00      	cmp	r4, #0
 800667a:	d1f3      	bne.n	8006664 <_strtod_l+0x618>
 800667c:	2b00      	cmp	r3, #0
 800667e:	d001      	beq.n	8006684 <_strtod_l+0x638>
 8006680:	0006      	movs	r6, r0
 8006682:	000f      	movs	r7, r1
 8006684:	9b08      	ldr	r3, [sp, #32]
 8006686:	2b00      	cmp	r3, #0
 8006688:	d00f      	beq.n	80066aa <_strtod_l+0x65e>
 800668a:	236b      	movs	r3, #107	; 0x6b
 800668c:	007a      	lsls	r2, r7, #1
 800668e:	0d52      	lsrs	r2, r2, #21
 8006690:	0039      	movs	r1, r7
 8006692:	1a9b      	subs	r3, r3, r2
 8006694:	2b00      	cmp	r3, #0
 8006696:	dd08      	ble.n	80066aa <_strtod_l+0x65e>
 8006698:	2b1f      	cmp	r3, #31
 800669a:	dc00      	bgt.n	800669e <_strtod_l+0x652>
 800669c:	e124      	b.n	80068e8 <_strtod_l+0x89c>
 800669e:	2600      	movs	r6, #0
 80066a0:	2b34      	cmp	r3, #52	; 0x34
 80066a2:	dc00      	bgt.n	80066a6 <_strtod_l+0x65a>
 80066a4:	e119      	b.n	80068da <_strtod_l+0x88e>
 80066a6:	27dc      	movs	r7, #220	; 0xdc
 80066a8:	04bf      	lsls	r7, r7, #18
 80066aa:	2200      	movs	r2, #0
 80066ac:	2300      	movs	r3, #0
 80066ae:	0030      	movs	r0, r6
 80066b0:	0039      	movs	r1, r7
 80066b2:	f7f9 fed1 	bl	8000458 <__aeabi_dcmpeq>
 80066b6:	2800      	cmp	r0, #0
 80066b8:	d1a0      	bne.n	80065fc <_strtod_l+0x5b0>
 80066ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80066bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80066be:	9300      	str	r3, [sp, #0]
 80066c0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80066c2:	9b06      	ldr	r3, [sp, #24]
 80066c4:	9805      	ldr	r0, [sp, #20]
 80066c6:	f001 ff4d 	bl	8008564 <__s2b>
 80066ca:	900b      	str	r0, [sp, #44]	; 0x2c
 80066cc:	2800      	cmp	r0, #0
 80066ce:	d100      	bne.n	80066d2 <_strtod_l+0x686>
 80066d0:	e721      	b.n	8006516 <_strtod_l+0x4ca>
 80066d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80066d4:	9907      	ldr	r1, [sp, #28]
 80066d6:	17da      	asrs	r2, r3, #31
 80066d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80066da:	1a5b      	subs	r3, r3, r1
 80066dc:	401a      	ands	r2, r3
 80066de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80066e0:	9215      	str	r2, [sp, #84]	; 0x54
 80066e2:	43db      	mvns	r3, r3
 80066e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80066e6:	17db      	asrs	r3, r3, #31
 80066e8:	401a      	ands	r2, r3
 80066ea:	2300      	movs	r3, #0
 80066ec:	921a      	str	r2, [sp, #104]	; 0x68
 80066ee:	9306      	str	r3, [sp, #24]
 80066f0:	9307      	str	r3, [sp, #28]
 80066f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80066f4:	9805      	ldr	r0, [sp, #20]
 80066f6:	6859      	ldr	r1, [r3, #4]
 80066f8:	f001 fe88 	bl	800840c <_Balloc>
 80066fc:	9009      	str	r0, [sp, #36]	; 0x24
 80066fe:	2800      	cmp	r0, #0
 8006700:	d100      	bne.n	8006704 <_strtod_l+0x6b8>
 8006702:	e70d      	b.n	8006520 <_strtod_l+0x4d4>
 8006704:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006706:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006708:	691b      	ldr	r3, [r3, #16]
 800670a:	310c      	adds	r1, #12
 800670c:	1c9a      	adds	r2, r3, #2
 800670e:	0092      	lsls	r2, r2, #2
 8006710:	300c      	adds	r0, #12
 8006712:	930c      	str	r3, [sp, #48]	; 0x30
 8006714:	f001 fe61 	bl	80083da <memcpy>
 8006718:	ab22      	add	r3, sp, #136	; 0x88
 800671a:	9301      	str	r3, [sp, #4]
 800671c:	ab21      	add	r3, sp, #132	; 0x84
 800671e:	9300      	str	r3, [sp, #0]
 8006720:	0032      	movs	r2, r6
 8006722:	003b      	movs	r3, r7
 8006724:	9805      	ldr	r0, [sp, #20]
 8006726:	9612      	str	r6, [sp, #72]	; 0x48
 8006728:	9713      	str	r7, [sp, #76]	; 0x4c
 800672a:	f002 fa67 	bl	8008bfc <__d2b>
 800672e:	9020      	str	r0, [sp, #128]	; 0x80
 8006730:	2800      	cmp	r0, #0
 8006732:	d100      	bne.n	8006736 <_strtod_l+0x6ea>
 8006734:	e6f4      	b.n	8006520 <_strtod_l+0x4d4>
 8006736:	2101      	movs	r1, #1
 8006738:	9805      	ldr	r0, [sp, #20]
 800673a:	f001 ffa7 	bl	800868c <__i2b>
 800673e:	9007      	str	r0, [sp, #28]
 8006740:	2800      	cmp	r0, #0
 8006742:	d100      	bne.n	8006746 <_strtod_l+0x6fa>
 8006744:	e6ec      	b.n	8006520 <_strtod_l+0x4d4>
 8006746:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006748:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800674a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800674c:	1ad4      	subs	r4, r2, r3
 800674e:	2b00      	cmp	r3, #0
 8006750:	db01      	blt.n	8006756 <_strtod_l+0x70a>
 8006752:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8006754:	195d      	adds	r5, r3, r5
 8006756:	9908      	ldr	r1, [sp, #32]
 8006758:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800675a:	1a5b      	subs	r3, r3, r1
 800675c:	2136      	movs	r1, #54	; 0x36
 800675e:	189b      	adds	r3, r3, r2
 8006760:	1a8a      	subs	r2, r1, r2
 8006762:	4986      	ldr	r1, [pc, #536]	; (800697c <_strtod_l+0x930>)
 8006764:	2001      	movs	r0, #1
 8006766:	468c      	mov	ip, r1
 8006768:	2100      	movs	r1, #0
 800676a:	3b01      	subs	r3, #1
 800676c:	9110      	str	r1, [sp, #64]	; 0x40
 800676e:	9014      	str	r0, [sp, #80]	; 0x50
 8006770:	4563      	cmp	r3, ip
 8006772:	da07      	bge.n	8006784 <_strtod_l+0x738>
 8006774:	4661      	mov	r1, ip
 8006776:	1ac9      	subs	r1, r1, r3
 8006778:	1a52      	subs	r2, r2, r1
 800677a:	291f      	cmp	r1, #31
 800677c:	dd00      	ble.n	8006780 <_strtod_l+0x734>
 800677e:	e0b8      	b.n	80068f2 <_strtod_l+0x8a6>
 8006780:	4088      	lsls	r0, r1
 8006782:	9014      	str	r0, [sp, #80]	; 0x50
 8006784:	18ab      	adds	r3, r5, r2
 8006786:	930c      	str	r3, [sp, #48]	; 0x30
 8006788:	18a4      	adds	r4, r4, r2
 800678a:	9b08      	ldr	r3, [sp, #32]
 800678c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800678e:	191c      	adds	r4, r3, r4
 8006790:	002b      	movs	r3, r5
 8006792:	4295      	cmp	r5, r2
 8006794:	dd00      	ble.n	8006798 <_strtod_l+0x74c>
 8006796:	0013      	movs	r3, r2
 8006798:	42a3      	cmp	r3, r4
 800679a:	dd00      	ble.n	800679e <_strtod_l+0x752>
 800679c:	0023      	movs	r3, r4
 800679e:	2b00      	cmp	r3, #0
 80067a0:	dd04      	ble.n	80067ac <_strtod_l+0x760>
 80067a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80067a4:	1ae4      	subs	r4, r4, r3
 80067a6:	1ad2      	subs	r2, r2, r3
 80067a8:	920c      	str	r2, [sp, #48]	; 0x30
 80067aa:	1aed      	subs	r5, r5, r3
 80067ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80067ae:	2b00      	cmp	r3, #0
 80067b0:	dd17      	ble.n	80067e2 <_strtod_l+0x796>
 80067b2:	001a      	movs	r2, r3
 80067b4:	9907      	ldr	r1, [sp, #28]
 80067b6:	9805      	ldr	r0, [sp, #20]
 80067b8:	f002 f82e 	bl	8008818 <__pow5mult>
 80067bc:	9007      	str	r0, [sp, #28]
 80067be:	2800      	cmp	r0, #0
 80067c0:	d100      	bne.n	80067c4 <_strtod_l+0x778>
 80067c2:	e6ad      	b.n	8006520 <_strtod_l+0x4d4>
 80067c4:	0001      	movs	r1, r0
 80067c6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80067c8:	9805      	ldr	r0, [sp, #20]
 80067ca:	f001 ff75 	bl	80086b8 <__multiply>
 80067ce:	900f      	str	r0, [sp, #60]	; 0x3c
 80067d0:	2800      	cmp	r0, #0
 80067d2:	d100      	bne.n	80067d6 <_strtod_l+0x78a>
 80067d4:	e6a4      	b.n	8006520 <_strtod_l+0x4d4>
 80067d6:	9920      	ldr	r1, [sp, #128]	; 0x80
 80067d8:	9805      	ldr	r0, [sp, #20]
 80067da:	f001 fe5b 	bl	8008494 <_Bfree>
 80067de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80067e0:	9320      	str	r3, [sp, #128]	; 0x80
 80067e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	dd00      	ble.n	80067ea <_strtod_l+0x79e>
 80067e8:	e089      	b.n	80068fe <_strtod_l+0x8b2>
 80067ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80067ec:	2b00      	cmp	r3, #0
 80067ee:	dd08      	ble.n	8006802 <_strtod_l+0x7b6>
 80067f0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80067f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80067f4:	9805      	ldr	r0, [sp, #20]
 80067f6:	f002 f80f 	bl	8008818 <__pow5mult>
 80067fa:	9009      	str	r0, [sp, #36]	; 0x24
 80067fc:	2800      	cmp	r0, #0
 80067fe:	d100      	bne.n	8006802 <_strtod_l+0x7b6>
 8006800:	e68e      	b.n	8006520 <_strtod_l+0x4d4>
 8006802:	2c00      	cmp	r4, #0
 8006804:	dd08      	ble.n	8006818 <_strtod_l+0x7cc>
 8006806:	0022      	movs	r2, r4
 8006808:	9909      	ldr	r1, [sp, #36]	; 0x24
 800680a:	9805      	ldr	r0, [sp, #20]
 800680c:	f002 f860 	bl	80088d0 <__lshift>
 8006810:	9009      	str	r0, [sp, #36]	; 0x24
 8006812:	2800      	cmp	r0, #0
 8006814:	d100      	bne.n	8006818 <_strtod_l+0x7cc>
 8006816:	e683      	b.n	8006520 <_strtod_l+0x4d4>
 8006818:	2d00      	cmp	r5, #0
 800681a:	dd08      	ble.n	800682e <_strtod_l+0x7e2>
 800681c:	002a      	movs	r2, r5
 800681e:	9907      	ldr	r1, [sp, #28]
 8006820:	9805      	ldr	r0, [sp, #20]
 8006822:	f002 f855 	bl	80088d0 <__lshift>
 8006826:	9007      	str	r0, [sp, #28]
 8006828:	2800      	cmp	r0, #0
 800682a:	d100      	bne.n	800682e <_strtod_l+0x7e2>
 800682c:	e678      	b.n	8006520 <_strtod_l+0x4d4>
 800682e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006830:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006832:	9805      	ldr	r0, [sp, #20]
 8006834:	f002 f8d6 	bl	80089e4 <__mdiff>
 8006838:	9006      	str	r0, [sp, #24]
 800683a:	2800      	cmp	r0, #0
 800683c:	d100      	bne.n	8006840 <_strtod_l+0x7f4>
 800683e:	e66f      	b.n	8006520 <_strtod_l+0x4d4>
 8006840:	2200      	movs	r2, #0
 8006842:	68c3      	ldr	r3, [r0, #12]
 8006844:	9907      	ldr	r1, [sp, #28]
 8006846:	60c2      	str	r2, [r0, #12]
 8006848:	930f      	str	r3, [sp, #60]	; 0x3c
 800684a:	f002 f8af 	bl	80089ac <__mcmp>
 800684e:	2800      	cmp	r0, #0
 8006850:	da5f      	bge.n	8006912 <_strtod_l+0x8c6>
 8006852:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006854:	4333      	orrs	r3, r6
 8006856:	d000      	beq.n	800685a <_strtod_l+0x80e>
 8006858:	e08a      	b.n	8006970 <_strtod_l+0x924>
 800685a:	033b      	lsls	r3, r7, #12
 800685c:	d000      	beq.n	8006860 <_strtod_l+0x814>
 800685e:	e087      	b.n	8006970 <_strtod_l+0x924>
 8006860:	22d6      	movs	r2, #214	; 0xd6
 8006862:	4b47      	ldr	r3, [pc, #284]	; (8006980 <_strtod_l+0x934>)
 8006864:	04d2      	lsls	r2, r2, #19
 8006866:	403b      	ands	r3, r7
 8006868:	4293      	cmp	r3, r2
 800686a:	d800      	bhi.n	800686e <_strtod_l+0x822>
 800686c:	e080      	b.n	8006970 <_strtod_l+0x924>
 800686e:	9b06      	ldr	r3, [sp, #24]
 8006870:	695b      	ldr	r3, [r3, #20]
 8006872:	930a      	str	r3, [sp, #40]	; 0x28
 8006874:	2b00      	cmp	r3, #0
 8006876:	d104      	bne.n	8006882 <_strtod_l+0x836>
 8006878:	9b06      	ldr	r3, [sp, #24]
 800687a:	691b      	ldr	r3, [r3, #16]
 800687c:	930a      	str	r3, [sp, #40]	; 0x28
 800687e:	2b01      	cmp	r3, #1
 8006880:	dd76      	ble.n	8006970 <_strtod_l+0x924>
 8006882:	9906      	ldr	r1, [sp, #24]
 8006884:	2201      	movs	r2, #1
 8006886:	9805      	ldr	r0, [sp, #20]
 8006888:	f002 f822 	bl	80088d0 <__lshift>
 800688c:	9907      	ldr	r1, [sp, #28]
 800688e:	9006      	str	r0, [sp, #24]
 8006890:	f002 f88c 	bl	80089ac <__mcmp>
 8006894:	2800      	cmp	r0, #0
 8006896:	dd6b      	ble.n	8006970 <_strtod_l+0x924>
 8006898:	9908      	ldr	r1, [sp, #32]
 800689a:	003b      	movs	r3, r7
 800689c:	4a38      	ldr	r2, [pc, #224]	; (8006980 <_strtod_l+0x934>)
 800689e:	2900      	cmp	r1, #0
 80068a0:	d100      	bne.n	80068a4 <_strtod_l+0x858>
 80068a2:	e092      	b.n	80069ca <_strtod_l+0x97e>
 80068a4:	0011      	movs	r1, r2
 80068a6:	20d6      	movs	r0, #214	; 0xd6
 80068a8:	4039      	ands	r1, r7
 80068aa:	04c0      	lsls	r0, r0, #19
 80068ac:	4281      	cmp	r1, r0
 80068ae:	dd00      	ble.n	80068b2 <_strtod_l+0x866>
 80068b0:	e08b      	b.n	80069ca <_strtod_l+0x97e>
 80068b2:	23dc      	movs	r3, #220	; 0xdc
 80068b4:	049b      	lsls	r3, r3, #18
 80068b6:	4299      	cmp	r1, r3
 80068b8:	dc00      	bgt.n	80068bc <_strtod_l+0x870>
 80068ba:	e6a4      	b.n	8006606 <_strtod_l+0x5ba>
 80068bc:	0030      	movs	r0, r6
 80068be:	0039      	movs	r1, r7
 80068c0:	2200      	movs	r2, #0
 80068c2:	4b30      	ldr	r3, [pc, #192]	; (8006984 <_strtod_l+0x938>)
 80068c4:	f7fb fb9c 	bl	8002000 <__aeabi_dmul>
 80068c8:	0006      	movs	r6, r0
 80068ca:	000f      	movs	r7, r1
 80068cc:	4308      	orrs	r0, r1
 80068ce:	d000      	beq.n	80068d2 <_strtod_l+0x886>
 80068d0:	e62f      	b.n	8006532 <_strtod_l+0x4e6>
 80068d2:	2322      	movs	r3, #34	; 0x22
 80068d4:	9a05      	ldr	r2, [sp, #20]
 80068d6:	6013      	str	r3, [r2, #0]
 80068d8:	e62b      	b.n	8006532 <_strtod_l+0x4e6>
 80068da:	234b      	movs	r3, #75	; 0x4b
 80068dc:	1a9a      	subs	r2, r3, r2
 80068de:	3b4c      	subs	r3, #76	; 0x4c
 80068e0:	4093      	lsls	r3, r2
 80068e2:	4019      	ands	r1, r3
 80068e4:	000f      	movs	r7, r1
 80068e6:	e6e0      	b.n	80066aa <_strtod_l+0x65e>
 80068e8:	2201      	movs	r2, #1
 80068ea:	4252      	negs	r2, r2
 80068ec:	409a      	lsls	r2, r3
 80068ee:	4016      	ands	r6, r2
 80068f0:	e6db      	b.n	80066aa <_strtod_l+0x65e>
 80068f2:	4925      	ldr	r1, [pc, #148]	; (8006988 <_strtod_l+0x93c>)
 80068f4:	1acb      	subs	r3, r1, r3
 80068f6:	0001      	movs	r1, r0
 80068f8:	4099      	lsls	r1, r3
 80068fa:	9110      	str	r1, [sp, #64]	; 0x40
 80068fc:	e741      	b.n	8006782 <_strtod_l+0x736>
 80068fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006900:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006902:	9805      	ldr	r0, [sp, #20]
 8006904:	f001 ffe4 	bl	80088d0 <__lshift>
 8006908:	9020      	str	r0, [sp, #128]	; 0x80
 800690a:	2800      	cmp	r0, #0
 800690c:	d000      	beq.n	8006910 <_strtod_l+0x8c4>
 800690e:	e76c      	b.n	80067ea <_strtod_l+0x79e>
 8006910:	e606      	b.n	8006520 <_strtod_l+0x4d4>
 8006912:	970c      	str	r7, [sp, #48]	; 0x30
 8006914:	2800      	cmp	r0, #0
 8006916:	d176      	bne.n	8006a06 <_strtod_l+0x9ba>
 8006918:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800691a:	033b      	lsls	r3, r7, #12
 800691c:	0b1b      	lsrs	r3, r3, #12
 800691e:	2a00      	cmp	r2, #0
 8006920:	d038      	beq.n	8006994 <_strtod_l+0x948>
 8006922:	4a1a      	ldr	r2, [pc, #104]	; (800698c <_strtod_l+0x940>)
 8006924:	4293      	cmp	r3, r2
 8006926:	d138      	bne.n	800699a <_strtod_l+0x94e>
 8006928:	2201      	movs	r2, #1
 800692a:	9b08      	ldr	r3, [sp, #32]
 800692c:	4252      	negs	r2, r2
 800692e:	0031      	movs	r1, r6
 8006930:	0010      	movs	r0, r2
 8006932:	2b00      	cmp	r3, #0
 8006934:	d00b      	beq.n	800694e <_strtod_l+0x902>
 8006936:	24d4      	movs	r4, #212	; 0xd4
 8006938:	4b11      	ldr	r3, [pc, #68]	; (8006980 <_strtod_l+0x934>)
 800693a:	0010      	movs	r0, r2
 800693c:	403b      	ands	r3, r7
 800693e:	04e4      	lsls	r4, r4, #19
 8006940:	42a3      	cmp	r3, r4
 8006942:	d804      	bhi.n	800694e <_strtod_l+0x902>
 8006944:	306c      	adds	r0, #108	; 0x6c
 8006946:	0d1b      	lsrs	r3, r3, #20
 8006948:	1ac3      	subs	r3, r0, r3
 800694a:	409a      	lsls	r2, r3
 800694c:	0010      	movs	r0, r2
 800694e:	4281      	cmp	r1, r0
 8006950:	d123      	bne.n	800699a <_strtod_l+0x94e>
 8006952:	4b0f      	ldr	r3, [pc, #60]	; (8006990 <_strtod_l+0x944>)
 8006954:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006956:	429a      	cmp	r2, r3
 8006958:	d102      	bne.n	8006960 <_strtod_l+0x914>
 800695a:	1c4b      	adds	r3, r1, #1
 800695c:	d100      	bne.n	8006960 <_strtod_l+0x914>
 800695e:	e5df      	b.n	8006520 <_strtod_l+0x4d4>
 8006960:	4b07      	ldr	r3, [pc, #28]	; (8006980 <_strtod_l+0x934>)
 8006962:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006964:	2600      	movs	r6, #0
 8006966:	401a      	ands	r2, r3
 8006968:	0013      	movs	r3, r2
 800696a:	2280      	movs	r2, #128	; 0x80
 800696c:	0352      	lsls	r2, r2, #13
 800696e:	189f      	adds	r7, r3, r2
 8006970:	9b08      	ldr	r3, [sp, #32]
 8006972:	2b00      	cmp	r3, #0
 8006974:	d1a2      	bne.n	80068bc <_strtod_l+0x870>
 8006976:	e5dc      	b.n	8006532 <_strtod_l+0x4e6>
 8006978:	0800a6d8 	.word	0x0800a6d8
 800697c:	fffffc02 	.word	0xfffffc02
 8006980:	7ff00000 	.word	0x7ff00000
 8006984:	39500000 	.word	0x39500000
 8006988:	fffffbe2 	.word	0xfffffbe2
 800698c:	000fffff 	.word	0x000fffff
 8006990:	7fefffff 	.word	0x7fefffff
 8006994:	4333      	orrs	r3, r6
 8006996:	d100      	bne.n	800699a <_strtod_l+0x94e>
 8006998:	e77e      	b.n	8006898 <_strtod_l+0x84c>
 800699a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800699c:	2b00      	cmp	r3, #0
 800699e:	d01d      	beq.n	80069dc <_strtod_l+0x990>
 80069a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80069a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80069a4:	4213      	tst	r3, r2
 80069a6:	d0e3      	beq.n	8006970 <_strtod_l+0x924>
 80069a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80069aa:	0030      	movs	r0, r6
 80069ac:	0039      	movs	r1, r7
 80069ae:	9a08      	ldr	r2, [sp, #32]
 80069b0:	2b00      	cmp	r3, #0
 80069b2:	d017      	beq.n	80069e4 <_strtod_l+0x998>
 80069b4:	f7ff fb32 	bl	800601c <sulp>
 80069b8:	0002      	movs	r2, r0
 80069ba:	000b      	movs	r3, r1
 80069bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80069be:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80069c0:	f7fa fbe0 	bl	8001184 <__aeabi_dadd>
 80069c4:	0006      	movs	r6, r0
 80069c6:	000f      	movs	r7, r1
 80069c8:	e7d2      	b.n	8006970 <_strtod_l+0x924>
 80069ca:	2601      	movs	r6, #1
 80069cc:	4013      	ands	r3, r2
 80069ce:	4a99      	ldr	r2, [pc, #612]	; (8006c34 <_strtod_l+0xbe8>)
 80069d0:	4276      	negs	r6, r6
 80069d2:	189b      	adds	r3, r3, r2
 80069d4:	4a98      	ldr	r2, [pc, #608]	; (8006c38 <_strtod_l+0xbec>)
 80069d6:	431a      	orrs	r2, r3
 80069d8:	0017      	movs	r7, r2
 80069da:	e7c9      	b.n	8006970 <_strtod_l+0x924>
 80069dc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80069de:	4233      	tst	r3, r6
 80069e0:	d0c6      	beq.n	8006970 <_strtod_l+0x924>
 80069e2:	e7e1      	b.n	80069a8 <_strtod_l+0x95c>
 80069e4:	f7ff fb1a 	bl	800601c <sulp>
 80069e8:	0002      	movs	r2, r0
 80069ea:	000b      	movs	r3, r1
 80069ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 80069ee:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80069f0:	f7fb fd72 	bl	80024d8 <__aeabi_dsub>
 80069f4:	2200      	movs	r2, #0
 80069f6:	2300      	movs	r3, #0
 80069f8:	0006      	movs	r6, r0
 80069fa:	000f      	movs	r7, r1
 80069fc:	f7f9 fd2c 	bl	8000458 <__aeabi_dcmpeq>
 8006a00:	2800      	cmp	r0, #0
 8006a02:	d0b5      	beq.n	8006970 <_strtod_l+0x924>
 8006a04:	e5ff      	b.n	8006606 <_strtod_l+0x5ba>
 8006a06:	9907      	ldr	r1, [sp, #28]
 8006a08:	9806      	ldr	r0, [sp, #24]
 8006a0a:	f002 f95b 	bl	8008cc4 <__ratio>
 8006a0e:	2380      	movs	r3, #128	; 0x80
 8006a10:	2200      	movs	r2, #0
 8006a12:	05db      	lsls	r3, r3, #23
 8006a14:	0004      	movs	r4, r0
 8006a16:	000d      	movs	r5, r1
 8006a18:	f7f9 fd2e 	bl	8000478 <__aeabi_dcmple>
 8006a1c:	2800      	cmp	r0, #0
 8006a1e:	d075      	beq.n	8006b0c <_strtod_l+0xac0>
 8006a20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006a22:	2b00      	cmp	r3, #0
 8006a24:	d047      	beq.n	8006ab6 <_strtod_l+0xa6a>
 8006a26:	2300      	movs	r3, #0
 8006a28:	4c84      	ldr	r4, [pc, #528]	; (8006c3c <_strtod_l+0xbf0>)
 8006a2a:	2500      	movs	r5, #0
 8006a2c:	9310      	str	r3, [sp, #64]	; 0x40
 8006a2e:	9411      	str	r4, [sp, #68]	; 0x44
 8006a30:	4c82      	ldr	r4, [pc, #520]	; (8006c3c <_strtod_l+0xbf0>)
 8006a32:	4a83      	ldr	r2, [pc, #524]	; (8006c40 <_strtod_l+0xbf4>)
 8006a34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006a36:	4013      	ands	r3, r2
 8006a38:	9314      	str	r3, [sp, #80]	; 0x50
 8006a3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006a3c:	4b81      	ldr	r3, [pc, #516]	; (8006c44 <_strtod_l+0xbf8>)
 8006a3e:	429a      	cmp	r2, r3
 8006a40:	d000      	beq.n	8006a44 <_strtod_l+0x9f8>
 8006a42:	e0ac      	b.n	8006b9e <_strtod_l+0xb52>
 8006a44:	4a80      	ldr	r2, [pc, #512]	; (8006c48 <_strtod_l+0xbfc>)
 8006a46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006a48:	4694      	mov	ip, r2
 8006a4a:	4463      	add	r3, ip
 8006a4c:	001f      	movs	r7, r3
 8006a4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006a50:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a52:	0030      	movs	r0, r6
 8006a54:	0039      	movs	r1, r7
 8006a56:	920c      	str	r2, [sp, #48]	; 0x30
 8006a58:	930d      	str	r3, [sp, #52]	; 0x34
 8006a5a:	f002 f85b 	bl	8008b14 <__ulp>
 8006a5e:	0002      	movs	r2, r0
 8006a60:	000b      	movs	r3, r1
 8006a62:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006a64:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006a66:	f7fb facb 	bl	8002000 <__aeabi_dmul>
 8006a6a:	0032      	movs	r2, r6
 8006a6c:	003b      	movs	r3, r7
 8006a6e:	f7fa fb89 	bl	8001184 <__aeabi_dadd>
 8006a72:	4a73      	ldr	r2, [pc, #460]	; (8006c40 <_strtod_l+0xbf4>)
 8006a74:	4b75      	ldr	r3, [pc, #468]	; (8006c4c <_strtod_l+0xc00>)
 8006a76:	0006      	movs	r6, r0
 8006a78:	400a      	ands	r2, r1
 8006a7a:	429a      	cmp	r2, r3
 8006a7c:	d95e      	bls.n	8006b3c <_strtod_l+0xaf0>
 8006a7e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006a80:	4b73      	ldr	r3, [pc, #460]	; (8006c50 <_strtod_l+0xc04>)
 8006a82:	429a      	cmp	r2, r3
 8006a84:	d103      	bne.n	8006a8e <_strtod_l+0xa42>
 8006a86:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006a88:	3301      	adds	r3, #1
 8006a8a:	d100      	bne.n	8006a8e <_strtod_l+0xa42>
 8006a8c:	e548      	b.n	8006520 <_strtod_l+0x4d4>
 8006a8e:	2601      	movs	r6, #1
 8006a90:	4f6f      	ldr	r7, [pc, #444]	; (8006c50 <_strtod_l+0xc04>)
 8006a92:	4276      	negs	r6, r6
 8006a94:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006a96:	9805      	ldr	r0, [sp, #20]
 8006a98:	f001 fcfc 	bl	8008494 <_Bfree>
 8006a9c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006a9e:	9805      	ldr	r0, [sp, #20]
 8006aa0:	f001 fcf8 	bl	8008494 <_Bfree>
 8006aa4:	9907      	ldr	r1, [sp, #28]
 8006aa6:	9805      	ldr	r0, [sp, #20]
 8006aa8:	f001 fcf4 	bl	8008494 <_Bfree>
 8006aac:	9906      	ldr	r1, [sp, #24]
 8006aae:	9805      	ldr	r0, [sp, #20]
 8006ab0:	f001 fcf0 	bl	8008494 <_Bfree>
 8006ab4:	e61d      	b.n	80066f2 <_strtod_l+0x6a6>
 8006ab6:	2e00      	cmp	r6, #0
 8006ab8:	d11c      	bne.n	8006af4 <_strtod_l+0xaa8>
 8006aba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006abc:	031b      	lsls	r3, r3, #12
 8006abe:	d11f      	bne.n	8006b00 <_strtod_l+0xab4>
 8006ac0:	2200      	movs	r2, #0
 8006ac2:	0020      	movs	r0, r4
 8006ac4:	0029      	movs	r1, r5
 8006ac6:	4b5d      	ldr	r3, [pc, #372]	; (8006c3c <_strtod_l+0xbf0>)
 8006ac8:	f7f9 fccc 	bl	8000464 <__aeabi_dcmplt>
 8006acc:	2800      	cmp	r0, #0
 8006ace:	d11a      	bne.n	8006b06 <_strtod_l+0xaba>
 8006ad0:	0020      	movs	r0, r4
 8006ad2:	0029      	movs	r1, r5
 8006ad4:	2200      	movs	r2, #0
 8006ad6:	4b5f      	ldr	r3, [pc, #380]	; (8006c54 <_strtod_l+0xc08>)
 8006ad8:	f7fb fa92 	bl	8002000 <__aeabi_dmul>
 8006adc:	0005      	movs	r5, r0
 8006ade:	000c      	movs	r4, r1
 8006ae0:	2380      	movs	r3, #128	; 0x80
 8006ae2:	061b      	lsls	r3, r3, #24
 8006ae4:	18e3      	adds	r3, r4, r3
 8006ae6:	951c      	str	r5, [sp, #112]	; 0x70
 8006ae8:	931d      	str	r3, [sp, #116]	; 0x74
 8006aea:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006aec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8006aee:	9210      	str	r2, [sp, #64]	; 0x40
 8006af0:	9311      	str	r3, [sp, #68]	; 0x44
 8006af2:	e79e      	b.n	8006a32 <_strtod_l+0x9e6>
 8006af4:	2e01      	cmp	r6, #1
 8006af6:	d103      	bne.n	8006b00 <_strtod_l+0xab4>
 8006af8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006afa:	2b00      	cmp	r3, #0
 8006afc:	d100      	bne.n	8006b00 <_strtod_l+0xab4>
 8006afe:	e582      	b.n	8006606 <_strtod_l+0x5ba>
 8006b00:	2300      	movs	r3, #0
 8006b02:	4c55      	ldr	r4, [pc, #340]	; (8006c58 <_strtod_l+0xc0c>)
 8006b04:	e791      	b.n	8006a2a <_strtod_l+0x9de>
 8006b06:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8006b08:	4c52      	ldr	r4, [pc, #328]	; (8006c54 <_strtod_l+0xc08>)
 8006b0a:	e7e9      	b.n	8006ae0 <_strtod_l+0xa94>
 8006b0c:	2200      	movs	r2, #0
 8006b0e:	0020      	movs	r0, r4
 8006b10:	0029      	movs	r1, r5
 8006b12:	4b50      	ldr	r3, [pc, #320]	; (8006c54 <_strtod_l+0xc08>)
 8006b14:	f7fb fa74 	bl	8002000 <__aeabi_dmul>
 8006b18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006b1a:	0005      	movs	r5, r0
 8006b1c:	000b      	movs	r3, r1
 8006b1e:	000c      	movs	r4, r1
 8006b20:	2a00      	cmp	r2, #0
 8006b22:	d107      	bne.n	8006b34 <_strtod_l+0xae8>
 8006b24:	2280      	movs	r2, #128	; 0x80
 8006b26:	0612      	lsls	r2, r2, #24
 8006b28:	188b      	adds	r3, r1, r2
 8006b2a:	9016      	str	r0, [sp, #88]	; 0x58
 8006b2c:	9317      	str	r3, [sp, #92]	; 0x5c
 8006b2e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8006b30:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006b32:	e7dc      	b.n	8006aee <_strtod_l+0xaa2>
 8006b34:	0002      	movs	r2, r0
 8006b36:	9216      	str	r2, [sp, #88]	; 0x58
 8006b38:	9317      	str	r3, [sp, #92]	; 0x5c
 8006b3a:	e7f8      	b.n	8006b2e <_strtod_l+0xae2>
 8006b3c:	23d4      	movs	r3, #212	; 0xd4
 8006b3e:	049b      	lsls	r3, r3, #18
 8006b40:	18cf      	adds	r7, r1, r3
 8006b42:	9b08      	ldr	r3, [sp, #32]
 8006b44:	2b00      	cmp	r3, #0
 8006b46:	d1a5      	bne.n	8006a94 <_strtod_l+0xa48>
 8006b48:	4b3d      	ldr	r3, [pc, #244]	; (8006c40 <_strtod_l+0xbf4>)
 8006b4a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006b4c:	403b      	ands	r3, r7
 8006b4e:	429a      	cmp	r2, r3
 8006b50:	d1a0      	bne.n	8006a94 <_strtod_l+0xa48>
 8006b52:	0028      	movs	r0, r5
 8006b54:	0021      	movs	r1, r4
 8006b56:	f7f9 fccb 	bl	80004f0 <__aeabi_d2lz>
 8006b5a:	f7f9 fd05 	bl	8000568 <__aeabi_l2d>
 8006b5e:	0002      	movs	r2, r0
 8006b60:	000b      	movs	r3, r1
 8006b62:	0028      	movs	r0, r5
 8006b64:	0021      	movs	r1, r4
 8006b66:	f7fb fcb7 	bl	80024d8 <__aeabi_dsub>
 8006b6a:	033b      	lsls	r3, r7, #12
 8006b6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006b6e:	0b1b      	lsrs	r3, r3, #12
 8006b70:	4333      	orrs	r3, r6
 8006b72:	4313      	orrs	r3, r2
 8006b74:	0004      	movs	r4, r0
 8006b76:	000d      	movs	r5, r1
 8006b78:	4a38      	ldr	r2, [pc, #224]	; (8006c5c <_strtod_l+0xc10>)
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d055      	beq.n	8006c2a <_strtod_l+0xbde>
 8006b7e:	4b38      	ldr	r3, [pc, #224]	; (8006c60 <_strtod_l+0xc14>)
 8006b80:	f7f9 fc70 	bl	8000464 <__aeabi_dcmplt>
 8006b84:	2800      	cmp	r0, #0
 8006b86:	d000      	beq.n	8006b8a <_strtod_l+0xb3e>
 8006b88:	e4d3      	b.n	8006532 <_strtod_l+0x4e6>
 8006b8a:	0020      	movs	r0, r4
 8006b8c:	0029      	movs	r1, r5
 8006b8e:	4a35      	ldr	r2, [pc, #212]	; (8006c64 <_strtod_l+0xc18>)
 8006b90:	4b30      	ldr	r3, [pc, #192]	; (8006c54 <_strtod_l+0xc08>)
 8006b92:	f7f9 fc7b 	bl	800048c <__aeabi_dcmpgt>
 8006b96:	2800      	cmp	r0, #0
 8006b98:	d100      	bne.n	8006b9c <_strtod_l+0xb50>
 8006b9a:	e77b      	b.n	8006a94 <_strtod_l+0xa48>
 8006b9c:	e4c9      	b.n	8006532 <_strtod_l+0x4e6>
 8006b9e:	9b08      	ldr	r3, [sp, #32]
 8006ba0:	2b00      	cmp	r3, #0
 8006ba2:	d02b      	beq.n	8006bfc <_strtod_l+0xbb0>
 8006ba4:	23d4      	movs	r3, #212	; 0xd4
 8006ba6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006ba8:	04db      	lsls	r3, r3, #19
 8006baa:	429a      	cmp	r2, r3
 8006bac:	d826      	bhi.n	8006bfc <_strtod_l+0xbb0>
 8006bae:	0028      	movs	r0, r5
 8006bb0:	0021      	movs	r1, r4
 8006bb2:	4a2d      	ldr	r2, [pc, #180]	; (8006c68 <_strtod_l+0xc1c>)
 8006bb4:	4b2d      	ldr	r3, [pc, #180]	; (8006c6c <_strtod_l+0xc20>)
 8006bb6:	f7f9 fc5f 	bl	8000478 <__aeabi_dcmple>
 8006bba:	2800      	cmp	r0, #0
 8006bbc:	d017      	beq.n	8006bee <_strtod_l+0xba2>
 8006bbe:	0028      	movs	r0, r5
 8006bc0:	0021      	movs	r1, r4
 8006bc2:	f7f9 fc77 	bl	80004b4 <__aeabi_d2uiz>
 8006bc6:	2800      	cmp	r0, #0
 8006bc8:	d100      	bne.n	8006bcc <_strtod_l+0xb80>
 8006bca:	3001      	adds	r0, #1
 8006bcc:	f7fc f89a 	bl	8002d04 <__aeabi_ui2d>
 8006bd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006bd2:	0005      	movs	r5, r0
 8006bd4:	000b      	movs	r3, r1
 8006bd6:	000c      	movs	r4, r1
 8006bd8:	2a00      	cmp	r2, #0
 8006bda:	d122      	bne.n	8006c22 <_strtod_l+0xbd6>
 8006bdc:	2280      	movs	r2, #128	; 0x80
 8006bde:	0612      	lsls	r2, r2, #24
 8006be0:	188b      	adds	r3, r1, r2
 8006be2:	9018      	str	r0, [sp, #96]	; 0x60
 8006be4:	9319      	str	r3, [sp, #100]	; 0x64
 8006be6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006be8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8006bea:	9210      	str	r2, [sp, #64]	; 0x40
 8006bec:	9311      	str	r3, [sp, #68]	; 0x44
 8006bee:	22d6      	movs	r2, #214	; 0xd6
 8006bf0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006bf2:	04d2      	lsls	r2, r2, #19
 8006bf4:	189b      	adds	r3, r3, r2
 8006bf6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006bf8:	1a9b      	subs	r3, r3, r2
 8006bfa:	9311      	str	r3, [sp, #68]	; 0x44
 8006bfc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006bfe:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006c00:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8006c02:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8006c04:	f001 ff86 	bl	8008b14 <__ulp>
 8006c08:	0002      	movs	r2, r0
 8006c0a:	000b      	movs	r3, r1
 8006c0c:	0030      	movs	r0, r6
 8006c0e:	0039      	movs	r1, r7
 8006c10:	f7fb f9f6 	bl	8002000 <__aeabi_dmul>
 8006c14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006c16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006c18:	f7fa fab4 	bl	8001184 <__aeabi_dadd>
 8006c1c:	0006      	movs	r6, r0
 8006c1e:	000f      	movs	r7, r1
 8006c20:	e78f      	b.n	8006b42 <_strtod_l+0xaf6>
 8006c22:	0002      	movs	r2, r0
 8006c24:	9218      	str	r2, [sp, #96]	; 0x60
 8006c26:	9319      	str	r3, [sp, #100]	; 0x64
 8006c28:	e7dd      	b.n	8006be6 <_strtod_l+0xb9a>
 8006c2a:	4b11      	ldr	r3, [pc, #68]	; (8006c70 <_strtod_l+0xc24>)
 8006c2c:	f7f9 fc1a 	bl	8000464 <__aeabi_dcmplt>
 8006c30:	e7b1      	b.n	8006b96 <_strtod_l+0xb4a>
 8006c32:	46c0      	nop			; (mov r8, r8)
 8006c34:	fff00000 	.word	0xfff00000
 8006c38:	000fffff 	.word	0x000fffff
 8006c3c:	3ff00000 	.word	0x3ff00000
 8006c40:	7ff00000 	.word	0x7ff00000
 8006c44:	7fe00000 	.word	0x7fe00000
 8006c48:	fcb00000 	.word	0xfcb00000
 8006c4c:	7c9fffff 	.word	0x7c9fffff
 8006c50:	7fefffff 	.word	0x7fefffff
 8006c54:	3fe00000 	.word	0x3fe00000
 8006c58:	bff00000 	.word	0xbff00000
 8006c5c:	94a03595 	.word	0x94a03595
 8006c60:	3fdfffff 	.word	0x3fdfffff
 8006c64:	35afe535 	.word	0x35afe535
 8006c68:	ffc00000 	.word	0xffc00000
 8006c6c:	41dfffff 	.word	0x41dfffff
 8006c70:	3fcfffff 	.word	0x3fcfffff

08006c74 <strtod>:
 8006c74:	b510      	push	{r4, lr}
 8006c76:	000a      	movs	r2, r1
 8006c78:	0001      	movs	r1, r0
 8006c7a:	4803      	ldr	r0, [pc, #12]	; (8006c88 <strtod+0x14>)
 8006c7c:	4b03      	ldr	r3, [pc, #12]	; (8006c8c <strtod+0x18>)
 8006c7e:	6800      	ldr	r0, [r0, #0]
 8006c80:	f7ff f9e4 	bl	800604c <_strtod_l>
 8006c84:	bd10      	pop	{r4, pc}
 8006c86:	46c0      	nop			; (mov r8, r8)
 8006c88:	2000009c 	.word	0x2000009c
 8006c8c:	20000104 	.word	0x20000104

08006c90 <strtok>:
 8006c90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c92:	4b16      	ldr	r3, [pc, #88]	; (8006cec <strtok+0x5c>)
 8006c94:	0005      	movs	r5, r0
 8006c96:	681f      	ldr	r7, [r3, #0]
 8006c98:	000e      	movs	r6, r1
 8006c9a:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8006c9c:	2c00      	cmp	r4, #0
 8006c9e:	d11d      	bne.n	8006cdc <strtok+0x4c>
 8006ca0:	2050      	movs	r0, #80	; 0x50
 8006ca2:	f7fe fb79 	bl	8005398 <malloc>
 8006ca6:	1e02      	subs	r2, r0, #0
 8006ca8:	65b8      	str	r0, [r7, #88]	; 0x58
 8006caa:	d104      	bne.n	8006cb6 <strtok+0x26>
 8006cac:	2157      	movs	r1, #87	; 0x57
 8006cae:	4b10      	ldr	r3, [pc, #64]	; (8006cf0 <strtok+0x60>)
 8006cb0:	4810      	ldr	r0, [pc, #64]	; (8006cf4 <strtok+0x64>)
 8006cb2:	f000 f903 	bl	8006ebc <__assert_func>
 8006cb6:	6004      	str	r4, [r0, #0]
 8006cb8:	6044      	str	r4, [r0, #4]
 8006cba:	6084      	str	r4, [r0, #8]
 8006cbc:	60c4      	str	r4, [r0, #12]
 8006cbe:	6104      	str	r4, [r0, #16]
 8006cc0:	6144      	str	r4, [r0, #20]
 8006cc2:	6184      	str	r4, [r0, #24]
 8006cc4:	6284      	str	r4, [r0, #40]	; 0x28
 8006cc6:	62c4      	str	r4, [r0, #44]	; 0x2c
 8006cc8:	6304      	str	r4, [r0, #48]	; 0x30
 8006cca:	6344      	str	r4, [r0, #52]	; 0x34
 8006ccc:	6384      	str	r4, [r0, #56]	; 0x38
 8006cce:	63c4      	str	r4, [r0, #60]	; 0x3c
 8006cd0:	6404      	str	r4, [r0, #64]	; 0x40
 8006cd2:	6444      	str	r4, [r0, #68]	; 0x44
 8006cd4:	6484      	str	r4, [r0, #72]	; 0x48
 8006cd6:	64c4      	str	r4, [r0, #76]	; 0x4c
 8006cd8:	7704      	strb	r4, [r0, #28]
 8006cda:	6244      	str	r4, [r0, #36]	; 0x24
 8006cdc:	0031      	movs	r1, r6
 8006cde:	0028      	movs	r0, r5
 8006ce0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006ce2:	2301      	movs	r3, #1
 8006ce4:	f000 f808 	bl	8006cf8 <__strtok_r>
 8006ce8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006cea:	46c0      	nop			; (mov r8, r8)
 8006cec:	2000009c 	.word	0x2000009c
 8006cf0:	0800a700 	.word	0x0800a700
 8006cf4:	0800a717 	.word	0x0800a717

08006cf8 <__strtok_r>:
 8006cf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006cfa:	2800      	cmp	r0, #0
 8006cfc:	d102      	bne.n	8006d04 <__strtok_r+0xc>
 8006cfe:	6810      	ldr	r0, [r2, #0]
 8006d00:	2800      	cmp	r0, #0
 8006d02:	d013      	beq.n	8006d2c <__strtok_r+0x34>
 8006d04:	0004      	movs	r4, r0
 8006d06:	0020      	movs	r0, r4
 8006d08:	000e      	movs	r6, r1
 8006d0a:	7805      	ldrb	r5, [r0, #0]
 8006d0c:	3401      	adds	r4, #1
 8006d0e:	7837      	ldrb	r7, [r6, #0]
 8006d10:	2f00      	cmp	r7, #0
 8006d12:	d104      	bne.n	8006d1e <__strtok_r+0x26>
 8006d14:	2d00      	cmp	r5, #0
 8006d16:	d10f      	bne.n	8006d38 <__strtok_r+0x40>
 8006d18:	0028      	movs	r0, r5
 8006d1a:	6015      	str	r5, [r2, #0]
 8006d1c:	e006      	b.n	8006d2c <__strtok_r+0x34>
 8006d1e:	3601      	adds	r6, #1
 8006d20:	42bd      	cmp	r5, r7
 8006d22:	d1f4      	bne.n	8006d0e <__strtok_r+0x16>
 8006d24:	2b00      	cmp	r3, #0
 8006d26:	d1ee      	bne.n	8006d06 <__strtok_r+0xe>
 8006d28:	6014      	str	r4, [r2, #0]
 8006d2a:	7003      	strb	r3, [r0, #0]
 8006d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006d2e:	002f      	movs	r7, r5
 8006d30:	e00f      	b.n	8006d52 <__strtok_r+0x5a>
 8006d32:	3301      	adds	r3, #1
 8006d34:	2e00      	cmp	r6, #0
 8006d36:	d104      	bne.n	8006d42 <__strtok_r+0x4a>
 8006d38:	0023      	movs	r3, r4
 8006d3a:	3401      	adds	r4, #1
 8006d3c:	781d      	ldrb	r5, [r3, #0]
 8006d3e:	0027      	movs	r7, r4
 8006d40:	000b      	movs	r3, r1
 8006d42:	781e      	ldrb	r6, [r3, #0]
 8006d44:	42b5      	cmp	r5, r6
 8006d46:	d1f4      	bne.n	8006d32 <__strtok_r+0x3a>
 8006d48:	2d00      	cmp	r5, #0
 8006d4a:	d0f0      	beq.n	8006d2e <__strtok_r+0x36>
 8006d4c:	2300      	movs	r3, #0
 8006d4e:	3c01      	subs	r4, #1
 8006d50:	7023      	strb	r3, [r4, #0]
 8006d52:	6017      	str	r7, [r2, #0]
 8006d54:	e7ea      	b.n	8006d2c <__strtok_r+0x34>
	...

08006d58 <_strtol_l.constprop.0>:
 8006d58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d5a:	b087      	sub	sp, #28
 8006d5c:	001e      	movs	r6, r3
 8006d5e:	9005      	str	r0, [sp, #20]
 8006d60:	9101      	str	r1, [sp, #4]
 8006d62:	9202      	str	r2, [sp, #8]
 8006d64:	2b01      	cmp	r3, #1
 8006d66:	d045      	beq.n	8006df4 <_strtol_l.constprop.0+0x9c>
 8006d68:	000b      	movs	r3, r1
 8006d6a:	2e24      	cmp	r6, #36	; 0x24
 8006d6c:	d842      	bhi.n	8006df4 <_strtol_l.constprop.0+0x9c>
 8006d6e:	4a3f      	ldr	r2, [pc, #252]	; (8006e6c <_strtol_l.constprop.0+0x114>)
 8006d70:	2108      	movs	r1, #8
 8006d72:	4694      	mov	ip, r2
 8006d74:	001a      	movs	r2, r3
 8006d76:	4660      	mov	r0, ip
 8006d78:	7814      	ldrb	r4, [r2, #0]
 8006d7a:	3301      	adds	r3, #1
 8006d7c:	5d00      	ldrb	r0, [r0, r4]
 8006d7e:	001d      	movs	r5, r3
 8006d80:	0007      	movs	r7, r0
 8006d82:	400f      	ands	r7, r1
 8006d84:	4208      	tst	r0, r1
 8006d86:	d1f5      	bne.n	8006d74 <_strtol_l.constprop.0+0x1c>
 8006d88:	2c2d      	cmp	r4, #45	; 0x2d
 8006d8a:	d13a      	bne.n	8006e02 <_strtol_l.constprop.0+0xaa>
 8006d8c:	2701      	movs	r7, #1
 8006d8e:	781c      	ldrb	r4, [r3, #0]
 8006d90:	1c95      	adds	r5, r2, #2
 8006d92:	2e00      	cmp	r6, #0
 8006d94:	d065      	beq.n	8006e62 <_strtol_l.constprop.0+0x10a>
 8006d96:	2e10      	cmp	r6, #16
 8006d98:	d109      	bne.n	8006dae <_strtol_l.constprop.0+0x56>
 8006d9a:	2c30      	cmp	r4, #48	; 0x30
 8006d9c:	d107      	bne.n	8006dae <_strtol_l.constprop.0+0x56>
 8006d9e:	2220      	movs	r2, #32
 8006da0:	782b      	ldrb	r3, [r5, #0]
 8006da2:	4393      	bics	r3, r2
 8006da4:	2b58      	cmp	r3, #88	; 0x58
 8006da6:	d157      	bne.n	8006e58 <_strtol_l.constprop.0+0x100>
 8006da8:	2610      	movs	r6, #16
 8006daa:	786c      	ldrb	r4, [r5, #1]
 8006dac:	3502      	adds	r5, #2
 8006dae:	4b30      	ldr	r3, [pc, #192]	; (8006e70 <_strtol_l.constprop.0+0x118>)
 8006db0:	0031      	movs	r1, r6
 8006db2:	18fb      	adds	r3, r7, r3
 8006db4:	0018      	movs	r0, r3
 8006db6:	9303      	str	r3, [sp, #12]
 8006db8:	f7f9 fa4e 	bl	8000258 <__aeabi_uidivmod>
 8006dbc:	2300      	movs	r3, #0
 8006dbe:	2201      	movs	r2, #1
 8006dc0:	4684      	mov	ip, r0
 8006dc2:	0018      	movs	r0, r3
 8006dc4:	9104      	str	r1, [sp, #16]
 8006dc6:	4252      	negs	r2, r2
 8006dc8:	0021      	movs	r1, r4
 8006dca:	3930      	subs	r1, #48	; 0x30
 8006dcc:	2909      	cmp	r1, #9
 8006dce:	d81d      	bhi.n	8006e0c <_strtol_l.constprop.0+0xb4>
 8006dd0:	000c      	movs	r4, r1
 8006dd2:	42a6      	cmp	r6, r4
 8006dd4:	dd28      	ble.n	8006e28 <_strtol_l.constprop.0+0xd0>
 8006dd6:	2b00      	cmp	r3, #0
 8006dd8:	db24      	blt.n	8006e24 <_strtol_l.constprop.0+0xcc>
 8006dda:	0013      	movs	r3, r2
 8006ddc:	4584      	cmp	ip, r0
 8006dde:	d306      	bcc.n	8006dee <_strtol_l.constprop.0+0x96>
 8006de0:	d102      	bne.n	8006de8 <_strtol_l.constprop.0+0x90>
 8006de2:	9904      	ldr	r1, [sp, #16]
 8006de4:	42a1      	cmp	r1, r4
 8006de6:	db02      	blt.n	8006dee <_strtol_l.constprop.0+0x96>
 8006de8:	2301      	movs	r3, #1
 8006dea:	4370      	muls	r0, r6
 8006dec:	1820      	adds	r0, r4, r0
 8006dee:	782c      	ldrb	r4, [r5, #0]
 8006df0:	3501      	adds	r5, #1
 8006df2:	e7e9      	b.n	8006dc8 <_strtol_l.constprop.0+0x70>
 8006df4:	f7fe faa6 	bl	8005344 <__errno>
 8006df8:	2316      	movs	r3, #22
 8006dfa:	6003      	str	r3, [r0, #0]
 8006dfc:	2000      	movs	r0, #0
 8006dfe:	b007      	add	sp, #28
 8006e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e02:	2c2b      	cmp	r4, #43	; 0x2b
 8006e04:	d1c5      	bne.n	8006d92 <_strtol_l.constprop.0+0x3a>
 8006e06:	781c      	ldrb	r4, [r3, #0]
 8006e08:	1c95      	adds	r5, r2, #2
 8006e0a:	e7c2      	b.n	8006d92 <_strtol_l.constprop.0+0x3a>
 8006e0c:	0021      	movs	r1, r4
 8006e0e:	3941      	subs	r1, #65	; 0x41
 8006e10:	2919      	cmp	r1, #25
 8006e12:	d801      	bhi.n	8006e18 <_strtol_l.constprop.0+0xc0>
 8006e14:	3c37      	subs	r4, #55	; 0x37
 8006e16:	e7dc      	b.n	8006dd2 <_strtol_l.constprop.0+0x7a>
 8006e18:	0021      	movs	r1, r4
 8006e1a:	3961      	subs	r1, #97	; 0x61
 8006e1c:	2919      	cmp	r1, #25
 8006e1e:	d803      	bhi.n	8006e28 <_strtol_l.constprop.0+0xd0>
 8006e20:	3c57      	subs	r4, #87	; 0x57
 8006e22:	e7d6      	b.n	8006dd2 <_strtol_l.constprop.0+0x7a>
 8006e24:	0013      	movs	r3, r2
 8006e26:	e7e2      	b.n	8006dee <_strtol_l.constprop.0+0x96>
 8006e28:	2b00      	cmp	r3, #0
 8006e2a:	da09      	bge.n	8006e40 <_strtol_l.constprop.0+0xe8>
 8006e2c:	2322      	movs	r3, #34	; 0x22
 8006e2e:	9a05      	ldr	r2, [sp, #20]
 8006e30:	9803      	ldr	r0, [sp, #12]
 8006e32:	6013      	str	r3, [r2, #0]
 8006e34:	9b02      	ldr	r3, [sp, #8]
 8006e36:	2b00      	cmp	r3, #0
 8006e38:	d0e1      	beq.n	8006dfe <_strtol_l.constprop.0+0xa6>
 8006e3a:	1e6b      	subs	r3, r5, #1
 8006e3c:	9301      	str	r3, [sp, #4]
 8006e3e:	e007      	b.n	8006e50 <_strtol_l.constprop.0+0xf8>
 8006e40:	2f00      	cmp	r7, #0
 8006e42:	d000      	beq.n	8006e46 <_strtol_l.constprop.0+0xee>
 8006e44:	4240      	negs	r0, r0
 8006e46:	9a02      	ldr	r2, [sp, #8]
 8006e48:	2a00      	cmp	r2, #0
 8006e4a:	d0d8      	beq.n	8006dfe <_strtol_l.constprop.0+0xa6>
 8006e4c:	2b00      	cmp	r3, #0
 8006e4e:	d1f4      	bne.n	8006e3a <_strtol_l.constprop.0+0xe2>
 8006e50:	9b02      	ldr	r3, [sp, #8]
 8006e52:	9a01      	ldr	r2, [sp, #4]
 8006e54:	601a      	str	r2, [r3, #0]
 8006e56:	e7d2      	b.n	8006dfe <_strtol_l.constprop.0+0xa6>
 8006e58:	2430      	movs	r4, #48	; 0x30
 8006e5a:	2e00      	cmp	r6, #0
 8006e5c:	d1a7      	bne.n	8006dae <_strtol_l.constprop.0+0x56>
 8006e5e:	3608      	adds	r6, #8
 8006e60:	e7a5      	b.n	8006dae <_strtol_l.constprop.0+0x56>
 8006e62:	2c30      	cmp	r4, #48	; 0x30
 8006e64:	d09b      	beq.n	8006d9e <_strtol_l.constprop.0+0x46>
 8006e66:	260a      	movs	r6, #10
 8006e68:	e7a1      	b.n	8006dae <_strtol_l.constprop.0+0x56>
 8006e6a:	46c0      	nop			; (mov r8, r8)
 8006e6c:	0800a7b1 	.word	0x0800a7b1
 8006e70:	7fffffff 	.word	0x7fffffff

08006e74 <_strtol_r>:
 8006e74:	b510      	push	{r4, lr}
 8006e76:	f7ff ff6f 	bl	8006d58 <_strtol_l.constprop.0>
 8006e7a:	bd10      	pop	{r4, pc}

08006e7c <strtol>:
 8006e7c:	b510      	push	{r4, lr}
 8006e7e:	0013      	movs	r3, r2
 8006e80:	000a      	movs	r2, r1
 8006e82:	0001      	movs	r1, r0
 8006e84:	4802      	ldr	r0, [pc, #8]	; (8006e90 <strtol+0x14>)
 8006e86:	6800      	ldr	r0, [r0, #0]
 8006e88:	f7ff ff66 	bl	8006d58 <_strtol_l.constprop.0>
 8006e8c:	bd10      	pop	{r4, pc}
 8006e8e:	46c0      	nop			; (mov r8, r8)
 8006e90:	2000009c 	.word	0x2000009c

08006e94 <_write_r>:
 8006e94:	b570      	push	{r4, r5, r6, lr}
 8006e96:	0004      	movs	r4, r0
 8006e98:	0008      	movs	r0, r1
 8006e9a:	0011      	movs	r1, r2
 8006e9c:	001a      	movs	r2, r3
 8006e9e:	2300      	movs	r3, #0
 8006ea0:	4d05      	ldr	r5, [pc, #20]	; (8006eb8 <_write_r+0x24>)
 8006ea2:	602b      	str	r3, [r5, #0]
 8006ea4:	f7fd fb13 	bl	80044ce <_write>
 8006ea8:	1c43      	adds	r3, r0, #1
 8006eaa:	d103      	bne.n	8006eb4 <_write_r+0x20>
 8006eac:	682b      	ldr	r3, [r5, #0]
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	d000      	beq.n	8006eb4 <_write_r+0x20>
 8006eb2:	6023      	str	r3, [r4, #0]
 8006eb4:	bd70      	pop	{r4, r5, r6, pc}
 8006eb6:	46c0      	nop			; (mov r8, r8)
 8006eb8:	200003d0 	.word	0x200003d0

08006ebc <__assert_func>:
 8006ebc:	b530      	push	{r4, r5, lr}
 8006ebe:	0014      	movs	r4, r2
 8006ec0:	001a      	movs	r2, r3
 8006ec2:	4b09      	ldr	r3, [pc, #36]	; (8006ee8 <__assert_func+0x2c>)
 8006ec4:	0005      	movs	r5, r0
 8006ec6:	681b      	ldr	r3, [r3, #0]
 8006ec8:	b085      	sub	sp, #20
 8006eca:	68d8      	ldr	r0, [r3, #12]
 8006ecc:	4b07      	ldr	r3, [pc, #28]	; (8006eec <__assert_func+0x30>)
 8006ece:	2c00      	cmp	r4, #0
 8006ed0:	d101      	bne.n	8006ed6 <__assert_func+0x1a>
 8006ed2:	4b07      	ldr	r3, [pc, #28]	; (8006ef0 <__assert_func+0x34>)
 8006ed4:	001c      	movs	r4, r3
 8006ed6:	9301      	str	r3, [sp, #4]
 8006ed8:	9100      	str	r1, [sp, #0]
 8006eda:	002b      	movs	r3, r5
 8006edc:	4905      	ldr	r1, [pc, #20]	; (8006ef4 <__assert_func+0x38>)
 8006ede:	9402      	str	r4, [sp, #8]
 8006ee0:	f000 fec2 	bl	8007c68 <fiprintf>
 8006ee4:	f002 ff98 	bl	8009e18 <abort>
 8006ee8:	2000009c 	.word	0x2000009c
 8006eec:	0800a774 	.word	0x0800a774
 8006ef0:	0800a5c5 	.word	0x0800a5c5
 8006ef4:	0800a781 	.word	0x0800a781

08006ef8 <_close_r>:
 8006ef8:	2300      	movs	r3, #0
 8006efa:	b570      	push	{r4, r5, r6, lr}
 8006efc:	4d06      	ldr	r5, [pc, #24]	; (8006f18 <_close_r+0x20>)
 8006efe:	0004      	movs	r4, r0
 8006f00:	0008      	movs	r0, r1
 8006f02:	602b      	str	r3, [r5, #0]
 8006f04:	f7fd faf0 	bl	80044e8 <_close>
 8006f08:	1c43      	adds	r3, r0, #1
 8006f0a:	d103      	bne.n	8006f14 <_close_r+0x1c>
 8006f0c:	682b      	ldr	r3, [r5, #0]
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d000      	beq.n	8006f14 <_close_r+0x1c>
 8006f12:	6023      	str	r3, [r4, #0]
 8006f14:	bd70      	pop	{r4, r5, r6, pc}
 8006f16:	46c0      	nop			; (mov r8, r8)
 8006f18:	200003d0 	.word	0x200003d0

08006f1c <quorem>:
 8006f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f1e:	0006      	movs	r6, r0
 8006f20:	690b      	ldr	r3, [r1, #16]
 8006f22:	6932      	ldr	r2, [r6, #16]
 8006f24:	b087      	sub	sp, #28
 8006f26:	2000      	movs	r0, #0
 8006f28:	9103      	str	r1, [sp, #12]
 8006f2a:	429a      	cmp	r2, r3
 8006f2c:	db65      	blt.n	8006ffa <quorem+0xde>
 8006f2e:	3b01      	subs	r3, #1
 8006f30:	009c      	lsls	r4, r3, #2
 8006f32:	9300      	str	r3, [sp, #0]
 8006f34:	000b      	movs	r3, r1
 8006f36:	3314      	adds	r3, #20
 8006f38:	9305      	str	r3, [sp, #20]
 8006f3a:	191b      	adds	r3, r3, r4
 8006f3c:	9304      	str	r3, [sp, #16]
 8006f3e:	0033      	movs	r3, r6
 8006f40:	3314      	adds	r3, #20
 8006f42:	9302      	str	r3, [sp, #8]
 8006f44:	191c      	adds	r4, r3, r4
 8006f46:	9b04      	ldr	r3, [sp, #16]
 8006f48:	6827      	ldr	r7, [r4, #0]
 8006f4a:	681b      	ldr	r3, [r3, #0]
 8006f4c:	0038      	movs	r0, r7
 8006f4e:	1c5d      	adds	r5, r3, #1
 8006f50:	0029      	movs	r1, r5
 8006f52:	9301      	str	r3, [sp, #4]
 8006f54:	f7f9 f8fa 	bl	800014c <__udivsi3>
 8006f58:	9001      	str	r0, [sp, #4]
 8006f5a:	42af      	cmp	r7, r5
 8006f5c:	d324      	bcc.n	8006fa8 <quorem+0x8c>
 8006f5e:	2500      	movs	r5, #0
 8006f60:	46ac      	mov	ip, r5
 8006f62:	9802      	ldr	r0, [sp, #8]
 8006f64:	9f05      	ldr	r7, [sp, #20]
 8006f66:	cf08      	ldmia	r7!, {r3}
 8006f68:	9a01      	ldr	r2, [sp, #4]
 8006f6a:	b299      	uxth	r1, r3
 8006f6c:	4351      	muls	r1, r2
 8006f6e:	0c1b      	lsrs	r3, r3, #16
 8006f70:	4353      	muls	r3, r2
 8006f72:	1949      	adds	r1, r1, r5
 8006f74:	0c0a      	lsrs	r2, r1, #16
 8006f76:	189b      	adds	r3, r3, r2
 8006f78:	6802      	ldr	r2, [r0, #0]
 8006f7a:	b289      	uxth	r1, r1
 8006f7c:	b292      	uxth	r2, r2
 8006f7e:	4462      	add	r2, ip
 8006f80:	1a52      	subs	r2, r2, r1
 8006f82:	6801      	ldr	r1, [r0, #0]
 8006f84:	0c1d      	lsrs	r5, r3, #16
 8006f86:	0c09      	lsrs	r1, r1, #16
 8006f88:	b29b      	uxth	r3, r3
 8006f8a:	1acb      	subs	r3, r1, r3
 8006f8c:	1411      	asrs	r1, r2, #16
 8006f8e:	185b      	adds	r3, r3, r1
 8006f90:	1419      	asrs	r1, r3, #16
 8006f92:	b292      	uxth	r2, r2
 8006f94:	041b      	lsls	r3, r3, #16
 8006f96:	431a      	orrs	r2, r3
 8006f98:	9b04      	ldr	r3, [sp, #16]
 8006f9a:	468c      	mov	ip, r1
 8006f9c:	c004      	stmia	r0!, {r2}
 8006f9e:	42bb      	cmp	r3, r7
 8006fa0:	d2e1      	bcs.n	8006f66 <quorem+0x4a>
 8006fa2:	6823      	ldr	r3, [r4, #0]
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	d030      	beq.n	800700a <quorem+0xee>
 8006fa8:	0030      	movs	r0, r6
 8006faa:	9903      	ldr	r1, [sp, #12]
 8006fac:	f001 fcfe 	bl	80089ac <__mcmp>
 8006fb0:	2800      	cmp	r0, #0
 8006fb2:	db21      	blt.n	8006ff8 <quorem+0xdc>
 8006fb4:	0030      	movs	r0, r6
 8006fb6:	2400      	movs	r4, #0
 8006fb8:	9b01      	ldr	r3, [sp, #4]
 8006fba:	9903      	ldr	r1, [sp, #12]
 8006fbc:	3301      	adds	r3, #1
 8006fbe:	9301      	str	r3, [sp, #4]
 8006fc0:	3014      	adds	r0, #20
 8006fc2:	3114      	adds	r1, #20
 8006fc4:	6803      	ldr	r3, [r0, #0]
 8006fc6:	c920      	ldmia	r1!, {r5}
 8006fc8:	b29a      	uxth	r2, r3
 8006fca:	1914      	adds	r4, r2, r4
 8006fcc:	b2aa      	uxth	r2, r5
 8006fce:	1aa2      	subs	r2, r4, r2
 8006fd0:	0c1b      	lsrs	r3, r3, #16
 8006fd2:	0c2d      	lsrs	r5, r5, #16
 8006fd4:	1414      	asrs	r4, r2, #16
 8006fd6:	1b5b      	subs	r3, r3, r5
 8006fd8:	191b      	adds	r3, r3, r4
 8006fda:	141c      	asrs	r4, r3, #16
 8006fdc:	b292      	uxth	r2, r2
 8006fde:	041b      	lsls	r3, r3, #16
 8006fe0:	4313      	orrs	r3, r2
 8006fe2:	c008      	stmia	r0!, {r3}
 8006fe4:	9b04      	ldr	r3, [sp, #16]
 8006fe6:	428b      	cmp	r3, r1
 8006fe8:	d2ec      	bcs.n	8006fc4 <quorem+0xa8>
 8006fea:	9b00      	ldr	r3, [sp, #0]
 8006fec:	9a02      	ldr	r2, [sp, #8]
 8006fee:	009b      	lsls	r3, r3, #2
 8006ff0:	18d3      	adds	r3, r2, r3
 8006ff2:	681a      	ldr	r2, [r3, #0]
 8006ff4:	2a00      	cmp	r2, #0
 8006ff6:	d015      	beq.n	8007024 <quorem+0x108>
 8006ff8:	9801      	ldr	r0, [sp, #4]
 8006ffa:	b007      	add	sp, #28
 8006ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ffe:	6823      	ldr	r3, [r4, #0]
 8007000:	2b00      	cmp	r3, #0
 8007002:	d106      	bne.n	8007012 <quorem+0xf6>
 8007004:	9b00      	ldr	r3, [sp, #0]
 8007006:	3b01      	subs	r3, #1
 8007008:	9300      	str	r3, [sp, #0]
 800700a:	9b02      	ldr	r3, [sp, #8]
 800700c:	3c04      	subs	r4, #4
 800700e:	42a3      	cmp	r3, r4
 8007010:	d3f5      	bcc.n	8006ffe <quorem+0xe2>
 8007012:	9b00      	ldr	r3, [sp, #0]
 8007014:	6133      	str	r3, [r6, #16]
 8007016:	e7c7      	b.n	8006fa8 <quorem+0x8c>
 8007018:	681a      	ldr	r2, [r3, #0]
 800701a:	2a00      	cmp	r2, #0
 800701c:	d106      	bne.n	800702c <quorem+0x110>
 800701e:	9a00      	ldr	r2, [sp, #0]
 8007020:	3a01      	subs	r2, #1
 8007022:	9200      	str	r2, [sp, #0]
 8007024:	9a02      	ldr	r2, [sp, #8]
 8007026:	3b04      	subs	r3, #4
 8007028:	429a      	cmp	r2, r3
 800702a:	d3f5      	bcc.n	8007018 <quorem+0xfc>
 800702c:	9b00      	ldr	r3, [sp, #0]
 800702e:	6133      	str	r3, [r6, #16]
 8007030:	e7e2      	b.n	8006ff8 <quorem+0xdc>
	...

08007034 <_dtoa_r>:
 8007034:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007036:	b09d      	sub	sp, #116	; 0x74
 8007038:	9202      	str	r2, [sp, #8]
 800703a:	9303      	str	r3, [sp, #12]
 800703c:	9b02      	ldr	r3, [sp, #8]
 800703e:	9c03      	ldr	r4, [sp, #12]
 8007040:	9308      	str	r3, [sp, #32]
 8007042:	9409      	str	r4, [sp, #36]	; 0x24
 8007044:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8007046:	0007      	movs	r7, r0
 8007048:	9d25      	ldr	r5, [sp, #148]	; 0x94
 800704a:	2c00      	cmp	r4, #0
 800704c:	d10e      	bne.n	800706c <_dtoa_r+0x38>
 800704e:	2010      	movs	r0, #16
 8007050:	f7fe f9a2 	bl	8005398 <malloc>
 8007054:	1e02      	subs	r2, r0, #0
 8007056:	6278      	str	r0, [r7, #36]	; 0x24
 8007058:	d104      	bne.n	8007064 <_dtoa_r+0x30>
 800705a:	21ea      	movs	r1, #234	; 0xea
 800705c:	4bc7      	ldr	r3, [pc, #796]	; (800737c <_dtoa_r+0x348>)
 800705e:	48c8      	ldr	r0, [pc, #800]	; (8007380 <_dtoa_r+0x34c>)
 8007060:	f7ff ff2c 	bl	8006ebc <__assert_func>
 8007064:	6044      	str	r4, [r0, #4]
 8007066:	6084      	str	r4, [r0, #8]
 8007068:	6004      	str	r4, [r0, #0]
 800706a:	60c4      	str	r4, [r0, #12]
 800706c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800706e:	6819      	ldr	r1, [r3, #0]
 8007070:	2900      	cmp	r1, #0
 8007072:	d00a      	beq.n	800708a <_dtoa_r+0x56>
 8007074:	685a      	ldr	r2, [r3, #4]
 8007076:	2301      	movs	r3, #1
 8007078:	4093      	lsls	r3, r2
 800707a:	604a      	str	r2, [r1, #4]
 800707c:	608b      	str	r3, [r1, #8]
 800707e:	0038      	movs	r0, r7
 8007080:	f001 fa08 	bl	8008494 <_Bfree>
 8007084:	2200      	movs	r2, #0
 8007086:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007088:	601a      	str	r2, [r3, #0]
 800708a:	9b03      	ldr	r3, [sp, #12]
 800708c:	2b00      	cmp	r3, #0
 800708e:	da20      	bge.n	80070d2 <_dtoa_r+0x9e>
 8007090:	2301      	movs	r3, #1
 8007092:	602b      	str	r3, [r5, #0]
 8007094:	9b03      	ldr	r3, [sp, #12]
 8007096:	005b      	lsls	r3, r3, #1
 8007098:	085b      	lsrs	r3, r3, #1
 800709a:	9309      	str	r3, [sp, #36]	; 0x24
 800709c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800709e:	4bb9      	ldr	r3, [pc, #740]	; (8007384 <_dtoa_r+0x350>)
 80070a0:	4ab8      	ldr	r2, [pc, #736]	; (8007384 <_dtoa_r+0x350>)
 80070a2:	402b      	ands	r3, r5
 80070a4:	4293      	cmp	r3, r2
 80070a6:	d117      	bne.n	80070d8 <_dtoa_r+0xa4>
 80070a8:	4bb7      	ldr	r3, [pc, #732]	; (8007388 <_dtoa_r+0x354>)
 80070aa:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80070ac:	0328      	lsls	r0, r5, #12
 80070ae:	6013      	str	r3, [r2, #0]
 80070b0:	9b02      	ldr	r3, [sp, #8]
 80070b2:	0b00      	lsrs	r0, r0, #12
 80070b4:	4318      	orrs	r0, r3
 80070b6:	d101      	bne.n	80070bc <_dtoa_r+0x88>
 80070b8:	f000 fdbf 	bl	8007c3a <_dtoa_r+0xc06>
 80070bc:	48b3      	ldr	r0, [pc, #716]	; (800738c <_dtoa_r+0x358>)
 80070be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80070c0:	9006      	str	r0, [sp, #24]
 80070c2:	2b00      	cmp	r3, #0
 80070c4:	d002      	beq.n	80070cc <_dtoa_r+0x98>
 80070c6:	4bb2      	ldr	r3, [pc, #712]	; (8007390 <_dtoa_r+0x35c>)
 80070c8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80070ca:	6013      	str	r3, [r2, #0]
 80070cc:	9806      	ldr	r0, [sp, #24]
 80070ce:	b01d      	add	sp, #116	; 0x74
 80070d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80070d2:	2300      	movs	r3, #0
 80070d4:	602b      	str	r3, [r5, #0]
 80070d6:	e7e1      	b.n	800709c <_dtoa_r+0x68>
 80070d8:	9b08      	ldr	r3, [sp, #32]
 80070da:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80070dc:	9312      	str	r3, [sp, #72]	; 0x48
 80070de:	9413      	str	r4, [sp, #76]	; 0x4c
 80070e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80070e2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80070e4:	2200      	movs	r2, #0
 80070e6:	2300      	movs	r3, #0
 80070e8:	f7f9 f9b6 	bl	8000458 <__aeabi_dcmpeq>
 80070ec:	1e04      	subs	r4, r0, #0
 80070ee:	d009      	beq.n	8007104 <_dtoa_r+0xd0>
 80070f0:	2301      	movs	r3, #1
 80070f2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80070f4:	6013      	str	r3, [r2, #0]
 80070f6:	4ba7      	ldr	r3, [pc, #668]	; (8007394 <_dtoa_r+0x360>)
 80070f8:	9306      	str	r3, [sp, #24]
 80070fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d0e5      	beq.n	80070cc <_dtoa_r+0x98>
 8007100:	4ba5      	ldr	r3, [pc, #660]	; (8007398 <_dtoa_r+0x364>)
 8007102:	e7e1      	b.n	80070c8 <_dtoa_r+0x94>
 8007104:	ab1a      	add	r3, sp, #104	; 0x68
 8007106:	9301      	str	r3, [sp, #4]
 8007108:	ab1b      	add	r3, sp, #108	; 0x6c
 800710a:	9300      	str	r3, [sp, #0]
 800710c:	0038      	movs	r0, r7
 800710e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007110:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007112:	f001 fd73 	bl	8008bfc <__d2b>
 8007116:	006e      	lsls	r6, r5, #1
 8007118:	9005      	str	r0, [sp, #20]
 800711a:	0d76      	lsrs	r6, r6, #21
 800711c:	d100      	bne.n	8007120 <_dtoa_r+0xec>
 800711e:	e07c      	b.n	800721a <_dtoa_r+0x1e6>
 8007120:	9812      	ldr	r0, [sp, #72]	; 0x48
 8007122:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8007124:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007126:	4a9d      	ldr	r2, [pc, #628]	; (800739c <_dtoa_r+0x368>)
 8007128:	031b      	lsls	r3, r3, #12
 800712a:	0b1b      	lsrs	r3, r3, #12
 800712c:	431a      	orrs	r2, r3
 800712e:	0011      	movs	r1, r2
 8007130:	4b9b      	ldr	r3, [pc, #620]	; (80073a0 <_dtoa_r+0x36c>)
 8007132:	9418      	str	r4, [sp, #96]	; 0x60
 8007134:	18f6      	adds	r6, r6, r3
 8007136:	2200      	movs	r2, #0
 8007138:	4b9a      	ldr	r3, [pc, #616]	; (80073a4 <_dtoa_r+0x370>)
 800713a:	f7fb f9cd 	bl	80024d8 <__aeabi_dsub>
 800713e:	4a9a      	ldr	r2, [pc, #616]	; (80073a8 <_dtoa_r+0x374>)
 8007140:	4b9a      	ldr	r3, [pc, #616]	; (80073ac <_dtoa_r+0x378>)
 8007142:	f7fa ff5d 	bl	8002000 <__aeabi_dmul>
 8007146:	4a9a      	ldr	r2, [pc, #616]	; (80073b0 <_dtoa_r+0x37c>)
 8007148:	4b9a      	ldr	r3, [pc, #616]	; (80073b4 <_dtoa_r+0x380>)
 800714a:	f7fa f81b 	bl	8001184 <__aeabi_dadd>
 800714e:	0004      	movs	r4, r0
 8007150:	0030      	movs	r0, r6
 8007152:	000d      	movs	r5, r1
 8007154:	f7fb fda6 	bl	8002ca4 <__aeabi_i2d>
 8007158:	4a97      	ldr	r2, [pc, #604]	; (80073b8 <_dtoa_r+0x384>)
 800715a:	4b98      	ldr	r3, [pc, #608]	; (80073bc <_dtoa_r+0x388>)
 800715c:	f7fa ff50 	bl	8002000 <__aeabi_dmul>
 8007160:	0002      	movs	r2, r0
 8007162:	000b      	movs	r3, r1
 8007164:	0020      	movs	r0, r4
 8007166:	0029      	movs	r1, r5
 8007168:	f7fa f80c 	bl	8001184 <__aeabi_dadd>
 800716c:	0004      	movs	r4, r0
 800716e:	000d      	movs	r5, r1
 8007170:	f7fb fd62 	bl	8002c38 <__aeabi_d2iz>
 8007174:	2200      	movs	r2, #0
 8007176:	9002      	str	r0, [sp, #8]
 8007178:	2300      	movs	r3, #0
 800717a:	0020      	movs	r0, r4
 800717c:	0029      	movs	r1, r5
 800717e:	f7f9 f971 	bl	8000464 <__aeabi_dcmplt>
 8007182:	2800      	cmp	r0, #0
 8007184:	d00b      	beq.n	800719e <_dtoa_r+0x16a>
 8007186:	9802      	ldr	r0, [sp, #8]
 8007188:	f7fb fd8c 	bl	8002ca4 <__aeabi_i2d>
 800718c:	002b      	movs	r3, r5
 800718e:	0022      	movs	r2, r4
 8007190:	f7f9 f962 	bl	8000458 <__aeabi_dcmpeq>
 8007194:	4243      	negs	r3, r0
 8007196:	4158      	adcs	r0, r3
 8007198:	9b02      	ldr	r3, [sp, #8]
 800719a:	1a1b      	subs	r3, r3, r0
 800719c:	9302      	str	r3, [sp, #8]
 800719e:	2301      	movs	r3, #1
 80071a0:	9316      	str	r3, [sp, #88]	; 0x58
 80071a2:	9b02      	ldr	r3, [sp, #8]
 80071a4:	2b16      	cmp	r3, #22
 80071a6:	d80f      	bhi.n	80071c8 <_dtoa_r+0x194>
 80071a8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80071aa:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80071ac:	00da      	lsls	r2, r3, #3
 80071ae:	4b84      	ldr	r3, [pc, #528]	; (80073c0 <_dtoa_r+0x38c>)
 80071b0:	189b      	adds	r3, r3, r2
 80071b2:	681a      	ldr	r2, [r3, #0]
 80071b4:	685b      	ldr	r3, [r3, #4]
 80071b6:	f7f9 f955 	bl	8000464 <__aeabi_dcmplt>
 80071ba:	2800      	cmp	r0, #0
 80071bc:	d049      	beq.n	8007252 <_dtoa_r+0x21e>
 80071be:	9b02      	ldr	r3, [sp, #8]
 80071c0:	3b01      	subs	r3, #1
 80071c2:	9302      	str	r3, [sp, #8]
 80071c4:	2300      	movs	r3, #0
 80071c6:	9316      	str	r3, [sp, #88]	; 0x58
 80071c8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80071ca:	1b9e      	subs	r6, r3, r6
 80071cc:	2300      	movs	r3, #0
 80071ce:	930a      	str	r3, [sp, #40]	; 0x28
 80071d0:	0033      	movs	r3, r6
 80071d2:	3b01      	subs	r3, #1
 80071d4:	930d      	str	r3, [sp, #52]	; 0x34
 80071d6:	d504      	bpl.n	80071e2 <_dtoa_r+0x1ae>
 80071d8:	2301      	movs	r3, #1
 80071da:	1b9b      	subs	r3, r3, r6
 80071dc:	930a      	str	r3, [sp, #40]	; 0x28
 80071de:	2300      	movs	r3, #0
 80071e0:	930d      	str	r3, [sp, #52]	; 0x34
 80071e2:	9b02      	ldr	r3, [sp, #8]
 80071e4:	2b00      	cmp	r3, #0
 80071e6:	db36      	blt.n	8007256 <_dtoa_r+0x222>
 80071e8:	9a02      	ldr	r2, [sp, #8]
 80071ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80071ec:	4694      	mov	ip, r2
 80071ee:	4463      	add	r3, ip
 80071f0:	930d      	str	r3, [sp, #52]	; 0x34
 80071f2:	2300      	movs	r3, #0
 80071f4:	9215      	str	r2, [sp, #84]	; 0x54
 80071f6:	930e      	str	r3, [sp, #56]	; 0x38
 80071f8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80071fa:	2401      	movs	r4, #1
 80071fc:	2b09      	cmp	r3, #9
 80071fe:	d864      	bhi.n	80072ca <_dtoa_r+0x296>
 8007200:	2b05      	cmp	r3, #5
 8007202:	dd02      	ble.n	800720a <_dtoa_r+0x1d6>
 8007204:	2400      	movs	r4, #0
 8007206:	3b04      	subs	r3, #4
 8007208:	9322      	str	r3, [sp, #136]	; 0x88
 800720a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800720c:	1e98      	subs	r0, r3, #2
 800720e:	2803      	cmp	r0, #3
 8007210:	d864      	bhi.n	80072dc <_dtoa_r+0x2a8>
 8007212:	f7f8 ff87 	bl	8000124 <__gnu_thumb1_case_uqi>
 8007216:	3829      	.short	0x3829
 8007218:	5836      	.short	0x5836
 800721a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800721c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800721e:	189e      	adds	r6, r3, r2
 8007220:	4b68      	ldr	r3, [pc, #416]	; (80073c4 <_dtoa_r+0x390>)
 8007222:	18f2      	adds	r2, r6, r3
 8007224:	2a20      	cmp	r2, #32
 8007226:	dd0f      	ble.n	8007248 <_dtoa_r+0x214>
 8007228:	2340      	movs	r3, #64	; 0x40
 800722a:	1a9b      	subs	r3, r3, r2
 800722c:	409d      	lsls	r5, r3
 800722e:	4b66      	ldr	r3, [pc, #408]	; (80073c8 <_dtoa_r+0x394>)
 8007230:	9802      	ldr	r0, [sp, #8]
 8007232:	18f3      	adds	r3, r6, r3
 8007234:	40d8      	lsrs	r0, r3
 8007236:	4328      	orrs	r0, r5
 8007238:	f7fb fd64 	bl	8002d04 <__aeabi_ui2d>
 800723c:	2301      	movs	r3, #1
 800723e:	4c63      	ldr	r4, [pc, #396]	; (80073cc <_dtoa_r+0x398>)
 8007240:	3e01      	subs	r6, #1
 8007242:	1909      	adds	r1, r1, r4
 8007244:	9318      	str	r3, [sp, #96]	; 0x60
 8007246:	e776      	b.n	8007136 <_dtoa_r+0x102>
 8007248:	2320      	movs	r3, #32
 800724a:	9802      	ldr	r0, [sp, #8]
 800724c:	1a9b      	subs	r3, r3, r2
 800724e:	4098      	lsls	r0, r3
 8007250:	e7f2      	b.n	8007238 <_dtoa_r+0x204>
 8007252:	9016      	str	r0, [sp, #88]	; 0x58
 8007254:	e7b8      	b.n	80071c8 <_dtoa_r+0x194>
 8007256:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007258:	9a02      	ldr	r2, [sp, #8]
 800725a:	1a9b      	subs	r3, r3, r2
 800725c:	930a      	str	r3, [sp, #40]	; 0x28
 800725e:	4253      	negs	r3, r2
 8007260:	930e      	str	r3, [sp, #56]	; 0x38
 8007262:	2300      	movs	r3, #0
 8007264:	9315      	str	r3, [sp, #84]	; 0x54
 8007266:	e7c7      	b.n	80071f8 <_dtoa_r+0x1c4>
 8007268:	2300      	movs	r3, #0
 800726a:	930f      	str	r3, [sp, #60]	; 0x3c
 800726c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800726e:	930c      	str	r3, [sp, #48]	; 0x30
 8007270:	9307      	str	r3, [sp, #28]
 8007272:	2b00      	cmp	r3, #0
 8007274:	dc13      	bgt.n	800729e <_dtoa_r+0x26a>
 8007276:	2301      	movs	r3, #1
 8007278:	001a      	movs	r2, r3
 800727a:	930c      	str	r3, [sp, #48]	; 0x30
 800727c:	9307      	str	r3, [sp, #28]
 800727e:	9223      	str	r2, [sp, #140]	; 0x8c
 8007280:	e00d      	b.n	800729e <_dtoa_r+0x26a>
 8007282:	2301      	movs	r3, #1
 8007284:	e7f1      	b.n	800726a <_dtoa_r+0x236>
 8007286:	2300      	movs	r3, #0
 8007288:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800728a:	930f      	str	r3, [sp, #60]	; 0x3c
 800728c:	4694      	mov	ip, r2
 800728e:	9b02      	ldr	r3, [sp, #8]
 8007290:	4463      	add	r3, ip
 8007292:	930c      	str	r3, [sp, #48]	; 0x30
 8007294:	3301      	adds	r3, #1
 8007296:	9307      	str	r3, [sp, #28]
 8007298:	2b00      	cmp	r3, #0
 800729a:	dc00      	bgt.n	800729e <_dtoa_r+0x26a>
 800729c:	2301      	movs	r3, #1
 800729e:	2200      	movs	r2, #0
 80072a0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80072a2:	6042      	str	r2, [r0, #4]
 80072a4:	3204      	adds	r2, #4
 80072a6:	0015      	movs	r5, r2
 80072a8:	3514      	adds	r5, #20
 80072aa:	6841      	ldr	r1, [r0, #4]
 80072ac:	429d      	cmp	r5, r3
 80072ae:	d919      	bls.n	80072e4 <_dtoa_r+0x2b0>
 80072b0:	0038      	movs	r0, r7
 80072b2:	f001 f8ab 	bl	800840c <_Balloc>
 80072b6:	9006      	str	r0, [sp, #24]
 80072b8:	2800      	cmp	r0, #0
 80072ba:	d117      	bne.n	80072ec <_dtoa_r+0x2b8>
 80072bc:	21d5      	movs	r1, #213	; 0xd5
 80072be:	0002      	movs	r2, r0
 80072c0:	4b43      	ldr	r3, [pc, #268]	; (80073d0 <_dtoa_r+0x39c>)
 80072c2:	0049      	lsls	r1, r1, #1
 80072c4:	e6cb      	b.n	800705e <_dtoa_r+0x2a>
 80072c6:	2301      	movs	r3, #1
 80072c8:	e7de      	b.n	8007288 <_dtoa_r+0x254>
 80072ca:	2300      	movs	r3, #0
 80072cc:	940f      	str	r4, [sp, #60]	; 0x3c
 80072ce:	9322      	str	r3, [sp, #136]	; 0x88
 80072d0:	3b01      	subs	r3, #1
 80072d2:	930c      	str	r3, [sp, #48]	; 0x30
 80072d4:	9307      	str	r3, [sp, #28]
 80072d6:	2200      	movs	r2, #0
 80072d8:	3313      	adds	r3, #19
 80072da:	e7d0      	b.n	800727e <_dtoa_r+0x24a>
 80072dc:	2301      	movs	r3, #1
 80072de:	930f      	str	r3, [sp, #60]	; 0x3c
 80072e0:	3b02      	subs	r3, #2
 80072e2:	e7f6      	b.n	80072d2 <_dtoa_r+0x29e>
 80072e4:	3101      	adds	r1, #1
 80072e6:	6041      	str	r1, [r0, #4]
 80072e8:	0052      	lsls	r2, r2, #1
 80072ea:	e7dc      	b.n	80072a6 <_dtoa_r+0x272>
 80072ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072ee:	9a06      	ldr	r2, [sp, #24]
 80072f0:	601a      	str	r2, [r3, #0]
 80072f2:	9b07      	ldr	r3, [sp, #28]
 80072f4:	2b0e      	cmp	r3, #14
 80072f6:	d900      	bls.n	80072fa <_dtoa_r+0x2c6>
 80072f8:	e0eb      	b.n	80074d2 <_dtoa_r+0x49e>
 80072fa:	2c00      	cmp	r4, #0
 80072fc:	d100      	bne.n	8007300 <_dtoa_r+0x2cc>
 80072fe:	e0e8      	b.n	80074d2 <_dtoa_r+0x49e>
 8007300:	9b02      	ldr	r3, [sp, #8]
 8007302:	2b00      	cmp	r3, #0
 8007304:	dd68      	ble.n	80073d8 <_dtoa_r+0x3a4>
 8007306:	001a      	movs	r2, r3
 8007308:	210f      	movs	r1, #15
 800730a:	4b2d      	ldr	r3, [pc, #180]	; (80073c0 <_dtoa_r+0x38c>)
 800730c:	400a      	ands	r2, r1
 800730e:	00d2      	lsls	r2, r2, #3
 8007310:	189b      	adds	r3, r3, r2
 8007312:	681d      	ldr	r5, [r3, #0]
 8007314:	685e      	ldr	r6, [r3, #4]
 8007316:	9b02      	ldr	r3, [sp, #8]
 8007318:	111c      	asrs	r4, r3, #4
 800731a:	2302      	movs	r3, #2
 800731c:	9310      	str	r3, [sp, #64]	; 0x40
 800731e:	9b02      	ldr	r3, [sp, #8]
 8007320:	05db      	lsls	r3, r3, #23
 8007322:	d50b      	bpl.n	800733c <_dtoa_r+0x308>
 8007324:	4b2b      	ldr	r3, [pc, #172]	; (80073d4 <_dtoa_r+0x3a0>)
 8007326:	400c      	ands	r4, r1
 8007328:	6a1a      	ldr	r2, [r3, #32]
 800732a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800732c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800732e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8007330:	f7fa fa64 	bl	80017fc <__aeabi_ddiv>
 8007334:	2303      	movs	r3, #3
 8007336:	9008      	str	r0, [sp, #32]
 8007338:	9109      	str	r1, [sp, #36]	; 0x24
 800733a:	9310      	str	r3, [sp, #64]	; 0x40
 800733c:	4b25      	ldr	r3, [pc, #148]	; (80073d4 <_dtoa_r+0x3a0>)
 800733e:	9314      	str	r3, [sp, #80]	; 0x50
 8007340:	2c00      	cmp	r4, #0
 8007342:	d108      	bne.n	8007356 <_dtoa_r+0x322>
 8007344:	9808      	ldr	r0, [sp, #32]
 8007346:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007348:	002a      	movs	r2, r5
 800734a:	0033      	movs	r3, r6
 800734c:	f7fa fa56 	bl	80017fc <__aeabi_ddiv>
 8007350:	9008      	str	r0, [sp, #32]
 8007352:	9109      	str	r1, [sp, #36]	; 0x24
 8007354:	e05c      	b.n	8007410 <_dtoa_r+0x3dc>
 8007356:	2301      	movs	r3, #1
 8007358:	421c      	tst	r4, r3
 800735a:	d00b      	beq.n	8007374 <_dtoa_r+0x340>
 800735c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800735e:	0028      	movs	r0, r5
 8007360:	3301      	adds	r3, #1
 8007362:	9310      	str	r3, [sp, #64]	; 0x40
 8007364:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007366:	0031      	movs	r1, r6
 8007368:	681a      	ldr	r2, [r3, #0]
 800736a:	685b      	ldr	r3, [r3, #4]
 800736c:	f7fa fe48 	bl	8002000 <__aeabi_dmul>
 8007370:	0005      	movs	r5, r0
 8007372:	000e      	movs	r6, r1
 8007374:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007376:	1064      	asrs	r4, r4, #1
 8007378:	3308      	adds	r3, #8
 800737a:	e7e0      	b.n	800733e <_dtoa_r+0x30a>
 800737c:	0800a700 	.word	0x0800a700
 8007380:	0800a8be 	.word	0x0800a8be
 8007384:	7ff00000 	.word	0x7ff00000
 8007388:	0000270f 	.word	0x0000270f
 800738c:	0800a8ba 	.word	0x0800a8ba
 8007390:	0800a8bd 	.word	0x0800a8bd
 8007394:	0800ab11 	.word	0x0800ab11
 8007398:	0800ab12 	.word	0x0800ab12
 800739c:	3ff00000 	.word	0x3ff00000
 80073a0:	fffffc01 	.word	0xfffffc01
 80073a4:	3ff80000 	.word	0x3ff80000
 80073a8:	636f4361 	.word	0x636f4361
 80073ac:	3fd287a7 	.word	0x3fd287a7
 80073b0:	8b60c8b3 	.word	0x8b60c8b3
 80073b4:	3fc68a28 	.word	0x3fc68a28
 80073b8:	509f79fb 	.word	0x509f79fb
 80073bc:	3fd34413 	.word	0x3fd34413
 80073c0:	0800aa28 	.word	0x0800aa28
 80073c4:	00000432 	.word	0x00000432
 80073c8:	00000412 	.word	0x00000412
 80073cc:	fe100000 	.word	0xfe100000
 80073d0:	0800a919 	.word	0x0800a919
 80073d4:	0800aa00 	.word	0x0800aa00
 80073d8:	2302      	movs	r3, #2
 80073da:	9310      	str	r3, [sp, #64]	; 0x40
 80073dc:	9b02      	ldr	r3, [sp, #8]
 80073de:	2b00      	cmp	r3, #0
 80073e0:	d016      	beq.n	8007410 <_dtoa_r+0x3dc>
 80073e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80073e4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80073e6:	425c      	negs	r4, r3
 80073e8:	230f      	movs	r3, #15
 80073ea:	4ab6      	ldr	r2, [pc, #728]	; (80076c4 <_dtoa_r+0x690>)
 80073ec:	4023      	ands	r3, r4
 80073ee:	00db      	lsls	r3, r3, #3
 80073f0:	18d3      	adds	r3, r2, r3
 80073f2:	681a      	ldr	r2, [r3, #0]
 80073f4:	685b      	ldr	r3, [r3, #4]
 80073f6:	f7fa fe03 	bl	8002000 <__aeabi_dmul>
 80073fa:	2601      	movs	r6, #1
 80073fc:	2300      	movs	r3, #0
 80073fe:	9008      	str	r0, [sp, #32]
 8007400:	9109      	str	r1, [sp, #36]	; 0x24
 8007402:	4db1      	ldr	r5, [pc, #708]	; (80076c8 <_dtoa_r+0x694>)
 8007404:	1124      	asrs	r4, r4, #4
 8007406:	2c00      	cmp	r4, #0
 8007408:	d000      	beq.n	800740c <_dtoa_r+0x3d8>
 800740a:	e094      	b.n	8007536 <_dtoa_r+0x502>
 800740c:	2b00      	cmp	r3, #0
 800740e:	d19f      	bne.n	8007350 <_dtoa_r+0x31c>
 8007410:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8007412:	2b00      	cmp	r3, #0
 8007414:	d100      	bne.n	8007418 <_dtoa_r+0x3e4>
 8007416:	e09b      	b.n	8007550 <_dtoa_r+0x51c>
 8007418:	9c08      	ldr	r4, [sp, #32]
 800741a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800741c:	2200      	movs	r2, #0
 800741e:	0020      	movs	r0, r4
 8007420:	0029      	movs	r1, r5
 8007422:	4baa      	ldr	r3, [pc, #680]	; (80076cc <_dtoa_r+0x698>)
 8007424:	f7f9 f81e 	bl	8000464 <__aeabi_dcmplt>
 8007428:	2800      	cmp	r0, #0
 800742a:	d100      	bne.n	800742e <_dtoa_r+0x3fa>
 800742c:	e090      	b.n	8007550 <_dtoa_r+0x51c>
 800742e:	9b07      	ldr	r3, [sp, #28]
 8007430:	2b00      	cmp	r3, #0
 8007432:	d100      	bne.n	8007436 <_dtoa_r+0x402>
 8007434:	e08c      	b.n	8007550 <_dtoa_r+0x51c>
 8007436:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007438:	2b00      	cmp	r3, #0
 800743a:	dd46      	ble.n	80074ca <_dtoa_r+0x496>
 800743c:	9b02      	ldr	r3, [sp, #8]
 800743e:	2200      	movs	r2, #0
 8007440:	0020      	movs	r0, r4
 8007442:	0029      	movs	r1, r5
 8007444:	1e5e      	subs	r6, r3, #1
 8007446:	4ba2      	ldr	r3, [pc, #648]	; (80076d0 <_dtoa_r+0x69c>)
 8007448:	f7fa fdda 	bl	8002000 <__aeabi_dmul>
 800744c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800744e:	9008      	str	r0, [sp, #32]
 8007450:	9109      	str	r1, [sp, #36]	; 0x24
 8007452:	3301      	adds	r3, #1
 8007454:	9310      	str	r3, [sp, #64]	; 0x40
 8007456:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007458:	9810      	ldr	r0, [sp, #64]	; 0x40
 800745a:	9c08      	ldr	r4, [sp, #32]
 800745c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800745e:	9314      	str	r3, [sp, #80]	; 0x50
 8007460:	f7fb fc20 	bl	8002ca4 <__aeabi_i2d>
 8007464:	0022      	movs	r2, r4
 8007466:	002b      	movs	r3, r5
 8007468:	f7fa fdca 	bl	8002000 <__aeabi_dmul>
 800746c:	2200      	movs	r2, #0
 800746e:	4b99      	ldr	r3, [pc, #612]	; (80076d4 <_dtoa_r+0x6a0>)
 8007470:	f7f9 fe88 	bl	8001184 <__aeabi_dadd>
 8007474:	9010      	str	r0, [sp, #64]	; 0x40
 8007476:	9111      	str	r1, [sp, #68]	; 0x44
 8007478:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800747a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800747c:	9208      	str	r2, [sp, #32]
 800747e:	9309      	str	r3, [sp, #36]	; 0x24
 8007480:	4a95      	ldr	r2, [pc, #596]	; (80076d8 <_dtoa_r+0x6a4>)
 8007482:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007484:	4694      	mov	ip, r2
 8007486:	4463      	add	r3, ip
 8007488:	9317      	str	r3, [sp, #92]	; 0x5c
 800748a:	9309      	str	r3, [sp, #36]	; 0x24
 800748c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800748e:	2b00      	cmp	r3, #0
 8007490:	d161      	bne.n	8007556 <_dtoa_r+0x522>
 8007492:	2200      	movs	r2, #0
 8007494:	0020      	movs	r0, r4
 8007496:	0029      	movs	r1, r5
 8007498:	4b90      	ldr	r3, [pc, #576]	; (80076dc <_dtoa_r+0x6a8>)
 800749a:	f7fb f81d 	bl	80024d8 <__aeabi_dsub>
 800749e:	9a08      	ldr	r2, [sp, #32]
 80074a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80074a2:	0004      	movs	r4, r0
 80074a4:	000d      	movs	r5, r1
 80074a6:	f7f8 fff1 	bl	800048c <__aeabi_dcmpgt>
 80074aa:	2800      	cmp	r0, #0
 80074ac:	d000      	beq.n	80074b0 <_dtoa_r+0x47c>
 80074ae:	e2af      	b.n	8007a10 <_dtoa_r+0x9dc>
 80074b0:	488b      	ldr	r0, [pc, #556]	; (80076e0 <_dtoa_r+0x6ac>)
 80074b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80074b4:	4684      	mov	ip, r0
 80074b6:	4461      	add	r1, ip
 80074b8:	000b      	movs	r3, r1
 80074ba:	0020      	movs	r0, r4
 80074bc:	0029      	movs	r1, r5
 80074be:	9a08      	ldr	r2, [sp, #32]
 80074c0:	f7f8 ffd0 	bl	8000464 <__aeabi_dcmplt>
 80074c4:	2800      	cmp	r0, #0
 80074c6:	d000      	beq.n	80074ca <_dtoa_r+0x496>
 80074c8:	e29f      	b.n	8007a0a <_dtoa_r+0x9d6>
 80074ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80074cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80074ce:	9308      	str	r3, [sp, #32]
 80074d0:	9409      	str	r4, [sp, #36]	; 0x24
 80074d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	da00      	bge.n	80074da <_dtoa_r+0x4a6>
 80074d8:	e172      	b.n	80077c0 <_dtoa_r+0x78c>
 80074da:	9a02      	ldr	r2, [sp, #8]
 80074dc:	2a0e      	cmp	r2, #14
 80074de:	dd00      	ble.n	80074e2 <_dtoa_r+0x4ae>
 80074e0:	e16e      	b.n	80077c0 <_dtoa_r+0x78c>
 80074e2:	4b78      	ldr	r3, [pc, #480]	; (80076c4 <_dtoa_r+0x690>)
 80074e4:	00d2      	lsls	r2, r2, #3
 80074e6:	189b      	adds	r3, r3, r2
 80074e8:	685c      	ldr	r4, [r3, #4]
 80074ea:	681b      	ldr	r3, [r3, #0]
 80074ec:	930a      	str	r3, [sp, #40]	; 0x28
 80074ee:	940b      	str	r4, [sp, #44]	; 0x2c
 80074f0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	db00      	blt.n	80074f8 <_dtoa_r+0x4c4>
 80074f6:	e0f7      	b.n	80076e8 <_dtoa_r+0x6b4>
 80074f8:	9b07      	ldr	r3, [sp, #28]
 80074fa:	2b00      	cmp	r3, #0
 80074fc:	dd00      	ble.n	8007500 <_dtoa_r+0x4cc>
 80074fe:	e0f3      	b.n	80076e8 <_dtoa_r+0x6b4>
 8007500:	d000      	beq.n	8007504 <_dtoa_r+0x4d0>
 8007502:	e282      	b.n	8007a0a <_dtoa_r+0x9d6>
 8007504:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007506:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007508:	2200      	movs	r2, #0
 800750a:	4b74      	ldr	r3, [pc, #464]	; (80076dc <_dtoa_r+0x6a8>)
 800750c:	f7fa fd78 	bl	8002000 <__aeabi_dmul>
 8007510:	9a08      	ldr	r2, [sp, #32]
 8007512:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007514:	f7f8 ffc4 	bl	80004a0 <__aeabi_dcmpge>
 8007518:	9e07      	ldr	r6, [sp, #28]
 800751a:	0035      	movs	r5, r6
 800751c:	2800      	cmp	r0, #0
 800751e:	d000      	beq.n	8007522 <_dtoa_r+0x4ee>
 8007520:	e259      	b.n	80079d6 <_dtoa_r+0x9a2>
 8007522:	9b06      	ldr	r3, [sp, #24]
 8007524:	9a06      	ldr	r2, [sp, #24]
 8007526:	3301      	adds	r3, #1
 8007528:	9308      	str	r3, [sp, #32]
 800752a:	2331      	movs	r3, #49	; 0x31
 800752c:	7013      	strb	r3, [r2, #0]
 800752e:	9b02      	ldr	r3, [sp, #8]
 8007530:	3301      	adds	r3, #1
 8007532:	9302      	str	r3, [sp, #8]
 8007534:	e254      	b.n	80079e0 <_dtoa_r+0x9ac>
 8007536:	4234      	tst	r4, r6
 8007538:	d007      	beq.n	800754a <_dtoa_r+0x516>
 800753a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800753c:	3301      	adds	r3, #1
 800753e:	9310      	str	r3, [sp, #64]	; 0x40
 8007540:	682a      	ldr	r2, [r5, #0]
 8007542:	686b      	ldr	r3, [r5, #4]
 8007544:	f7fa fd5c 	bl	8002000 <__aeabi_dmul>
 8007548:	0033      	movs	r3, r6
 800754a:	1064      	asrs	r4, r4, #1
 800754c:	3508      	adds	r5, #8
 800754e:	e75a      	b.n	8007406 <_dtoa_r+0x3d2>
 8007550:	9e02      	ldr	r6, [sp, #8]
 8007552:	9b07      	ldr	r3, [sp, #28]
 8007554:	e780      	b.n	8007458 <_dtoa_r+0x424>
 8007556:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007558:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800755a:	1e5a      	subs	r2, r3, #1
 800755c:	4b59      	ldr	r3, [pc, #356]	; (80076c4 <_dtoa_r+0x690>)
 800755e:	00d2      	lsls	r2, r2, #3
 8007560:	189b      	adds	r3, r3, r2
 8007562:	681a      	ldr	r2, [r3, #0]
 8007564:	685b      	ldr	r3, [r3, #4]
 8007566:	2900      	cmp	r1, #0
 8007568:	d051      	beq.n	800760e <_dtoa_r+0x5da>
 800756a:	2000      	movs	r0, #0
 800756c:	495d      	ldr	r1, [pc, #372]	; (80076e4 <_dtoa_r+0x6b0>)
 800756e:	f7fa f945 	bl	80017fc <__aeabi_ddiv>
 8007572:	9a08      	ldr	r2, [sp, #32]
 8007574:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007576:	f7fa ffaf 	bl	80024d8 <__aeabi_dsub>
 800757a:	9a06      	ldr	r2, [sp, #24]
 800757c:	9b06      	ldr	r3, [sp, #24]
 800757e:	4694      	mov	ip, r2
 8007580:	9317      	str	r3, [sp, #92]	; 0x5c
 8007582:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007584:	9010      	str	r0, [sp, #64]	; 0x40
 8007586:	9111      	str	r1, [sp, #68]	; 0x44
 8007588:	4463      	add	r3, ip
 800758a:	9319      	str	r3, [sp, #100]	; 0x64
 800758c:	0029      	movs	r1, r5
 800758e:	0020      	movs	r0, r4
 8007590:	f7fb fb52 	bl	8002c38 <__aeabi_d2iz>
 8007594:	9014      	str	r0, [sp, #80]	; 0x50
 8007596:	f7fb fb85 	bl	8002ca4 <__aeabi_i2d>
 800759a:	0002      	movs	r2, r0
 800759c:	000b      	movs	r3, r1
 800759e:	0020      	movs	r0, r4
 80075a0:	0029      	movs	r1, r5
 80075a2:	f7fa ff99 	bl	80024d8 <__aeabi_dsub>
 80075a6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80075a8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80075aa:	3301      	adds	r3, #1
 80075ac:	9308      	str	r3, [sp, #32]
 80075ae:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80075b0:	0004      	movs	r4, r0
 80075b2:	3330      	adds	r3, #48	; 0x30
 80075b4:	7013      	strb	r3, [r2, #0]
 80075b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80075b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80075ba:	000d      	movs	r5, r1
 80075bc:	f7f8 ff52 	bl	8000464 <__aeabi_dcmplt>
 80075c0:	2800      	cmp	r0, #0
 80075c2:	d175      	bne.n	80076b0 <_dtoa_r+0x67c>
 80075c4:	0022      	movs	r2, r4
 80075c6:	002b      	movs	r3, r5
 80075c8:	2000      	movs	r0, #0
 80075ca:	4940      	ldr	r1, [pc, #256]	; (80076cc <_dtoa_r+0x698>)
 80075cc:	f7fa ff84 	bl	80024d8 <__aeabi_dsub>
 80075d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80075d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80075d4:	f7f8 ff46 	bl	8000464 <__aeabi_dcmplt>
 80075d8:	2800      	cmp	r0, #0
 80075da:	d000      	beq.n	80075de <_dtoa_r+0x5aa>
 80075dc:	e0d2      	b.n	8007784 <_dtoa_r+0x750>
 80075de:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80075e0:	9a08      	ldr	r2, [sp, #32]
 80075e2:	4293      	cmp	r3, r2
 80075e4:	d100      	bne.n	80075e8 <_dtoa_r+0x5b4>
 80075e6:	e770      	b.n	80074ca <_dtoa_r+0x496>
 80075e8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80075ea:	9911      	ldr	r1, [sp, #68]	; 0x44
 80075ec:	2200      	movs	r2, #0
 80075ee:	4b38      	ldr	r3, [pc, #224]	; (80076d0 <_dtoa_r+0x69c>)
 80075f0:	f7fa fd06 	bl	8002000 <__aeabi_dmul>
 80075f4:	4b36      	ldr	r3, [pc, #216]	; (80076d0 <_dtoa_r+0x69c>)
 80075f6:	9010      	str	r0, [sp, #64]	; 0x40
 80075f8:	9111      	str	r1, [sp, #68]	; 0x44
 80075fa:	2200      	movs	r2, #0
 80075fc:	0020      	movs	r0, r4
 80075fe:	0029      	movs	r1, r5
 8007600:	f7fa fcfe 	bl	8002000 <__aeabi_dmul>
 8007604:	9b08      	ldr	r3, [sp, #32]
 8007606:	0004      	movs	r4, r0
 8007608:	000d      	movs	r5, r1
 800760a:	9317      	str	r3, [sp, #92]	; 0x5c
 800760c:	e7be      	b.n	800758c <_dtoa_r+0x558>
 800760e:	9808      	ldr	r0, [sp, #32]
 8007610:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007612:	f7fa fcf5 	bl	8002000 <__aeabi_dmul>
 8007616:	9a06      	ldr	r2, [sp, #24]
 8007618:	9b06      	ldr	r3, [sp, #24]
 800761a:	4694      	mov	ip, r2
 800761c:	9308      	str	r3, [sp, #32]
 800761e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007620:	9010      	str	r0, [sp, #64]	; 0x40
 8007622:	9111      	str	r1, [sp, #68]	; 0x44
 8007624:	4463      	add	r3, ip
 8007626:	9319      	str	r3, [sp, #100]	; 0x64
 8007628:	0029      	movs	r1, r5
 800762a:	0020      	movs	r0, r4
 800762c:	f7fb fb04 	bl	8002c38 <__aeabi_d2iz>
 8007630:	9017      	str	r0, [sp, #92]	; 0x5c
 8007632:	f7fb fb37 	bl	8002ca4 <__aeabi_i2d>
 8007636:	0002      	movs	r2, r0
 8007638:	000b      	movs	r3, r1
 800763a:	0020      	movs	r0, r4
 800763c:	0029      	movs	r1, r5
 800763e:	f7fa ff4b 	bl	80024d8 <__aeabi_dsub>
 8007642:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007644:	9a08      	ldr	r2, [sp, #32]
 8007646:	3330      	adds	r3, #48	; 0x30
 8007648:	7013      	strb	r3, [r2, #0]
 800764a:	0013      	movs	r3, r2
 800764c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800764e:	3301      	adds	r3, #1
 8007650:	0004      	movs	r4, r0
 8007652:	000d      	movs	r5, r1
 8007654:	9308      	str	r3, [sp, #32]
 8007656:	4293      	cmp	r3, r2
 8007658:	d12c      	bne.n	80076b4 <_dtoa_r+0x680>
 800765a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800765c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800765e:	9a06      	ldr	r2, [sp, #24]
 8007660:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007662:	4694      	mov	ip, r2
 8007664:	4463      	add	r3, ip
 8007666:	2200      	movs	r2, #0
 8007668:	9308      	str	r3, [sp, #32]
 800766a:	4b1e      	ldr	r3, [pc, #120]	; (80076e4 <_dtoa_r+0x6b0>)
 800766c:	f7f9 fd8a 	bl	8001184 <__aeabi_dadd>
 8007670:	0002      	movs	r2, r0
 8007672:	000b      	movs	r3, r1
 8007674:	0020      	movs	r0, r4
 8007676:	0029      	movs	r1, r5
 8007678:	f7f8 ff08 	bl	800048c <__aeabi_dcmpgt>
 800767c:	2800      	cmp	r0, #0
 800767e:	d000      	beq.n	8007682 <_dtoa_r+0x64e>
 8007680:	e080      	b.n	8007784 <_dtoa_r+0x750>
 8007682:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8007684:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007686:	2000      	movs	r0, #0
 8007688:	4916      	ldr	r1, [pc, #88]	; (80076e4 <_dtoa_r+0x6b0>)
 800768a:	f7fa ff25 	bl	80024d8 <__aeabi_dsub>
 800768e:	0002      	movs	r2, r0
 8007690:	000b      	movs	r3, r1
 8007692:	0020      	movs	r0, r4
 8007694:	0029      	movs	r1, r5
 8007696:	f7f8 fee5 	bl	8000464 <__aeabi_dcmplt>
 800769a:	2800      	cmp	r0, #0
 800769c:	d100      	bne.n	80076a0 <_dtoa_r+0x66c>
 800769e:	e714      	b.n	80074ca <_dtoa_r+0x496>
 80076a0:	9b08      	ldr	r3, [sp, #32]
 80076a2:	001a      	movs	r2, r3
 80076a4:	3a01      	subs	r2, #1
 80076a6:	9208      	str	r2, [sp, #32]
 80076a8:	7812      	ldrb	r2, [r2, #0]
 80076aa:	2a30      	cmp	r2, #48	; 0x30
 80076ac:	d0f8      	beq.n	80076a0 <_dtoa_r+0x66c>
 80076ae:	9308      	str	r3, [sp, #32]
 80076b0:	9602      	str	r6, [sp, #8]
 80076b2:	e055      	b.n	8007760 <_dtoa_r+0x72c>
 80076b4:	2200      	movs	r2, #0
 80076b6:	4b06      	ldr	r3, [pc, #24]	; (80076d0 <_dtoa_r+0x69c>)
 80076b8:	f7fa fca2 	bl	8002000 <__aeabi_dmul>
 80076bc:	0004      	movs	r4, r0
 80076be:	000d      	movs	r5, r1
 80076c0:	e7b2      	b.n	8007628 <_dtoa_r+0x5f4>
 80076c2:	46c0      	nop			; (mov r8, r8)
 80076c4:	0800aa28 	.word	0x0800aa28
 80076c8:	0800aa00 	.word	0x0800aa00
 80076cc:	3ff00000 	.word	0x3ff00000
 80076d0:	40240000 	.word	0x40240000
 80076d4:	401c0000 	.word	0x401c0000
 80076d8:	fcc00000 	.word	0xfcc00000
 80076dc:	40140000 	.word	0x40140000
 80076e0:	7cc00000 	.word	0x7cc00000
 80076e4:	3fe00000 	.word	0x3fe00000
 80076e8:	9b07      	ldr	r3, [sp, #28]
 80076ea:	9e06      	ldr	r6, [sp, #24]
 80076ec:	3b01      	subs	r3, #1
 80076ee:	199b      	adds	r3, r3, r6
 80076f0:	930c      	str	r3, [sp, #48]	; 0x30
 80076f2:	9c08      	ldr	r4, [sp, #32]
 80076f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80076f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80076f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80076fa:	0020      	movs	r0, r4
 80076fc:	0029      	movs	r1, r5
 80076fe:	f7fa f87d 	bl	80017fc <__aeabi_ddiv>
 8007702:	f7fb fa99 	bl	8002c38 <__aeabi_d2iz>
 8007706:	9007      	str	r0, [sp, #28]
 8007708:	f7fb facc 	bl	8002ca4 <__aeabi_i2d>
 800770c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800770e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007710:	f7fa fc76 	bl	8002000 <__aeabi_dmul>
 8007714:	0002      	movs	r2, r0
 8007716:	000b      	movs	r3, r1
 8007718:	0020      	movs	r0, r4
 800771a:	0029      	movs	r1, r5
 800771c:	f7fa fedc 	bl	80024d8 <__aeabi_dsub>
 8007720:	0033      	movs	r3, r6
 8007722:	9a07      	ldr	r2, [sp, #28]
 8007724:	3601      	adds	r6, #1
 8007726:	3230      	adds	r2, #48	; 0x30
 8007728:	701a      	strb	r2, [r3, #0]
 800772a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800772c:	9608      	str	r6, [sp, #32]
 800772e:	429a      	cmp	r2, r3
 8007730:	d139      	bne.n	80077a6 <_dtoa_r+0x772>
 8007732:	0002      	movs	r2, r0
 8007734:	000b      	movs	r3, r1
 8007736:	f7f9 fd25 	bl	8001184 <__aeabi_dadd>
 800773a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800773c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800773e:	0004      	movs	r4, r0
 8007740:	000d      	movs	r5, r1
 8007742:	f7f8 fea3 	bl	800048c <__aeabi_dcmpgt>
 8007746:	2800      	cmp	r0, #0
 8007748:	d11b      	bne.n	8007782 <_dtoa_r+0x74e>
 800774a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800774c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800774e:	0020      	movs	r0, r4
 8007750:	0029      	movs	r1, r5
 8007752:	f7f8 fe81 	bl	8000458 <__aeabi_dcmpeq>
 8007756:	2800      	cmp	r0, #0
 8007758:	d002      	beq.n	8007760 <_dtoa_r+0x72c>
 800775a:	9b07      	ldr	r3, [sp, #28]
 800775c:	07db      	lsls	r3, r3, #31
 800775e:	d410      	bmi.n	8007782 <_dtoa_r+0x74e>
 8007760:	0038      	movs	r0, r7
 8007762:	9905      	ldr	r1, [sp, #20]
 8007764:	f000 fe96 	bl	8008494 <_Bfree>
 8007768:	2300      	movs	r3, #0
 800776a:	9a08      	ldr	r2, [sp, #32]
 800776c:	9802      	ldr	r0, [sp, #8]
 800776e:	7013      	strb	r3, [r2, #0]
 8007770:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8007772:	3001      	adds	r0, #1
 8007774:	6018      	str	r0, [r3, #0]
 8007776:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8007778:	2b00      	cmp	r3, #0
 800777a:	d100      	bne.n	800777e <_dtoa_r+0x74a>
 800777c:	e4a6      	b.n	80070cc <_dtoa_r+0x98>
 800777e:	601a      	str	r2, [r3, #0]
 8007780:	e4a4      	b.n	80070cc <_dtoa_r+0x98>
 8007782:	9e02      	ldr	r6, [sp, #8]
 8007784:	9b08      	ldr	r3, [sp, #32]
 8007786:	9308      	str	r3, [sp, #32]
 8007788:	3b01      	subs	r3, #1
 800778a:	781a      	ldrb	r2, [r3, #0]
 800778c:	2a39      	cmp	r2, #57	; 0x39
 800778e:	d106      	bne.n	800779e <_dtoa_r+0x76a>
 8007790:	9a06      	ldr	r2, [sp, #24]
 8007792:	429a      	cmp	r2, r3
 8007794:	d1f7      	bne.n	8007786 <_dtoa_r+0x752>
 8007796:	2230      	movs	r2, #48	; 0x30
 8007798:	9906      	ldr	r1, [sp, #24]
 800779a:	3601      	adds	r6, #1
 800779c:	700a      	strb	r2, [r1, #0]
 800779e:	781a      	ldrb	r2, [r3, #0]
 80077a0:	3201      	adds	r2, #1
 80077a2:	701a      	strb	r2, [r3, #0]
 80077a4:	e784      	b.n	80076b0 <_dtoa_r+0x67c>
 80077a6:	2200      	movs	r2, #0
 80077a8:	4baa      	ldr	r3, [pc, #680]	; (8007a54 <_dtoa_r+0xa20>)
 80077aa:	f7fa fc29 	bl	8002000 <__aeabi_dmul>
 80077ae:	2200      	movs	r2, #0
 80077b0:	2300      	movs	r3, #0
 80077b2:	0004      	movs	r4, r0
 80077b4:	000d      	movs	r5, r1
 80077b6:	f7f8 fe4f 	bl	8000458 <__aeabi_dcmpeq>
 80077ba:	2800      	cmp	r0, #0
 80077bc:	d09b      	beq.n	80076f6 <_dtoa_r+0x6c2>
 80077be:	e7cf      	b.n	8007760 <_dtoa_r+0x72c>
 80077c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80077c2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80077c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80077c6:	2d00      	cmp	r5, #0
 80077c8:	d012      	beq.n	80077f0 <_dtoa_r+0x7bc>
 80077ca:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80077cc:	2a01      	cmp	r2, #1
 80077ce:	dc66      	bgt.n	800789e <_dtoa_r+0x86a>
 80077d0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80077d2:	2a00      	cmp	r2, #0
 80077d4:	d05d      	beq.n	8007892 <_dtoa_r+0x85e>
 80077d6:	4aa0      	ldr	r2, [pc, #640]	; (8007a58 <_dtoa_r+0xa24>)
 80077d8:	189b      	adds	r3, r3, r2
 80077da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80077dc:	2101      	movs	r1, #1
 80077de:	18d2      	adds	r2, r2, r3
 80077e0:	920a      	str	r2, [sp, #40]	; 0x28
 80077e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80077e4:	0038      	movs	r0, r7
 80077e6:	18d3      	adds	r3, r2, r3
 80077e8:	930d      	str	r3, [sp, #52]	; 0x34
 80077ea:	f000 ff4f 	bl	800868c <__i2b>
 80077ee:	0005      	movs	r5, r0
 80077f0:	2c00      	cmp	r4, #0
 80077f2:	dd0e      	ble.n	8007812 <_dtoa_r+0x7de>
 80077f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80077f6:	2b00      	cmp	r3, #0
 80077f8:	dd0b      	ble.n	8007812 <_dtoa_r+0x7de>
 80077fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80077fc:	0023      	movs	r3, r4
 80077fe:	4294      	cmp	r4, r2
 8007800:	dd00      	ble.n	8007804 <_dtoa_r+0x7d0>
 8007802:	0013      	movs	r3, r2
 8007804:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007806:	1ae4      	subs	r4, r4, r3
 8007808:	1ad2      	subs	r2, r2, r3
 800780a:	920a      	str	r2, [sp, #40]	; 0x28
 800780c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800780e:	1ad3      	subs	r3, r2, r3
 8007810:	930d      	str	r3, [sp, #52]	; 0x34
 8007812:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007814:	2b00      	cmp	r3, #0
 8007816:	d01f      	beq.n	8007858 <_dtoa_r+0x824>
 8007818:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800781a:	2b00      	cmp	r3, #0
 800781c:	d054      	beq.n	80078c8 <_dtoa_r+0x894>
 800781e:	2e00      	cmp	r6, #0
 8007820:	dd11      	ble.n	8007846 <_dtoa_r+0x812>
 8007822:	0029      	movs	r1, r5
 8007824:	0032      	movs	r2, r6
 8007826:	0038      	movs	r0, r7
 8007828:	f000 fff6 	bl	8008818 <__pow5mult>
 800782c:	9a05      	ldr	r2, [sp, #20]
 800782e:	0001      	movs	r1, r0
 8007830:	0005      	movs	r5, r0
 8007832:	0038      	movs	r0, r7
 8007834:	f000 ff40 	bl	80086b8 <__multiply>
 8007838:	9905      	ldr	r1, [sp, #20]
 800783a:	9014      	str	r0, [sp, #80]	; 0x50
 800783c:	0038      	movs	r0, r7
 800783e:	f000 fe29 	bl	8008494 <_Bfree>
 8007842:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007844:	9305      	str	r3, [sp, #20]
 8007846:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007848:	1b9a      	subs	r2, r3, r6
 800784a:	42b3      	cmp	r3, r6
 800784c:	d004      	beq.n	8007858 <_dtoa_r+0x824>
 800784e:	0038      	movs	r0, r7
 8007850:	9905      	ldr	r1, [sp, #20]
 8007852:	f000 ffe1 	bl	8008818 <__pow5mult>
 8007856:	9005      	str	r0, [sp, #20]
 8007858:	2101      	movs	r1, #1
 800785a:	0038      	movs	r0, r7
 800785c:	f000 ff16 	bl	800868c <__i2b>
 8007860:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007862:	0006      	movs	r6, r0
 8007864:	2b00      	cmp	r3, #0
 8007866:	dd31      	ble.n	80078cc <_dtoa_r+0x898>
 8007868:	001a      	movs	r2, r3
 800786a:	0001      	movs	r1, r0
 800786c:	0038      	movs	r0, r7
 800786e:	f000 ffd3 	bl	8008818 <__pow5mult>
 8007872:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007874:	0006      	movs	r6, r0
 8007876:	2b01      	cmp	r3, #1
 8007878:	dd2d      	ble.n	80078d6 <_dtoa_r+0x8a2>
 800787a:	2300      	movs	r3, #0
 800787c:	930e      	str	r3, [sp, #56]	; 0x38
 800787e:	6933      	ldr	r3, [r6, #16]
 8007880:	3303      	adds	r3, #3
 8007882:	009b      	lsls	r3, r3, #2
 8007884:	18f3      	adds	r3, r6, r3
 8007886:	6858      	ldr	r0, [r3, #4]
 8007888:	f000 feb8 	bl	80085fc <__hi0bits>
 800788c:	2320      	movs	r3, #32
 800788e:	1a18      	subs	r0, r3, r0
 8007890:	e039      	b.n	8007906 <_dtoa_r+0x8d2>
 8007892:	2336      	movs	r3, #54	; 0x36
 8007894:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8007896:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8007898:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800789a:	1a9b      	subs	r3, r3, r2
 800789c:	e79d      	b.n	80077da <_dtoa_r+0x7a6>
 800789e:	9b07      	ldr	r3, [sp, #28]
 80078a0:	1e5e      	subs	r6, r3, #1
 80078a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80078a4:	42b3      	cmp	r3, r6
 80078a6:	db07      	blt.n	80078b8 <_dtoa_r+0x884>
 80078a8:	1b9e      	subs	r6, r3, r6
 80078aa:	9b07      	ldr	r3, [sp, #28]
 80078ac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80078ae:	2b00      	cmp	r3, #0
 80078b0:	da93      	bge.n	80077da <_dtoa_r+0x7a6>
 80078b2:	1ae4      	subs	r4, r4, r3
 80078b4:	2300      	movs	r3, #0
 80078b6:	e790      	b.n	80077da <_dtoa_r+0x7a6>
 80078b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80078ba:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80078bc:	1af3      	subs	r3, r6, r3
 80078be:	18d3      	adds	r3, r2, r3
 80078c0:	960e      	str	r6, [sp, #56]	; 0x38
 80078c2:	9315      	str	r3, [sp, #84]	; 0x54
 80078c4:	2600      	movs	r6, #0
 80078c6:	e7f0      	b.n	80078aa <_dtoa_r+0x876>
 80078c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80078ca:	e7c0      	b.n	800784e <_dtoa_r+0x81a>
 80078cc:	2300      	movs	r3, #0
 80078ce:	930e      	str	r3, [sp, #56]	; 0x38
 80078d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80078d2:	2b01      	cmp	r3, #1
 80078d4:	dc13      	bgt.n	80078fe <_dtoa_r+0x8ca>
 80078d6:	2300      	movs	r3, #0
 80078d8:	930e      	str	r3, [sp, #56]	; 0x38
 80078da:	9b08      	ldr	r3, [sp, #32]
 80078dc:	2b00      	cmp	r3, #0
 80078de:	d10e      	bne.n	80078fe <_dtoa_r+0x8ca>
 80078e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80078e2:	031b      	lsls	r3, r3, #12
 80078e4:	d10b      	bne.n	80078fe <_dtoa_r+0x8ca>
 80078e6:	4b5d      	ldr	r3, [pc, #372]	; (8007a5c <_dtoa_r+0xa28>)
 80078e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80078ea:	4213      	tst	r3, r2
 80078ec:	d007      	beq.n	80078fe <_dtoa_r+0x8ca>
 80078ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80078f0:	3301      	adds	r3, #1
 80078f2:	930a      	str	r3, [sp, #40]	; 0x28
 80078f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80078f6:	3301      	adds	r3, #1
 80078f8:	930d      	str	r3, [sp, #52]	; 0x34
 80078fa:	2301      	movs	r3, #1
 80078fc:	930e      	str	r3, [sp, #56]	; 0x38
 80078fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007900:	2001      	movs	r0, #1
 8007902:	2b00      	cmp	r3, #0
 8007904:	d1bb      	bne.n	800787e <_dtoa_r+0x84a>
 8007906:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007908:	221f      	movs	r2, #31
 800790a:	1818      	adds	r0, r3, r0
 800790c:	0003      	movs	r3, r0
 800790e:	4013      	ands	r3, r2
 8007910:	4210      	tst	r0, r2
 8007912:	d046      	beq.n	80079a2 <_dtoa_r+0x96e>
 8007914:	3201      	adds	r2, #1
 8007916:	1ad2      	subs	r2, r2, r3
 8007918:	2a04      	cmp	r2, #4
 800791a:	dd3f      	ble.n	800799c <_dtoa_r+0x968>
 800791c:	221c      	movs	r2, #28
 800791e:	1ad3      	subs	r3, r2, r3
 8007920:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007922:	18e4      	adds	r4, r4, r3
 8007924:	18d2      	adds	r2, r2, r3
 8007926:	920a      	str	r2, [sp, #40]	; 0x28
 8007928:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800792a:	18d3      	adds	r3, r2, r3
 800792c:	930d      	str	r3, [sp, #52]	; 0x34
 800792e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007930:	2b00      	cmp	r3, #0
 8007932:	dd05      	ble.n	8007940 <_dtoa_r+0x90c>
 8007934:	001a      	movs	r2, r3
 8007936:	0038      	movs	r0, r7
 8007938:	9905      	ldr	r1, [sp, #20]
 800793a:	f000 ffc9 	bl	80088d0 <__lshift>
 800793e:	9005      	str	r0, [sp, #20]
 8007940:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007942:	2b00      	cmp	r3, #0
 8007944:	dd05      	ble.n	8007952 <_dtoa_r+0x91e>
 8007946:	0031      	movs	r1, r6
 8007948:	001a      	movs	r2, r3
 800794a:	0038      	movs	r0, r7
 800794c:	f000 ffc0 	bl	80088d0 <__lshift>
 8007950:	0006      	movs	r6, r0
 8007952:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8007954:	2b00      	cmp	r3, #0
 8007956:	d026      	beq.n	80079a6 <_dtoa_r+0x972>
 8007958:	0031      	movs	r1, r6
 800795a:	9805      	ldr	r0, [sp, #20]
 800795c:	f001 f826 	bl	80089ac <__mcmp>
 8007960:	2800      	cmp	r0, #0
 8007962:	da20      	bge.n	80079a6 <_dtoa_r+0x972>
 8007964:	9b02      	ldr	r3, [sp, #8]
 8007966:	220a      	movs	r2, #10
 8007968:	3b01      	subs	r3, #1
 800796a:	9302      	str	r3, [sp, #8]
 800796c:	0038      	movs	r0, r7
 800796e:	2300      	movs	r3, #0
 8007970:	9905      	ldr	r1, [sp, #20]
 8007972:	f000 fdb3 	bl	80084dc <__multadd>
 8007976:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007978:	9005      	str	r0, [sp, #20]
 800797a:	2b00      	cmp	r3, #0
 800797c:	d100      	bne.n	8007980 <_dtoa_r+0x94c>
 800797e:	e166      	b.n	8007c4e <_dtoa_r+0xc1a>
 8007980:	2300      	movs	r3, #0
 8007982:	0029      	movs	r1, r5
 8007984:	220a      	movs	r2, #10
 8007986:	0038      	movs	r0, r7
 8007988:	f000 fda8 	bl	80084dc <__multadd>
 800798c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800798e:	0005      	movs	r5, r0
 8007990:	2b00      	cmp	r3, #0
 8007992:	dc47      	bgt.n	8007a24 <_dtoa_r+0x9f0>
 8007994:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007996:	2b02      	cmp	r3, #2
 8007998:	dc0d      	bgt.n	80079b6 <_dtoa_r+0x982>
 800799a:	e043      	b.n	8007a24 <_dtoa_r+0x9f0>
 800799c:	2a04      	cmp	r2, #4
 800799e:	d0c6      	beq.n	800792e <_dtoa_r+0x8fa>
 80079a0:	0013      	movs	r3, r2
 80079a2:	331c      	adds	r3, #28
 80079a4:	e7bc      	b.n	8007920 <_dtoa_r+0x8ec>
 80079a6:	9b07      	ldr	r3, [sp, #28]
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	dc35      	bgt.n	8007a18 <_dtoa_r+0x9e4>
 80079ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80079ae:	2b02      	cmp	r3, #2
 80079b0:	dd32      	ble.n	8007a18 <_dtoa_r+0x9e4>
 80079b2:	9b07      	ldr	r3, [sp, #28]
 80079b4:	930c      	str	r3, [sp, #48]	; 0x30
 80079b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80079b8:	2b00      	cmp	r3, #0
 80079ba:	d10c      	bne.n	80079d6 <_dtoa_r+0x9a2>
 80079bc:	0031      	movs	r1, r6
 80079be:	2205      	movs	r2, #5
 80079c0:	0038      	movs	r0, r7
 80079c2:	f000 fd8b 	bl	80084dc <__multadd>
 80079c6:	0006      	movs	r6, r0
 80079c8:	0001      	movs	r1, r0
 80079ca:	9805      	ldr	r0, [sp, #20]
 80079cc:	f000 ffee 	bl	80089ac <__mcmp>
 80079d0:	2800      	cmp	r0, #0
 80079d2:	dd00      	ble.n	80079d6 <_dtoa_r+0x9a2>
 80079d4:	e5a5      	b.n	8007522 <_dtoa_r+0x4ee>
 80079d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80079d8:	43db      	mvns	r3, r3
 80079da:	9302      	str	r3, [sp, #8]
 80079dc:	9b06      	ldr	r3, [sp, #24]
 80079de:	9308      	str	r3, [sp, #32]
 80079e0:	2400      	movs	r4, #0
 80079e2:	0031      	movs	r1, r6
 80079e4:	0038      	movs	r0, r7
 80079e6:	f000 fd55 	bl	8008494 <_Bfree>
 80079ea:	2d00      	cmp	r5, #0
 80079ec:	d100      	bne.n	80079f0 <_dtoa_r+0x9bc>
 80079ee:	e6b7      	b.n	8007760 <_dtoa_r+0x72c>
 80079f0:	2c00      	cmp	r4, #0
 80079f2:	d005      	beq.n	8007a00 <_dtoa_r+0x9cc>
 80079f4:	42ac      	cmp	r4, r5
 80079f6:	d003      	beq.n	8007a00 <_dtoa_r+0x9cc>
 80079f8:	0021      	movs	r1, r4
 80079fa:	0038      	movs	r0, r7
 80079fc:	f000 fd4a 	bl	8008494 <_Bfree>
 8007a00:	0029      	movs	r1, r5
 8007a02:	0038      	movs	r0, r7
 8007a04:	f000 fd46 	bl	8008494 <_Bfree>
 8007a08:	e6aa      	b.n	8007760 <_dtoa_r+0x72c>
 8007a0a:	2600      	movs	r6, #0
 8007a0c:	0035      	movs	r5, r6
 8007a0e:	e7e2      	b.n	80079d6 <_dtoa_r+0x9a2>
 8007a10:	9602      	str	r6, [sp, #8]
 8007a12:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8007a14:	0035      	movs	r5, r6
 8007a16:	e584      	b.n	8007522 <_dtoa_r+0x4ee>
 8007a18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007a1a:	2b00      	cmp	r3, #0
 8007a1c:	d100      	bne.n	8007a20 <_dtoa_r+0x9ec>
 8007a1e:	e0ce      	b.n	8007bbe <_dtoa_r+0xb8a>
 8007a20:	9b07      	ldr	r3, [sp, #28]
 8007a22:	930c      	str	r3, [sp, #48]	; 0x30
 8007a24:	2c00      	cmp	r4, #0
 8007a26:	dd05      	ble.n	8007a34 <_dtoa_r+0xa00>
 8007a28:	0029      	movs	r1, r5
 8007a2a:	0022      	movs	r2, r4
 8007a2c:	0038      	movs	r0, r7
 8007a2e:	f000 ff4f 	bl	80088d0 <__lshift>
 8007a32:	0005      	movs	r5, r0
 8007a34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007a36:	0028      	movs	r0, r5
 8007a38:	2b00      	cmp	r3, #0
 8007a3a:	d022      	beq.n	8007a82 <_dtoa_r+0xa4e>
 8007a3c:	0038      	movs	r0, r7
 8007a3e:	6869      	ldr	r1, [r5, #4]
 8007a40:	f000 fce4 	bl	800840c <_Balloc>
 8007a44:	1e04      	subs	r4, r0, #0
 8007a46:	d10f      	bne.n	8007a68 <_dtoa_r+0xa34>
 8007a48:	0002      	movs	r2, r0
 8007a4a:	4b05      	ldr	r3, [pc, #20]	; (8007a60 <_dtoa_r+0xa2c>)
 8007a4c:	4905      	ldr	r1, [pc, #20]	; (8007a64 <_dtoa_r+0xa30>)
 8007a4e:	f7ff fb06 	bl	800705e <_dtoa_r+0x2a>
 8007a52:	46c0      	nop			; (mov r8, r8)
 8007a54:	40240000 	.word	0x40240000
 8007a58:	00000433 	.word	0x00000433
 8007a5c:	7ff00000 	.word	0x7ff00000
 8007a60:	0800a919 	.word	0x0800a919
 8007a64:	000002ea 	.word	0x000002ea
 8007a68:	0029      	movs	r1, r5
 8007a6a:	692b      	ldr	r3, [r5, #16]
 8007a6c:	310c      	adds	r1, #12
 8007a6e:	1c9a      	adds	r2, r3, #2
 8007a70:	0092      	lsls	r2, r2, #2
 8007a72:	300c      	adds	r0, #12
 8007a74:	f000 fcb1 	bl	80083da <memcpy>
 8007a78:	2201      	movs	r2, #1
 8007a7a:	0021      	movs	r1, r4
 8007a7c:	0038      	movs	r0, r7
 8007a7e:	f000 ff27 	bl	80088d0 <__lshift>
 8007a82:	9b06      	ldr	r3, [sp, #24]
 8007a84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007a86:	930a      	str	r3, [sp, #40]	; 0x28
 8007a88:	3b01      	subs	r3, #1
 8007a8a:	189b      	adds	r3, r3, r2
 8007a8c:	2201      	movs	r2, #1
 8007a8e:	002c      	movs	r4, r5
 8007a90:	0005      	movs	r5, r0
 8007a92:	9314      	str	r3, [sp, #80]	; 0x50
 8007a94:	9b08      	ldr	r3, [sp, #32]
 8007a96:	4013      	ands	r3, r2
 8007a98:	930f      	str	r3, [sp, #60]	; 0x3c
 8007a9a:	0031      	movs	r1, r6
 8007a9c:	9805      	ldr	r0, [sp, #20]
 8007a9e:	f7ff fa3d 	bl	8006f1c <quorem>
 8007aa2:	0003      	movs	r3, r0
 8007aa4:	0021      	movs	r1, r4
 8007aa6:	3330      	adds	r3, #48	; 0x30
 8007aa8:	900d      	str	r0, [sp, #52]	; 0x34
 8007aaa:	9805      	ldr	r0, [sp, #20]
 8007aac:	9307      	str	r3, [sp, #28]
 8007aae:	f000 ff7d 	bl	80089ac <__mcmp>
 8007ab2:	002a      	movs	r2, r5
 8007ab4:	900e      	str	r0, [sp, #56]	; 0x38
 8007ab6:	0031      	movs	r1, r6
 8007ab8:	0038      	movs	r0, r7
 8007aba:	f000 ff93 	bl	80089e4 <__mdiff>
 8007abe:	68c3      	ldr	r3, [r0, #12]
 8007ac0:	9008      	str	r0, [sp, #32]
 8007ac2:	9310      	str	r3, [sp, #64]	; 0x40
 8007ac4:	2301      	movs	r3, #1
 8007ac6:	930c      	str	r3, [sp, #48]	; 0x30
 8007ac8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007aca:	2b00      	cmp	r3, #0
 8007acc:	d104      	bne.n	8007ad8 <_dtoa_r+0xaa4>
 8007ace:	0001      	movs	r1, r0
 8007ad0:	9805      	ldr	r0, [sp, #20]
 8007ad2:	f000 ff6b 	bl	80089ac <__mcmp>
 8007ad6:	900c      	str	r0, [sp, #48]	; 0x30
 8007ad8:	0038      	movs	r0, r7
 8007ada:	9908      	ldr	r1, [sp, #32]
 8007adc:	f000 fcda 	bl	8008494 <_Bfree>
 8007ae0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007ae2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007ae4:	3301      	adds	r3, #1
 8007ae6:	9308      	str	r3, [sp, #32]
 8007ae8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007aea:	4313      	orrs	r3, r2
 8007aec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007aee:	4313      	orrs	r3, r2
 8007af0:	d10c      	bne.n	8007b0c <_dtoa_r+0xad8>
 8007af2:	9b07      	ldr	r3, [sp, #28]
 8007af4:	2b39      	cmp	r3, #57	; 0x39
 8007af6:	d026      	beq.n	8007b46 <_dtoa_r+0xb12>
 8007af8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007afa:	2b00      	cmp	r3, #0
 8007afc:	dd02      	ble.n	8007b04 <_dtoa_r+0xad0>
 8007afe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007b00:	3331      	adds	r3, #49	; 0x31
 8007b02:	9307      	str	r3, [sp, #28]
 8007b04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007b06:	9a07      	ldr	r2, [sp, #28]
 8007b08:	701a      	strb	r2, [r3, #0]
 8007b0a:	e76a      	b.n	80079e2 <_dtoa_r+0x9ae>
 8007b0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007b0e:	2b00      	cmp	r3, #0
 8007b10:	db04      	blt.n	8007b1c <_dtoa_r+0xae8>
 8007b12:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8007b14:	4313      	orrs	r3, r2
 8007b16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007b18:	4313      	orrs	r3, r2
 8007b1a:	d11f      	bne.n	8007b5c <_dtoa_r+0xb28>
 8007b1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007b1e:	2b00      	cmp	r3, #0
 8007b20:	ddf0      	ble.n	8007b04 <_dtoa_r+0xad0>
 8007b22:	9905      	ldr	r1, [sp, #20]
 8007b24:	2201      	movs	r2, #1
 8007b26:	0038      	movs	r0, r7
 8007b28:	f000 fed2 	bl	80088d0 <__lshift>
 8007b2c:	0031      	movs	r1, r6
 8007b2e:	9005      	str	r0, [sp, #20]
 8007b30:	f000 ff3c 	bl	80089ac <__mcmp>
 8007b34:	2800      	cmp	r0, #0
 8007b36:	dc03      	bgt.n	8007b40 <_dtoa_r+0xb0c>
 8007b38:	d1e4      	bne.n	8007b04 <_dtoa_r+0xad0>
 8007b3a:	9b07      	ldr	r3, [sp, #28]
 8007b3c:	07db      	lsls	r3, r3, #31
 8007b3e:	d5e1      	bpl.n	8007b04 <_dtoa_r+0xad0>
 8007b40:	9b07      	ldr	r3, [sp, #28]
 8007b42:	2b39      	cmp	r3, #57	; 0x39
 8007b44:	d1db      	bne.n	8007afe <_dtoa_r+0xaca>
 8007b46:	2339      	movs	r3, #57	; 0x39
 8007b48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007b4a:	7013      	strb	r3, [r2, #0]
 8007b4c:	9b08      	ldr	r3, [sp, #32]
 8007b4e:	9308      	str	r3, [sp, #32]
 8007b50:	3b01      	subs	r3, #1
 8007b52:	781a      	ldrb	r2, [r3, #0]
 8007b54:	2a39      	cmp	r2, #57	; 0x39
 8007b56:	d068      	beq.n	8007c2a <_dtoa_r+0xbf6>
 8007b58:	3201      	adds	r2, #1
 8007b5a:	e7d5      	b.n	8007b08 <_dtoa_r+0xad4>
 8007b5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007b5e:	2b00      	cmp	r3, #0
 8007b60:	dd07      	ble.n	8007b72 <_dtoa_r+0xb3e>
 8007b62:	9b07      	ldr	r3, [sp, #28]
 8007b64:	2b39      	cmp	r3, #57	; 0x39
 8007b66:	d0ee      	beq.n	8007b46 <_dtoa_r+0xb12>
 8007b68:	9b07      	ldr	r3, [sp, #28]
 8007b6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007b6c:	3301      	adds	r3, #1
 8007b6e:	7013      	strb	r3, [r2, #0]
 8007b70:	e737      	b.n	80079e2 <_dtoa_r+0x9ae>
 8007b72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007b74:	9a07      	ldr	r2, [sp, #28]
 8007b76:	701a      	strb	r2, [r3, #0]
 8007b78:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007b7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007b7c:	4293      	cmp	r3, r2
 8007b7e:	d03e      	beq.n	8007bfe <_dtoa_r+0xbca>
 8007b80:	2300      	movs	r3, #0
 8007b82:	220a      	movs	r2, #10
 8007b84:	9905      	ldr	r1, [sp, #20]
 8007b86:	0038      	movs	r0, r7
 8007b88:	f000 fca8 	bl	80084dc <__multadd>
 8007b8c:	2300      	movs	r3, #0
 8007b8e:	9005      	str	r0, [sp, #20]
 8007b90:	220a      	movs	r2, #10
 8007b92:	0021      	movs	r1, r4
 8007b94:	0038      	movs	r0, r7
 8007b96:	42ac      	cmp	r4, r5
 8007b98:	d106      	bne.n	8007ba8 <_dtoa_r+0xb74>
 8007b9a:	f000 fc9f 	bl	80084dc <__multadd>
 8007b9e:	0004      	movs	r4, r0
 8007ba0:	0005      	movs	r5, r0
 8007ba2:	9b08      	ldr	r3, [sp, #32]
 8007ba4:	930a      	str	r3, [sp, #40]	; 0x28
 8007ba6:	e778      	b.n	8007a9a <_dtoa_r+0xa66>
 8007ba8:	f000 fc98 	bl	80084dc <__multadd>
 8007bac:	0029      	movs	r1, r5
 8007bae:	0004      	movs	r4, r0
 8007bb0:	2300      	movs	r3, #0
 8007bb2:	220a      	movs	r2, #10
 8007bb4:	0038      	movs	r0, r7
 8007bb6:	f000 fc91 	bl	80084dc <__multadd>
 8007bba:	0005      	movs	r5, r0
 8007bbc:	e7f1      	b.n	8007ba2 <_dtoa_r+0xb6e>
 8007bbe:	9b07      	ldr	r3, [sp, #28]
 8007bc0:	930c      	str	r3, [sp, #48]	; 0x30
 8007bc2:	2400      	movs	r4, #0
 8007bc4:	0031      	movs	r1, r6
 8007bc6:	9805      	ldr	r0, [sp, #20]
 8007bc8:	f7ff f9a8 	bl	8006f1c <quorem>
 8007bcc:	9b06      	ldr	r3, [sp, #24]
 8007bce:	3030      	adds	r0, #48	; 0x30
 8007bd0:	5518      	strb	r0, [r3, r4]
 8007bd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007bd4:	3401      	adds	r4, #1
 8007bd6:	9007      	str	r0, [sp, #28]
 8007bd8:	42a3      	cmp	r3, r4
 8007bda:	dd07      	ble.n	8007bec <_dtoa_r+0xbb8>
 8007bdc:	2300      	movs	r3, #0
 8007bde:	220a      	movs	r2, #10
 8007be0:	0038      	movs	r0, r7
 8007be2:	9905      	ldr	r1, [sp, #20]
 8007be4:	f000 fc7a 	bl	80084dc <__multadd>
 8007be8:	9005      	str	r0, [sp, #20]
 8007bea:	e7eb      	b.n	8007bc4 <_dtoa_r+0xb90>
 8007bec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007bee:	2001      	movs	r0, #1
 8007bf0:	2b00      	cmp	r3, #0
 8007bf2:	dd00      	ble.n	8007bf6 <_dtoa_r+0xbc2>
 8007bf4:	0018      	movs	r0, r3
 8007bf6:	2400      	movs	r4, #0
 8007bf8:	9b06      	ldr	r3, [sp, #24]
 8007bfa:	181b      	adds	r3, r3, r0
 8007bfc:	9308      	str	r3, [sp, #32]
 8007bfe:	9905      	ldr	r1, [sp, #20]
 8007c00:	2201      	movs	r2, #1
 8007c02:	0038      	movs	r0, r7
 8007c04:	f000 fe64 	bl	80088d0 <__lshift>
 8007c08:	0031      	movs	r1, r6
 8007c0a:	9005      	str	r0, [sp, #20]
 8007c0c:	f000 fece 	bl	80089ac <__mcmp>
 8007c10:	2800      	cmp	r0, #0
 8007c12:	dc9b      	bgt.n	8007b4c <_dtoa_r+0xb18>
 8007c14:	d102      	bne.n	8007c1c <_dtoa_r+0xbe8>
 8007c16:	9b07      	ldr	r3, [sp, #28]
 8007c18:	07db      	lsls	r3, r3, #31
 8007c1a:	d497      	bmi.n	8007b4c <_dtoa_r+0xb18>
 8007c1c:	9b08      	ldr	r3, [sp, #32]
 8007c1e:	9308      	str	r3, [sp, #32]
 8007c20:	3b01      	subs	r3, #1
 8007c22:	781a      	ldrb	r2, [r3, #0]
 8007c24:	2a30      	cmp	r2, #48	; 0x30
 8007c26:	d0fa      	beq.n	8007c1e <_dtoa_r+0xbea>
 8007c28:	e6db      	b.n	80079e2 <_dtoa_r+0x9ae>
 8007c2a:	9a06      	ldr	r2, [sp, #24]
 8007c2c:	429a      	cmp	r2, r3
 8007c2e:	d18e      	bne.n	8007b4e <_dtoa_r+0xb1a>
 8007c30:	9b02      	ldr	r3, [sp, #8]
 8007c32:	3301      	adds	r3, #1
 8007c34:	9302      	str	r3, [sp, #8]
 8007c36:	2331      	movs	r3, #49	; 0x31
 8007c38:	e799      	b.n	8007b6e <_dtoa_r+0xb3a>
 8007c3a:	4b09      	ldr	r3, [pc, #36]	; (8007c60 <_dtoa_r+0xc2c>)
 8007c3c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8007c3e:	9306      	str	r3, [sp, #24]
 8007c40:	4b08      	ldr	r3, [pc, #32]	; (8007c64 <_dtoa_r+0xc30>)
 8007c42:	2a00      	cmp	r2, #0
 8007c44:	d001      	beq.n	8007c4a <_dtoa_r+0xc16>
 8007c46:	f7ff fa3f 	bl	80070c8 <_dtoa_r+0x94>
 8007c4a:	f7ff fa3f 	bl	80070cc <_dtoa_r+0x98>
 8007c4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007c50:	2b00      	cmp	r3, #0
 8007c52:	dcb6      	bgt.n	8007bc2 <_dtoa_r+0xb8e>
 8007c54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007c56:	2b02      	cmp	r3, #2
 8007c58:	dd00      	ble.n	8007c5c <_dtoa_r+0xc28>
 8007c5a:	e6ac      	b.n	80079b6 <_dtoa_r+0x982>
 8007c5c:	e7b1      	b.n	8007bc2 <_dtoa_r+0xb8e>
 8007c5e:	46c0      	nop			; (mov r8, r8)
 8007c60:	0800a8b1 	.word	0x0800a8b1
 8007c64:	0800a8b9 	.word	0x0800a8b9

08007c68 <fiprintf>:
 8007c68:	b40e      	push	{r1, r2, r3}
 8007c6a:	b503      	push	{r0, r1, lr}
 8007c6c:	0001      	movs	r1, r0
 8007c6e:	ab03      	add	r3, sp, #12
 8007c70:	4804      	ldr	r0, [pc, #16]	; (8007c84 <fiprintf+0x1c>)
 8007c72:	cb04      	ldmia	r3!, {r2}
 8007c74:	6800      	ldr	r0, [r0, #0]
 8007c76:	9301      	str	r3, [sp, #4]
 8007c78:	f001 fc22 	bl	80094c0 <_vfiprintf_r>
 8007c7c:	b002      	add	sp, #8
 8007c7e:	bc08      	pop	{r3}
 8007c80:	b003      	add	sp, #12
 8007c82:	4718      	bx	r3
 8007c84:	2000009c 	.word	0x2000009c

08007c88 <rshift>:
 8007c88:	0002      	movs	r2, r0
 8007c8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c8c:	6904      	ldr	r4, [r0, #16]
 8007c8e:	3214      	adds	r2, #20
 8007c90:	0013      	movs	r3, r2
 8007c92:	b085      	sub	sp, #20
 8007c94:	114f      	asrs	r7, r1, #5
 8007c96:	42bc      	cmp	r4, r7
 8007c98:	dd31      	ble.n	8007cfe <rshift+0x76>
 8007c9a:	00bb      	lsls	r3, r7, #2
 8007c9c:	18d3      	adds	r3, r2, r3
 8007c9e:	261f      	movs	r6, #31
 8007ca0:	9301      	str	r3, [sp, #4]
 8007ca2:	000b      	movs	r3, r1
 8007ca4:	00a5      	lsls	r5, r4, #2
 8007ca6:	4033      	ands	r3, r6
 8007ca8:	1955      	adds	r5, r2, r5
 8007caa:	9302      	str	r3, [sp, #8]
 8007cac:	4231      	tst	r1, r6
 8007cae:	d10c      	bne.n	8007cca <rshift+0x42>
 8007cb0:	0016      	movs	r6, r2
 8007cb2:	9901      	ldr	r1, [sp, #4]
 8007cb4:	428d      	cmp	r5, r1
 8007cb6:	d838      	bhi.n	8007d2a <rshift+0xa2>
 8007cb8:	9901      	ldr	r1, [sp, #4]
 8007cba:	2300      	movs	r3, #0
 8007cbc:	3903      	subs	r1, #3
 8007cbe:	428d      	cmp	r5, r1
 8007cc0:	d301      	bcc.n	8007cc6 <rshift+0x3e>
 8007cc2:	1be3      	subs	r3, r4, r7
 8007cc4:	009b      	lsls	r3, r3, #2
 8007cc6:	18d3      	adds	r3, r2, r3
 8007cc8:	e019      	b.n	8007cfe <rshift+0x76>
 8007cca:	2120      	movs	r1, #32
 8007ccc:	9b02      	ldr	r3, [sp, #8]
 8007cce:	9e01      	ldr	r6, [sp, #4]
 8007cd0:	1acb      	subs	r3, r1, r3
 8007cd2:	9303      	str	r3, [sp, #12]
 8007cd4:	ce02      	ldmia	r6!, {r1}
 8007cd6:	9b02      	ldr	r3, [sp, #8]
 8007cd8:	4694      	mov	ip, r2
 8007cda:	40d9      	lsrs	r1, r3
 8007cdc:	9100      	str	r1, [sp, #0]
 8007cde:	42b5      	cmp	r5, r6
 8007ce0:	d816      	bhi.n	8007d10 <rshift+0x88>
 8007ce2:	9e01      	ldr	r6, [sp, #4]
 8007ce4:	2300      	movs	r3, #0
 8007ce6:	3601      	adds	r6, #1
 8007ce8:	42b5      	cmp	r5, r6
 8007cea:	d302      	bcc.n	8007cf2 <rshift+0x6a>
 8007cec:	1be3      	subs	r3, r4, r7
 8007cee:	009b      	lsls	r3, r3, #2
 8007cf0:	3b04      	subs	r3, #4
 8007cf2:	9900      	ldr	r1, [sp, #0]
 8007cf4:	18d3      	adds	r3, r2, r3
 8007cf6:	6019      	str	r1, [r3, #0]
 8007cf8:	2900      	cmp	r1, #0
 8007cfa:	d000      	beq.n	8007cfe <rshift+0x76>
 8007cfc:	3304      	adds	r3, #4
 8007cfe:	1a99      	subs	r1, r3, r2
 8007d00:	1089      	asrs	r1, r1, #2
 8007d02:	6101      	str	r1, [r0, #16]
 8007d04:	4293      	cmp	r3, r2
 8007d06:	d101      	bne.n	8007d0c <rshift+0x84>
 8007d08:	2300      	movs	r3, #0
 8007d0a:	6143      	str	r3, [r0, #20]
 8007d0c:	b005      	add	sp, #20
 8007d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007d10:	6833      	ldr	r3, [r6, #0]
 8007d12:	9903      	ldr	r1, [sp, #12]
 8007d14:	408b      	lsls	r3, r1
 8007d16:	9900      	ldr	r1, [sp, #0]
 8007d18:	4319      	orrs	r1, r3
 8007d1a:	4663      	mov	r3, ip
 8007d1c:	c302      	stmia	r3!, {r1}
 8007d1e:	469c      	mov	ip, r3
 8007d20:	ce02      	ldmia	r6!, {r1}
 8007d22:	9b02      	ldr	r3, [sp, #8]
 8007d24:	40d9      	lsrs	r1, r3
 8007d26:	9100      	str	r1, [sp, #0]
 8007d28:	e7d9      	b.n	8007cde <rshift+0x56>
 8007d2a:	c908      	ldmia	r1!, {r3}
 8007d2c:	c608      	stmia	r6!, {r3}
 8007d2e:	e7c1      	b.n	8007cb4 <rshift+0x2c>

08007d30 <__hexdig_fun>:
 8007d30:	0002      	movs	r2, r0
 8007d32:	3a30      	subs	r2, #48	; 0x30
 8007d34:	0003      	movs	r3, r0
 8007d36:	2a09      	cmp	r2, #9
 8007d38:	d802      	bhi.n	8007d40 <__hexdig_fun+0x10>
 8007d3a:	3b20      	subs	r3, #32
 8007d3c:	b2d8      	uxtb	r0, r3
 8007d3e:	4770      	bx	lr
 8007d40:	0002      	movs	r2, r0
 8007d42:	3a61      	subs	r2, #97	; 0x61
 8007d44:	2a05      	cmp	r2, #5
 8007d46:	d801      	bhi.n	8007d4c <__hexdig_fun+0x1c>
 8007d48:	3b47      	subs	r3, #71	; 0x47
 8007d4a:	e7f7      	b.n	8007d3c <__hexdig_fun+0xc>
 8007d4c:	001a      	movs	r2, r3
 8007d4e:	3a41      	subs	r2, #65	; 0x41
 8007d50:	2000      	movs	r0, #0
 8007d52:	2a05      	cmp	r2, #5
 8007d54:	d8f3      	bhi.n	8007d3e <__hexdig_fun+0xe>
 8007d56:	3b27      	subs	r3, #39	; 0x27
 8007d58:	e7f0      	b.n	8007d3c <__hexdig_fun+0xc>
	...

08007d5c <__gethex>:
 8007d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d5e:	b08d      	sub	sp, #52	; 0x34
 8007d60:	930a      	str	r3, [sp, #40]	; 0x28
 8007d62:	4bbf      	ldr	r3, [pc, #764]	; (8008060 <__gethex+0x304>)
 8007d64:	9005      	str	r0, [sp, #20]
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	9109      	str	r1, [sp, #36]	; 0x24
 8007d6a:	0018      	movs	r0, r3
 8007d6c:	9202      	str	r2, [sp, #8]
 8007d6e:	9307      	str	r3, [sp, #28]
 8007d70:	f7f8 f9d0 	bl	8000114 <strlen>
 8007d74:	2202      	movs	r2, #2
 8007d76:	9b07      	ldr	r3, [sp, #28]
 8007d78:	4252      	negs	r2, r2
 8007d7a:	181b      	adds	r3, r3, r0
 8007d7c:	3b01      	subs	r3, #1
 8007d7e:	781b      	ldrb	r3, [r3, #0]
 8007d80:	9003      	str	r0, [sp, #12]
 8007d82:	930b      	str	r3, [sp, #44]	; 0x2c
 8007d84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007d86:	6819      	ldr	r1, [r3, #0]
 8007d88:	1c8b      	adds	r3, r1, #2
 8007d8a:	1a52      	subs	r2, r2, r1
 8007d8c:	18d1      	adds	r1, r2, r3
 8007d8e:	9301      	str	r3, [sp, #4]
 8007d90:	9108      	str	r1, [sp, #32]
 8007d92:	9901      	ldr	r1, [sp, #4]
 8007d94:	3301      	adds	r3, #1
 8007d96:	7808      	ldrb	r0, [r1, #0]
 8007d98:	2830      	cmp	r0, #48	; 0x30
 8007d9a:	d0f7      	beq.n	8007d8c <__gethex+0x30>
 8007d9c:	f7ff ffc8 	bl	8007d30 <__hexdig_fun>
 8007da0:	2300      	movs	r3, #0
 8007da2:	001c      	movs	r4, r3
 8007da4:	9304      	str	r3, [sp, #16]
 8007da6:	4298      	cmp	r0, r3
 8007da8:	d11f      	bne.n	8007dea <__gethex+0x8e>
 8007daa:	9a03      	ldr	r2, [sp, #12]
 8007dac:	9907      	ldr	r1, [sp, #28]
 8007dae:	9801      	ldr	r0, [sp, #4]
 8007db0:	f001 fe78 	bl	8009aa4 <strncmp>
 8007db4:	0007      	movs	r7, r0
 8007db6:	42a0      	cmp	r0, r4
 8007db8:	d000      	beq.n	8007dbc <__gethex+0x60>
 8007dba:	e06b      	b.n	8007e94 <__gethex+0x138>
 8007dbc:	9b01      	ldr	r3, [sp, #4]
 8007dbe:	9a03      	ldr	r2, [sp, #12]
 8007dc0:	5c98      	ldrb	r0, [r3, r2]
 8007dc2:	189d      	adds	r5, r3, r2
 8007dc4:	f7ff ffb4 	bl	8007d30 <__hexdig_fun>
 8007dc8:	2301      	movs	r3, #1
 8007dca:	9304      	str	r3, [sp, #16]
 8007dcc:	42a0      	cmp	r0, r4
 8007dce:	d030      	beq.n	8007e32 <__gethex+0xd6>
 8007dd0:	9501      	str	r5, [sp, #4]
 8007dd2:	9b01      	ldr	r3, [sp, #4]
 8007dd4:	7818      	ldrb	r0, [r3, #0]
 8007dd6:	2830      	cmp	r0, #48	; 0x30
 8007dd8:	d009      	beq.n	8007dee <__gethex+0x92>
 8007dda:	f7ff ffa9 	bl	8007d30 <__hexdig_fun>
 8007dde:	4242      	negs	r2, r0
 8007de0:	4142      	adcs	r2, r0
 8007de2:	2301      	movs	r3, #1
 8007de4:	002c      	movs	r4, r5
 8007de6:	9204      	str	r2, [sp, #16]
 8007de8:	9308      	str	r3, [sp, #32]
 8007dea:	9d01      	ldr	r5, [sp, #4]
 8007dec:	e004      	b.n	8007df8 <__gethex+0x9c>
 8007dee:	9b01      	ldr	r3, [sp, #4]
 8007df0:	3301      	adds	r3, #1
 8007df2:	9301      	str	r3, [sp, #4]
 8007df4:	e7ed      	b.n	8007dd2 <__gethex+0x76>
 8007df6:	3501      	adds	r5, #1
 8007df8:	7828      	ldrb	r0, [r5, #0]
 8007dfa:	f7ff ff99 	bl	8007d30 <__hexdig_fun>
 8007dfe:	1e07      	subs	r7, r0, #0
 8007e00:	d1f9      	bne.n	8007df6 <__gethex+0x9a>
 8007e02:	0028      	movs	r0, r5
 8007e04:	9a03      	ldr	r2, [sp, #12]
 8007e06:	9907      	ldr	r1, [sp, #28]
 8007e08:	f001 fe4c 	bl	8009aa4 <strncmp>
 8007e0c:	2800      	cmp	r0, #0
 8007e0e:	d10e      	bne.n	8007e2e <__gethex+0xd2>
 8007e10:	2c00      	cmp	r4, #0
 8007e12:	d107      	bne.n	8007e24 <__gethex+0xc8>
 8007e14:	9b03      	ldr	r3, [sp, #12]
 8007e16:	18ed      	adds	r5, r5, r3
 8007e18:	002c      	movs	r4, r5
 8007e1a:	7828      	ldrb	r0, [r5, #0]
 8007e1c:	f7ff ff88 	bl	8007d30 <__hexdig_fun>
 8007e20:	2800      	cmp	r0, #0
 8007e22:	d102      	bne.n	8007e2a <__gethex+0xce>
 8007e24:	1b64      	subs	r4, r4, r5
 8007e26:	00a7      	lsls	r7, r4, #2
 8007e28:	e003      	b.n	8007e32 <__gethex+0xd6>
 8007e2a:	3501      	adds	r5, #1
 8007e2c:	e7f5      	b.n	8007e1a <__gethex+0xbe>
 8007e2e:	2c00      	cmp	r4, #0
 8007e30:	d1f8      	bne.n	8007e24 <__gethex+0xc8>
 8007e32:	2220      	movs	r2, #32
 8007e34:	782b      	ldrb	r3, [r5, #0]
 8007e36:	002e      	movs	r6, r5
 8007e38:	4393      	bics	r3, r2
 8007e3a:	2b50      	cmp	r3, #80	; 0x50
 8007e3c:	d11d      	bne.n	8007e7a <__gethex+0x11e>
 8007e3e:	786b      	ldrb	r3, [r5, #1]
 8007e40:	2b2b      	cmp	r3, #43	; 0x2b
 8007e42:	d02c      	beq.n	8007e9e <__gethex+0x142>
 8007e44:	2b2d      	cmp	r3, #45	; 0x2d
 8007e46:	d02e      	beq.n	8007ea6 <__gethex+0x14a>
 8007e48:	2300      	movs	r3, #0
 8007e4a:	1c6e      	adds	r6, r5, #1
 8007e4c:	9306      	str	r3, [sp, #24]
 8007e4e:	7830      	ldrb	r0, [r6, #0]
 8007e50:	f7ff ff6e 	bl	8007d30 <__hexdig_fun>
 8007e54:	1e43      	subs	r3, r0, #1
 8007e56:	b2db      	uxtb	r3, r3
 8007e58:	2b18      	cmp	r3, #24
 8007e5a:	d82b      	bhi.n	8007eb4 <__gethex+0x158>
 8007e5c:	3810      	subs	r0, #16
 8007e5e:	0004      	movs	r4, r0
 8007e60:	7870      	ldrb	r0, [r6, #1]
 8007e62:	f7ff ff65 	bl	8007d30 <__hexdig_fun>
 8007e66:	1e43      	subs	r3, r0, #1
 8007e68:	b2db      	uxtb	r3, r3
 8007e6a:	3601      	adds	r6, #1
 8007e6c:	2b18      	cmp	r3, #24
 8007e6e:	d91c      	bls.n	8007eaa <__gethex+0x14e>
 8007e70:	9b06      	ldr	r3, [sp, #24]
 8007e72:	2b00      	cmp	r3, #0
 8007e74:	d000      	beq.n	8007e78 <__gethex+0x11c>
 8007e76:	4264      	negs	r4, r4
 8007e78:	193f      	adds	r7, r7, r4
 8007e7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e7c:	601e      	str	r6, [r3, #0]
 8007e7e:	9b04      	ldr	r3, [sp, #16]
 8007e80:	2b00      	cmp	r3, #0
 8007e82:	d019      	beq.n	8007eb8 <__gethex+0x15c>
 8007e84:	2600      	movs	r6, #0
 8007e86:	9b08      	ldr	r3, [sp, #32]
 8007e88:	42b3      	cmp	r3, r6
 8007e8a:	d100      	bne.n	8007e8e <__gethex+0x132>
 8007e8c:	3606      	adds	r6, #6
 8007e8e:	0030      	movs	r0, r6
 8007e90:	b00d      	add	sp, #52	; 0x34
 8007e92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e94:	2301      	movs	r3, #1
 8007e96:	2700      	movs	r7, #0
 8007e98:	9d01      	ldr	r5, [sp, #4]
 8007e9a:	9304      	str	r3, [sp, #16]
 8007e9c:	e7c9      	b.n	8007e32 <__gethex+0xd6>
 8007e9e:	2300      	movs	r3, #0
 8007ea0:	9306      	str	r3, [sp, #24]
 8007ea2:	1cae      	adds	r6, r5, #2
 8007ea4:	e7d3      	b.n	8007e4e <__gethex+0xf2>
 8007ea6:	2301      	movs	r3, #1
 8007ea8:	e7fa      	b.n	8007ea0 <__gethex+0x144>
 8007eaa:	230a      	movs	r3, #10
 8007eac:	435c      	muls	r4, r3
 8007eae:	1824      	adds	r4, r4, r0
 8007eb0:	3c10      	subs	r4, #16
 8007eb2:	e7d5      	b.n	8007e60 <__gethex+0x104>
 8007eb4:	002e      	movs	r6, r5
 8007eb6:	e7e0      	b.n	8007e7a <__gethex+0x11e>
 8007eb8:	9b01      	ldr	r3, [sp, #4]
 8007eba:	9904      	ldr	r1, [sp, #16]
 8007ebc:	1aeb      	subs	r3, r5, r3
 8007ebe:	3b01      	subs	r3, #1
 8007ec0:	2b07      	cmp	r3, #7
 8007ec2:	dc0a      	bgt.n	8007eda <__gethex+0x17e>
 8007ec4:	9805      	ldr	r0, [sp, #20]
 8007ec6:	f000 faa1 	bl	800840c <_Balloc>
 8007eca:	1e04      	subs	r4, r0, #0
 8007ecc:	d108      	bne.n	8007ee0 <__gethex+0x184>
 8007ece:	0002      	movs	r2, r0
 8007ed0:	21de      	movs	r1, #222	; 0xde
 8007ed2:	4b64      	ldr	r3, [pc, #400]	; (8008064 <__gethex+0x308>)
 8007ed4:	4864      	ldr	r0, [pc, #400]	; (8008068 <__gethex+0x30c>)
 8007ed6:	f7fe fff1 	bl	8006ebc <__assert_func>
 8007eda:	3101      	adds	r1, #1
 8007edc:	105b      	asrs	r3, r3, #1
 8007ede:	e7ef      	b.n	8007ec0 <__gethex+0x164>
 8007ee0:	0003      	movs	r3, r0
 8007ee2:	3314      	adds	r3, #20
 8007ee4:	9304      	str	r3, [sp, #16]
 8007ee6:	9309      	str	r3, [sp, #36]	; 0x24
 8007ee8:	2300      	movs	r3, #0
 8007eea:	001e      	movs	r6, r3
 8007eec:	9306      	str	r3, [sp, #24]
 8007eee:	9b01      	ldr	r3, [sp, #4]
 8007ef0:	42ab      	cmp	r3, r5
 8007ef2:	d340      	bcc.n	8007f76 <__gethex+0x21a>
 8007ef4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007ef6:	9b04      	ldr	r3, [sp, #16]
 8007ef8:	c540      	stmia	r5!, {r6}
 8007efa:	1aed      	subs	r5, r5, r3
 8007efc:	10ad      	asrs	r5, r5, #2
 8007efe:	0030      	movs	r0, r6
 8007f00:	6125      	str	r5, [r4, #16]
 8007f02:	f000 fb7b 	bl	80085fc <__hi0bits>
 8007f06:	9b02      	ldr	r3, [sp, #8]
 8007f08:	016d      	lsls	r5, r5, #5
 8007f0a:	681b      	ldr	r3, [r3, #0]
 8007f0c:	1a2e      	subs	r6, r5, r0
 8007f0e:	9301      	str	r3, [sp, #4]
 8007f10:	429e      	cmp	r6, r3
 8007f12:	dd5a      	ble.n	8007fca <__gethex+0x26e>
 8007f14:	1af6      	subs	r6, r6, r3
 8007f16:	0031      	movs	r1, r6
 8007f18:	0020      	movs	r0, r4
 8007f1a:	f000 ff1d 	bl	8008d58 <__any_on>
 8007f1e:	1e05      	subs	r5, r0, #0
 8007f20:	d016      	beq.n	8007f50 <__gethex+0x1f4>
 8007f22:	2501      	movs	r5, #1
 8007f24:	211f      	movs	r1, #31
 8007f26:	0028      	movs	r0, r5
 8007f28:	1e73      	subs	r3, r6, #1
 8007f2a:	4019      	ands	r1, r3
 8007f2c:	4088      	lsls	r0, r1
 8007f2e:	0001      	movs	r1, r0
 8007f30:	115a      	asrs	r2, r3, #5
 8007f32:	9804      	ldr	r0, [sp, #16]
 8007f34:	0092      	lsls	r2, r2, #2
 8007f36:	5812      	ldr	r2, [r2, r0]
 8007f38:	420a      	tst	r2, r1
 8007f3a:	d009      	beq.n	8007f50 <__gethex+0x1f4>
 8007f3c:	42ab      	cmp	r3, r5
 8007f3e:	dd06      	ble.n	8007f4e <__gethex+0x1f2>
 8007f40:	0020      	movs	r0, r4
 8007f42:	1eb1      	subs	r1, r6, #2
 8007f44:	f000 ff08 	bl	8008d58 <__any_on>
 8007f48:	3502      	adds	r5, #2
 8007f4a:	2800      	cmp	r0, #0
 8007f4c:	d100      	bne.n	8007f50 <__gethex+0x1f4>
 8007f4e:	2502      	movs	r5, #2
 8007f50:	0031      	movs	r1, r6
 8007f52:	0020      	movs	r0, r4
 8007f54:	f7ff fe98 	bl	8007c88 <rshift>
 8007f58:	19bf      	adds	r7, r7, r6
 8007f5a:	9b02      	ldr	r3, [sp, #8]
 8007f5c:	689b      	ldr	r3, [r3, #8]
 8007f5e:	9303      	str	r3, [sp, #12]
 8007f60:	42bb      	cmp	r3, r7
 8007f62:	da42      	bge.n	8007fea <__gethex+0x28e>
 8007f64:	0021      	movs	r1, r4
 8007f66:	9805      	ldr	r0, [sp, #20]
 8007f68:	f000 fa94 	bl	8008494 <_Bfree>
 8007f6c:	2300      	movs	r3, #0
 8007f6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007f70:	26a3      	movs	r6, #163	; 0xa3
 8007f72:	6013      	str	r3, [r2, #0]
 8007f74:	e78b      	b.n	8007e8e <__gethex+0x132>
 8007f76:	1e6b      	subs	r3, r5, #1
 8007f78:	9308      	str	r3, [sp, #32]
 8007f7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007f7c:	781b      	ldrb	r3, [r3, #0]
 8007f7e:	4293      	cmp	r3, r2
 8007f80:	d014      	beq.n	8007fac <__gethex+0x250>
 8007f82:	9b06      	ldr	r3, [sp, #24]
 8007f84:	2b20      	cmp	r3, #32
 8007f86:	d104      	bne.n	8007f92 <__gethex+0x236>
 8007f88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007f8a:	c340      	stmia	r3!, {r6}
 8007f8c:	2600      	movs	r6, #0
 8007f8e:	9309      	str	r3, [sp, #36]	; 0x24
 8007f90:	9606      	str	r6, [sp, #24]
 8007f92:	9b08      	ldr	r3, [sp, #32]
 8007f94:	7818      	ldrb	r0, [r3, #0]
 8007f96:	f7ff fecb 	bl	8007d30 <__hexdig_fun>
 8007f9a:	230f      	movs	r3, #15
 8007f9c:	4018      	ands	r0, r3
 8007f9e:	9b06      	ldr	r3, [sp, #24]
 8007fa0:	9d08      	ldr	r5, [sp, #32]
 8007fa2:	4098      	lsls	r0, r3
 8007fa4:	3304      	adds	r3, #4
 8007fa6:	4306      	orrs	r6, r0
 8007fa8:	9306      	str	r3, [sp, #24]
 8007faa:	e7a0      	b.n	8007eee <__gethex+0x192>
 8007fac:	2301      	movs	r3, #1
 8007fae:	9a03      	ldr	r2, [sp, #12]
 8007fb0:	1a9d      	subs	r5, r3, r2
 8007fb2:	9b08      	ldr	r3, [sp, #32]
 8007fb4:	195d      	adds	r5, r3, r5
 8007fb6:	9b01      	ldr	r3, [sp, #4]
 8007fb8:	429d      	cmp	r5, r3
 8007fba:	d3e2      	bcc.n	8007f82 <__gethex+0x226>
 8007fbc:	0028      	movs	r0, r5
 8007fbe:	9907      	ldr	r1, [sp, #28]
 8007fc0:	f001 fd70 	bl	8009aa4 <strncmp>
 8007fc4:	2800      	cmp	r0, #0
 8007fc6:	d1dc      	bne.n	8007f82 <__gethex+0x226>
 8007fc8:	e791      	b.n	8007eee <__gethex+0x192>
 8007fca:	9b01      	ldr	r3, [sp, #4]
 8007fcc:	2500      	movs	r5, #0
 8007fce:	429e      	cmp	r6, r3
 8007fd0:	dac3      	bge.n	8007f5a <__gethex+0x1fe>
 8007fd2:	1b9e      	subs	r6, r3, r6
 8007fd4:	0021      	movs	r1, r4
 8007fd6:	0032      	movs	r2, r6
 8007fd8:	9805      	ldr	r0, [sp, #20]
 8007fda:	f000 fc79 	bl	80088d0 <__lshift>
 8007fde:	0003      	movs	r3, r0
 8007fe0:	3314      	adds	r3, #20
 8007fe2:	0004      	movs	r4, r0
 8007fe4:	1bbf      	subs	r7, r7, r6
 8007fe6:	9304      	str	r3, [sp, #16]
 8007fe8:	e7b7      	b.n	8007f5a <__gethex+0x1fe>
 8007fea:	9b02      	ldr	r3, [sp, #8]
 8007fec:	685e      	ldr	r6, [r3, #4]
 8007fee:	42be      	cmp	r6, r7
 8007ff0:	dd71      	ble.n	80080d6 <__gethex+0x37a>
 8007ff2:	9b01      	ldr	r3, [sp, #4]
 8007ff4:	1bf6      	subs	r6, r6, r7
 8007ff6:	42b3      	cmp	r3, r6
 8007ff8:	dc38      	bgt.n	800806c <__gethex+0x310>
 8007ffa:	9b02      	ldr	r3, [sp, #8]
 8007ffc:	68db      	ldr	r3, [r3, #12]
 8007ffe:	2b02      	cmp	r3, #2
 8008000:	d026      	beq.n	8008050 <__gethex+0x2f4>
 8008002:	2b03      	cmp	r3, #3
 8008004:	d028      	beq.n	8008058 <__gethex+0x2fc>
 8008006:	2b01      	cmp	r3, #1
 8008008:	d119      	bne.n	800803e <__gethex+0x2e2>
 800800a:	9b01      	ldr	r3, [sp, #4]
 800800c:	42b3      	cmp	r3, r6
 800800e:	d116      	bne.n	800803e <__gethex+0x2e2>
 8008010:	2b01      	cmp	r3, #1
 8008012:	d10d      	bne.n	8008030 <__gethex+0x2d4>
 8008014:	9b02      	ldr	r3, [sp, #8]
 8008016:	2662      	movs	r6, #98	; 0x62
 8008018:	685b      	ldr	r3, [r3, #4]
 800801a:	9301      	str	r3, [sp, #4]
 800801c:	9a01      	ldr	r2, [sp, #4]
 800801e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008020:	601a      	str	r2, [r3, #0]
 8008022:	2301      	movs	r3, #1
 8008024:	9a04      	ldr	r2, [sp, #16]
 8008026:	6123      	str	r3, [r4, #16]
 8008028:	6013      	str	r3, [r2, #0]
 800802a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800802c:	601c      	str	r4, [r3, #0]
 800802e:	e72e      	b.n	8007e8e <__gethex+0x132>
 8008030:	9901      	ldr	r1, [sp, #4]
 8008032:	0020      	movs	r0, r4
 8008034:	3901      	subs	r1, #1
 8008036:	f000 fe8f 	bl	8008d58 <__any_on>
 800803a:	2800      	cmp	r0, #0
 800803c:	d1ea      	bne.n	8008014 <__gethex+0x2b8>
 800803e:	0021      	movs	r1, r4
 8008040:	9805      	ldr	r0, [sp, #20]
 8008042:	f000 fa27 	bl	8008494 <_Bfree>
 8008046:	2300      	movs	r3, #0
 8008048:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800804a:	2650      	movs	r6, #80	; 0x50
 800804c:	6013      	str	r3, [r2, #0]
 800804e:	e71e      	b.n	8007e8e <__gethex+0x132>
 8008050:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008052:	2b00      	cmp	r3, #0
 8008054:	d1f3      	bne.n	800803e <__gethex+0x2e2>
 8008056:	e7dd      	b.n	8008014 <__gethex+0x2b8>
 8008058:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800805a:	2b00      	cmp	r3, #0
 800805c:	d1da      	bne.n	8008014 <__gethex+0x2b8>
 800805e:	e7ee      	b.n	800803e <__gethex+0x2e2>
 8008060:	0800a990 	.word	0x0800a990
 8008064:	0800a919 	.word	0x0800a919
 8008068:	0800a92a 	.word	0x0800a92a
 800806c:	1e77      	subs	r7, r6, #1
 800806e:	2d00      	cmp	r5, #0
 8008070:	d12f      	bne.n	80080d2 <__gethex+0x376>
 8008072:	2f00      	cmp	r7, #0
 8008074:	d004      	beq.n	8008080 <__gethex+0x324>
 8008076:	0039      	movs	r1, r7
 8008078:	0020      	movs	r0, r4
 800807a:	f000 fe6d 	bl	8008d58 <__any_on>
 800807e:	0005      	movs	r5, r0
 8008080:	231f      	movs	r3, #31
 8008082:	117a      	asrs	r2, r7, #5
 8008084:	401f      	ands	r7, r3
 8008086:	3b1e      	subs	r3, #30
 8008088:	40bb      	lsls	r3, r7
 800808a:	9904      	ldr	r1, [sp, #16]
 800808c:	0092      	lsls	r2, r2, #2
 800808e:	5852      	ldr	r2, [r2, r1]
 8008090:	421a      	tst	r2, r3
 8008092:	d001      	beq.n	8008098 <__gethex+0x33c>
 8008094:	2302      	movs	r3, #2
 8008096:	431d      	orrs	r5, r3
 8008098:	9b01      	ldr	r3, [sp, #4]
 800809a:	0031      	movs	r1, r6
 800809c:	1b9b      	subs	r3, r3, r6
 800809e:	2602      	movs	r6, #2
 80080a0:	0020      	movs	r0, r4
 80080a2:	9301      	str	r3, [sp, #4]
 80080a4:	f7ff fdf0 	bl	8007c88 <rshift>
 80080a8:	9b02      	ldr	r3, [sp, #8]
 80080aa:	685f      	ldr	r7, [r3, #4]
 80080ac:	2d00      	cmp	r5, #0
 80080ae:	d041      	beq.n	8008134 <__gethex+0x3d8>
 80080b0:	9b02      	ldr	r3, [sp, #8]
 80080b2:	68db      	ldr	r3, [r3, #12]
 80080b4:	2b02      	cmp	r3, #2
 80080b6:	d010      	beq.n	80080da <__gethex+0x37e>
 80080b8:	2b03      	cmp	r3, #3
 80080ba:	d012      	beq.n	80080e2 <__gethex+0x386>
 80080bc:	2b01      	cmp	r3, #1
 80080be:	d106      	bne.n	80080ce <__gethex+0x372>
 80080c0:	07aa      	lsls	r2, r5, #30
 80080c2:	d504      	bpl.n	80080ce <__gethex+0x372>
 80080c4:	9a04      	ldr	r2, [sp, #16]
 80080c6:	6810      	ldr	r0, [r2, #0]
 80080c8:	4305      	orrs	r5, r0
 80080ca:	421d      	tst	r5, r3
 80080cc:	d10c      	bne.n	80080e8 <__gethex+0x38c>
 80080ce:	2310      	movs	r3, #16
 80080d0:	e02f      	b.n	8008132 <__gethex+0x3d6>
 80080d2:	2501      	movs	r5, #1
 80080d4:	e7d4      	b.n	8008080 <__gethex+0x324>
 80080d6:	2601      	movs	r6, #1
 80080d8:	e7e8      	b.n	80080ac <__gethex+0x350>
 80080da:	2301      	movs	r3, #1
 80080dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80080de:	1a9b      	subs	r3, r3, r2
 80080e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80080e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80080e4:	2b00      	cmp	r3, #0
 80080e6:	d0f2      	beq.n	80080ce <__gethex+0x372>
 80080e8:	6923      	ldr	r3, [r4, #16]
 80080ea:	2000      	movs	r0, #0
 80080ec:	9303      	str	r3, [sp, #12]
 80080ee:	009b      	lsls	r3, r3, #2
 80080f0:	9304      	str	r3, [sp, #16]
 80080f2:	0023      	movs	r3, r4
 80080f4:	9a04      	ldr	r2, [sp, #16]
 80080f6:	3314      	adds	r3, #20
 80080f8:	1899      	adds	r1, r3, r2
 80080fa:	681a      	ldr	r2, [r3, #0]
 80080fc:	1c55      	adds	r5, r2, #1
 80080fe:	d01e      	beq.n	800813e <__gethex+0x3e2>
 8008100:	3201      	adds	r2, #1
 8008102:	601a      	str	r2, [r3, #0]
 8008104:	0023      	movs	r3, r4
 8008106:	3314      	adds	r3, #20
 8008108:	2e02      	cmp	r6, #2
 800810a:	d140      	bne.n	800818e <__gethex+0x432>
 800810c:	9a02      	ldr	r2, [sp, #8]
 800810e:	9901      	ldr	r1, [sp, #4]
 8008110:	6812      	ldr	r2, [r2, #0]
 8008112:	3a01      	subs	r2, #1
 8008114:	428a      	cmp	r2, r1
 8008116:	d10b      	bne.n	8008130 <__gethex+0x3d4>
 8008118:	114a      	asrs	r2, r1, #5
 800811a:	211f      	movs	r1, #31
 800811c:	9801      	ldr	r0, [sp, #4]
 800811e:	0092      	lsls	r2, r2, #2
 8008120:	4001      	ands	r1, r0
 8008122:	2001      	movs	r0, #1
 8008124:	0005      	movs	r5, r0
 8008126:	408d      	lsls	r5, r1
 8008128:	58d3      	ldr	r3, [r2, r3]
 800812a:	422b      	tst	r3, r5
 800812c:	d000      	beq.n	8008130 <__gethex+0x3d4>
 800812e:	2601      	movs	r6, #1
 8008130:	2320      	movs	r3, #32
 8008132:	431e      	orrs	r6, r3
 8008134:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008136:	601c      	str	r4, [r3, #0]
 8008138:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800813a:	601f      	str	r7, [r3, #0]
 800813c:	e6a7      	b.n	8007e8e <__gethex+0x132>
 800813e:	c301      	stmia	r3!, {r0}
 8008140:	4299      	cmp	r1, r3
 8008142:	d8da      	bhi.n	80080fa <__gethex+0x39e>
 8008144:	9b03      	ldr	r3, [sp, #12]
 8008146:	68a2      	ldr	r2, [r4, #8]
 8008148:	4293      	cmp	r3, r2
 800814a:	db17      	blt.n	800817c <__gethex+0x420>
 800814c:	6863      	ldr	r3, [r4, #4]
 800814e:	9805      	ldr	r0, [sp, #20]
 8008150:	1c59      	adds	r1, r3, #1
 8008152:	f000 f95b 	bl	800840c <_Balloc>
 8008156:	1e05      	subs	r5, r0, #0
 8008158:	d103      	bne.n	8008162 <__gethex+0x406>
 800815a:	0002      	movs	r2, r0
 800815c:	2184      	movs	r1, #132	; 0x84
 800815e:	4b1c      	ldr	r3, [pc, #112]	; (80081d0 <__gethex+0x474>)
 8008160:	e6b8      	b.n	8007ed4 <__gethex+0x178>
 8008162:	0021      	movs	r1, r4
 8008164:	6923      	ldr	r3, [r4, #16]
 8008166:	310c      	adds	r1, #12
 8008168:	1c9a      	adds	r2, r3, #2
 800816a:	0092      	lsls	r2, r2, #2
 800816c:	300c      	adds	r0, #12
 800816e:	f000 f934 	bl	80083da <memcpy>
 8008172:	0021      	movs	r1, r4
 8008174:	9805      	ldr	r0, [sp, #20]
 8008176:	f000 f98d 	bl	8008494 <_Bfree>
 800817a:	002c      	movs	r4, r5
 800817c:	6923      	ldr	r3, [r4, #16]
 800817e:	1c5a      	adds	r2, r3, #1
 8008180:	6122      	str	r2, [r4, #16]
 8008182:	2201      	movs	r2, #1
 8008184:	3304      	adds	r3, #4
 8008186:	009b      	lsls	r3, r3, #2
 8008188:	18e3      	adds	r3, r4, r3
 800818a:	605a      	str	r2, [r3, #4]
 800818c:	e7ba      	b.n	8008104 <__gethex+0x3a8>
 800818e:	6922      	ldr	r2, [r4, #16]
 8008190:	9903      	ldr	r1, [sp, #12]
 8008192:	428a      	cmp	r2, r1
 8008194:	dd09      	ble.n	80081aa <__gethex+0x44e>
 8008196:	2101      	movs	r1, #1
 8008198:	0020      	movs	r0, r4
 800819a:	f7ff fd75 	bl	8007c88 <rshift>
 800819e:	9b02      	ldr	r3, [sp, #8]
 80081a0:	3701      	adds	r7, #1
 80081a2:	689b      	ldr	r3, [r3, #8]
 80081a4:	42bb      	cmp	r3, r7
 80081a6:	dac2      	bge.n	800812e <__gethex+0x3d2>
 80081a8:	e6dc      	b.n	8007f64 <__gethex+0x208>
 80081aa:	221f      	movs	r2, #31
 80081ac:	9d01      	ldr	r5, [sp, #4]
 80081ae:	9901      	ldr	r1, [sp, #4]
 80081b0:	2601      	movs	r6, #1
 80081b2:	4015      	ands	r5, r2
 80081b4:	4211      	tst	r1, r2
 80081b6:	d0bb      	beq.n	8008130 <__gethex+0x3d4>
 80081b8:	9a04      	ldr	r2, [sp, #16]
 80081ba:	189b      	adds	r3, r3, r2
 80081bc:	3b04      	subs	r3, #4
 80081be:	6818      	ldr	r0, [r3, #0]
 80081c0:	f000 fa1c 	bl	80085fc <__hi0bits>
 80081c4:	2320      	movs	r3, #32
 80081c6:	1b5d      	subs	r5, r3, r5
 80081c8:	42a8      	cmp	r0, r5
 80081ca:	dbe4      	blt.n	8008196 <__gethex+0x43a>
 80081cc:	e7b0      	b.n	8008130 <__gethex+0x3d4>
 80081ce:	46c0      	nop			; (mov r8, r8)
 80081d0:	0800a919 	.word	0x0800a919

080081d4 <L_shift>:
 80081d4:	2308      	movs	r3, #8
 80081d6:	b570      	push	{r4, r5, r6, lr}
 80081d8:	2520      	movs	r5, #32
 80081da:	1a9a      	subs	r2, r3, r2
 80081dc:	0092      	lsls	r2, r2, #2
 80081de:	1aad      	subs	r5, r5, r2
 80081e0:	6843      	ldr	r3, [r0, #4]
 80081e2:	6806      	ldr	r6, [r0, #0]
 80081e4:	001c      	movs	r4, r3
 80081e6:	40ac      	lsls	r4, r5
 80081e8:	40d3      	lsrs	r3, r2
 80081ea:	4334      	orrs	r4, r6
 80081ec:	6004      	str	r4, [r0, #0]
 80081ee:	6043      	str	r3, [r0, #4]
 80081f0:	3004      	adds	r0, #4
 80081f2:	4288      	cmp	r0, r1
 80081f4:	d3f4      	bcc.n	80081e0 <L_shift+0xc>
 80081f6:	bd70      	pop	{r4, r5, r6, pc}

080081f8 <__match>:
 80081f8:	b530      	push	{r4, r5, lr}
 80081fa:	6803      	ldr	r3, [r0, #0]
 80081fc:	780c      	ldrb	r4, [r1, #0]
 80081fe:	3301      	adds	r3, #1
 8008200:	2c00      	cmp	r4, #0
 8008202:	d102      	bne.n	800820a <__match+0x12>
 8008204:	6003      	str	r3, [r0, #0]
 8008206:	2001      	movs	r0, #1
 8008208:	bd30      	pop	{r4, r5, pc}
 800820a:	781a      	ldrb	r2, [r3, #0]
 800820c:	0015      	movs	r5, r2
 800820e:	3d41      	subs	r5, #65	; 0x41
 8008210:	2d19      	cmp	r5, #25
 8008212:	d800      	bhi.n	8008216 <__match+0x1e>
 8008214:	3220      	adds	r2, #32
 8008216:	3101      	adds	r1, #1
 8008218:	42a2      	cmp	r2, r4
 800821a:	d0ef      	beq.n	80081fc <__match+0x4>
 800821c:	2000      	movs	r0, #0
 800821e:	e7f3      	b.n	8008208 <__match+0x10>

08008220 <__hexnan>:
 8008220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008222:	680b      	ldr	r3, [r1, #0]
 8008224:	b08b      	sub	sp, #44	; 0x2c
 8008226:	9201      	str	r2, [sp, #4]
 8008228:	9901      	ldr	r1, [sp, #4]
 800822a:	115a      	asrs	r2, r3, #5
 800822c:	0092      	lsls	r2, r2, #2
 800822e:	188a      	adds	r2, r1, r2
 8008230:	9202      	str	r2, [sp, #8]
 8008232:	0019      	movs	r1, r3
 8008234:	221f      	movs	r2, #31
 8008236:	4011      	ands	r1, r2
 8008238:	9008      	str	r0, [sp, #32]
 800823a:	9106      	str	r1, [sp, #24]
 800823c:	4213      	tst	r3, r2
 800823e:	d002      	beq.n	8008246 <__hexnan+0x26>
 8008240:	9b02      	ldr	r3, [sp, #8]
 8008242:	3304      	adds	r3, #4
 8008244:	9302      	str	r3, [sp, #8]
 8008246:	9b02      	ldr	r3, [sp, #8]
 8008248:	2500      	movs	r5, #0
 800824a:	1f1e      	subs	r6, r3, #4
 800824c:	0037      	movs	r7, r6
 800824e:	0034      	movs	r4, r6
 8008250:	9b08      	ldr	r3, [sp, #32]
 8008252:	6035      	str	r5, [r6, #0]
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	9507      	str	r5, [sp, #28]
 8008258:	9305      	str	r3, [sp, #20]
 800825a:	9503      	str	r5, [sp, #12]
 800825c:	9b05      	ldr	r3, [sp, #20]
 800825e:	3301      	adds	r3, #1
 8008260:	9309      	str	r3, [sp, #36]	; 0x24
 8008262:	9b05      	ldr	r3, [sp, #20]
 8008264:	785b      	ldrb	r3, [r3, #1]
 8008266:	9304      	str	r3, [sp, #16]
 8008268:	2b00      	cmp	r3, #0
 800826a:	d028      	beq.n	80082be <__hexnan+0x9e>
 800826c:	9804      	ldr	r0, [sp, #16]
 800826e:	f7ff fd5f 	bl	8007d30 <__hexdig_fun>
 8008272:	2800      	cmp	r0, #0
 8008274:	d154      	bne.n	8008320 <__hexnan+0x100>
 8008276:	9b04      	ldr	r3, [sp, #16]
 8008278:	2b20      	cmp	r3, #32
 800827a:	d819      	bhi.n	80082b0 <__hexnan+0x90>
 800827c:	9b03      	ldr	r3, [sp, #12]
 800827e:	9a07      	ldr	r2, [sp, #28]
 8008280:	4293      	cmp	r3, r2
 8008282:	dd12      	ble.n	80082aa <__hexnan+0x8a>
 8008284:	42bc      	cmp	r4, r7
 8008286:	d206      	bcs.n	8008296 <__hexnan+0x76>
 8008288:	2d07      	cmp	r5, #7
 800828a:	dc04      	bgt.n	8008296 <__hexnan+0x76>
 800828c:	002a      	movs	r2, r5
 800828e:	0039      	movs	r1, r7
 8008290:	0020      	movs	r0, r4
 8008292:	f7ff ff9f 	bl	80081d4 <L_shift>
 8008296:	9b01      	ldr	r3, [sp, #4]
 8008298:	2508      	movs	r5, #8
 800829a:	429c      	cmp	r4, r3
 800829c:	d905      	bls.n	80082aa <__hexnan+0x8a>
 800829e:	1f27      	subs	r7, r4, #4
 80082a0:	2500      	movs	r5, #0
 80082a2:	003c      	movs	r4, r7
 80082a4:	9b03      	ldr	r3, [sp, #12]
 80082a6:	603d      	str	r5, [r7, #0]
 80082a8:	9307      	str	r3, [sp, #28]
 80082aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80082ac:	9305      	str	r3, [sp, #20]
 80082ae:	e7d5      	b.n	800825c <__hexnan+0x3c>
 80082b0:	9b04      	ldr	r3, [sp, #16]
 80082b2:	2b29      	cmp	r3, #41	; 0x29
 80082b4:	d159      	bne.n	800836a <__hexnan+0x14a>
 80082b6:	9b05      	ldr	r3, [sp, #20]
 80082b8:	9a08      	ldr	r2, [sp, #32]
 80082ba:	3302      	adds	r3, #2
 80082bc:	6013      	str	r3, [r2, #0]
 80082be:	9b03      	ldr	r3, [sp, #12]
 80082c0:	2b00      	cmp	r3, #0
 80082c2:	d052      	beq.n	800836a <__hexnan+0x14a>
 80082c4:	42bc      	cmp	r4, r7
 80082c6:	d206      	bcs.n	80082d6 <__hexnan+0xb6>
 80082c8:	2d07      	cmp	r5, #7
 80082ca:	dc04      	bgt.n	80082d6 <__hexnan+0xb6>
 80082cc:	002a      	movs	r2, r5
 80082ce:	0039      	movs	r1, r7
 80082d0:	0020      	movs	r0, r4
 80082d2:	f7ff ff7f 	bl	80081d4 <L_shift>
 80082d6:	9b01      	ldr	r3, [sp, #4]
 80082d8:	429c      	cmp	r4, r3
 80082da:	d935      	bls.n	8008348 <__hexnan+0x128>
 80082dc:	001a      	movs	r2, r3
 80082de:	0023      	movs	r3, r4
 80082e0:	cb02      	ldmia	r3!, {r1}
 80082e2:	c202      	stmia	r2!, {r1}
 80082e4:	429e      	cmp	r6, r3
 80082e6:	d2fb      	bcs.n	80082e0 <__hexnan+0xc0>
 80082e8:	9b02      	ldr	r3, [sp, #8]
 80082ea:	1c61      	adds	r1, r4, #1
 80082ec:	1eda      	subs	r2, r3, #3
 80082ee:	2304      	movs	r3, #4
 80082f0:	4291      	cmp	r1, r2
 80082f2:	d805      	bhi.n	8008300 <__hexnan+0xe0>
 80082f4:	9b02      	ldr	r3, [sp, #8]
 80082f6:	3b04      	subs	r3, #4
 80082f8:	1b1b      	subs	r3, r3, r4
 80082fa:	089b      	lsrs	r3, r3, #2
 80082fc:	3301      	adds	r3, #1
 80082fe:	009b      	lsls	r3, r3, #2
 8008300:	9a01      	ldr	r2, [sp, #4]
 8008302:	18d3      	adds	r3, r2, r3
 8008304:	2200      	movs	r2, #0
 8008306:	c304      	stmia	r3!, {r2}
 8008308:	429e      	cmp	r6, r3
 800830a:	d2fc      	bcs.n	8008306 <__hexnan+0xe6>
 800830c:	6833      	ldr	r3, [r6, #0]
 800830e:	2b00      	cmp	r3, #0
 8008310:	d104      	bne.n	800831c <__hexnan+0xfc>
 8008312:	9b01      	ldr	r3, [sp, #4]
 8008314:	429e      	cmp	r6, r3
 8008316:	d126      	bne.n	8008366 <__hexnan+0x146>
 8008318:	2301      	movs	r3, #1
 800831a:	6033      	str	r3, [r6, #0]
 800831c:	2005      	movs	r0, #5
 800831e:	e025      	b.n	800836c <__hexnan+0x14c>
 8008320:	9b03      	ldr	r3, [sp, #12]
 8008322:	3501      	adds	r5, #1
 8008324:	3301      	adds	r3, #1
 8008326:	9303      	str	r3, [sp, #12]
 8008328:	2d08      	cmp	r5, #8
 800832a:	dd06      	ble.n	800833a <__hexnan+0x11a>
 800832c:	9b01      	ldr	r3, [sp, #4]
 800832e:	429c      	cmp	r4, r3
 8008330:	d9bb      	bls.n	80082aa <__hexnan+0x8a>
 8008332:	2300      	movs	r3, #0
 8008334:	2501      	movs	r5, #1
 8008336:	3c04      	subs	r4, #4
 8008338:	6023      	str	r3, [r4, #0]
 800833a:	220f      	movs	r2, #15
 800833c:	6823      	ldr	r3, [r4, #0]
 800833e:	4010      	ands	r0, r2
 8008340:	011b      	lsls	r3, r3, #4
 8008342:	4318      	orrs	r0, r3
 8008344:	6020      	str	r0, [r4, #0]
 8008346:	e7b0      	b.n	80082aa <__hexnan+0x8a>
 8008348:	9b06      	ldr	r3, [sp, #24]
 800834a:	2b00      	cmp	r3, #0
 800834c:	d0de      	beq.n	800830c <__hexnan+0xec>
 800834e:	2120      	movs	r1, #32
 8008350:	9a06      	ldr	r2, [sp, #24]
 8008352:	9b02      	ldr	r3, [sp, #8]
 8008354:	1a89      	subs	r1, r1, r2
 8008356:	2201      	movs	r2, #1
 8008358:	4252      	negs	r2, r2
 800835a:	40ca      	lsrs	r2, r1
 800835c:	3b04      	subs	r3, #4
 800835e:	6819      	ldr	r1, [r3, #0]
 8008360:	400a      	ands	r2, r1
 8008362:	601a      	str	r2, [r3, #0]
 8008364:	e7d2      	b.n	800830c <__hexnan+0xec>
 8008366:	3e04      	subs	r6, #4
 8008368:	e7d0      	b.n	800830c <__hexnan+0xec>
 800836a:	2004      	movs	r0, #4
 800836c:	b00b      	add	sp, #44	; 0x2c
 800836e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008370 <_localeconv_r>:
 8008370:	4800      	ldr	r0, [pc, #0]	; (8008374 <_localeconv_r+0x4>)
 8008372:	4770      	bx	lr
 8008374:	200001f4 	.word	0x200001f4

08008378 <_lseek_r>:
 8008378:	b570      	push	{r4, r5, r6, lr}
 800837a:	0004      	movs	r4, r0
 800837c:	0008      	movs	r0, r1
 800837e:	0011      	movs	r1, r2
 8008380:	001a      	movs	r2, r3
 8008382:	2300      	movs	r3, #0
 8008384:	4d05      	ldr	r5, [pc, #20]	; (800839c <_lseek_r+0x24>)
 8008386:	602b      	str	r3, [r5, #0]
 8008388:	f7fc f8b8 	bl	80044fc <_lseek>
 800838c:	1c43      	adds	r3, r0, #1
 800838e:	d103      	bne.n	8008398 <_lseek_r+0x20>
 8008390:	682b      	ldr	r3, [r5, #0]
 8008392:	2b00      	cmp	r3, #0
 8008394:	d000      	beq.n	8008398 <_lseek_r+0x20>
 8008396:	6023      	str	r3, [r4, #0]
 8008398:	bd70      	pop	{r4, r5, r6, pc}
 800839a:	46c0      	nop			; (mov r8, r8)
 800839c:	200003d0 	.word	0x200003d0

080083a0 <__ascii_mbtowc>:
 80083a0:	b082      	sub	sp, #8
 80083a2:	2900      	cmp	r1, #0
 80083a4:	d100      	bne.n	80083a8 <__ascii_mbtowc+0x8>
 80083a6:	a901      	add	r1, sp, #4
 80083a8:	1e10      	subs	r0, r2, #0
 80083aa:	d006      	beq.n	80083ba <__ascii_mbtowc+0x1a>
 80083ac:	2b00      	cmp	r3, #0
 80083ae:	d006      	beq.n	80083be <__ascii_mbtowc+0x1e>
 80083b0:	7813      	ldrb	r3, [r2, #0]
 80083b2:	600b      	str	r3, [r1, #0]
 80083b4:	7810      	ldrb	r0, [r2, #0]
 80083b6:	1e43      	subs	r3, r0, #1
 80083b8:	4198      	sbcs	r0, r3
 80083ba:	b002      	add	sp, #8
 80083bc:	4770      	bx	lr
 80083be:	2002      	movs	r0, #2
 80083c0:	4240      	negs	r0, r0
 80083c2:	e7fa      	b.n	80083ba <__ascii_mbtowc+0x1a>

080083c4 <memchr>:
 80083c4:	b2c9      	uxtb	r1, r1
 80083c6:	1882      	adds	r2, r0, r2
 80083c8:	4290      	cmp	r0, r2
 80083ca:	d101      	bne.n	80083d0 <memchr+0xc>
 80083cc:	2000      	movs	r0, #0
 80083ce:	4770      	bx	lr
 80083d0:	7803      	ldrb	r3, [r0, #0]
 80083d2:	428b      	cmp	r3, r1
 80083d4:	d0fb      	beq.n	80083ce <memchr+0xa>
 80083d6:	3001      	adds	r0, #1
 80083d8:	e7f6      	b.n	80083c8 <memchr+0x4>

080083da <memcpy>:
 80083da:	2300      	movs	r3, #0
 80083dc:	b510      	push	{r4, lr}
 80083de:	429a      	cmp	r2, r3
 80083e0:	d100      	bne.n	80083e4 <memcpy+0xa>
 80083e2:	bd10      	pop	{r4, pc}
 80083e4:	5ccc      	ldrb	r4, [r1, r3]
 80083e6:	54c4      	strb	r4, [r0, r3]
 80083e8:	3301      	adds	r3, #1
 80083ea:	e7f8      	b.n	80083de <memcpy+0x4>

080083ec <__malloc_lock>:
 80083ec:	b510      	push	{r4, lr}
 80083ee:	4802      	ldr	r0, [pc, #8]	; (80083f8 <__malloc_lock+0xc>)
 80083f0:	f001 fee9 	bl	800a1c6 <__retarget_lock_acquire_recursive>
 80083f4:	bd10      	pop	{r4, pc}
 80083f6:	46c0      	nop			; (mov r8, r8)
 80083f8:	200003d4 	.word	0x200003d4

080083fc <__malloc_unlock>:
 80083fc:	b510      	push	{r4, lr}
 80083fe:	4802      	ldr	r0, [pc, #8]	; (8008408 <__malloc_unlock+0xc>)
 8008400:	f001 fee2 	bl	800a1c8 <__retarget_lock_release_recursive>
 8008404:	bd10      	pop	{r4, pc}
 8008406:	46c0      	nop			; (mov r8, r8)
 8008408:	200003d4 	.word	0x200003d4

0800840c <_Balloc>:
 800840c:	b570      	push	{r4, r5, r6, lr}
 800840e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8008410:	0006      	movs	r6, r0
 8008412:	000c      	movs	r4, r1
 8008414:	2d00      	cmp	r5, #0
 8008416:	d10e      	bne.n	8008436 <_Balloc+0x2a>
 8008418:	2010      	movs	r0, #16
 800841a:	f7fc ffbd 	bl	8005398 <malloc>
 800841e:	1e02      	subs	r2, r0, #0
 8008420:	6270      	str	r0, [r6, #36]	; 0x24
 8008422:	d104      	bne.n	800842e <_Balloc+0x22>
 8008424:	2166      	movs	r1, #102	; 0x66
 8008426:	4b19      	ldr	r3, [pc, #100]	; (800848c <_Balloc+0x80>)
 8008428:	4819      	ldr	r0, [pc, #100]	; (8008490 <_Balloc+0x84>)
 800842a:	f7fe fd47 	bl	8006ebc <__assert_func>
 800842e:	6045      	str	r5, [r0, #4]
 8008430:	6085      	str	r5, [r0, #8]
 8008432:	6005      	str	r5, [r0, #0]
 8008434:	60c5      	str	r5, [r0, #12]
 8008436:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8008438:	68eb      	ldr	r3, [r5, #12]
 800843a:	2b00      	cmp	r3, #0
 800843c:	d013      	beq.n	8008466 <_Balloc+0x5a>
 800843e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8008440:	00a2      	lsls	r2, r4, #2
 8008442:	68db      	ldr	r3, [r3, #12]
 8008444:	189b      	adds	r3, r3, r2
 8008446:	6818      	ldr	r0, [r3, #0]
 8008448:	2800      	cmp	r0, #0
 800844a:	d118      	bne.n	800847e <_Balloc+0x72>
 800844c:	2101      	movs	r1, #1
 800844e:	000d      	movs	r5, r1
 8008450:	40a5      	lsls	r5, r4
 8008452:	1d6a      	adds	r2, r5, #5
 8008454:	0030      	movs	r0, r6
 8008456:	0092      	lsls	r2, r2, #2
 8008458:	f000 fca1 	bl	8008d9e <_calloc_r>
 800845c:	2800      	cmp	r0, #0
 800845e:	d00c      	beq.n	800847a <_Balloc+0x6e>
 8008460:	6044      	str	r4, [r0, #4]
 8008462:	6085      	str	r5, [r0, #8]
 8008464:	e00d      	b.n	8008482 <_Balloc+0x76>
 8008466:	2221      	movs	r2, #33	; 0x21
 8008468:	2104      	movs	r1, #4
 800846a:	0030      	movs	r0, r6
 800846c:	f000 fc97 	bl	8008d9e <_calloc_r>
 8008470:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8008472:	60e8      	str	r0, [r5, #12]
 8008474:	68db      	ldr	r3, [r3, #12]
 8008476:	2b00      	cmp	r3, #0
 8008478:	d1e1      	bne.n	800843e <_Balloc+0x32>
 800847a:	2000      	movs	r0, #0
 800847c:	bd70      	pop	{r4, r5, r6, pc}
 800847e:	6802      	ldr	r2, [r0, #0]
 8008480:	601a      	str	r2, [r3, #0]
 8008482:	2300      	movs	r3, #0
 8008484:	6103      	str	r3, [r0, #16]
 8008486:	60c3      	str	r3, [r0, #12]
 8008488:	e7f8      	b.n	800847c <_Balloc+0x70>
 800848a:	46c0      	nop			; (mov r8, r8)
 800848c:	0800a700 	.word	0x0800a700
 8008490:	0800a9a2 	.word	0x0800a9a2

08008494 <_Bfree>:
 8008494:	b570      	push	{r4, r5, r6, lr}
 8008496:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8008498:	0005      	movs	r5, r0
 800849a:	000c      	movs	r4, r1
 800849c:	2e00      	cmp	r6, #0
 800849e:	d10e      	bne.n	80084be <_Bfree+0x2a>
 80084a0:	2010      	movs	r0, #16
 80084a2:	f7fc ff79 	bl	8005398 <malloc>
 80084a6:	1e02      	subs	r2, r0, #0
 80084a8:	6268      	str	r0, [r5, #36]	; 0x24
 80084aa:	d104      	bne.n	80084b6 <_Bfree+0x22>
 80084ac:	218a      	movs	r1, #138	; 0x8a
 80084ae:	4b09      	ldr	r3, [pc, #36]	; (80084d4 <_Bfree+0x40>)
 80084b0:	4809      	ldr	r0, [pc, #36]	; (80084d8 <_Bfree+0x44>)
 80084b2:	f7fe fd03 	bl	8006ebc <__assert_func>
 80084b6:	6046      	str	r6, [r0, #4]
 80084b8:	6086      	str	r6, [r0, #8]
 80084ba:	6006      	str	r6, [r0, #0]
 80084bc:	60c6      	str	r6, [r0, #12]
 80084be:	2c00      	cmp	r4, #0
 80084c0:	d007      	beq.n	80084d2 <_Bfree+0x3e>
 80084c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80084c4:	6862      	ldr	r2, [r4, #4]
 80084c6:	68db      	ldr	r3, [r3, #12]
 80084c8:	0092      	lsls	r2, r2, #2
 80084ca:	189b      	adds	r3, r3, r2
 80084cc:	681a      	ldr	r2, [r3, #0]
 80084ce:	6022      	str	r2, [r4, #0]
 80084d0:	601c      	str	r4, [r3, #0]
 80084d2:	bd70      	pop	{r4, r5, r6, pc}
 80084d4:	0800a700 	.word	0x0800a700
 80084d8:	0800a9a2 	.word	0x0800a9a2

080084dc <__multadd>:
 80084dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80084de:	000e      	movs	r6, r1
 80084e0:	9001      	str	r0, [sp, #4]
 80084e2:	000c      	movs	r4, r1
 80084e4:	001d      	movs	r5, r3
 80084e6:	2000      	movs	r0, #0
 80084e8:	690f      	ldr	r7, [r1, #16]
 80084ea:	3614      	adds	r6, #20
 80084ec:	6833      	ldr	r3, [r6, #0]
 80084ee:	3001      	adds	r0, #1
 80084f0:	b299      	uxth	r1, r3
 80084f2:	4351      	muls	r1, r2
 80084f4:	0c1b      	lsrs	r3, r3, #16
 80084f6:	4353      	muls	r3, r2
 80084f8:	1949      	adds	r1, r1, r5
 80084fa:	0c0d      	lsrs	r5, r1, #16
 80084fc:	195b      	adds	r3, r3, r5
 80084fe:	0c1d      	lsrs	r5, r3, #16
 8008500:	b289      	uxth	r1, r1
 8008502:	041b      	lsls	r3, r3, #16
 8008504:	185b      	adds	r3, r3, r1
 8008506:	c608      	stmia	r6!, {r3}
 8008508:	4287      	cmp	r7, r0
 800850a:	dcef      	bgt.n	80084ec <__multadd+0x10>
 800850c:	2d00      	cmp	r5, #0
 800850e:	d022      	beq.n	8008556 <__multadd+0x7a>
 8008510:	68a3      	ldr	r3, [r4, #8]
 8008512:	42bb      	cmp	r3, r7
 8008514:	dc19      	bgt.n	800854a <__multadd+0x6e>
 8008516:	6863      	ldr	r3, [r4, #4]
 8008518:	9801      	ldr	r0, [sp, #4]
 800851a:	1c59      	adds	r1, r3, #1
 800851c:	f7ff ff76 	bl	800840c <_Balloc>
 8008520:	1e06      	subs	r6, r0, #0
 8008522:	d105      	bne.n	8008530 <__multadd+0x54>
 8008524:	0002      	movs	r2, r0
 8008526:	21b5      	movs	r1, #181	; 0xb5
 8008528:	4b0c      	ldr	r3, [pc, #48]	; (800855c <__multadd+0x80>)
 800852a:	480d      	ldr	r0, [pc, #52]	; (8008560 <__multadd+0x84>)
 800852c:	f7fe fcc6 	bl	8006ebc <__assert_func>
 8008530:	0021      	movs	r1, r4
 8008532:	6923      	ldr	r3, [r4, #16]
 8008534:	310c      	adds	r1, #12
 8008536:	1c9a      	adds	r2, r3, #2
 8008538:	0092      	lsls	r2, r2, #2
 800853a:	300c      	adds	r0, #12
 800853c:	f7ff ff4d 	bl	80083da <memcpy>
 8008540:	0021      	movs	r1, r4
 8008542:	9801      	ldr	r0, [sp, #4]
 8008544:	f7ff ffa6 	bl	8008494 <_Bfree>
 8008548:	0034      	movs	r4, r6
 800854a:	1d3b      	adds	r3, r7, #4
 800854c:	009b      	lsls	r3, r3, #2
 800854e:	18e3      	adds	r3, r4, r3
 8008550:	605d      	str	r5, [r3, #4]
 8008552:	1c7b      	adds	r3, r7, #1
 8008554:	6123      	str	r3, [r4, #16]
 8008556:	0020      	movs	r0, r4
 8008558:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800855a:	46c0      	nop			; (mov r8, r8)
 800855c:	0800a919 	.word	0x0800a919
 8008560:	0800a9a2 	.word	0x0800a9a2

08008564 <__s2b>:
 8008564:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008566:	0006      	movs	r6, r0
 8008568:	0018      	movs	r0, r3
 800856a:	000c      	movs	r4, r1
 800856c:	3008      	adds	r0, #8
 800856e:	2109      	movs	r1, #9
 8008570:	9301      	str	r3, [sp, #4]
 8008572:	0015      	movs	r5, r2
 8008574:	f7f7 fe74 	bl	8000260 <__divsi3>
 8008578:	2301      	movs	r3, #1
 800857a:	2100      	movs	r1, #0
 800857c:	4283      	cmp	r3, r0
 800857e:	db0a      	blt.n	8008596 <__s2b+0x32>
 8008580:	0030      	movs	r0, r6
 8008582:	f7ff ff43 	bl	800840c <_Balloc>
 8008586:	1e01      	subs	r1, r0, #0
 8008588:	d108      	bne.n	800859c <__s2b+0x38>
 800858a:	0002      	movs	r2, r0
 800858c:	4b19      	ldr	r3, [pc, #100]	; (80085f4 <__s2b+0x90>)
 800858e:	481a      	ldr	r0, [pc, #104]	; (80085f8 <__s2b+0x94>)
 8008590:	31ce      	adds	r1, #206	; 0xce
 8008592:	f7fe fc93 	bl	8006ebc <__assert_func>
 8008596:	005b      	lsls	r3, r3, #1
 8008598:	3101      	adds	r1, #1
 800859a:	e7ef      	b.n	800857c <__s2b+0x18>
 800859c:	9b08      	ldr	r3, [sp, #32]
 800859e:	6143      	str	r3, [r0, #20]
 80085a0:	2301      	movs	r3, #1
 80085a2:	6103      	str	r3, [r0, #16]
 80085a4:	2d09      	cmp	r5, #9
 80085a6:	dd18      	ble.n	80085da <__s2b+0x76>
 80085a8:	0023      	movs	r3, r4
 80085aa:	3309      	adds	r3, #9
 80085ac:	001f      	movs	r7, r3
 80085ae:	9300      	str	r3, [sp, #0]
 80085b0:	1964      	adds	r4, r4, r5
 80085b2:	783b      	ldrb	r3, [r7, #0]
 80085b4:	220a      	movs	r2, #10
 80085b6:	0030      	movs	r0, r6
 80085b8:	3b30      	subs	r3, #48	; 0x30
 80085ba:	f7ff ff8f 	bl	80084dc <__multadd>
 80085be:	3701      	adds	r7, #1
 80085c0:	0001      	movs	r1, r0
 80085c2:	42a7      	cmp	r7, r4
 80085c4:	d1f5      	bne.n	80085b2 <__s2b+0x4e>
 80085c6:	002c      	movs	r4, r5
 80085c8:	9b00      	ldr	r3, [sp, #0]
 80085ca:	3c08      	subs	r4, #8
 80085cc:	191c      	adds	r4, r3, r4
 80085ce:	002f      	movs	r7, r5
 80085d0:	9b01      	ldr	r3, [sp, #4]
 80085d2:	429f      	cmp	r7, r3
 80085d4:	db04      	blt.n	80085e0 <__s2b+0x7c>
 80085d6:	0008      	movs	r0, r1
 80085d8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80085da:	2509      	movs	r5, #9
 80085dc:	340a      	adds	r4, #10
 80085de:	e7f6      	b.n	80085ce <__s2b+0x6a>
 80085e0:	1b63      	subs	r3, r4, r5
 80085e2:	5ddb      	ldrb	r3, [r3, r7]
 80085e4:	220a      	movs	r2, #10
 80085e6:	0030      	movs	r0, r6
 80085e8:	3b30      	subs	r3, #48	; 0x30
 80085ea:	f7ff ff77 	bl	80084dc <__multadd>
 80085ee:	3701      	adds	r7, #1
 80085f0:	0001      	movs	r1, r0
 80085f2:	e7ed      	b.n	80085d0 <__s2b+0x6c>
 80085f4:	0800a919 	.word	0x0800a919
 80085f8:	0800a9a2 	.word	0x0800a9a2

080085fc <__hi0bits>:
 80085fc:	0003      	movs	r3, r0
 80085fe:	0c02      	lsrs	r2, r0, #16
 8008600:	2000      	movs	r0, #0
 8008602:	4282      	cmp	r2, r0
 8008604:	d101      	bne.n	800860a <__hi0bits+0xe>
 8008606:	041b      	lsls	r3, r3, #16
 8008608:	3010      	adds	r0, #16
 800860a:	0e1a      	lsrs	r2, r3, #24
 800860c:	d101      	bne.n	8008612 <__hi0bits+0x16>
 800860e:	3008      	adds	r0, #8
 8008610:	021b      	lsls	r3, r3, #8
 8008612:	0f1a      	lsrs	r2, r3, #28
 8008614:	d101      	bne.n	800861a <__hi0bits+0x1e>
 8008616:	3004      	adds	r0, #4
 8008618:	011b      	lsls	r3, r3, #4
 800861a:	0f9a      	lsrs	r2, r3, #30
 800861c:	d101      	bne.n	8008622 <__hi0bits+0x26>
 800861e:	3002      	adds	r0, #2
 8008620:	009b      	lsls	r3, r3, #2
 8008622:	2b00      	cmp	r3, #0
 8008624:	db03      	blt.n	800862e <__hi0bits+0x32>
 8008626:	3001      	adds	r0, #1
 8008628:	005b      	lsls	r3, r3, #1
 800862a:	d400      	bmi.n	800862e <__hi0bits+0x32>
 800862c:	2020      	movs	r0, #32
 800862e:	4770      	bx	lr

08008630 <__lo0bits>:
 8008630:	6803      	ldr	r3, [r0, #0]
 8008632:	0002      	movs	r2, r0
 8008634:	2107      	movs	r1, #7
 8008636:	0018      	movs	r0, r3
 8008638:	4008      	ands	r0, r1
 800863a:	420b      	tst	r3, r1
 800863c:	d00d      	beq.n	800865a <__lo0bits+0x2a>
 800863e:	3906      	subs	r1, #6
 8008640:	2000      	movs	r0, #0
 8008642:	420b      	tst	r3, r1
 8008644:	d105      	bne.n	8008652 <__lo0bits+0x22>
 8008646:	3002      	adds	r0, #2
 8008648:	4203      	tst	r3, r0
 800864a:	d003      	beq.n	8008654 <__lo0bits+0x24>
 800864c:	40cb      	lsrs	r3, r1
 800864e:	0008      	movs	r0, r1
 8008650:	6013      	str	r3, [r2, #0]
 8008652:	4770      	bx	lr
 8008654:	089b      	lsrs	r3, r3, #2
 8008656:	6013      	str	r3, [r2, #0]
 8008658:	e7fb      	b.n	8008652 <__lo0bits+0x22>
 800865a:	b299      	uxth	r1, r3
 800865c:	2900      	cmp	r1, #0
 800865e:	d101      	bne.n	8008664 <__lo0bits+0x34>
 8008660:	2010      	movs	r0, #16
 8008662:	0c1b      	lsrs	r3, r3, #16
 8008664:	b2d9      	uxtb	r1, r3
 8008666:	2900      	cmp	r1, #0
 8008668:	d101      	bne.n	800866e <__lo0bits+0x3e>
 800866a:	3008      	adds	r0, #8
 800866c:	0a1b      	lsrs	r3, r3, #8
 800866e:	0719      	lsls	r1, r3, #28
 8008670:	d101      	bne.n	8008676 <__lo0bits+0x46>
 8008672:	3004      	adds	r0, #4
 8008674:	091b      	lsrs	r3, r3, #4
 8008676:	0799      	lsls	r1, r3, #30
 8008678:	d101      	bne.n	800867e <__lo0bits+0x4e>
 800867a:	3002      	adds	r0, #2
 800867c:	089b      	lsrs	r3, r3, #2
 800867e:	07d9      	lsls	r1, r3, #31
 8008680:	d4e9      	bmi.n	8008656 <__lo0bits+0x26>
 8008682:	3001      	adds	r0, #1
 8008684:	085b      	lsrs	r3, r3, #1
 8008686:	d1e6      	bne.n	8008656 <__lo0bits+0x26>
 8008688:	2020      	movs	r0, #32
 800868a:	e7e2      	b.n	8008652 <__lo0bits+0x22>

0800868c <__i2b>:
 800868c:	b510      	push	{r4, lr}
 800868e:	000c      	movs	r4, r1
 8008690:	2101      	movs	r1, #1
 8008692:	f7ff febb 	bl	800840c <_Balloc>
 8008696:	2800      	cmp	r0, #0
 8008698:	d106      	bne.n	80086a8 <__i2b+0x1c>
 800869a:	21a0      	movs	r1, #160	; 0xa0
 800869c:	0002      	movs	r2, r0
 800869e:	4b04      	ldr	r3, [pc, #16]	; (80086b0 <__i2b+0x24>)
 80086a0:	4804      	ldr	r0, [pc, #16]	; (80086b4 <__i2b+0x28>)
 80086a2:	0049      	lsls	r1, r1, #1
 80086a4:	f7fe fc0a 	bl	8006ebc <__assert_func>
 80086a8:	2301      	movs	r3, #1
 80086aa:	6144      	str	r4, [r0, #20]
 80086ac:	6103      	str	r3, [r0, #16]
 80086ae:	bd10      	pop	{r4, pc}
 80086b0:	0800a919 	.word	0x0800a919
 80086b4:	0800a9a2 	.word	0x0800a9a2

080086b8 <__multiply>:
 80086b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80086ba:	690b      	ldr	r3, [r1, #16]
 80086bc:	0014      	movs	r4, r2
 80086be:	6912      	ldr	r2, [r2, #16]
 80086c0:	000d      	movs	r5, r1
 80086c2:	b089      	sub	sp, #36	; 0x24
 80086c4:	4293      	cmp	r3, r2
 80086c6:	da01      	bge.n	80086cc <__multiply+0x14>
 80086c8:	0025      	movs	r5, r4
 80086ca:	000c      	movs	r4, r1
 80086cc:	692f      	ldr	r7, [r5, #16]
 80086ce:	6926      	ldr	r6, [r4, #16]
 80086d0:	6869      	ldr	r1, [r5, #4]
 80086d2:	19bb      	adds	r3, r7, r6
 80086d4:	9302      	str	r3, [sp, #8]
 80086d6:	68ab      	ldr	r3, [r5, #8]
 80086d8:	19ba      	adds	r2, r7, r6
 80086da:	4293      	cmp	r3, r2
 80086dc:	da00      	bge.n	80086e0 <__multiply+0x28>
 80086de:	3101      	adds	r1, #1
 80086e0:	f7ff fe94 	bl	800840c <_Balloc>
 80086e4:	9001      	str	r0, [sp, #4]
 80086e6:	2800      	cmp	r0, #0
 80086e8:	d106      	bne.n	80086f8 <__multiply+0x40>
 80086ea:	215e      	movs	r1, #94	; 0x5e
 80086ec:	0002      	movs	r2, r0
 80086ee:	4b48      	ldr	r3, [pc, #288]	; (8008810 <__multiply+0x158>)
 80086f0:	4848      	ldr	r0, [pc, #288]	; (8008814 <__multiply+0x15c>)
 80086f2:	31ff      	adds	r1, #255	; 0xff
 80086f4:	f7fe fbe2 	bl	8006ebc <__assert_func>
 80086f8:	9b01      	ldr	r3, [sp, #4]
 80086fa:	2200      	movs	r2, #0
 80086fc:	3314      	adds	r3, #20
 80086fe:	469c      	mov	ip, r3
 8008700:	19bb      	adds	r3, r7, r6
 8008702:	009b      	lsls	r3, r3, #2
 8008704:	4463      	add	r3, ip
 8008706:	9303      	str	r3, [sp, #12]
 8008708:	4663      	mov	r3, ip
 800870a:	9903      	ldr	r1, [sp, #12]
 800870c:	428b      	cmp	r3, r1
 800870e:	d32c      	bcc.n	800876a <__multiply+0xb2>
 8008710:	002b      	movs	r3, r5
 8008712:	0022      	movs	r2, r4
 8008714:	3314      	adds	r3, #20
 8008716:	00bf      	lsls	r7, r7, #2
 8008718:	3214      	adds	r2, #20
 800871a:	9306      	str	r3, [sp, #24]
 800871c:	00b6      	lsls	r6, r6, #2
 800871e:	19db      	adds	r3, r3, r7
 8008720:	9304      	str	r3, [sp, #16]
 8008722:	1993      	adds	r3, r2, r6
 8008724:	9307      	str	r3, [sp, #28]
 8008726:	2304      	movs	r3, #4
 8008728:	9305      	str	r3, [sp, #20]
 800872a:	002b      	movs	r3, r5
 800872c:	9904      	ldr	r1, [sp, #16]
 800872e:	3315      	adds	r3, #21
 8008730:	9200      	str	r2, [sp, #0]
 8008732:	4299      	cmp	r1, r3
 8008734:	d305      	bcc.n	8008742 <__multiply+0x8a>
 8008736:	1b4b      	subs	r3, r1, r5
 8008738:	3b15      	subs	r3, #21
 800873a:	089b      	lsrs	r3, r3, #2
 800873c:	3301      	adds	r3, #1
 800873e:	009b      	lsls	r3, r3, #2
 8008740:	9305      	str	r3, [sp, #20]
 8008742:	9b07      	ldr	r3, [sp, #28]
 8008744:	9a00      	ldr	r2, [sp, #0]
 8008746:	429a      	cmp	r2, r3
 8008748:	d311      	bcc.n	800876e <__multiply+0xb6>
 800874a:	9b02      	ldr	r3, [sp, #8]
 800874c:	2b00      	cmp	r3, #0
 800874e:	dd06      	ble.n	800875e <__multiply+0xa6>
 8008750:	9b03      	ldr	r3, [sp, #12]
 8008752:	3b04      	subs	r3, #4
 8008754:	9303      	str	r3, [sp, #12]
 8008756:	681b      	ldr	r3, [r3, #0]
 8008758:	9300      	str	r3, [sp, #0]
 800875a:	2b00      	cmp	r3, #0
 800875c:	d053      	beq.n	8008806 <__multiply+0x14e>
 800875e:	9b01      	ldr	r3, [sp, #4]
 8008760:	9a02      	ldr	r2, [sp, #8]
 8008762:	0018      	movs	r0, r3
 8008764:	611a      	str	r2, [r3, #16]
 8008766:	b009      	add	sp, #36	; 0x24
 8008768:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800876a:	c304      	stmia	r3!, {r2}
 800876c:	e7cd      	b.n	800870a <__multiply+0x52>
 800876e:	9b00      	ldr	r3, [sp, #0]
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	b298      	uxth	r0, r3
 8008774:	2800      	cmp	r0, #0
 8008776:	d01b      	beq.n	80087b0 <__multiply+0xf8>
 8008778:	4667      	mov	r7, ip
 800877a:	2400      	movs	r4, #0
 800877c:	9e06      	ldr	r6, [sp, #24]
 800877e:	ce02      	ldmia	r6!, {r1}
 8008780:	683a      	ldr	r2, [r7, #0]
 8008782:	b28b      	uxth	r3, r1
 8008784:	4343      	muls	r3, r0
 8008786:	b292      	uxth	r2, r2
 8008788:	189b      	adds	r3, r3, r2
 800878a:	191b      	adds	r3, r3, r4
 800878c:	0c0c      	lsrs	r4, r1, #16
 800878e:	4344      	muls	r4, r0
 8008790:	683a      	ldr	r2, [r7, #0]
 8008792:	0c11      	lsrs	r1, r2, #16
 8008794:	1861      	adds	r1, r4, r1
 8008796:	0c1c      	lsrs	r4, r3, #16
 8008798:	1909      	adds	r1, r1, r4
 800879a:	0c0c      	lsrs	r4, r1, #16
 800879c:	b29b      	uxth	r3, r3
 800879e:	0409      	lsls	r1, r1, #16
 80087a0:	430b      	orrs	r3, r1
 80087a2:	c708      	stmia	r7!, {r3}
 80087a4:	9b04      	ldr	r3, [sp, #16]
 80087a6:	42b3      	cmp	r3, r6
 80087a8:	d8e9      	bhi.n	800877e <__multiply+0xc6>
 80087aa:	4663      	mov	r3, ip
 80087ac:	9a05      	ldr	r2, [sp, #20]
 80087ae:	509c      	str	r4, [r3, r2]
 80087b0:	9b00      	ldr	r3, [sp, #0]
 80087b2:	681b      	ldr	r3, [r3, #0]
 80087b4:	0c1e      	lsrs	r6, r3, #16
 80087b6:	d020      	beq.n	80087fa <__multiply+0x142>
 80087b8:	4663      	mov	r3, ip
 80087ba:	002c      	movs	r4, r5
 80087bc:	4660      	mov	r0, ip
 80087be:	2700      	movs	r7, #0
 80087c0:	681b      	ldr	r3, [r3, #0]
 80087c2:	3414      	adds	r4, #20
 80087c4:	6822      	ldr	r2, [r4, #0]
 80087c6:	b29b      	uxth	r3, r3
 80087c8:	b291      	uxth	r1, r2
 80087ca:	4371      	muls	r1, r6
 80087cc:	6802      	ldr	r2, [r0, #0]
 80087ce:	0c12      	lsrs	r2, r2, #16
 80087d0:	1889      	adds	r1, r1, r2
 80087d2:	19cf      	adds	r7, r1, r7
 80087d4:	0439      	lsls	r1, r7, #16
 80087d6:	430b      	orrs	r3, r1
 80087d8:	6003      	str	r3, [r0, #0]
 80087da:	cc02      	ldmia	r4!, {r1}
 80087dc:	6843      	ldr	r3, [r0, #4]
 80087de:	0c09      	lsrs	r1, r1, #16
 80087e0:	4371      	muls	r1, r6
 80087e2:	b29b      	uxth	r3, r3
 80087e4:	0c3f      	lsrs	r7, r7, #16
 80087e6:	18cb      	adds	r3, r1, r3
 80087e8:	9a04      	ldr	r2, [sp, #16]
 80087ea:	19db      	adds	r3, r3, r7
 80087ec:	0c1f      	lsrs	r7, r3, #16
 80087ee:	3004      	adds	r0, #4
 80087f0:	42a2      	cmp	r2, r4
 80087f2:	d8e7      	bhi.n	80087c4 <__multiply+0x10c>
 80087f4:	4662      	mov	r2, ip
 80087f6:	9905      	ldr	r1, [sp, #20]
 80087f8:	5053      	str	r3, [r2, r1]
 80087fa:	9b00      	ldr	r3, [sp, #0]
 80087fc:	3304      	adds	r3, #4
 80087fe:	9300      	str	r3, [sp, #0]
 8008800:	2304      	movs	r3, #4
 8008802:	449c      	add	ip, r3
 8008804:	e79d      	b.n	8008742 <__multiply+0x8a>
 8008806:	9b02      	ldr	r3, [sp, #8]
 8008808:	3b01      	subs	r3, #1
 800880a:	9302      	str	r3, [sp, #8]
 800880c:	e79d      	b.n	800874a <__multiply+0x92>
 800880e:	46c0      	nop			; (mov r8, r8)
 8008810:	0800a919 	.word	0x0800a919
 8008814:	0800a9a2 	.word	0x0800a9a2

08008818 <__pow5mult>:
 8008818:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800881a:	2303      	movs	r3, #3
 800881c:	0015      	movs	r5, r2
 800881e:	0007      	movs	r7, r0
 8008820:	000e      	movs	r6, r1
 8008822:	401a      	ands	r2, r3
 8008824:	421d      	tst	r5, r3
 8008826:	d008      	beq.n	800883a <__pow5mult+0x22>
 8008828:	4925      	ldr	r1, [pc, #148]	; (80088c0 <__pow5mult+0xa8>)
 800882a:	3a01      	subs	r2, #1
 800882c:	0092      	lsls	r2, r2, #2
 800882e:	5852      	ldr	r2, [r2, r1]
 8008830:	2300      	movs	r3, #0
 8008832:	0031      	movs	r1, r6
 8008834:	f7ff fe52 	bl	80084dc <__multadd>
 8008838:	0006      	movs	r6, r0
 800883a:	10ad      	asrs	r5, r5, #2
 800883c:	d03d      	beq.n	80088ba <__pow5mult+0xa2>
 800883e:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8008840:	2c00      	cmp	r4, #0
 8008842:	d10f      	bne.n	8008864 <__pow5mult+0x4c>
 8008844:	2010      	movs	r0, #16
 8008846:	f7fc fda7 	bl	8005398 <malloc>
 800884a:	1e02      	subs	r2, r0, #0
 800884c:	6278      	str	r0, [r7, #36]	; 0x24
 800884e:	d105      	bne.n	800885c <__pow5mult+0x44>
 8008850:	21d7      	movs	r1, #215	; 0xd7
 8008852:	4b1c      	ldr	r3, [pc, #112]	; (80088c4 <__pow5mult+0xac>)
 8008854:	481c      	ldr	r0, [pc, #112]	; (80088c8 <__pow5mult+0xb0>)
 8008856:	0049      	lsls	r1, r1, #1
 8008858:	f7fe fb30 	bl	8006ebc <__assert_func>
 800885c:	6044      	str	r4, [r0, #4]
 800885e:	6084      	str	r4, [r0, #8]
 8008860:	6004      	str	r4, [r0, #0]
 8008862:	60c4      	str	r4, [r0, #12]
 8008864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008866:	689c      	ldr	r4, [r3, #8]
 8008868:	9301      	str	r3, [sp, #4]
 800886a:	2c00      	cmp	r4, #0
 800886c:	d108      	bne.n	8008880 <__pow5mult+0x68>
 800886e:	0038      	movs	r0, r7
 8008870:	4916      	ldr	r1, [pc, #88]	; (80088cc <__pow5mult+0xb4>)
 8008872:	f7ff ff0b 	bl	800868c <__i2b>
 8008876:	9b01      	ldr	r3, [sp, #4]
 8008878:	0004      	movs	r4, r0
 800887a:	6098      	str	r0, [r3, #8]
 800887c:	2300      	movs	r3, #0
 800887e:	6003      	str	r3, [r0, #0]
 8008880:	2301      	movs	r3, #1
 8008882:	421d      	tst	r5, r3
 8008884:	d00a      	beq.n	800889c <__pow5mult+0x84>
 8008886:	0031      	movs	r1, r6
 8008888:	0022      	movs	r2, r4
 800888a:	0038      	movs	r0, r7
 800888c:	f7ff ff14 	bl	80086b8 <__multiply>
 8008890:	0031      	movs	r1, r6
 8008892:	9001      	str	r0, [sp, #4]
 8008894:	0038      	movs	r0, r7
 8008896:	f7ff fdfd 	bl	8008494 <_Bfree>
 800889a:	9e01      	ldr	r6, [sp, #4]
 800889c:	106d      	asrs	r5, r5, #1
 800889e:	d00c      	beq.n	80088ba <__pow5mult+0xa2>
 80088a0:	6820      	ldr	r0, [r4, #0]
 80088a2:	2800      	cmp	r0, #0
 80088a4:	d107      	bne.n	80088b6 <__pow5mult+0x9e>
 80088a6:	0022      	movs	r2, r4
 80088a8:	0021      	movs	r1, r4
 80088aa:	0038      	movs	r0, r7
 80088ac:	f7ff ff04 	bl	80086b8 <__multiply>
 80088b0:	2300      	movs	r3, #0
 80088b2:	6020      	str	r0, [r4, #0]
 80088b4:	6003      	str	r3, [r0, #0]
 80088b6:	0004      	movs	r4, r0
 80088b8:	e7e2      	b.n	8008880 <__pow5mult+0x68>
 80088ba:	0030      	movs	r0, r6
 80088bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80088be:	46c0      	nop			; (mov r8, r8)
 80088c0:	0800aaf0 	.word	0x0800aaf0
 80088c4:	0800a700 	.word	0x0800a700
 80088c8:	0800a9a2 	.word	0x0800a9a2
 80088cc:	00000271 	.word	0x00000271

080088d0 <__lshift>:
 80088d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80088d2:	000c      	movs	r4, r1
 80088d4:	0017      	movs	r7, r2
 80088d6:	6923      	ldr	r3, [r4, #16]
 80088d8:	1155      	asrs	r5, r2, #5
 80088da:	b087      	sub	sp, #28
 80088dc:	18eb      	adds	r3, r5, r3
 80088de:	9302      	str	r3, [sp, #8]
 80088e0:	3301      	adds	r3, #1
 80088e2:	9301      	str	r3, [sp, #4]
 80088e4:	6849      	ldr	r1, [r1, #4]
 80088e6:	68a3      	ldr	r3, [r4, #8]
 80088e8:	9004      	str	r0, [sp, #16]
 80088ea:	9a01      	ldr	r2, [sp, #4]
 80088ec:	4293      	cmp	r3, r2
 80088ee:	db10      	blt.n	8008912 <__lshift+0x42>
 80088f0:	9804      	ldr	r0, [sp, #16]
 80088f2:	f7ff fd8b 	bl	800840c <_Balloc>
 80088f6:	2300      	movs	r3, #0
 80088f8:	0002      	movs	r2, r0
 80088fa:	0006      	movs	r6, r0
 80088fc:	0019      	movs	r1, r3
 80088fe:	3214      	adds	r2, #20
 8008900:	4298      	cmp	r0, r3
 8008902:	d10c      	bne.n	800891e <__lshift+0x4e>
 8008904:	21da      	movs	r1, #218	; 0xda
 8008906:	0002      	movs	r2, r0
 8008908:	4b26      	ldr	r3, [pc, #152]	; (80089a4 <__lshift+0xd4>)
 800890a:	4827      	ldr	r0, [pc, #156]	; (80089a8 <__lshift+0xd8>)
 800890c:	31ff      	adds	r1, #255	; 0xff
 800890e:	f7fe fad5 	bl	8006ebc <__assert_func>
 8008912:	3101      	adds	r1, #1
 8008914:	005b      	lsls	r3, r3, #1
 8008916:	e7e8      	b.n	80088ea <__lshift+0x1a>
 8008918:	0098      	lsls	r0, r3, #2
 800891a:	5011      	str	r1, [r2, r0]
 800891c:	3301      	adds	r3, #1
 800891e:	42ab      	cmp	r3, r5
 8008920:	dbfa      	blt.n	8008918 <__lshift+0x48>
 8008922:	43eb      	mvns	r3, r5
 8008924:	17db      	asrs	r3, r3, #31
 8008926:	401d      	ands	r5, r3
 8008928:	211f      	movs	r1, #31
 800892a:	0023      	movs	r3, r4
 800892c:	0038      	movs	r0, r7
 800892e:	00ad      	lsls	r5, r5, #2
 8008930:	1955      	adds	r5, r2, r5
 8008932:	6922      	ldr	r2, [r4, #16]
 8008934:	3314      	adds	r3, #20
 8008936:	0092      	lsls	r2, r2, #2
 8008938:	4008      	ands	r0, r1
 800893a:	4684      	mov	ip, r0
 800893c:	189a      	adds	r2, r3, r2
 800893e:	420f      	tst	r7, r1
 8008940:	d02a      	beq.n	8008998 <__lshift+0xc8>
 8008942:	3101      	adds	r1, #1
 8008944:	1a09      	subs	r1, r1, r0
 8008946:	9105      	str	r1, [sp, #20]
 8008948:	2100      	movs	r1, #0
 800894a:	9503      	str	r5, [sp, #12]
 800894c:	4667      	mov	r7, ip
 800894e:	6818      	ldr	r0, [r3, #0]
 8008950:	40b8      	lsls	r0, r7
 8008952:	4301      	orrs	r1, r0
 8008954:	9803      	ldr	r0, [sp, #12]
 8008956:	c002      	stmia	r0!, {r1}
 8008958:	cb02      	ldmia	r3!, {r1}
 800895a:	9003      	str	r0, [sp, #12]
 800895c:	9805      	ldr	r0, [sp, #20]
 800895e:	40c1      	lsrs	r1, r0
 8008960:	429a      	cmp	r2, r3
 8008962:	d8f3      	bhi.n	800894c <__lshift+0x7c>
 8008964:	0020      	movs	r0, r4
 8008966:	3015      	adds	r0, #21
 8008968:	2304      	movs	r3, #4
 800896a:	4282      	cmp	r2, r0
 800896c:	d304      	bcc.n	8008978 <__lshift+0xa8>
 800896e:	1b13      	subs	r3, r2, r4
 8008970:	3b15      	subs	r3, #21
 8008972:	089b      	lsrs	r3, r3, #2
 8008974:	3301      	adds	r3, #1
 8008976:	009b      	lsls	r3, r3, #2
 8008978:	50e9      	str	r1, [r5, r3]
 800897a:	2900      	cmp	r1, #0
 800897c:	d002      	beq.n	8008984 <__lshift+0xb4>
 800897e:	9b02      	ldr	r3, [sp, #8]
 8008980:	3302      	adds	r3, #2
 8008982:	9301      	str	r3, [sp, #4]
 8008984:	9b01      	ldr	r3, [sp, #4]
 8008986:	9804      	ldr	r0, [sp, #16]
 8008988:	3b01      	subs	r3, #1
 800898a:	0021      	movs	r1, r4
 800898c:	6133      	str	r3, [r6, #16]
 800898e:	f7ff fd81 	bl	8008494 <_Bfree>
 8008992:	0030      	movs	r0, r6
 8008994:	b007      	add	sp, #28
 8008996:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008998:	cb02      	ldmia	r3!, {r1}
 800899a:	c502      	stmia	r5!, {r1}
 800899c:	429a      	cmp	r2, r3
 800899e:	d8fb      	bhi.n	8008998 <__lshift+0xc8>
 80089a0:	e7f0      	b.n	8008984 <__lshift+0xb4>
 80089a2:	46c0      	nop			; (mov r8, r8)
 80089a4:	0800a919 	.word	0x0800a919
 80089a8:	0800a9a2 	.word	0x0800a9a2

080089ac <__mcmp>:
 80089ac:	6902      	ldr	r2, [r0, #16]
 80089ae:	690b      	ldr	r3, [r1, #16]
 80089b0:	b530      	push	{r4, r5, lr}
 80089b2:	0004      	movs	r4, r0
 80089b4:	1ad0      	subs	r0, r2, r3
 80089b6:	429a      	cmp	r2, r3
 80089b8:	d10d      	bne.n	80089d6 <__mcmp+0x2a>
 80089ba:	009b      	lsls	r3, r3, #2
 80089bc:	3414      	adds	r4, #20
 80089be:	3114      	adds	r1, #20
 80089c0:	18e2      	adds	r2, r4, r3
 80089c2:	18c9      	adds	r1, r1, r3
 80089c4:	3a04      	subs	r2, #4
 80089c6:	3904      	subs	r1, #4
 80089c8:	6815      	ldr	r5, [r2, #0]
 80089ca:	680b      	ldr	r3, [r1, #0]
 80089cc:	429d      	cmp	r5, r3
 80089ce:	d003      	beq.n	80089d8 <__mcmp+0x2c>
 80089d0:	2001      	movs	r0, #1
 80089d2:	429d      	cmp	r5, r3
 80089d4:	d303      	bcc.n	80089de <__mcmp+0x32>
 80089d6:	bd30      	pop	{r4, r5, pc}
 80089d8:	4294      	cmp	r4, r2
 80089da:	d3f3      	bcc.n	80089c4 <__mcmp+0x18>
 80089dc:	e7fb      	b.n	80089d6 <__mcmp+0x2a>
 80089de:	4240      	negs	r0, r0
 80089e0:	e7f9      	b.n	80089d6 <__mcmp+0x2a>
	...

080089e4 <__mdiff>:
 80089e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089e6:	000e      	movs	r6, r1
 80089e8:	0007      	movs	r7, r0
 80089ea:	0011      	movs	r1, r2
 80089ec:	0030      	movs	r0, r6
 80089ee:	b087      	sub	sp, #28
 80089f0:	0014      	movs	r4, r2
 80089f2:	f7ff ffdb 	bl	80089ac <__mcmp>
 80089f6:	1e05      	subs	r5, r0, #0
 80089f8:	d110      	bne.n	8008a1c <__mdiff+0x38>
 80089fa:	0001      	movs	r1, r0
 80089fc:	0038      	movs	r0, r7
 80089fe:	f7ff fd05 	bl	800840c <_Balloc>
 8008a02:	1e02      	subs	r2, r0, #0
 8008a04:	d104      	bne.n	8008a10 <__mdiff+0x2c>
 8008a06:	4b40      	ldr	r3, [pc, #256]	; (8008b08 <__mdiff+0x124>)
 8008a08:	4940      	ldr	r1, [pc, #256]	; (8008b0c <__mdiff+0x128>)
 8008a0a:	4841      	ldr	r0, [pc, #260]	; (8008b10 <__mdiff+0x12c>)
 8008a0c:	f7fe fa56 	bl	8006ebc <__assert_func>
 8008a10:	2301      	movs	r3, #1
 8008a12:	6145      	str	r5, [r0, #20]
 8008a14:	6103      	str	r3, [r0, #16]
 8008a16:	0010      	movs	r0, r2
 8008a18:	b007      	add	sp, #28
 8008a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008a1c:	2301      	movs	r3, #1
 8008a1e:	9301      	str	r3, [sp, #4]
 8008a20:	2800      	cmp	r0, #0
 8008a22:	db04      	blt.n	8008a2e <__mdiff+0x4a>
 8008a24:	0023      	movs	r3, r4
 8008a26:	0034      	movs	r4, r6
 8008a28:	001e      	movs	r6, r3
 8008a2a:	2300      	movs	r3, #0
 8008a2c:	9301      	str	r3, [sp, #4]
 8008a2e:	0038      	movs	r0, r7
 8008a30:	6861      	ldr	r1, [r4, #4]
 8008a32:	f7ff fceb 	bl	800840c <_Balloc>
 8008a36:	1e02      	subs	r2, r0, #0
 8008a38:	d103      	bne.n	8008a42 <__mdiff+0x5e>
 8008a3a:	2190      	movs	r1, #144	; 0x90
 8008a3c:	4b32      	ldr	r3, [pc, #200]	; (8008b08 <__mdiff+0x124>)
 8008a3e:	0089      	lsls	r1, r1, #2
 8008a40:	e7e3      	b.n	8008a0a <__mdiff+0x26>
 8008a42:	9b01      	ldr	r3, [sp, #4]
 8008a44:	2700      	movs	r7, #0
 8008a46:	60c3      	str	r3, [r0, #12]
 8008a48:	6920      	ldr	r0, [r4, #16]
 8008a4a:	3414      	adds	r4, #20
 8008a4c:	9401      	str	r4, [sp, #4]
 8008a4e:	9b01      	ldr	r3, [sp, #4]
 8008a50:	0084      	lsls	r4, r0, #2
 8008a52:	191b      	adds	r3, r3, r4
 8008a54:	0034      	movs	r4, r6
 8008a56:	9302      	str	r3, [sp, #8]
 8008a58:	6933      	ldr	r3, [r6, #16]
 8008a5a:	3414      	adds	r4, #20
 8008a5c:	0099      	lsls	r1, r3, #2
 8008a5e:	1863      	adds	r3, r4, r1
 8008a60:	9303      	str	r3, [sp, #12]
 8008a62:	0013      	movs	r3, r2
 8008a64:	3314      	adds	r3, #20
 8008a66:	469c      	mov	ip, r3
 8008a68:	9305      	str	r3, [sp, #20]
 8008a6a:	9b01      	ldr	r3, [sp, #4]
 8008a6c:	9304      	str	r3, [sp, #16]
 8008a6e:	9b04      	ldr	r3, [sp, #16]
 8008a70:	cc02      	ldmia	r4!, {r1}
 8008a72:	cb20      	ldmia	r3!, {r5}
 8008a74:	9304      	str	r3, [sp, #16]
 8008a76:	b2ab      	uxth	r3, r5
 8008a78:	19df      	adds	r7, r3, r7
 8008a7a:	b28b      	uxth	r3, r1
 8008a7c:	1afb      	subs	r3, r7, r3
 8008a7e:	0c09      	lsrs	r1, r1, #16
 8008a80:	0c2d      	lsrs	r5, r5, #16
 8008a82:	1a6d      	subs	r5, r5, r1
 8008a84:	1419      	asrs	r1, r3, #16
 8008a86:	186d      	adds	r5, r5, r1
 8008a88:	4661      	mov	r1, ip
 8008a8a:	142f      	asrs	r7, r5, #16
 8008a8c:	b29b      	uxth	r3, r3
 8008a8e:	042d      	lsls	r5, r5, #16
 8008a90:	432b      	orrs	r3, r5
 8008a92:	c108      	stmia	r1!, {r3}
 8008a94:	9b03      	ldr	r3, [sp, #12]
 8008a96:	468c      	mov	ip, r1
 8008a98:	42a3      	cmp	r3, r4
 8008a9a:	d8e8      	bhi.n	8008a6e <__mdiff+0x8a>
 8008a9c:	0031      	movs	r1, r6
 8008a9e:	9c03      	ldr	r4, [sp, #12]
 8008aa0:	3115      	adds	r1, #21
 8008aa2:	2304      	movs	r3, #4
 8008aa4:	428c      	cmp	r4, r1
 8008aa6:	d304      	bcc.n	8008ab2 <__mdiff+0xce>
 8008aa8:	1ba3      	subs	r3, r4, r6
 8008aaa:	3b15      	subs	r3, #21
 8008aac:	089b      	lsrs	r3, r3, #2
 8008aae:	3301      	adds	r3, #1
 8008ab0:	009b      	lsls	r3, r3, #2
 8008ab2:	9901      	ldr	r1, [sp, #4]
 8008ab4:	18cc      	adds	r4, r1, r3
 8008ab6:	9905      	ldr	r1, [sp, #20]
 8008ab8:	0026      	movs	r6, r4
 8008aba:	18cb      	adds	r3, r1, r3
 8008abc:	469c      	mov	ip, r3
 8008abe:	9902      	ldr	r1, [sp, #8]
 8008ac0:	428e      	cmp	r6, r1
 8008ac2:	d310      	bcc.n	8008ae6 <__mdiff+0x102>
 8008ac4:	9e02      	ldr	r6, [sp, #8]
 8008ac6:	1ee1      	subs	r1, r4, #3
 8008ac8:	2500      	movs	r5, #0
 8008aca:	428e      	cmp	r6, r1
 8008acc:	d304      	bcc.n	8008ad8 <__mdiff+0xf4>
 8008ace:	0031      	movs	r1, r6
 8008ad0:	3103      	adds	r1, #3
 8008ad2:	1b0c      	subs	r4, r1, r4
 8008ad4:	08a4      	lsrs	r4, r4, #2
 8008ad6:	00a5      	lsls	r5, r4, #2
 8008ad8:	195b      	adds	r3, r3, r5
 8008ada:	3b04      	subs	r3, #4
 8008adc:	6819      	ldr	r1, [r3, #0]
 8008ade:	2900      	cmp	r1, #0
 8008ae0:	d00f      	beq.n	8008b02 <__mdiff+0x11e>
 8008ae2:	6110      	str	r0, [r2, #16]
 8008ae4:	e797      	b.n	8008a16 <__mdiff+0x32>
 8008ae6:	ce02      	ldmia	r6!, {r1}
 8008ae8:	b28d      	uxth	r5, r1
 8008aea:	19ed      	adds	r5, r5, r7
 8008aec:	0c0f      	lsrs	r7, r1, #16
 8008aee:	1429      	asrs	r1, r5, #16
 8008af0:	1879      	adds	r1, r7, r1
 8008af2:	140f      	asrs	r7, r1, #16
 8008af4:	b2ad      	uxth	r5, r5
 8008af6:	0409      	lsls	r1, r1, #16
 8008af8:	430d      	orrs	r5, r1
 8008afa:	4661      	mov	r1, ip
 8008afc:	c120      	stmia	r1!, {r5}
 8008afe:	468c      	mov	ip, r1
 8008b00:	e7dd      	b.n	8008abe <__mdiff+0xda>
 8008b02:	3801      	subs	r0, #1
 8008b04:	e7e9      	b.n	8008ada <__mdiff+0xf6>
 8008b06:	46c0      	nop			; (mov r8, r8)
 8008b08:	0800a919 	.word	0x0800a919
 8008b0c:	00000232 	.word	0x00000232
 8008b10:	0800a9a2 	.word	0x0800a9a2

08008b14 <__ulp>:
 8008b14:	4b0f      	ldr	r3, [pc, #60]	; (8008b54 <__ulp+0x40>)
 8008b16:	4019      	ands	r1, r3
 8008b18:	4b0f      	ldr	r3, [pc, #60]	; (8008b58 <__ulp+0x44>)
 8008b1a:	18c9      	adds	r1, r1, r3
 8008b1c:	2900      	cmp	r1, #0
 8008b1e:	dd04      	ble.n	8008b2a <__ulp+0x16>
 8008b20:	2200      	movs	r2, #0
 8008b22:	000b      	movs	r3, r1
 8008b24:	0010      	movs	r0, r2
 8008b26:	0019      	movs	r1, r3
 8008b28:	4770      	bx	lr
 8008b2a:	4249      	negs	r1, r1
 8008b2c:	2200      	movs	r2, #0
 8008b2e:	2300      	movs	r3, #0
 8008b30:	1509      	asrs	r1, r1, #20
 8008b32:	2913      	cmp	r1, #19
 8008b34:	dc04      	bgt.n	8008b40 <__ulp+0x2c>
 8008b36:	2080      	movs	r0, #128	; 0x80
 8008b38:	0300      	lsls	r0, r0, #12
 8008b3a:	4108      	asrs	r0, r1
 8008b3c:	0003      	movs	r3, r0
 8008b3e:	e7f1      	b.n	8008b24 <__ulp+0x10>
 8008b40:	3914      	subs	r1, #20
 8008b42:	2001      	movs	r0, #1
 8008b44:	291e      	cmp	r1, #30
 8008b46:	dc02      	bgt.n	8008b4e <__ulp+0x3a>
 8008b48:	2080      	movs	r0, #128	; 0x80
 8008b4a:	0600      	lsls	r0, r0, #24
 8008b4c:	40c8      	lsrs	r0, r1
 8008b4e:	0002      	movs	r2, r0
 8008b50:	e7e8      	b.n	8008b24 <__ulp+0x10>
 8008b52:	46c0      	nop			; (mov r8, r8)
 8008b54:	7ff00000 	.word	0x7ff00000
 8008b58:	fcc00000 	.word	0xfcc00000

08008b5c <__b2d>:
 8008b5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008b5e:	0006      	movs	r6, r0
 8008b60:	6903      	ldr	r3, [r0, #16]
 8008b62:	3614      	adds	r6, #20
 8008b64:	009b      	lsls	r3, r3, #2
 8008b66:	18f3      	adds	r3, r6, r3
 8008b68:	1f1d      	subs	r5, r3, #4
 8008b6a:	682c      	ldr	r4, [r5, #0]
 8008b6c:	000f      	movs	r7, r1
 8008b6e:	0020      	movs	r0, r4
 8008b70:	9301      	str	r3, [sp, #4]
 8008b72:	f7ff fd43 	bl	80085fc <__hi0bits>
 8008b76:	2320      	movs	r3, #32
 8008b78:	1a1b      	subs	r3, r3, r0
 8008b7a:	491f      	ldr	r1, [pc, #124]	; (8008bf8 <__b2d+0x9c>)
 8008b7c:	603b      	str	r3, [r7, #0]
 8008b7e:	280a      	cmp	r0, #10
 8008b80:	dc16      	bgt.n	8008bb0 <__b2d+0x54>
 8008b82:	230b      	movs	r3, #11
 8008b84:	0027      	movs	r7, r4
 8008b86:	1a1b      	subs	r3, r3, r0
 8008b88:	40df      	lsrs	r7, r3
 8008b8a:	4339      	orrs	r1, r7
 8008b8c:	469c      	mov	ip, r3
 8008b8e:	000b      	movs	r3, r1
 8008b90:	2100      	movs	r1, #0
 8008b92:	42ae      	cmp	r6, r5
 8008b94:	d202      	bcs.n	8008b9c <__b2d+0x40>
 8008b96:	9901      	ldr	r1, [sp, #4]
 8008b98:	3908      	subs	r1, #8
 8008b9a:	6809      	ldr	r1, [r1, #0]
 8008b9c:	3015      	adds	r0, #21
 8008b9e:	4084      	lsls	r4, r0
 8008ba0:	4660      	mov	r0, ip
 8008ba2:	40c1      	lsrs	r1, r0
 8008ba4:	430c      	orrs	r4, r1
 8008ba6:	0022      	movs	r2, r4
 8008ba8:	0010      	movs	r0, r2
 8008baa:	0019      	movs	r1, r3
 8008bac:	b003      	add	sp, #12
 8008bae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008bb0:	2700      	movs	r7, #0
 8008bb2:	42ae      	cmp	r6, r5
 8008bb4:	d202      	bcs.n	8008bbc <__b2d+0x60>
 8008bb6:	9d01      	ldr	r5, [sp, #4]
 8008bb8:	3d08      	subs	r5, #8
 8008bba:	682f      	ldr	r7, [r5, #0]
 8008bbc:	230b      	movs	r3, #11
 8008bbe:	425b      	negs	r3, r3
 8008bc0:	469c      	mov	ip, r3
 8008bc2:	4484      	add	ip, r0
 8008bc4:	280b      	cmp	r0, #11
 8008bc6:	d013      	beq.n	8008bf0 <__b2d+0x94>
 8008bc8:	4663      	mov	r3, ip
 8008bca:	2020      	movs	r0, #32
 8008bcc:	409c      	lsls	r4, r3
 8008bce:	1ac0      	subs	r0, r0, r3
 8008bd0:	003b      	movs	r3, r7
 8008bd2:	40c3      	lsrs	r3, r0
 8008bd4:	431c      	orrs	r4, r3
 8008bd6:	4321      	orrs	r1, r4
 8008bd8:	000b      	movs	r3, r1
 8008bda:	2100      	movs	r1, #0
 8008bdc:	42b5      	cmp	r5, r6
 8008bde:	d901      	bls.n	8008be4 <__b2d+0x88>
 8008be0:	3d04      	subs	r5, #4
 8008be2:	6829      	ldr	r1, [r5, #0]
 8008be4:	4664      	mov	r4, ip
 8008be6:	40c1      	lsrs	r1, r0
 8008be8:	40a7      	lsls	r7, r4
 8008bea:	430f      	orrs	r7, r1
 8008bec:	003a      	movs	r2, r7
 8008bee:	e7db      	b.n	8008ba8 <__b2d+0x4c>
 8008bf0:	4321      	orrs	r1, r4
 8008bf2:	000b      	movs	r3, r1
 8008bf4:	e7fa      	b.n	8008bec <__b2d+0x90>
 8008bf6:	46c0      	nop			; (mov r8, r8)
 8008bf8:	3ff00000 	.word	0x3ff00000

08008bfc <__d2b>:
 8008bfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008bfe:	2101      	movs	r1, #1
 8008c00:	0014      	movs	r4, r2
 8008c02:	001e      	movs	r6, r3
 8008c04:	9f08      	ldr	r7, [sp, #32]
 8008c06:	f7ff fc01 	bl	800840c <_Balloc>
 8008c0a:	1e05      	subs	r5, r0, #0
 8008c0c:	d105      	bne.n	8008c1a <__d2b+0x1e>
 8008c0e:	0002      	movs	r2, r0
 8008c10:	4b26      	ldr	r3, [pc, #152]	; (8008cac <__d2b+0xb0>)
 8008c12:	4927      	ldr	r1, [pc, #156]	; (8008cb0 <__d2b+0xb4>)
 8008c14:	4827      	ldr	r0, [pc, #156]	; (8008cb4 <__d2b+0xb8>)
 8008c16:	f7fe f951 	bl	8006ebc <__assert_func>
 8008c1a:	0333      	lsls	r3, r6, #12
 8008c1c:	0076      	lsls	r6, r6, #1
 8008c1e:	0b1b      	lsrs	r3, r3, #12
 8008c20:	0d76      	lsrs	r6, r6, #21
 8008c22:	d124      	bne.n	8008c6e <__d2b+0x72>
 8008c24:	9301      	str	r3, [sp, #4]
 8008c26:	2c00      	cmp	r4, #0
 8008c28:	d027      	beq.n	8008c7a <__d2b+0x7e>
 8008c2a:	4668      	mov	r0, sp
 8008c2c:	9400      	str	r4, [sp, #0]
 8008c2e:	f7ff fcff 	bl	8008630 <__lo0bits>
 8008c32:	9c00      	ldr	r4, [sp, #0]
 8008c34:	2800      	cmp	r0, #0
 8008c36:	d01e      	beq.n	8008c76 <__d2b+0x7a>
 8008c38:	9b01      	ldr	r3, [sp, #4]
 8008c3a:	2120      	movs	r1, #32
 8008c3c:	001a      	movs	r2, r3
 8008c3e:	1a09      	subs	r1, r1, r0
 8008c40:	408a      	lsls	r2, r1
 8008c42:	40c3      	lsrs	r3, r0
 8008c44:	4322      	orrs	r2, r4
 8008c46:	616a      	str	r2, [r5, #20]
 8008c48:	9301      	str	r3, [sp, #4]
 8008c4a:	9c01      	ldr	r4, [sp, #4]
 8008c4c:	61ac      	str	r4, [r5, #24]
 8008c4e:	1e63      	subs	r3, r4, #1
 8008c50:	419c      	sbcs	r4, r3
 8008c52:	3401      	adds	r4, #1
 8008c54:	612c      	str	r4, [r5, #16]
 8008c56:	2e00      	cmp	r6, #0
 8008c58:	d018      	beq.n	8008c8c <__d2b+0x90>
 8008c5a:	4b17      	ldr	r3, [pc, #92]	; (8008cb8 <__d2b+0xbc>)
 8008c5c:	18f6      	adds	r6, r6, r3
 8008c5e:	2335      	movs	r3, #53	; 0x35
 8008c60:	1836      	adds	r6, r6, r0
 8008c62:	1a18      	subs	r0, r3, r0
 8008c64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c66:	603e      	str	r6, [r7, #0]
 8008c68:	6018      	str	r0, [r3, #0]
 8008c6a:	0028      	movs	r0, r5
 8008c6c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008c6e:	2280      	movs	r2, #128	; 0x80
 8008c70:	0352      	lsls	r2, r2, #13
 8008c72:	4313      	orrs	r3, r2
 8008c74:	e7d6      	b.n	8008c24 <__d2b+0x28>
 8008c76:	616c      	str	r4, [r5, #20]
 8008c78:	e7e7      	b.n	8008c4a <__d2b+0x4e>
 8008c7a:	a801      	add	r0, sp, #4
 8008c7c:	f7ff fcd8 	bl	8008630 <__lo0bits>
 8008c80:	2401      	movs	r4, #1
 8008c82:	9b01      	ldr	r3, [sp, #4]
 8008c84:	612c      	str	r4, [r5, #16]
 8008c86:	616b      	str	r3, [r5, #20]
 8008c88:	3020      	adds	r0, #32
 8008c8a:	e7e4      	b.n	8008c56 <__d2b+0x5a>
 8008c8c:	4b0b      	ldr	r3, [pc, #44]	; (8008cbc <__d2b+0xc0>)
 8008c8e:	18c0      	adds	r0, r0, r3
 8008c90:	4b0b      	ldr	r3, [pc, #44]	; (8008cc0 <__d2b+0xc4>)
 8008c92:	6038      	str	r0, [r7, #0]
 8008c94:	18e3      	adds	r3, r4, r3
 8008c96:	009b      	lsls	r3, r3, #2
 8008c98:	18eb      	adds	r3, r5, r3
 8008c9a:	6958      	ldr	r0, [r3, #20]
 8008c9c:	f7ff fcae 	bl	80085fc <__hi0bits>
 8008ca0:	0164      	lsls	r4, r4, #5
 8008ca2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ca4:	1a24      	subs	r4, r4, r0
 8008ca6:	601c      	str	r4, [r3, #0]
 8008ca8:	e7df      	b.n	8008c6a <__d2b+0x6e>
 8008caa:	46c0      	nop			; (mov r8, r8)
 8008cac:	0800a919 	.word	0x0800a919
 8008cb0:	0000030a 	.word	0x0000030a
 8008cb4:	0800a9a2 	.word	0x0800a9a2
 8008cb8:	fffffbcd 	.word	0xfffffbcd
 8008cbc:	fffffbce 	.word	0xfffffbce
 8008cc0:	3fffffff 	.word	0x3fffffff

08008cc4 <__ratio>:
 8008cc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008cc6:	b087      	sub	sp, #28
 8008cc8:	000f      	movs	r7, r1
 8008cca:	a904      	add	r1, sp, #16
 8008ccc:	0006      	movs	r6, r0
 8008cce:	f7ff ff45 	bl	8008b5c <__b2d>
 8008cd2:	9000      	str	r0, [sp, #0]
 8008cd4:	9101      	str	r1, [sp, #4]
 8008cd6:	9c00      	ldr	r4, [sp, #0]
 8008cd8:	9d01      	ldr	r5, [sp, #4]
 8008cda:	0038      	movs	r0, r7
 8008cdc:	a905      	add	r1, sp, #20
 8008cde:	f7ff ff3d 	bl	8008b5c <__b2d>
 8008ce2:	9002      	str	r0, [sp, #8]
 8008ce4:	9103      	str	r1, [sp, #12]
 8008ce6:	9a02      	ldr	r2, [sp, #8]
 8008ce8:	9b03      	ldr	r3, [sp, #12]
 8008cea:	6931      	ldr	r1, [r6, #16]
 8008cec:	6938      	ldr	r0, [r7, #16]
 8008cee:	9e05      	ldr	r6, [sp, #20]
 8008cf0:	1a08      	subs	r0, r1, r0
 8008cf2:	9904      	ldr	r1, [sp, #16]
 8008cf4:	0140      	lsls	r0, r0, #5
 8008cf6:	1b89      	subs	r1, r1, r6
 8008cf8:	1841      	adds	r1, r0, r1
 8008cfa:	0508      	lsls	r0, r1, #20
 8008cfc:	2900      	cmp	r1, #0
 8008cfe:	dd07      	ble.n	8008d10 <__ratio+0x4c>
 8008d00:	9901      	ldr	r1, [sp, #4]
 8008d02:	1845      	adds	r5, r0, r1
 8008d04:	0020      	movs	r0, r4
 8008d06:	0029      	movs	r1, r5
 8008d08:	f7f8 fd78 	bl	80017fc <__aeabi_ddiv>
 8008d0c:	b007      	add	sp, #28
 8008d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d10:	9903      	ldr	r1, [sp, #12]
 8008d12:	1a0b      	subs	r3, r1, r0
 8008d14:	e7f6      	b.n	8008d04 <__ratio+0x40>

08008d16 <__copybits>:
 8008d16:	b570      	push	{r4, r5, r6, lr}
 8008d18:	0014      	movs	r4, r2
 8008d1a:	0005      	movs	r5, r0
 8008d1c:	3901      	subs	r1, #1
 8008d1e:	6913      	ldr	r3, [r2, #16]
 8008d20:	1149      	asrs	r1, r1, #5
 8008d22:	3101      	adds	r1, #1
 8008d24:	0089      	lsls	r1, r1, #2
 8008d26:	3414      	adds	r4, #20
 8008d28:	009b      	lsls	r3, r3, #2
 8008d2a:	1841      	adds	r1, r0, r1
 8008d2c:	18e3      	adds	r3, r4, r3
 8008d2e:	42a3      	cmp	r3, r4
 8008d30:	d80d      	bhi.n	8008d4e <__copybits+0x38>
 8008d32:	0014      	movs	r4, r2
 8008d34:	3411      	adds	r4, #17
 8008d36:	2500      	movs	r5, #0
 8008d38:	429c      	cmp	r4, r3
 8008d3a:	d803      	bhi.n	8008d44 <__copybits+0x2e>
 8008d3c:	1a9b      	subs	r3, r3, r2
 8008d3e:	3b11      	subs	r3, #17
 8008d40:	089b      	lsrs	r3, r3, #2
 8008d42:	009d      	lsls	r5, r3, #2
 8008d44:	2300      	movs	r3, #0
 8008d46:	1940      	adds	r0, r0, r5
 8008d48:	4281      	cmp	r1, r0
 8008d4a:	d803      	bhi.n	8008d54 <__copybits+0x3e>
 8008d4c:	bd70      	pop	{r4, r5, r6, pc}
 8008d4e:	cc40      	ldmia	r4!, {r6}
 8008d50:	c540      	stmia	r5!, {r6}
 8008d52:	e7ec      	b.n	8008d2e <__copybits+0x18>
 8008d54:	c008      	stmia	r0!, {r3}
 8008d56:	e7f7      	b.n	8008d48 <__copybits+0x32>

08008d58 <__any_on>:
 8008d58:	0002      	movs	r2, r0
 8008d5a:	6900      	ldr	r0, [r0, #16]
 8008d5c:	b510      	push	{r4, lr}
 8008d5e:	3214      	adds	r2, #20
 8008d60:	114b      	asrs	r3, r1, #5
 8008d62:	4298      	cmp	r0, r3
 8008d64:	db13      	blt.n	8008d8e <__any_on+0x36>
 8008d66:	dd0c      	ble.n	8008d82 <__any_on+0x2a>
 8008d68:	241f      	movs	r4, #31
 8008d6a:	0008      	movs	r0, r1
 8008d6c:	4020      	ands	r0, r4
 8008d6e:	4221      	tst	r1, r4
 8008d70:	d007      	beq.n	8008d82 <__any_on+0x2a>
 8008d72:	0099      	lsls	r1, r3, #2
 8008d74:	588c      	ldr	r4, [r1, r2]
 8008d76:	0021      	movs	r1, r4
 8008d78:	40c1      	lsrs	r1, r0
 8008d7a:	4081      	lsls	r1, r0
 8008d7c:	2001      	movs	r0, #1
 8008d7e:	428c      	cmp	r4, r1
 8008d80:	d104      	bne.n	8008d8c <__any_on+0x34>
 8008d82:	009b      	lsls	r3, r3, #2
 8008d84:	18d3      	adds	r3, r2, r3
 8008d86:	4293      	cmp	r3, r2
 8008d88:	d803      	bhi.n	8008d92 <__any_on+0x3a>
 8008d8a:	2000      	movs	r0, #0
 8008d8c:	bd10      	pop	{r4, pc}
 8008d8e:	0003      	movs	r3, r0
 8008d90:	e7f7      	b.n	8008d82 <__any_on+0x2a>
 8008d92:	3b04      	subs	r3, #4
 8008d94:	6819      	ldr	r1, [r3, #0]
 8008d96:	2900      	cmp	r1, #0
 8008d98:	d0f5      	beq.n	8008d86 <__any_on+0x2e>
 8008d9a:	2001      	movs	r0, #1
 8008d9c:	e7f6      	b.n	8008d8c <__any_on+0x34>

08008d9e <_calloc_r>:
 8008d9e:	b570      	push	{r4, r5, r6, lr}
 8008da0:	0c13      	lsrs	r3, r2, #16
 8008da2:	0c0d      	lsrs	r5, r1, #16
 8008da4:	d11e      	bne.n	8008de4 <_calloc_r+0x46>
 8008da6:	2b00      	cmp	r3, #0
 8008da8:	d10c      	bne.n	8008dc4 <_calloc_r+0x26>
 8008daa:	b289      	uxth	r1, r1
 8008dac:	b294      	uxth	r4, r2
 8008dae:	434c      	muls	r4, r1
 8008db0:	0021      	movs	r1, r4
 8008db2:	f7fc fb6f 	bl	8005494 <_malloc_r>
 8008db6:	1e05      	subs	r5, r0, #0
 8008db8:	d01b      	beq.n	8008df2 <_calloc_r+0x54>
 8008dba:	0022      	movs	r2, r4
 8008dbc:	2100      	movs	r1, #0
 8008dbe:	f7fc faf5 	bl	80053ac <memset>
 8008dc2:	e016      	b.n	8008df2 <_calloc_r+0x54>
 8008dc4:	1c1d      	adds	r5, r3, #0
 8008dc6:	1c0b      	adds	r3, r1, #0
 8008dc8:	b292      	uxth	r2, r2
 8008dca:	b289      	uxth	r1, r1
 8008dcc:	b29c      	uxth	r4, r3
 8008dce:	4351      	muls	r1, r2
 8008dd0:	b2ab      	uxth	r3, r5
 8008dd2:	4363      	muls	r3, r4
 8008dd4:	0c0c      	lsrs	r4, r1, #16
 8008dd6:	191c      	adds	r4, r3, r4
 8008dd8:	0c22      	lsrs	r2, r4, #16
 8008dda:	d107      	bne.n	8008dec <_calloc_r+0x4e>
 8008ddc:	0424      	lsls	r4, r4, #16
 8008dde:	b289      	uxth	r1, r1
 8008de0:	430c      	orrs	r4, r1
 8008de2:	e7e5      	b.n	8008db0 <_calloc_r+0x12>
 8008de4:	2b00      	cmp	r3, #0
 8008de6:	d101      	bne.n	8008dec <_calloc_r+0x4e>
 8008de8:	1c13      	adds	r3, r2, #0
 8008dea:	e7ed      	b.n	8008dc8 <_calloc_r+0x2a>
 8008dec:	230c      	movs	r3, #12
 8008dee:	2500      	movs	r5, #0
 8008df0:	6003      	str	r3, [r0, #0]
 8008df2:	0028      	movs	r0, r5
 8008df4:	bd70      	pop	{r4, r5, r6, pc}
	...

08008df8 <__ssputs_r>:
 8008df8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008dfa:	688e      	ldr	r6, [r1, #8]
 8008dfc:	b085      	sub	sp, #20
 8008dfe:	0007      	movs	r7, r0
 8008e00:	000c      	movs	r4, r1
 8008e02:	9203      	str	r2, [sp, #12]
 8008e04:	9301      	str	r3, [sp, #4]
 8008e06:	429e      	cmp	r6, r3
 8008e08:	d83c      	bhi.n	8008e84 <__ssputs_r+0x8c>
 8008e0a:	2390      	movs	r3, #144	; 0x90
 8008e0c:	898a      	ldrh	r2, [r1, #12]
 8008e0e:	00db      	lsls	r3, r3, #3
 8008e10:	421a      	tst	r2, r3
 8008e12:	d034      	beq.n	8008e7e <__ssputs_r+0x86>
 8008e14:	6909      	ldr	r1, [r1, #16]
 8008e16:	6823      	ldr	r3, [r4, #0]
 8008e18:	6960      	ldr	r0, [r4, #20]
 8008e1a:	1a5b      	subs	r3, r3, r1
 8008e1c:	9302      	str	r3, [sp, #8]
 8008e1e:	2303      	movs	r3, #3
 8008e20:	4343      	muls	r3, r0
 8008e22:	0fdd      	lsrs	r5, r3, #31
 8008e24:	18ed      	adds	r5, r5, r3
 8008e26:	9b01      	ldr	r3, [sp, #4]
 8008e28:	9802      	ldr	r0, [sp, #8]
 8008e2a:	3301      	adds	r3, #1
 8008e2c:	181b      	adds	r3, r3, r0
 8008e2e:	106d      	asrs	r5, r5, #1
 8008e30:	42ab      	cmp	r3, r5
 8008e32:	d900      	bls.n	8008e36 <__ssputs_r+0x3e>
 8008e34:	001d      	movs	r5, r3
 8008e36:	0553      	lsls	r3, r2, #21
 8008e38:	d532      	bpl.n	8008ea0 <__ssputs_r+0xa8>
 8008e3a:	0029      	movs	r1, r5
 8008e3c:	0038      	movs	r0, r7
 8008e3e:	f7fc fb29 	bl	8005494 <_malloc_r>
 8008e42:	1e06      	subs	r6, r0, #0
 8008e44:	d109      	bne.n	8008e5a <__ssputs_r+0x62>
 8008e46:	230c      	movs	r3, #12
 8008e48:	603b      	str	r3, [r7, #0]
 8008e4a:	2340      	movs	r3, #64	; 0x40
 8008e4c:	2001      	movs	r0, #1
 8008e4e:	89a2      	ldrh	r2, [r4, #12]
 8008e50:	4240      	negs	r0, r0
 8008e52:	4313      	orrs	r3, r2
 8008e54:	81a3      	strh	r3, [r4, #12]
 8008e56:	b005      	add	sp, #20
 8008e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e5a:	9a02      	ldr	r2, [sp, #8]
 8008e5c:	6921      	ldr	r1, [r4, #16]
 8008e5e:	f7ff fabc 	bl	80083da <memcpy>
 8008e62:	89a3      	ldrh	r3, [r4, #12]
 8008e64:	4a14      	ldr	r2, [pc, #80]	; (8008eb8 <__ssputs_r+0xc0>)
 8008e66:	401a      	ands	r2, r3
 8008e68:	2380      	movs	r3, #128	; 0x80
 8008e6a:	4313      	orrs	r3, r2
 8008e6c:	81a3      	strh	r3, [r4, #12]
 8008e6e:	9b02      	ldr	r3, [sp, #8]
 8008e70:	6126      	str	r6, [r4, #16]
 8008e72:	18f6      	adds	r6, r6, r3
 8008e74:	6026      	str	r6, [r4, #0]
 8008e76:	6165      	str	r5, [r4, #20]
 8008e78:	9e01      	ldr	r6, [sp, #4]
 8008e7a:	1aed      	subs	r5, r5, r3
 8008e7c:	60a5      	str	r5, [r4, #8]
 8008e7e:	9b01      	ldr	r3, [sp, #4]
 8008e80:	429e      	cmp	r6, r3
 8008e82:	d900      	bls.n	8008e86 <__ssputs_r+0x8e>
 8008e84:	9e01      	ldr	r6, [sp, #4]
 8008e86:	0032      	movs	r2, r6
 8008e88:	9903      	ldr	r1, [sp, #12]
 8008e8a:	6820      	ldr	r0, [r4, #0]
 8008e8c:	f001 fa0a 	bl	800a2a4 <memmove>
 8008e90:	68a3      	ldr	r3, [r4, #8]
 8008e92:	2000      	movs	r0, #0
 8008e94:	1b9b      	subs	r3, r3, r6
 8008e96:	60a3      	str	r3, [r4, #8]
 8008e98:	6823      	ldr	r3, [r4, #0]
 8008e9a:	199e      	adds	r6, r3, r6
 8008e9c:	6026      	str	r6, [r4, #0]
 8008e9e:	e7da      	b.n	8008e56 <__ssputs_r+0x5e>
 8008ea0:	002a      	movs	r2, r5
 8008ea2:	0038      	movs	r0, r7
 8008ea4:	f001 fa11 	bl	800a2ca <_realloc_r>
 8008ea8:	1e06      	subs	r6, r0, #0
 8008eaa:	d1e0      	bne.n	8008e6e <__ssputs_r+0x76>
 8008eac:	0038      	movs	r0, r7
 8008eae:	6921      	ldr	r1, [r4, #16]
 8008eb0:	f7fc fa84 	bl	80053bc <_free_r>
 8008eb4:	e7c7      	b.n	8008e46 <__ssputs_r+0x4e>
 8008eb6:	46c0      	nop			; (mov r8, r8)
 8008eb8:	fffffb7f 	.word	0xfffffb7f

08008ebc <_svfiprintf_r>:
 8008ebc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ebe:	b0a1      	sub	sp, #132	; 0x84
 8008ec0:	9003      	str	r0, [sp, #12]
 8008ec2:	001d      	movs	r5, r3
 8008ec4:	898b      	ldrh	r3, [r1, #12]
 8008ec6:	000f      	movs	r7, r1
 8008ec8:	0016      	movs	r6, r2
 8008eca:	061b      	lsls	r3, r3, #24
 8008ecc:	d511      	bpl.n	8008ef2 <_svfiprintf_r+0x36>
 8008ece:	690b      	ldr	r3, [r1, #16]
 8008ed0:	2b00      	cmp	r3, #0
 8008ed2:	d10e      	bne.n	8008ef2 <_svfiprintf_r+0x36>
 8008ed4:	2140      	movs	r1, #64	; 0x40
 8008ed6:	f7fc fadd 	bl	8005494 <_malloc_r>
 8008eda:	6038      	str	r0, [r7, #0]
 8008edc:	6138      	str	r0, [r7, #16]
 8008ede:	2800      	cmp	r0, #0
 8008ee0:	d105      	bne.n	8008eee <_svfiprintf_r+0x32>
 8008ee2:	230c      	movs	r3, #12
 8008ee4:	9a03      	ldr	r2, [sp, #12]
 8008ee6:	3801      	subs	r0, #1
 8008ee8:	6013      	str	r3, [r2, #0]
 8008eea:	b021      	add	sp, #132	; 0x84
 8008eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008eee:	2340      	movs	r3, #64	; 0x40
 8008ef0:	617b      	str	r3, [r7, #20]
 8008ef2:	2300      	movs	r3, #0
 8008ef4:	ac08      	add	r4, sp, #32
 8008ef6:	6163      	str	r3, [r4, #20]
 8008ef8:	3320      	adds	r3, #32
 8008efa:	7663      	strb	r3, [r4, #25]
 8008efc:	3310      	adds	r3, #16
 8008efe:	76a3      	strb	r3, [r4, #26]
 8008f00:	9507      	str	r5, [sp, #28]
 8008f02:	0035      	movs	r5, r6
 8008f04:	782b      	ldrb	r3, [r5, #0]
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d001      	beq.n	8008f0e <_svfiprintf_r+0x52>
 8008f0a:	2b25      	cmp	r3, #37	; 0x25
 8008f0c:	d147      	bne.n	8008f9e <_svfiprintf_r+0xe2>
 8008f0e:	1bab      	subs	r3, r5, r6
 8008f10:	9305      	str	r3, [sp, #20]
 8008f12:	42b5      	cmp	r5, r6
 8008f14:	d00c      	beq.n	8008f30 <_svfiprintf_r+0x74>
 8008f16:	0032      	movs	r2, r6
 8008f18:	0039      	movs	r1, r7
 8008f1a:	9803      	ldr	r0, [sp, #12]
 8008f1c:	f7ff ff6c 	bl	8008df8 <__ssputs_r>
 8008f20:	1c43      	adds	r3, r0, #1
 8008f22:	d100      	bne.n	8008f26 <_svfiprintf_r+0x6a>
 8008f24:	e0ae      	b.n	8009084 <_svfiprintf_r+0x1c8>
 8008f26:	6962      	ldr	r2, [r4, #20]
 8008f28:	9b05      	ldr	r3, [sp, #20]
 8008f2a:	4694      	mov	ip, r2
 8008f2c:	4463      	add	r3, ip
 8008f2e:	6163      	str	r3, [r4, #20]
 8008f30:	782b      	ldrb	r3, [r5, #0]
 8008f32:	2b00      	cmp	r3, #0
 8008f34:	d100      	bne.n	8008f38 <_svfiprintf_r+0x7c>
 8008f36:	e0a5      	b.n	8009084 <_svfiprintf_r+0x1c8>
 8008f38:	2201      	movs	r2, #1
 8008f3a:	2300      	movs	r3, #0
 8008f3c:	4252      	negs	r2, r2
 8008f3e:	6062      	str	r2, [r4, #4]
 8008f40:	a904      	add	r1, sp, #16
 8008f42:	3254      	adds	r2, #84	; 0x54
 8008f44:	1852      	adds	r2, r2, r1
 8008f46:	1c6e      	adds	r6, r5, #1
 8008f48:	6023      	str	r3, [r4, #0]
 8008f4a:	60e3      	str	r3, [r4, #12]
 8008f4c:	60a3      	str	r3, [r4, #8]
 8008f4e:	7013      	strb	r3, [r2, #0]
 8008f50:	65a3      	str	r3, [r4, #88]	; 0x58
 8008f52:	2205      	movs	r2, #5
 8008f54:	7831      	ldrb	r1, [r6, #0]
 8008f56:	4854      	ldr	r0, [pc, #336]	; (80090a8 <_svfiprintf_r+0x1ec>)
 8008f58:	f7ff fa34 	bl	80083c4 <memchr>
 8008f5c:	1c75      	adds	r5, r6, #1
 8008f5e:	2800      	cmp	r0, #0
 8008f60:	d11f      	bne.n	8008fa2 <_svfiprintf_r+0xe6>
 8008f62:	6822      	ldr	r2, [r4, #0]
 8008f64:	06d3      	lsls	r3, r2, #27
 8008f66:	d504      	bpl.n	8008f72 <_svfiprintf_r+0xb6>
 8008f68:	2353      	movs	r3, #83	; 0x53
 8008f6a:	a904      	add	r1, sp, #16
 8008f6c:	185b      	adds	r3, r3, r1
 8008f6e:	2120      	movs	r1, #32
 8008f70:	7019      	strb	r1, [r3, #0]
 8008f72:	0713      	lsls	r3, r2, #28
 8008f74:	d504      	bpl.n	8008f80 <_svfiprintf_r+0xc4>
 8008f76:	2353      	movs	r3, #83	; 0x53
 8008f78:	a904      	add	r1, sp, #16
 8008f7a:	185b      	adds	r3, r3, r1
 8008f7c:	212b      	movs	r1, #43	; 0x2b
 8008f7e:	7019      	strb	r1, [r3, #0]
 8008f80:	7833      	ldrb	r3, [r6, #0]
 8008f82:	2b2a      	cmp	r3, #42	; 0x2a
 8008f84:	d016      	beq.n	8008fb4 <_svfiprintf_r+0xf8>
 8008f86:	0035      	movs	r5, r6
 8008f88:	2100      	movs	r1, #0
 8008f8a:	200a      	movs	r0, #10
 8008f8c:	68e3      	ldr	r3, [r4, #12]
 8008f8e:	782a      	ldrb	r2, [r5, #0]
 8008f90:	1c6e      	adds	r6, r5, #1
 8008f92:	3a30      	subs	r2, #48	; 0x30
 8008f94:	2a09      	cmp	r2, #9
 8008f96:	d94e      	bls.n	8009036 <_svfiprintf_r+0x17a>
 8008f98:	2900      	cmp	r1, #0
 8008f9a:	d111      	bne.n	8008fc0 <_svfiprintf_r+0x104>
 8008f9c:	e017      	b.n	8008fce <_svfiprintf_r+0x112>
 8008f9e:	3501      	adds	r5, #1
 8008fa0:	e7b0      	b.n	8008f04 <_svfiprintf_r+0x48>
 8008fa2:	4b41      	ldr	r3, [pc, #260]	; (80090a8 <_svfiprintf_r+0x1ec>)
 8008fa4:	6822      	ldr	r2, [r4, #0]
 8008fa6:	1ac0      	subs	r0, r0, r3
 8008fa8:	2301      	movs	r3, #1
 8008faa:	4083      	lsls	r3, r0
 8008fac:	4313      	orrs	r3, r2
 8008fae:	002e      	movs	r6, r5
 8008fb0:	6023      	str	r3, [r4, #0]
 8008fb2:	e7ce      	b.n	8008f52 <_svfiprintf_r+0x96>
 8008fb4:	9b07      	ldr	r3, [sp, #28]
 8008fb6:	1d19      	adds	r1, r3, #4
 8008fb8:	681b      	ldr	r3, [r3, #0]
 8008fba:	9107      	str	r1, [sp, #28]
 8008fbc:	2b00      	cmp	r3, #0
 8008fbe:	db01      	blt.n	8008fc4 <_svfiprintf_r+0x108>
 8008fc0:	930b      	str	r3, [sp, #44]	; 0x2c
 8008fc2:	e004      	b.n	8008fce <_svfiprintf_r+0x112>
 8008fc4:	425b      	negs	r3, r3
 8008fc6:	60e3      	str	r3, [r4, #12]
 8008fc8:	2302      	movs	r3, #2
 8008fca:	4313      	orrs	r3, r2
 8008fcc:	6023      	str	r3, [r4, #0]
 8008fce:	782b      	ldrb	r3, [r5, #0]
 8008fd0:	2b2e      	cmp	r3, #46	; 0x2e
 8008fd2:	d10a      	bne.n	8008fea <_svfiprintf_r+0x12e>
 8008fd4:	786b      	ldrb	r3, [r5, #1]
 8008fd6:	2b2a      	cmp	r3, #42	; 0x2a
 8008fd8:	d135      	bne.n	8009046 <_svfiprintf_r+0x18a>
 8008fda:	9b07      	ldr	r3, [sp, #28]
 8008fdc:	3502      	adds	r5, #2
 8008fde:	1d1a      	adds	r2, r3, #4
 8008fe0:	681b      	ldr	r3, [r3, #0]
 8008fe2:	9207      	str	r2, [sp, #28]
 8008fe4:	2b00      	cmp	r3, #0
 8008fe6:	db2b      	blt.n	8009040 <_svfiprintf_r+0x184>
 8008fe8:	9309      	str	r3, [sp, #36]	; 0x24
 8008fea:	4e30      	ldr	r6, [pc, #192]	; (80090ac <_svfiprintf_r+0x1f0>)
 8008fec:	2203      	movs	r2, #3
 8008fee:	0030      	movs	r0, r6
 8008ff0:	7829      	ldrb	r1, [r5, #0]
 8008ff2:	f7ff f9e7 	bl	80083c4 <memchr>
 8008ff6:	2800      	cmp	r0, #0
 8008ff8:	d006      	beq.n	8009008 <_svfiprintf_r+0x14c>
 8008ffa:	2340      	movs	r3, #64	; 0x40
 8008ffc:	1b80      	subs	r0, r0, r6
 8008ffe:	4083      	lsls	r3, r0
 8009000:	6822      	ldr	r2, [r4, #0]
 8009002:	3501      	adds	r5, #1
 8009004:	4313      	orrs	r3, r2
 8009006:	6023      	str	r3, [r4, #0]
 8009008:	7829      	ldrb	r1, [r5, #0]
 800900a:	2206      	movs	r2, #6
 800900c:	4828      	ldr	r0, [pc, #160]	; (80090b0 <_svfiprintf_r+0x1f4>)
 800900e:	1c6e      	adds	r6, r5, #1
 8009010:	7621      	strb	r1, [r4, #24]
 8009012:	f7ff f9d7 	bl	80083c4 <memchr>
 8009016:	2800      	cmp	r0, #0
 8009018:	d03c      	beq.n	8009094 <_svfiprintf_r+0x1d8>
 800901a:	4b26      	ldr	r3, [pc, #152]	; (80090b4 <_svfiprintf_r+0x1f8>)
 800901c:	2b00      	cmp	r3, #0
 800901e:	d125      	bne.n	800906c <_svfiprintf_r+0x1b0>
 8009020:	2207      	movs	r2, #7
 8009022:	9b07      	ldr	r3, [sp, #28]
 8009024:	3307      	adds	r3, #7
 8009026:	4393      	bics	r3, r2
 8009028:	3308      	adds	r3, #8
 800902a:	9307      	str	r3, [sp, #28]
 800902c:	6963      	ldr	r3, [r4, #20]
 800902e:	9a04      	ldr	r2, [sp, #16]
 8009030:	189b      	adds	r3, r3, r2
 8009032:	6163      	str	r3, [r4, #20]
 8009034:	e765      	b.n	8008f02 <_svfiprintf_r+0x46>
 8009036:	4343      	muls	r3, r0
 8009038:	0035      	movs	r5, r6
 800903a:	2101      	movs	r1, #1
 800903c:	189b      	adds	r3, r3, r2
 800903e:	e7a6      	b.n	8008f8e <_svfiprintf_r+0xd2>
 8009040:	2301      	movs	r3, #1
 8009042:	425b      	negs	r3, r3
 8009044:	e7d0      	b.n	8008fe8 <_svfiprintf_r+0x12c>
 8009046:	2300      	movs	r3, #0
 8009048:	200a      	movs	r0, #10
 800904a:	001a      	movs	r2, r3
 800904c:	3501      	adds	r5, #1
 800904e:	6063      	str	r3, [r4, #4]
 8009050:	7829      	ldrb	r1, [r5, #0]
 8009052:	1c6e      	adds	r6, r5, #1
 8009054:	3930      	subs	r1, #48	; 0x30
 8009056:	2909      	cmp	r1, #9
 8009058:	d903      	bls.n	8009062 <_svfiprintf_r+0x1a6>
 800905a:	2b00      	cmp	r3, #0
 800905c:	d0c5      	beq.n	8008fea <_svfiprintf_r+0x12e>
 800905e:	9209      	str	r2, [sp, #36]	; 0x24
 8009060:	e7c3      	b.n	8008fea <_svfiprintf_r+0x12e>
 8009062:	4342      	muls	r2, r0
 8009064:	0035      	movs	r5, r6
 8009066:	2301      	movs	r3, #1
 8009068:	1852      	adds	r2, r2, r1
 800906a:	e7f1      	b.n	8009050 <_svfiprintf_r+0x194>
 800906c:	ab07      	add	r3, sp, #28
 800906e:	9300      	str	r3, [sp, #0]
 8009070:	003a      	movs	r2, r7
 8009072:	0021      	movs	r1, r4
 8009074:	4b10      	ldr	r3, [pc, #64]	; (80090b8 <_svfiprintf_r+0x1fc>)
 8009076:	9803      	ldr	r0, [sp, #12]
 8009078:	f7fc fb2c 	bl	80056d4 <_printf_float>
 800907c:	9004      	str	r0, [sp, #16]
 800907e:	9b04      	ldr	r3, [sp, #16]
 8009080:	3301      	adds	r3, #1
 8009082:	d1d3      	bne.n	800902c <_svfiprintf_r+0x170>
 8009084:	89bb      	ldrh	r3, [r7, #12]
 8009086:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009088:	065b      	lsls	r3, r3, #25
 800908a:	d400      	bmi.n	800908e <_svfiprintf_r+0x1d2>
 800908c:	e72d      	b.n	8008eea <_svfiprintf_r+0x2e>
 800908e:	2001      	movs	r0, #1
 8009090:	4240      	negs	r0, r0
 8009092:	e72a      	b.n	8008eea <_svfiprintf_r+0x2e>
 8009094:	ab07      	add	r3, sp, #28
 8009096:	9300      	str	r3, [sp, #0]
 8009098:	003a      	movs	r2, r7
 800909a:	0021      	movs	r1, r4
 800909c:	4b06      	ldr	r3, [pc, #24]	; (80090b8 <_svfiprintf_r+0x1fc>)
 800909e:	9803      	ldr	r0, [sp, #12]
 80090a0:	f7fc fdca 	bl	8005c38 <_printf_i>
 80090a4:	e7ea      	b.n	800907c <_svfiprintf_r+0x1c0>
 80090a6:	46c0      	nop			; (mov r8, r8)
 80090a8:	0800aafc 	.word	0x0800aafc
 80090ac:	0800ab02 	.word	0x0800ab02
 80090b0:	0800ab06 	.word	0x0800ab06
 80090b4:	080056d5 	.word	0x080056d5
 80090b8:	08008df9 	.word	0x08008df9

080090bc <_sungetc_r>:
 80090bc:	b570      	push	{r4, r5, r6, lr}
 80090be:	0014      	movs	r4, r2
 80090c0:	1c4b      	adds	r3, r1, #1
 80090c2:	d103      	bne.n	80090cc <_sungetc_r+0x10>
 80090c4:	2501      	movs	r5, #1
 80090c6:	426d      	negs	r5, r5
 80090c8:	0028      	movs	r0, r5
 80090ca:	bd70      	pop	{r4, r5, r6, pc}
 80090cc:	8993      	ldrh	r3, [r2, #12]
 80090ce:	2220      	movs	r2, #32
 80090d0:	4393      	bics	r3, r2
 80090d2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80090d4:	81a3      	strh	r3, [r4, #12]
 80090d6:	b2ce      	uxtb	r6, r1
 80090d8:	6863      	ldr	r3, [r4, #4]
 80090da:	b2cd      	uxtb	r5, r1
 80090dc:	2a00      	cmp	r2, #0
 80090de:	d010      	beq.n	8009102 <_sungetc_r+0x46>
 80090e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80090e2:	429a      	cmp	r2, r3
 80090e4:	dd07      	ble.n	80090f6 <_sungetc_r+0x3a>
 80090e6:	6823      	ldr	r3, [r4, #0]
 80090e8:	3b01      	subs	r3, #1
 80090ea:	6023      	str	r3, [r4, #0]
 80090ec:	701e      	strb	r6, [r3, #0]
 80090ee:	6863      	ldr	r3, [r4, #4]
 80090f0:	3301      	adds	r3, #1
 80090f2:	6063      	str	r3, [r4, #4]
 80090f4:	e7e8      	b.n	80090c8 <_sungetc_r+0xc>
 80090f6:	0021      	movs	r1, r4
 80090f8:	f000 fd74 	bl	8009be4 <__submore>
 80090fc:	2800      	cmp	r0, #0
 80090fe:	d0f2      	beq.n	80090e6 <_sungetc_r+0x2a>
 8009100:	e7e0      	b.n	80090c4 <_sungetc_r+0x8>
 8009102:	6921      	ldr	r1, [r4, #16]
 8009104:	6822      	ldr	r2, [r4, #0]
 8009106:	2900      	cmp	r1, #0
 8009108:	d007      	beq.n	800911a <_sungetc_r+0x5e>
 800910a:	4291      	cmp	r1, r2
 800910c:	d205      	bcs.n	800911a <_sungetc_r+0x5e>
 800910e:	1e51      	subs	r1, r2, #1
 8009110:	7808      	ldrb	r0, [r1, #0]
 8009112:	42a8      	cmp	r0, r5
 8009114:	d101      	bne.n	800911a <_sungetc_r+0x5e>
 8009116:	6021      	str	r1, [r4, #0]
 8009118:	e7ea      	b.n	80090f0 <_sungetc_r+0x34>
 800911a:	6423      	str	r3, [r4, #64]	; 0x40
 800911c:	0023      	movs	r3, r4
 800911e:	3344      	adds	r3, #68	; 0x44
 8009120:	6363      	str	r3, [r4, #52]	; 0x34
 8009122:	2303      	movs	r3, #3
 8009124:	63a3      	str	r3, [r4, #56]	; 0x38
 8009126:	0023      	movs	r3, r4
 8009128:	3346      	adds	r3, #70	; 0x46
 800912a:	63e2      	str	r2, [r4, #60]	; 0x3c
 800912c:	701e      	strb	r6, [r3, #0]
 800912e:	6023      	str	r3, [r4, #0]
 8009130:	2301      	movs	r3, #1
 8009132:	e7de      	b.n	80090f2 <_sungetc_r+0x36>

08009134 <__ssrefill_r>:
 8009134:	b510      	push	{r4, lr}
 8009136:	000c      	movs	r4, r1
 8009138:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800913a:	2900      	cmp	r1, #0
 800913c:	d00e      	beq.n	800915c <__ssrefill_r+0x28>
 800913e:	0023      	movs	r3, r4
 8009140:	3344      	adds	r3, #68	; 0x44
 8009142:	4299      	cmp	r1, r3
 8009144:	d001      	beq.n	800914a <__ssrefill_r+0x16>
 8009146:	f7fc f939 	bl	80053bc <_free_r>
 800914a:	2000      	movs	r0, #0
 800914c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800914e:	6360      	str	r0, [r4, #52]	; 0x34
 8009150:	6063      	str	r3, [r4, #4]
 8009152:	4283      	cmp	r3, r0
 8009154:	d002      	beq.n	800915c <__ssrefill_r+0x28>
 8009156:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009158:	6023      	str	r3, [r4, #0]
 800915a:	bd10      	pop	{r4, pc}
 800915c:	6923      	ldr	r3, [r4, #16]
 800915e:	2001      	movs	r0, #1
 8009160:	6023      	str	r3, [r4, #0]
 8009162:	2300      	movs	r3, #0
 8009164:	89a2      	ldrh	r2, [r4, #12]
 8009166:	6063      	str	r3, [r4, #4]
 8009168:	3320      	adds	r3, #32
 800916a:	4313      	orrs	r3, r2
 800916c:	81a3      	strh	r3, [r4, #12]
 800916e:	4240      	negs	r0, r0
 8009170:	e7f3      	b.n	800915a <__ssrefill_r+0x26>
	...

08009174 <__ssvfiscanf_r>:
 8009174:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009176:	4cb8      	ldr	r4, [pc, #736]	; (8009458 <__ssvfiscanf_r+0x2e4>)
 8009178:	0006      	movs	r6, r0
 800917a:	44a5      	add	sp, r4
 800917c:	000c      	movs	r4, r1
 800917e:	2100      	movs	r1, #0
 8009180:	9146      	str	r1, [sp, #280]	; 0x118
 8009182:	9147      	str	r1, [sp, #284]	; 0x11c
 8009184:	a903      	add	r1, sp, #12
 8009186:	9148      	str	r1, [sp, #288]	; 0x120
 8009188:	21be      	movs	r1, #190	; 0xbe
 800918a:	48b4      	ldr	r0, [pc, #720]	; (800945c <__ssvfiscanf_r+0x2e8>)
 800918c:	0049      	lsls	r1, r1, #1
 800918e:	ad43      	add	r5, sp, #268	; 0x10c
 8009190:	5068      	str	r0, [r5, r1]
 8009192:	25c0      	movs	r5, #192	; 0xc0
 8009194:	49b2      	ldr	r1, [pc, #712]	; (8009460 <__ssvfiscanf_r+0x2ec>)
 8009196:	006d      	lsls	r5, r5, #1
 8009198:	a843      	add	r0, sp, #268	; 0x10c
 800919a:	5141      	str	r1, [r0, r5]
 800919c:	9302      	str	r3, [sp, #8]
 800919e:	7813      	ldrb	r3, [r2, #0]
 80091a0:	2b00      	cmp	r3, #0
 80091a2:	d100      	bne.n	80091a6 <__ssvfiscanf_r+0x32>
 80091a4:	e155      	b.n	8009452 <__ssvfiscanf_r+0x2de>
 80091a6:	49af      	ldr	r1, [pc, #700]	; (8009464 <__ssvfiscanf_r+0x2f0>)
 80091a8:	2508      	movs	r5, #8
 80091aa:	5cc8      	ldrb	r0, [r1, r3]
 80091ac:	2108      	movs	r1, #8
 80091ae:	1c57      	adds	r7, r2, #1
 80091b0:	4001      	ands	r1, r0
 80091b2:	4228      	tst	r0, r5
 80091b4:	d020      	beq.n	80091f8 <__ssvfiscanf_r+0x84>
 80091b6:	6863      	ldr	r3, [r4, #4]
 80091b8:	2b00      	cmp	r3, #0
 80091ba:	dd12      	ble.n	80091e2 <__ssvfiscanf_r+0x6e>
 80091bc:	6823      	ldr	r3, [r4, #0]
 80091be:	49a9      	ldr	r1, [pc, #676]	; (8009464 <__ssvfiscanf_r+0x2f0>)
 80091c0:	781a      	ldrb	r2, [r3, #0]
 80091c2:	5c8a      	ldrb	r2, [r1, r2]
 80091c4:	2108      	movs	r1, #8
 80091c6:	420a      	tst	r2, r1
 80091c8:	d101      	bne.n	80091ce <__ssvfiscanf_r+0x5a>
 80091ca:	003a      	movs	r2, r7
 80091cc:	e7e7      	b.n	800919e <__ssvfiscanf_r+0x2a>
 80091ce:	9a47      	ldr	r2, [sp, #284]	; 0x11c
 80091d0:	3301      	adds	r3, #1
 80091d2:	9200      	str	r2, [sp, #0]
 80091d4:	3201      	adds	r2, #1
 80091d6:	9247      	str	r2, [sp, #284]	; 0x11c
 80091d8:	6862      	ldr	r2, [r4, #4]
 80091da:	6023      	str	r3, [r4, #0]
 80091dc:	3a01      	subs	r2, #1
 80091de:	6062      	str	r2, [r4, #4]
 80091e0:	e7e9      	b.n	80091b6 <__ssvfiscanf_r+0x42>
 80091e2:	22c0      	movs	r2, #192	; 0xc0
 80091e4:	ab43      	add	r3, sp, #268	; 0x10c
 80091e6:	0052      	lsls	r2, r2, #1
 80091e8:	589b      	ldr	r3, [r3, r2]
 80091ea:	0021      	movs	r1, r4
 80091ec:	0030      	movs	r0, r6
 80091ee:	9300      	str	r3, [sp, #0]
 80091f0:	4798      	blx	r3
 80091f2:	2800      	cmp	r0, #0
 80091f4:	d0e2      	beq.n	80091bc <__ssvfiscanf_r+0x48>
 80091f6:	e7e8      	b.n	80091ca <__ssvfiscanf_r+0x56>
 80091f8:	001d      	movs	r5, r3
 80091fa:	2b25      	cmp	r3, #37	; 0x25
 80091fc:	d164      	bne.n	80092c8 <__ssvfiscanf_r+0x154>
 80091fe:	9145      	str	r1, [sp, #276]	; 0x114
 8009200:	9143      	str	r1, [sp, #268]	; 0x10c
 8009202:	7853      	ldrb	r3, [r2, #1]
 8009204:	2b2a      	cmp	r3, #42	; 0x2a
 8009206:	d102      	bne.n	800920e <__ssvfiscanf_r+0x9a>
 8009208:	3b1a      	subs	r3, #26
 800920a:	9343      	str	r3, [sp, #268]	; 0x10c
 800920c:	1c97      	adds	r7, r2, #2
 800920e:	003d      	movs	r5, r7
 8009210:	220a      	movs	r2, #10
 8009212:	7829      	ldrb	r1, [r5, #0]
 8009214:	1c6b      	adds	r3, r5, #1
 8009216:	9300      	str	r3, [sp, #0]
 8009218:	000b      	movs	r3, r1
 800921a:	3b30      	subs	r3, #48	; 0x30
 800921c:	2b09      	cmp	r3, #9
 800921e:	d91f      	bls.n	8009260 <__ssvfiscanf_r+0xec>
 8009220:	4f91      	ldr	r7, [pc, #580]	; (8009468 <__ssvfiscanf_r+0x2f4>)
 8009222:	2203      	movs	r2, #3
 8009224:	0038      	movs	r0, r7
 8009226:	f7ff f8cd 	bl	80083c4 <memchr>
 800922a:	2800      	cmp	r0, #0
 800922c:	d007      	beq.n	800923e <__ssvfiscanf_r+0xca>
 800922e:	2301      	movs	r3, #1
 8009230:	1bc0      	subs	r0, r0, r7
 8009232:	4083      	lsls	r3, r0
 8009234:	9a43      	ldr	r2, [sp, #268]	; 0x10c
 8009236:	9d00      	ldr	r5, [sp, #0]
 8009238:	4313      	orrs	r3, r2
 800923a:	9201      	str	r2, [sp, #4]
 800923c:	9343      	str	r3, [sp, #268]	; 0x10c
 800923e:	1c6f      	adds	r7, r5, #1
 8009240:	782d      	ldrb	r5, [r5, #0]
 8009242:	2d78      	cmp	r5, #120	; 0x78
 8009244:	d807      	bhi.n	8009256 <__ssvfiscanf_r+0xe2>
 8009246:	2d57      	cmp	r5, #87	; 0x57
 8009248:	d812      	bhi.n	8009270 <__ssvfiscanf_r+0xfc>
 800924a:	2d25      	cmp	r5, #37	; 0x25
 800924c:	d03c      	beq.n	80092c8 <__ssvfiscanf_r+0x154>
 800924e:	d836      	bhi.n	80092be <__ssvfiscanf_r+0x14a>
 8009250:	2d00      	cmp	r5, #0
 8009252:	d100      	bne.n	8009256 <__ssvfiscanf_r+0xe2>
 8009254:	e0fa      	b.n	800944c <__ssvfiscanf_r+0x2d8>
 8009256:	2303      	movs	r3, #3
 8009258:	9349      	str	r3, [sp, #292]	; 0x124
 800925a:	3307      	adds	r3, #7
 800925c:	9344      	str	r3, [sp, #272]	; 0x110
 800925e:	e06d      	b.n	800933c <__ssvfiscanf_r+0x1c8>
 8009260:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8009262:	9d00      	ldr	r5, [sp, #0]
 8009264:	9301      	str	r3, [sp, #4]
 8009266:	4353      	muls	r3, r2
 8009268:	3b30      	subs	r3, #48	; 0x30
 800926a:	185b      	adds	r3, r3, r1
 800926c:	9345      	str	r3, [sp, #276]	; 0x114
 800926e:	e7d0      	b.n	8009212 <__ssvfiscanf_r+0x9e>
 8009270:	0028      	movs	r0, r5
 8009272:	3858      	subs	r0, #88	; 0x58
 8009274:	2820      	cmp	r0, #32
 8009276:	d8ee      	bhi.n	8009256 <__ssvfiscanf_r+0xe2>
 8009278:	f7f6 ff5e 	bl	8000138 <__gnu_thumb1_case_shi>
 800927c:	ffed0051 	.word	0xffed0051
 8009280:	0087ffed 	.word	0x0087ffed
 8009284:	ffedffed 	.word	0xffedffed
 8009288:	ffedffed 	.word	0xffedffed
 800928c:	ffedffed 	.word	0xffedffed
 8009290:	0095ffed 	.word	0x0095ffed
 8009294:	0024007d 	.word	0x0024007d
 8009298:	00240024 	.word	0x00240024
 800929c:	007fffed 	.word	0x007fffed
 80092a0:	ffedffed 	.word	0xffedffed
 80092a4:	ffedffed 	.word	0xffedffed
 80092a8:	0083009f 	.word	0x0083009f
 80092ac:	ffed004b 	.word	0xffed004b
 80092b0:	009dffed 	.word	0x009dffed
 80092b4:	007dffed 	.word	0x007dffed
 80092b8:	ffedffed 	.word	0xffedffed
 80092bc:	0051      	.short	0x0051
 80092be:	3d45      	subs	r5, #69	; 0x45
 80092c0:	2d02      	cmp	r5, #2
 80092c2:	d8c8      	bhi.n	8009256 <__ssvfiscanf_r+0xe2>
 80092c4:	2305      	movs	r3, #5
 80092c6:	e06c      	b.n	80093a2 <__ssvfiscanf_r+0x22e>
 80092c8:	6863      	ldr	r3, [r4, #4]
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	dd0e      	ble.n	80092ec <__ssvfiscanf_r+0x178>
 80092ce:	6823      	ldr	r3, [r4, #0]
 80092d0:	781a      	ldrb	r2, [r3, #0]
 80092d2:	42aa      	cmp	r2, r5
 80092d4:	d000      	beq.n	80092d8 <__ssvfiscanf_r+0x164>
 80092d6:	e0bc      	b.n	8009452 <__ssvfiscanf_r+0x2de>
 80092d8:	3301      	adds	r3, #1
 80092da:	6862      	ldr	r2, [r4, #4]
 80092dc:	6023      	str	r3, [r4, #0]
 80092de:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 80092e0:	3a01      	subs	r2, #1
 80092e2:	9300      	str	r3, [sp, #0]
 80092e4:	3301      	adds	r3, #1
 80092e6:	6062      	str	r2, [r4, #4]
 80092e8:	9347      	str	r3, [sp, #284]	; 0x11c
 80092ea:	e76e      	b.n	80091ca <__ssvfiscanf_r+0x56>
 80092ec:	22c0      	movs	r2, #192	; 0xc0
 80092ee:	ab43      	add	r3, sp, #268	; 0x10c
 80092f0:	0052      	lsls	r2, r2, #1
 80092f2:	589b      	ldr	r3, [r3, r2]
 80092f4:	0021      	movs	r1, r4
 80092f6:	0030      	movs	r0, r6
 80092f8:	9300      	str	r3, [sp, #0]
 80092fa:	4798      	blx	r3
 80092fc:	2800      	cmp	r0, #0
 80092fe:	d0e6      	beq.n	80092ce <__ssvfiscanf_r+0x15a>
 8009300:	9846      	ldr	r0, [sp, #280]	; 0x118
 8009302:	2800      	cmp	r0, #0
 8009304:	d000      	beq.n	8009308 <__ssvfiscanf_r+0x194>
 8009306:	e09d      	b.n	8009444 <__ssvfiscanf_r+0x2d0>
 8009308:	3801      	subs	r0, #1
 800930a:	23a5      	movs	r3, #165	; 0xa5
 800930c:	009b      	lsls	r3, r3, #2
 800930e:	449d      	add	sp, r3
 8009310:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009312:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8009314:	9300      	str	r3, [sp, #0]
 8009316:	2320      	movs	r3, #32
 8009318:	9a00      	ldr	r2, [sp, #0]
 800931a:	4313      	orrs	r3, r2
 800931c:	9343      	str	r3, [sp, #268]	; 0x10c
 800931e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8009320:	9300      	str	r3, [sp, #0]
 8009322:	2380      	movs	r3, #128	; 0x80
 8009324:	9a00      	ldr	r2, [sp, #0]
 8009326:	009b      	lsls	r3, r3, #2
 8009328:	4313      	orrs	r3, r2
 800932a:	9343      	str	r3, [sp, #268]	; 0x10c
 800932c:	2310      	movs	r3, #16
 800932e:	9344      	str	r3, [sp, #272]	; 0x110
 8009330:	236e      	movs	r3, #110	; 0x6e
 8009332:	42ab      	cmp	r3, r5
 8009334:	41ad      	sbcs	r5, r5
 8009336:	426d      	negs	r5, r5
 8009338:	3503      	adds	r5, #3
 800933a:	9549      	str	r5, [sp, #292]	; 0x124
 800933c:	6863      	ldr	r3, [r4, #4]
 800933e:	2b00      	cmp	r3, #0
 8009340:	dd4a      	ble.n	80093d8 <__ssvfiscanf_r+0x264>
 8009342:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8009344:	9300      	str	r3, [sp, #0]
 8009346:	065b      	lsls	r3, r3, #25
 8009348:	d406      	bmi.n	8009358 <__ssvfiscanf_r+0x1e4>
 800934a:	6823      	ldr	r3, [r4, #0]
 800934c:	4945      	ldr	r1, [pc, #276]	; (8009464 <__ssvfiscanf_r+0x2f0>)
 800934e:	781a      	ldrb	r2, [r3, #0]
 8009350:	5c8a      	ldrb	r2, [r1, r2]
 8009352:	2108      	movs	r1, #8
 8009354:	420a      	tst	r2, r1
 8009356:	d14a      	bne.n	80093ee <__ssvfiscanf_r+0x27a>
 8009358:	9b49      	ldr	r3, [sp, #292]	; 0x124
 800935a:	2b02      	cmp	r3, #2
 800935c:	dc5e      	bgt.n	800941c <__ssvfiscanf_r+0x2a8>
 800935e:	0022      	movs	r2, r4
 8009360:	0030      	movs	r0, r6
 8009362:	ab02      	add	r3, sp, #8
 8009364:	a943      	add	r1, sp, #268	; 0x10c
 8009366:	f000 f9e5 	bl	8009734 <_scanf_chars>
 800936a:	2801      	cmp	r0, #1
 800936c:	d071      	beq.n	8009452 <__ssvfiscanf_r+0x2de>
 800936e:	2802      	cmp	r0, #2
 8009370:	d000      	beq.n	8009374 <__ssvfiscanf_r+0x200>
 8009372:	e72a      	b.n	80091ca <__ssvfiscanf_r+0x56>
 8009374:	e7c4      	b.n	8009300 <__ssvfiscanf_r+0x18c>
 8009376:	230a      	movs	r3, #10
 8009378:	e7d9      	b.n	800932e <__ssvfiscanf_r+0x1ba>
 800937a:	2300      	movs	r3, #0
 800937c:	2503      	movs	r5, #3
 800937e:	9344      	str	r3, [sp, #272]	; 0x110
 8009380:	e7db      	b.n	800933a <__ssvfiscanf_r+0x1c6>
 8009382:	2308      	movs	r3, #8
 8009384:	2504      	movs	r5, #4
 8009386:	9344      	str	r3, [sp, #272]	; 0x110
 8009388:	e7d7      	b.n	800933a <__ssvfiscanf_r+0x1c6>
 800938a:	0039      	movs	r1, r7
 800938c:	a803      	add	r0, sp, #12
 800938e:	f000 fb4d 	bl	8009a2c <__sccl>
 8009392:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8009394:	0007      	movs	r7, r0
 8009396:	9300      	str	r3, [sp, #0]
 8009398:	2340      	movs	r3, #64	; 0x40
 800939a:	9a00      	ldr	r2, [sp, #0]
 800939c:	4313      	orrs	r3, r2
 800939e:	9343      	str	r3, [sp, #268]	; 0x10c
 80093a0:	2301      	movs	r3, #1
 80093a2:	9349      	str	r3, [sp, #292]	; 0x124
 80093a4:	e7ca      	b.n	800933c <__ssvfiscanf_r+0x1c8>
 80093a6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 80093a8:	9300      	str	r3, [sp, #0]
 80093aa:	2340      	movs	r3, #64	; 0x40
 80093ac:	9a00      	ldr	r2, [sp, #0]
 80093ae:	4313      	orrs	r3, r2
 80093b0:	9343      	str	r3, [sp, #268]	; 0x10c
 80093b2:	2300      	movs	r3, #0
 80093b4:	e7f5      	b.n	80093a2 <__ssvfiscanf_r+0x22e>
 80093b6:	2302      	movs	r3, #2
 80093b8:	e7f3      	b.n	80093a2 <__ssvfiscanf_r+0x22e>
 80093ba:	9843      	ldr	r0, [sp, #268]	; 0x10c
 80093bc:	06c3      	lsls	r3, r0, #27
 80093be:	d500      	bpl.n	80093c2 <__ssvfiscanf_r+0x24e>
 80093c0:	e703      	b.n	80091ca <__ssvfiscanf_r+0x56>
 80093c2:	9b02      	ldr	r3, [sp, #8]
 80093c4:	9a47      	ldr	r2, [sp, #284]	; 0x11c
 80093c6:	1d19      	adds	r1, r3, #4
 80093c8:	9102      	str	r1, [sp, #8]
 80093ca:	681b      	ldr	r3, [r3, #0]
 80093cc:	07c5      	lsls	r5, r0, #31
 80093ce:	d501      	bpl.n	80093d4 <__ssvfiscanf_r+0x260>
 80093d0:	801a      	strh	r2, [r3, #0]
 80093d2:	e6fa      	b.n	80091ca <__ssvfiscanf_r+0x56>
 80093d4:	601a      	str	r2, [r3, #0]
 80093d6:	e6f8      	b.n	80091ca <__ssvfiscanf_r+0x56>
 80093d8:	22c0      	movs	r2, #192	; 0xc0
 80093da:	ab43      	add	r3, sp, #268	; 0x10c
 80093dc:	0052      	lsls	r2, r2, #1
 80093de:	589b      	ldr	r3, [r3, r2]
 80093e0:	0021      	movs	r1, r4
 80093e2:	0030      	movs	r0, r6
 80093e4:	9300      	str	r3, [sp, #0]
 80093e6:	4798      	blx	r3
 80093e8:	2800      	cmp	r0, #0
 80093ea:	d0aa      	beq.n	8009342 <__ssvfiscanf_r+0x1ce>
 80093ec:	e788      	b.n	8009300 <__ssvfiscanf_r+0x18c>
 80093ee:	9a47      	ldr	r2, [sp, #284]	; 0x11c
 80093f0:	9200      	str	r2, [sp, #0]
 80093f2:	3201      	adds	r2, #1
 80093f4:	9247      	str	r2, [sp, #284]	; 0x11c
 80093f6:	6862      	ldr	r2, [r4, #4]
 80093f8:	3a01      	subs	r2, #1
 80093fa:	6062      	str	r2, [r4, #4]
 80093fc:	2a00      	cmp	r2, #0
 80093fe:	dd02      	ble.n	8009406 <__ssvfiscanf_r+0x292>
 8009400:	3301      	adds	r3, #1
 8009402:	6023      	str	r3, [r4, #0]
 8009404:	e7a1      	b.n	800934a <__ssvfiscanf_r+0x1d6>
 8009406:	22c0      	movs	r2, #192	; 0xc0
 8009408:	ab43      	add	r3, sp, #268	; 0x10c
 800940a:	0052      	lsls	r2, r2, #1
 800940c:	589b      	ldr	r3, [r3, r2]
 800940e:	0021      	movs	r1, r4
 8009410:	0030      	movs	r0, r6
 8009412:	9300      	str	r3, [sp, #0]
 8009414:	4798      	blx	r3
 8009416:	2800      	cmp	r0, #0
 8009418:	d097      	beq.n	800934a <__ssvfiscanf_r+0x1d6>
 800941a:	e771      	b.n	8009300 <__ssvfiscanf_r+0x18c>
 800941c:	2b04      	cmp	r3, #4
 800941e:	dc06      	bgt.n	800942e <__ssvfiscanf_r+0x2ba>
 8009420:	0022      	movs	r2, r4
 8009422:	0030      	movs	r0, r6
 8009424:	ab02      	add	r3, sp, #8
 8009426:	a943      	add	r1, sp, #268	; 0x10c
 8009428:	f000 f9e2 	bl	80097f0 <_scanf_i>
 800942c:	e79d      	b.n	800936a <__ssvfiscanf_r+0x1f6>
 800942e:	4b0f      	ldr	r3, [pc, #60]	; (800946c <__ssvfiscanf_r+0x2f8>)
 8009430:	2b00      	cmp	r3, #0
 8009432:	d100      	bne.n	8009436 <__ssvfiscanf_r+0x2c2>
 8009434:	e6c9      	b.n	80091ca <__ssvfiscanf_r+0x56>
 8009436:	0022      	movs	r2, r4
 8009438:	0030      	movs	r0, r6
 800943a:	ab02      	add	r3, sp, #8
 800943c:	a943      	add	r1, sp, #268	; 0x10c
 800943e:	e000      	b.n	8009442 <__ssvfiscanf_r+0x2ce>
 8009440:	bf00      	nop
 8009442:	e792      	b.n	800936a <__ssvfiscanf_r+0x1f6>
 8009444:	89a3      	ldrh	r3, [r4, #12]
 8009446:	065b      	lsls	r3, r3, #25
 8009448:	d400      	bmi.n	800944c <__ssvfiscanf_r+0x2d8>
 800944a:	e75e      	b.n	800930a <__ssvfiscanf_r+0x196>
 800944c:	2001      	movs	r0, #1
 800944e:	4240      	negs	r0, r0
 8009450:	e75b      	b.n	800930a <__ssvfiscanf_r+0x196>
 8009452:	9846      	ldr	r0, [sp, #280]	; 0x118
 8009454:	e759      	b.n	800930a <__ssvfiscanf_r+0x196>
 8009456:	46c0      	nop			; (mov r8, r8)
 8009458:	fffffd6c 	.word	0xfffffd6c
 800945c:	080090bd 	.word	0x080090bd
 8009460:	08009135 	.word	0x08009135
 8009464:	0800a7b1 	.word	0x0800a7b1
 8009468:	0800ab02 	.word	0x0800ab02
 800946c:	00000000 	.word	0x00000000

08009470 <__sfputc_r>:
 8009470:	6893      	ldr	r3, [r2, #8]
 8009472:	b510      	push	{r4, lr}
 8009474:	3b01      	subs	r3, #1
 8009476:	6093      	str	r3, [r2, #8]
 8009478:	2b00      	cmp	r3, #0
 800947a:	da04      	bge.n	8009486 <__sfputc_r+0x16>
 800947c:	6994      	ldr	r4, [r2, #24]
 800947e:	42a3      	cmp	r3, r4
 8009480:	db07      	blt.n	8009492 <__sfputc_r+0x22>
 8009482:	290a      	cmp	r1, #10
 8009484:	d005      	beq.n	8009492 <__sfputc_r+0x22>
 8009486:	6813      	ldr	r3, [r2, #0]
 8009488:	1c58      	adds	r0, r3, #1
 800948a:	6010      	str	r0, [r2, #0]
 800948c:	7019      	strb	r1, [r3, #0]
 800948e:	0008      	movs	r0, r1
 8009490:	bd10      	pop	{r4, pc}
 8009492:	f000 fbe5 	bl	8009c60 <__swbuf_r>
 8009496:	0001      	movs	r1, r0
 8009498:	e7f9      	b.n	800948e <__sfputc_r+0x1e>

0800949a <__sfputs_r>:
 800949a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800949c:	0006      	movs	r6, r0
 800949e:	000f      	movs	r7, r1
 80094a0:	0014      	movs	r4, r2
 80094a2:	18d5      	adds	r5, r2, r3
 80094a4:	42ac      	cmp	r4, r5
 80094a6:	d101      	bne.n	80094ac <__sfputs_r+0x12>
 80094a8:	2000      	movs	r0, #0
 80094aa:	e007      	b.n	80094bc <__sfputs_r+0x22>
 80094ac:	7821      	ldrb	r1, [r4, #0]
 80094ae:	003a      	movs	r2, r7
 80094b0:	0030      	movs	r0, r6
 80094b2:	f7ff ffdd 	bl	8009470 <__sfputc_r>
 80094b6:	3401      	adds	r4, #1
 80094b8:	1c43      	adds	r3, r0, #1
 80094ba:	d1f3      	bne.n	80094a4 <__sfputs_r+0xa>
 80094bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080094c0 <_vfiprintf_r>:
 80094c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094c2:	b0a1      	sub	sp, #132	; 0x84
 80094c4:	0006      	movs	r6, r0
 80094c6:	000c      	movs	r4, r1
 80094c8:	001f      	movs	r7, r3
 80094ca:	9203      	str	r2, [sp, #12]
 80094cc:	2800      	cmp	r0, #0
 80094ce:	d004      	beq.n	80094da <_vfiprintf_r+0x1a>
 80094d0:	6983      	ldr	r3, [r0, #24]
 80094d2:	2b00      	cmp	r3, #0
 80094d4:	d101      	bne.n	80094da <_vfiprintf_r+0x1a>
 80094d6:	f000 fdd5 	bl	800a084 <__sinit>
 80094da:	4b8e      	ldr	r3, [pc, #568]	; (8009714 <_vfiprintf_r+0x254>)
 80094dc:	429c      	cmp	r4, r3
 80094de:	d11c      	bne.n	800951a <_vfiprintf_r+0x5a>
 80094e0:	6874      	ldr	r4, [r6, #4]
 80094e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80094e4:	07db      	lsls	r3, r3, #31
 80094e6:	d405      	bmi.n	80094f4 <_vfiprintf_r+0x34>
 80094e8:	89a3      	ldrh	r3, [r4, #12]
 80094ea:	059b      	lsls	r3, r3, #22
 80094ec:	d402      	bmi.n	80094f4 <_vfiprintf_r+0x34>
 80094ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80094f0:	f000 fe69 	bl	800a1c6 <__retarget_lock_acquire_recursive>
 80094f4:	89a3      	ldrh	r3, [r4, #12]
 80094f6:	071b      	lsls	r3, r3, #28
 80094f8:	d502      	bpl.n	8009500 <_vfiprintf_r+0x40>
 80094fa:	6923      	ldr	r3, [r4, #16]
 80094fc:	2b00      	cmp	r3, #0
 80094fe:	d11d      	bne.n	800953c <_vfiprintf_r+0x7c>
 8009500:	0021      	movs	r1, r4
 8009502:	0030      	movs	r0, r6
 8009504:	f000 fc10 	bl	8009d28 <__swsetup_r>
 8009508:	2800      	cmp	r0, #0
 800950a:	d017      	beq.n	800953c <_vfiprintf_r+0x7c>
 800950c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800950e:	07db      	lsls	r3, r3, #31
 8009510:	d50d      	bpl.n	800952e <_vfiprintf_r+0x6e>
 8009512:	2001      	movs	r0, #1
 8009514:	4240      	negs	r0, r0
 8009516:	b021      	add	sp, #132	; 0x84
 8009518:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800951a:	4b7f      	ldr	r3, [pc, #508]	; (8009718 <_vfiprintf_r+0x258>)
 800951c:	429c      	cmp	r4, r3
 800951e:	d101      	bne.n	8009524 <_vfiprintf_r+0x64>
 8009520:	68b4      	ldr	r4, [r6, #8]
 8009522:	e7de      	b.n	80094e2 <_vfiprintf_r+0x22>
 8009524:	4b7d      	ldr	r3, [pc, #500]	; (800971c <_vfiprintf_r+0x25c>)
 8009526:	429c      	cmp	r4, r3
 8009528:	d1db      	bne.n	80094e2 <_vfiprintf_r+0x22>
 800952a:	68f4      	ldr	r4, [r6, #12]
 800952c:	e7d9      	b.n	80094e2 <_vfiprintf_r+0x22>
 800952e:	89a3      	ldrh	r3, [r4, #12]
 8009530:	059b      	lsls	r3, r3, #22
 8009532:	d4ee      	bmi.n	8009512 <_vfiprintf_r+0x52>
 8009534:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009536:	f000 fe47 	bl	800a1c8 <__retarget_lock_release_recursive>
 800953a:	e7ea      	b.n	8009512 <_vfiprintf_r+0x52>
 800953c:	2300      	movs	r3, #0
 800953e:	ad08      	add	r5, sp, #32
 8009540:	616b      	str	r3, [r5, #20]
 8009542:	3320      	adds	r3, #32
 8009544:	766b      	strb	r3, [r5, #25]
 8009546:	3310      	adds	r3, #16
 8009548:	76ab      	strb	r3, [r5, #26]
 800954a:	9707      	str	r7, [sp, #28]
 800954c:	9f03      	ldr	r7, [sp, #12]
 800954e:	783b      	ldrb	r3, [r7, #0]
 8009550:	2b00      	cmp	r3, #0
 8009552:	d001      	beq.n	8009558 <_vfiprintf_r+0x98>
 8009554:	2b25      	cmp	r3, #37	; 0x25
 8009556:	d14e      	bne.n	80095f6 <_vfiprintf_r+0x136>
 8009558:	9b03      	ldr	r3, [sp, #12]
 800955a:	1afb      	subs	r3, r7, r3
 800955c:	9305      	str	r3, [sp, #20]
 800955e:	9b03      	ldr	r3, [sp, #12]
 8009560:	429f      	cmp	r7, r3
 8009562:	d00d      	beq.n	8009580 <_vfiprintf_r+0xc0>
 8009564:	9b05      	ldr	r3, [sp, #20]
 8009566:	0021      	movs	r1, r4
 8009568:	0030      	movs	r0, r6
 800956a:	9a03      	ldr	r2, [sp, #12]
 800956c:	f7ff ff95 	bl	800949a <__sfputs_r>
 8009570:	1c43      	adds	r3, r0, #1
 8009572:	d100      	bne.n	8009576 <_vfiprintf_r+0xb6>
 8009574:	e0b5      	b.n	80096e2 <_vfiprintf_r+0x222>
 8009576:	696a      	ldr	r2, [r5, #20]
 8009578:	9b05      	ldr	r3, [sp, #20]
 800957a:	4694      	mov	ip, r2
 800957c:	4463      	add	r3, ip
 800957e:	616b      	str	r3, [r5, #20]
 8009580:	783b      	ldrb	r3, [r7, #0]
 8009582:	2b00      	cmp	r3, #0
 8009584:	d100      	bne.n	8009588 <_vfiprintf_r+0xc8>
 8009586:	e0ac      	b.n	80096e2 <_vfiprintf_r+0x222>
 8009588:	2201      	movs	r2, #1
 800958a:	1c7b      	adds	r3, r7, #1
 800958c:	9303      	str	r3, [sp, #12]
 800958e:	2300      	movs	r3, #0
 8009590:	4252      	negs	r2, r2
 8009592:	606a      	str	r2, [r5, #4]
 8009594:	a904      	add	r1, sp, #16
 8009596:	3254      	adds	r2, #84	; 0x54
 8009598:	1852      	adds	r2, r2, r1
 800959a:	602b      	str	r3, [r5, #0]
 800959c:	60eb      	str	r3, [r5, #12]
 800959e:	60ab      	str	r3, [r5, #8]
 80095a0:	7013      	strb	r3, [r2, #0]
 80095a2:	65ab      	str	r3, [r5, #88]	; 0x58
 80095a4:	9b03      	ldr	r3, [sp, #12]
 80095a6:	2205      	movs	r2, #5
 80095a8:	7819      	ldrb	r1, [r3, #0]
 80095aa:	485d      	ldr	r0, [pc, #372]	; (8009720 <_vfiprintf_r+0x260>)
 80095ac:	f7fe ff0a 	bl	80083c4 <memchr>
 80095b0:	9b03      	ldr	r3, [sp, #12]
 80095b2:	1c5f      	adds	r7, r3, #1
 80095b4:	2800      	cmp	r0, #0
 80095b6:	d120      	bne.n	80095fa <_vfiprintf_r+0x13a>
 80095b8:	682a      	ldr	r2, [r5, #0]
 80095ba:	06d3      	lsls	r3, r2, #27
 80095bc:	d504      	bpl.n	80095c8 <_vfiprintf_r+0x108>
 80095be:	2353      	movs	r3, #83	; 0x53
 80095c0:	a904      	add	r1, sp, #16
 80095c2:	185b      	adds	r3, r3, r1
 80095c4:	2120      	movs	r1, #32
 80095c6:	7019      	strb	r1, [r3, #0]
 80095c8:	0713      	lsls	r3, r2, #28
 80095ca:	d504      	bpl.n	80095d6 <_vfiprintf_r+0x116>
 80095cc:	2353      	movs	r3, #83	; 0x53
 80095ce:	a904      	add	r1, sp, #16
 80095d0:	185b      	adds	r3, r3, r1
 80095d2:	212b      	movs	r1, #43	; 0x2b
 80095d4:	7019      	strb	r1, [r3, #0]
 80095d6:	9b03      	ldr	r3, [sp, #12]
 80095d8:	781b      	ldrb	r3, [r3, #0]
 80095da:	2b2a      	cmp	r3, #42	; 0x2a
 80095dc:	d016      	beq.n	800960c <_vfiprintf_r+0x14c>
 80095de:	2100      	movs	r1, #0
 80095e0:	68eb      	ldr	r3, [r5, #12]
 80095e2:	9f03      	ldr	r7, [sp, #12]
 80095e4:	783a      	ldrb	r2, [r7, #0]
 80095e6:	1c78      	adds	r0, r7, #1
 80095e8:	3a30      	subs	r2, #48	; 0x30
 80095ea:	4684      	mov	ip, r0
 80095ec:	2a09      	cmp	r2, #9
 80095ee:	d94f      	bls.n	8009690 <_vfiprintf_r+0x1d0>
 80095f0:	2900      	cmp	r1, #0
 80095f2:	d111      	bne.n	8009618 <_vfiprintf_r+0x158>
 80095f4:	e017      	b.n	8009626 <_vfiprintf_r+0x166>
 80095f6:	3701      	adds	r7, #1
 80095f8:	e7a9      	b.n	800954e <_vfiprintf_r+0x8e>
 80095fa:	4b49      	ldr	r3, [pc, #292]	; (8009720 <_vfiprintf_r+0x260>)
 80095fc:	682a      	ldr	r2, [r5, #0]
 80095fe:	1ac0      	subs	r0, r0, r3
 8009600:	2301      	movs	r3, #1
 8009602:	4083      	lsls	r3, r0
 8009604:	4313      	orrs	r3, r2
 8009606:	602b      	str	r3, [r5, #0]
 8009608:	9703      	str	r7, [sp, #12]
 800960a:	e7cb      	b.n	80095a4 <_vfiprintf_r+0xe4>
 800960c:	9b07      	ldr	r3, [sp, #28]
 800960e:	1d19      	adds	r1, r3, #4
 8009610:	681b      	ldr	r3, [r3, #0]
 8009612:	9107      	str	r1, [sp, #28]
 8009614:	2b00      	cmp	r3, #0
 8009616:	db01      	blt.n	800961c <_vfiprintf_r+0x15c>
 8009618:	930b      	str	r3, [sp, #44]	; 0x2c
 800961a:	e004      	b.n	8009626 <_vfiprintf_r+0x166>
 800961c:	425b      	negs	r3, r3
 800961e:	60eb      	str	r3, [r5, #12]
 8009620:	2302      	movs	r3, #2
 8009622:	4313      	orrs	r3, r2
 8009624:	602b      	str	r3, [r5, #0]
 8009626:	783b      	ldrb	r3, [r7, #0]
 8009628:	2b2e      	cmp	r3, #46	; 0x2e
 800962a:	d10a      	bne.n	8009642 <_vfiprintf_r+0x182>
 800962c:	787b      	ldrb	r3, [r7, #1]
 800962e:	2b2a      	cmp	r3, #42	; 0x2a
 8009630:	d137      	bne.n	80096a2 <_vfiprintf_r+0x1e2>
 8009632:	9b07      	ldr	r3, [sp, #28]
 8009634:	3702      	adds	r7, #2
 8009636:	1d1a      	adds	r2, r3, #4
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	9207      	str	r2, [sp, #28]
 800963c:	2b00      	cmp	r3, #0
 800963e:	db2d      	blt.n	800969c <_vfiprintf_r+0x1dc>
 8009640:	9309      	str	r3, [sp, #36]	; 0x24
 8009642:	2203      	movs	r2, #3
 8009644:	7839      	ldrb	r1, [r7, #0]
 8009646:	4837      	ldr	r0, [pc, #220]	; (8009724 <_vfiprintf_r+0x264>)
 8009648:	f7fe febc 	bl	80083c4 <memchr>
 800964c:	2800      	cmp	r0, #0
 800964e:	d007      	beq.n	8009660 <_vfiprintf_r+0x1a0>
 8009650:	4b34      	ldr	r3, [pc, #208]	; (8009724 <_vfiprintf_r+0x264>)
 8009652:	682a      	ldr	r2, [r5, #0]
 8009654:	1ac0      	subs	r0, r0, r3
 8009656:	2340      	movs	r3, #64	; 0x40
 8009658:	4083      	lsls	r3, r0
 800965a:	4313      	orrs	r3, r2
 800965c:	3701      	adds	r7, #1
 800965e:	602b      	str	r3, [r5, #0]
 8009660:	7839      	ldrb	r1, [r7, #0]
 8009662:	1c7b      	adds	r3, r7, #1
 8009664:	2206      	movs	r2, #6
 8009666:	4830      	ldr	r0, [pc, #192]	; (8009728 <_vfiprintf_r+0x268>)
 8009668:	9303      	str	r3, [sp, #12]
 800966a:	7629      	strb	r1, [r5, #24]
 800966c:	f7fe feaa 	bl	80083c4 <memchr>
 8009670:	2800      	cmp	r0, #0
 8009672:	d045      	beq.n	8009700 <_vfiprintf_r+0x240>
 8009674:	4b2d      	ldr	r3, [pc, #180]	; (800972c <_vfiprintf_r+0x26c>)
 8009676:	2b00      	cmp	r3, #0
 8009678:	d127      	bne.n	80096ca <_vfiprintf_r+0x20a>
 800967a:	2207      	movs	r2, #7
 800967c:	9b07      	ldr	r3, [sp, #28]
 800967e:	3307      	adds	r3, #7
 8009680:	4393      	bics	r3, r2
 8009682:	3308      	adds	r3, #8
 8009684:	9307      	str	r3, [sp, #28]
 8009686:	696b      	ldr	r3, [r5, #20]
 8009688:	9a04      	ldr	r2, [sp, #16]
 800968a:	189b      	adds	r3, r3, r2
 800968c:	616b      	str	r3, [r5, #20]
 800968e:	e75d      	b.n	800954c <_vfiprintf_r+0x8c>
 8009690:	210a      	movs	r1, #10
 8009692:	434b      	muls	r3, r1
 8009694:	4667      	mov	r7, ip
 8009696:	189b      	adds	r3, r3, r2
 8009698:	3909      	subs	r1, #9
 800969a:	e7a3      	b.n	80095e4 <_vfiprintf_r+0x124>
 800969c:	2301      	movs	r3, #1
 800969e:	425b      	negs	r3, r3
 80096a0:	e7ce      	b.n	8009640 <_vfiprintf_r+0x180>
 80096a2:	2300      	movs	r3, #0
 80096a4:	001a      	movs	r2, r3
 80096a6:	3701      	adds	r7, #1
 80096a8:	606b      	str	r3, [r5, #4]
 80096aa:	7839      	ldrb	r1, [r7, #0]
 80096ac:	1c78      	adds	r0, r7, #1
 80096ae:	3930      	subs	r1, #48	; 0x30
 80096b0:	4684      	mov	ip, r0
 80096b2:	2909      	cmp	r1, #9
 80096b4:	d903      	bls.n	80096be <_vfiprintf_r+0x1fe>
 80096b6:	2b00      	cmp	r3, #0
 80096b8:	d0c3      	beq.n	8009642 <_vfiprintf_r+0x182>
 80096ba:	9209      	str	r2, [sp, #36]	; 0x24
 80096bc:	e7c1      	b.n	8009642 <_vfiprintf_r+0x182>
 80096be:	230a      	movs	r3, #10
 80096c0:	435a      	muls	r2, r3
 80096c2:	4667      	mov	r7, ip
 80096c4:	1852      	adds	r2, r2, r1
 80096c6:	3b09      	subs	r3, #9
 80096c8:	e7ef      	b.n	80096aa <_vfiprintf_r+0x1ea>
 80096ca:	ab07      	add	r3, sp, #28
 80096cc:	9300      	str	r3, [sp, #0]
 80096ce:	0022      	movs	r2, r4
 80096d0:	0029      	movs	r1, r5
 80096d2:	0030      	movs	r0, r6
 80096d4:	4b16      	ldr	r3, [pc, #88]	; (8009730 <_vfiprintf_r+0x270>)
 80096d6:	f7fb fffd 	bl	80056d4 <_printf_float>
 80096da:	9004      	str	r0, [sp, #16]
 80096dc:	9b04      	ldr	r3, [sp, #16]
 80096de:	3301      	adds	r3, #1
 80096e0:	d1d1      	bne.n	8009686 <_vfiprintf_r+0x1c6>
 80096e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80096e4:	07db      	lsls	r3, r3, #31
 80096e6:	d405      	bmi.n	80096f4 <_vfiprintf_r+0x234>
 80096e8:	89a3      	ldrh	r3, [r4, #12]
 80096ea:	059b      	lsls	r3, r3, #22
 80096ec:	d402      	bmi.n	80096f4 <_vfiprintf_r+0x234>
 80096ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80096f0:	f000 fd6a 	bl	800a1c8 <__retarget_lock_release_recursive>
 80096f4:	89a3      	ldrh	r3, [r4, #12]
 80096f6:	065b      	lsls	r3, r3, #25
 80096f8:	d500      	bpl.n	80096fc <_vfiprintf_r+0x23c>
 80096fa:	e70a      	b.n	8009512 <_vfiprintf_r+0x52>
 80096fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80096fe:	e70a      	b.n	8009516 <_vfiprintf_r+0x56>
 8009700:	ab07      	add	r3, sp, #28
 8009702:	9300      	str	r3, [sp, #0]
 8009704:	0022      	movs	r2, r4
 8009706:	0029      	movs	r1, r5
 8009708:	0030      	movs	r0, r6
 800970a:	4b09      	ldr	r3, [pc, #36]	; (8009730 <_vfiprintf_r+0x270>)
 800970c:	f7fc fa94 	bl	8005c38 <_printf_i>
 8009710:	e7e3      	b.n	80096da <_vfiprintf_r+0x21a>
 8009712:	46c0      	nop			; (mov r8, r8)
 8009714:	0800ab48 	.word	0x0800ab48
 8009718:	0800ab68 	.word	0x0800ab68
 800971c:	0800ab28 	.word	0x0800ab28
 8009720:	0800aafc 	.word	0x0800aafc
 8009724:	0800ab02 	.word	0x0800ab02
 8009728:	0800ab06 	.word	0x0800ab06
 800972c:	080056d5 	.word	0x080056d5
 8009730:	0800949b 	.word	0x0800949b

08009734 <_scanf_chars>:
 8009734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009736:	0015      	movs	r5, r2
 8009738:	688a      	ldr	r2, [r1, #8]
 800973a:	000c      	movs	r4, r1
 800973c:	9001      	str	r0, [sp, #4]
 800973e:	2a00      	cmp	r2, #0
 8009740:	d105      	bne.n	800974e <_scanf_chars+0x1a>
 8009742:	6989      	ldr	r1, [r1, #24]
 8009744:	3201      	adds	r2, #1
 8009746:	2900      	cmp	r1, #0
 8009748:	d000      	beq.n	800974c <_scanf_chars+0x18>
 800974a:	3a02      	subs	r2, #2
 800974c:	60a2      	str	r2, [r4, #8]
 800974e:	6822      	ldr	r2, [r4, #0]
 8009750:	06d2      	lsls	r2, r2, #27
 8009752:	d403      	bmi.n	800975c <_scanf_chars+0x28>
 8009754:	681a      	ldr	r2, [r3, #0]
 8009756:	1d11      	adds	r1, r2, #4
 8009758:	6019      	str	r1, [r3, #0]
 800975a:	6817      	ldr	r7, [r2, #0]
 800975c:	2600      	movs	r6, #0
 800975e:	69a0      	ldr	r0, [r4, #24]
 8009760:	2800      	cmp	r0, #0
 8009762:	d013      	beq.n	800978c <_scanf_chars+0x58>
 8009764:	2801      	cmp	r0, #1
 8009766:	d108      	bne.n	800977a <_scanf_chars+0x46>
 8009768:	682b      	ldr	r3, [r5, #0]
 800976a:	6962      	ldr	r2, [r4, #20]
 800976c:	781b      	ldrb	r3, [r3, #0]
 800976e:	5cd3      	ldrb	r3, [r2, r3]
 8009770:	2b00      	cmp	r3, #0
 8009772:	d10b      	bne.n	800978c <_scanf_chars+0x58>
 8009774:	2e00      	cmp	r6, #0
 8009776:	d038      	beq.n	80097ea <_scanf_chars+0xb6>
 8009778:	e026      	b.n	80097c8 <_scanf_chars+0x94>
 800977a:	2802      	cmp	r0, #2
 800977c:	d124      	bne.n	80097c8 <_scanf_chars+0x94>
 800977e:	682b      	ldr	r3, [r5, #0]
 8009780:	4a1a      	ldr	r2, [pc, #104]	; (80097ec <_scanf_chars+0xb8>)
 8009782:	781b      	ldrb	r3, [r3, #0]
 8009784:	5cd3      	ldrb	r3, [r2, r3]
 8009786:	2208      	movs	r2, #8
 8009788:	4213      	tst	r3, r2
 800978a:	d11d      	bne.n	80097c8 <_scanf_chars+0x94>
 800978c:	2210      	movs	r2, #16
 800978e:	6823      	ldr	r3, [r4, #0]
 8009790:	3601      	adds	r6, #1
 8009792:	4213      	tst	r3, r2
 8009794:	d103      	bne.n	800979e <_scanf_chars+0x6a>
 8009796:	682b      	ldr	r3, [r5, #0]
 8009798:	781b      	ldrb	r3, [r3, #0]
 800979a:	703b      	strb	r3, [r7, #0]
 800979c:	3701      	adds	r7, #1
 800979e:	682a      	ldr	r2, [r5, #0]
 80097a0:	686b      	ldr	r3, [r5, #4]
 80097a2:	3201      	adds	r2, #1
 80097a4:	602a      	str	r2, [r5, #0]
 80097a6:	68a2      	ldr	r2, [r4, #8]
 80097a8:	3b01      	subs	r3, #1
 80097aa:	3a01      	subs	r2, #1
 80097ac:	606b      	str	r3, [r5, #4]
 80097ae:	60a2      	str	r2, [r4, #8]
 80097b0:	2a00      	cmp	r2, #0
 80097b2:	d009      	beq.n	80097c8 <_scanf_chars+0x94>
 80097b4:	2b00      	cmp	r3, #0
 80097b6:	dcd2      	bgt.n	800975e <_scanf_chars+0x2a>
 80097b8:	23c0      	movs	r3, #192	; 0xc0
 80097ba:	005b      	lsls	r3, r3, #1
 80097bc:	0029      	movs	r1, r5
 80097be:	58e3      	ldr	r3, [r4, r3]
 80097c0:	9801      	ldr	r0, [sp, #4]
 80097c2:	4798      	blx	r3
 80097c4:	2800      	cmp	r0, #0
 80097c6:	d0ca      	beq.n	800975e <_scanf_chars+0x2a>
 80097c8:	6822      	ldr	r2, [r4, #0]
 80097ca:	2310      	movs	r3, #16
 80097cc:	0011      	movs	r1, r2
 80097ce:	4019      	ands	r1, r3
 80097d0:	421a      	tst	r2, r3
 80097d2:	d106      	bne.n	80097e2 <_scanf_chars+0xae>
 80097d4:	68e3      	ldr	r3, [r4, #12]
 80097d6:	3301      	adds	r3, #1
 80097d8:	60e3      	str	r3, [r4, #12]
 80097da:	69a3      	ldr	r3, [r4, #24]
 80097dc:	2b00      	cmp	r3, #0
 80097de:	d000      	beq.n	80097e2 <_scanf_chars+0xae>
 80097e0:	7039      	strb	r1, [r7, #0]
 80097e2:	2000      	movs	r0, #0
 80097e4:	6923      	ldr	r3, [r4, #16]
 80097e6:	199e      	adds	r6, r3, r6
 80097e8:	6126      	str	r6, [r4, #16]
 80097ea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80097ec:	0800a7b1 	.word	0x0800a7b1

080097f0 <_scanf_i>:
 80097f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097f2:	000c      	movs	r4, r1
 80097f4:	b08d      	sub	sp, #52	; 0x34
 80097f6:	9302      	str	r3, [sp, #8]
 80097f8:	4b79      	ldr	r3, [pc, #484]	; (80099e0 <_scanf_i+0x1f0>)
 80097fa:	0016      	movs	r6, r2
 80097fc:	9005      	str	r0, [sp, #20]
 80097fe:	aa09      	add	r2, sp, #36	; 0x24
 8009800:	cb23      	ldmia	r3!, {r0, r1, r5}
 8009802:	c223      	stmia	r2!, {r0, r1, r5}
 8009804:	4b77      	ldr	r3, [pc, #476]	; (80099e4 <_scanf_i+0x1f4>)
 8009806:	9306      	str	r3, [sp, #24]
 8009808:	69a3      	ldr	r3, [r4, #24]
 800980a:	2b03      	cmp	r3, #3
 800980c:	d001      	beq.n	8009812 <_scanf_i+0x22>
 800980e:	4b76      	ldr	r3, [pc, #472]	; (80099e8 <_scanf_i+0x1f8>)
 8009810:	9306      	str	r3, [sp, #24]
 8009812:	22ae      	movs	r2, #174	; 0xae
 8009814:	2000      	movs	r0, #0
 8009816:	68a3      	ldr	r3, [r4, #8]
 8009818:	0052      	lsls	r2, r2, #1
 800981a:	1e59      	subs	r1, r3, #1
 800981c:	9004      	str	r0, [sp, #16]
 800981e:	4291      	cmp	r1, r2
 8009820:	d905      	bls.n	800982e <_scanf_i+0x3e>
 8009822:	3b5e      	subs	r3, #94	; 0x5e
 8009824:	3bff      	subs	r3, #255	; 0xff
 8009826:	9304      	str	r3, [sp, #16]
 8009828:	235e      	movs	r3, #94	; 0x5e
 800982a:	33ff      	adds	r3, #255	; 0xff
 800982c:	60a3      	str	r3, [r4, #8]
 800982e:	0023      	movs	r3, r4
 8009830:	331c      	adds	r3, #28
 8009832:	9301      	str	r3, [sp, #4]
 8009834:	23d0      	movs	r3, #208	; 0xd0
 8009836:	2700      	movs	r7, #0
 8009838:	6822      	ldr	r2, [r4, #0]
 800983a:	011b      	lsls	r3, r3, #4
 800983c:	4313      	orrs	r3, r2
 800983e:	6023      	str	r3, [r4, #0]
 8009840:	9b01      	ldr	r3, [sp, #4]
 8009842:	9303      	str	r3, [sp, #12]
 8009844:	6833      	ldr	r3, [r6, #0]
 8009846:	a809      	add	r0, sp, #36	; 0x24
 8009848:	7819      	ldrb	r1, [r3, #0]
 800984a:	00bb      	lsls	r3, r7, #2
 800984c:	2202      	movs	r2, #2
 800984e:	5818      	ldr	r0, [r3, r0]
 8009850:	f7fe fdb8 	bl	80083c4 <memchr>
 8009854:	2800      	cmp	r0, #0
 8009856:	d02b      	beq.n	80098b0 <_scanf_i+0xc0>
 8009858:	2f01      	cmp	r7, #1
 800985a:	d162      	bne.n	8009922 <_scanf_i+0x132>
 800985c:	6863      	ldr	r3, [r4, #4]
 800985e:	2b00      	cmp	r3, #0
 8009860:	d106      	bne.n	8009870 <_scanf_i+0x80>
 8009862:	3308      	adds	r3, #8
 8009864:	6822      	ldr	r2, [r4, #0]
 8009866:	6063      	str	r3, [r4, #4]
 8009868:	33f9      	adds	r3, #249	; 0xf9
 800986a:	33ff      	adds	r3, #255	; 0xff
 800986c:	4313      	orrs	r3, r2
 800986e:	6023      	str	r3, [r4, #0]
 8009870:	4b5e      	ldr	r3, [pc, #376]	; (80099ec <_scanf_i+0x1fc>)
 8009872:	6822      	ldr	r2, [r4, #0]
 8009874:	4013      	ands	r3, r2
 8009876:	6023      	str	r3, [r4, #0]
 8009878:	68a3      	ldr	r3, [r4, #8]
 800987a:	1e5a      	subs	r2, r3, #1
 800987c:	60a2      	str	r2, [r4, #8]
 800987e:	2b00      	cmp	r3, #0
 8009880:	d016      	beq.n	80098b0 <_scanf_i+0xc0>
 8009882:	6833      	ldr	r3, [r6, #0]
 8009884:	1c5a      	adds	r2, r3, #1
 8009886:	6032      	str	r2, [r6, #0]
 8009888:	781b      	ldrb	r3, [r3, #0]
 800988a:	9a03      	ldr	r2, [sp, #12]
 800988c:	7013      	strb	r3, [r2, #0]
 800988e:	6873      	ldr	r3, [r6, #4]
 8009890:	1c55      	adds	r5, r2, #1
 8009892:	3b01      	subs	r3, #1
 8009894:	6073      	str	r3, [r6, #4]
 8009896:	9503      	str	r5, [sp, #12]
 8009898:	2b00      	cmp	r3, #0
 800989a:	dc09      	bgt.n	80098b0 <_scanf_i+0xc0>
 800989c:	23c0      	movs	r3, #192	; 0xc0
 800989e:	005b      	lsls	r3, r3, #1
 80098a0:	58e3      	ldr	r3, [r4, r3]
 80098a2:	0031      	movs	r1, r6
 80098a4:	9805      	ldr	r0, [sp, #20]
 80098a6:	9307      	str	r3, [sp, #28]
 80098a8:	4798      	blx	r3
 80098aa:	2800      	cmp	r0, #0
 80098ac:	d000      	beq.n	80098b0 <_scanf_i+0xc0>
 80098ae:	e081      	b.n	80099b4 <_scanf_i+0x1c4>
 80098b0:	3701      	adds	r7, #1
 80098b2:	2f03      	cmp	r7, #3
 80098b4:	d1c6      	bne.n	8009844 <_scanf_i+0x54>
 80098b6:	6863      	ldr	r3, [r4, #4]
 80098b8:	2b00      	cmp	r3, #0
 80098ba:	d101      	bne.n	80098c0 <_scanf_i+0xd0>
 80098bc:	330a      	adds	r3, #10
 80098be:	6063      	str	r3, [r4, #4]
 80098c0:	2110      	movs	r1, #16
 80098c2:	2700      	movs	r7, #0
 80098c4:	6863      	ldr	r3, [r4, #4]
 80098c6:	6960      	ldr	r0, [r4, #20]
 80098c8:	1ac9      	subs	r1, r1, r3
 80098ca:	4b49      	ldr	r3, [pc, #292]	; (80099f0 <_scanf_i+0x200>)
 80098cc:	18c9      	adds	r1, r1, r3
 80098ce:	f000 f8ad 	bl	8009a2c <__sccl>
 80098d2:	9d03      	ldr	r5, [sp, #12]
 80098d4:	68a3      	ldr	r3, [r4, #8]
 80098d6:	6822      	ldr	r2, [r4, #0]
 80098d8:	9303      	str	r3, [sp, #12]
 80098da:	2b00      	cmp	r3, #0
 80098dc:	d041      	beq.n	8009962 <_scanf_i+0x172>
 80098de:	6831      	ldr	r1, [r6, #0]
 80098e0:	6963      	ldr	r3, [r4, #20]
 80098e2:	7808      	ldrb	r0, [r1, #0]
 80098e4:	5c1b      	ldrb	r3, [r3, r0]
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	d03b      	beq.n	8009962 <_scanf_i+0x172>
 80098ea:	2830      	cmp	r0, #48	; 0x30
 80098ec:	d129      	bne.n	8009942 <_scanf_i+0x152>
 80098ee:	2380      	movs	r3, #128	; 0x80
 80098f0:	011b      	lsls	r3, r3, #4
 80098f2:	421a      	tst	r2, r3
 80098f4:	d025      	beq.n	8009942 <_scanf_i+0x152>
 80098f6:	9b04      	ldr	r3, [sp, #16]
 80098f8:	3701      	adds	r7, #1
 80098fa:	2b00      	cmp	r3, #0
 80098fc:	d005      	beq.n	800990a <_scanf_i+0x11a>
 80098fe:	001a      	movs	r2, r3
 8009900:	9b03      	ldr	r3, [sp, #12]
 8009902:	3a01      	subs	r2, #1
 8009904:	3301      	adds	r3, #1
 8009906:	9204      	str	r2, [sp, #16]
 8009908:	60a3      	str	r3, [r4, #8]
 800990a:	6873      	ldr	r3, [r6, #4]
 800990c:	3b01      	subs	r3, #1
 800990e:	6073      	str	r3, [r6, #4]
 8009910:	2b00      	cmp	r3, #0
 8009912:	dd1d      	ble.n	8009950 <_scanf_i+0x160>
 8009914:	6833      	ldr	r3, [r6, #0]
 8009916:	3301      	adds	r3, #1
 8009918:	6033      	str	r3, [r6, #0]
 800991a:	68a3      	ldr	r3, [r4, #8]
 800991c:	3b01      	subs	r3, #1
 800991e:	60a3      	str	r3, [r4, #8]
 8009920:	e7d8      	b.n	80098d4 <_scanf_i+0xe4>
 8009922:	2f02      	cmp	r7, #2
 8009924:	d1a8      	bne.n	8009878 <_scanf_i+0x88>
 8009926:	21c0      	movs	r1, #192	; 0xc0
 8009928:	2380      	movs	r3, #128	; 0x80
 800992a:	6822      	ldr	r2, [r4, #0]
 800992c:	00c9      	lsls	r1, r1, #3
 800992e:	4011      	ands	r1, r2
 8009930:	009b      	lsls	r3, r3, #2
 8009932:	4299      	cmp	r1, r3
 8009934:	d1bf      	bne.n	80098b6 <_scanf_i+0xc6>
 8009936:	3bf1      	subs	r3, #241	; 0xf1
 8009938:	3bff      	subs	r3, #255	; 0xff
 800993a:	6063      	str	r3, [r4, #4]
 800993c:	33f0      	adds	r3, #240	; 0xf0
 800993e:	4313      	orrs	r3, r2
 8009940:	e799      	b.n	8009876 <_scanf_i+0x86>
 8009942:	4b2c      	ldr	r3, [pc, #176]	; (80099f4 <_scanf_i+0x204>)
 8009944:	4013      	ands	r3, r2
 8009946:	6023      	str	r3, [r4, #0]
 8009948:	780b      	ldrb	r3, [r1, #0]
 800994a:	702b      	strb	r3, [r5, #0]
 800994c:	3501      	adds	r5, #1
 800994e:	e7dc      	b.n	800990a <_scanf_i+0x11a>
 8009950:	23c0      	movs	r3, #192	; 0xc0
 8009952:	005b      	lsls	r3, r3, #1
 8009954:	58e3      	ldr	r3, [r4, r3]
 8009956:	0031      	movs	r1, r6
 8009958:	9805      	ldr	r0, [sp, #20]
 800995a:	9303      	str	r3, [sp, #12]
 800995c:	4798      	blx	r3
 800995e:	2800      	cmp	r0, #0
 8009960:	d0db      	beq.n	800991a <_scanf_i+0x12a>
 8009962:	6823      	ldr	r3, [r4, #0]
 8009964:	05db      	lsls	r3, r3, #23
 8009966:	d50e      	bpl.n	8009986 <_scanf_i+0x196>
 8009968:	9b01      	ldr	r3, [sp, #4]
 800996a:	429d      	cmp	r5, r3
 800996c:	d907      	bls.n	800997e <_scanf_i+0x18e>
 800996e:	23be      	movs	r3, #190	; 0xbe
 8009970:	3d01      	subs	r5, #1
 8009972:	005b      	lsls	r3, r3, #1
 8009974:	0032      	movs	r2, r6
 8009976:	7829      	ldrb	r1, [r5, #0]
 8009978:	58e3      	ldr	r3, [r4, r3]
 800997a:	9805      	ldr	r0, [sp, #20]
 800997c:	4798      	blx	r3
 800997e:	9b01      	ldr	r3, [sp, #4]
 8009980:	2001      	movs	r0, #1
 8009982:	429d      	cmp	r5, r3
 8009984:	d029      	beq.n	80099da <_scanf_i+0x1ea>
 8009986:	6821      	ldr	r1, [r4, #0]
 8009988:	2310      	movs	r3, #16
 800998a:	000a      	movs	r2, r1
 800998c:	401a      	ands	r2, r3
 800998e:	4219      	tst	r1, r3
 8009990:	d11c      	bne.n	80099cc <_scanf_i+0x1dc>
 8009992:	702a      	strb	r2, [r5, #0]
 8009994:	6863      	ldr	r3, [r4, #4]
 8009996:	9901      	ldr	r1, [sp, #4]
 8009998:	9805      	ldr	r0, [sp, #20]
 800999a:	9e06      	ldr	r6, [sp, #24]
 800999c:	47b0      	blx	r6
 800999e:	9b02      	ldr	r3, [sp, #8]
 80099a0:	6821      	ldr	r1, [r4, #0]
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	068a      	lsls	r2, r1, #26
 80099a6:	d507      	bpl.n	80099b8 <_scanf_i+0x1c8>
 80099a8:	1d1a      	adds	r2, r3, #4
 80099aa:	9902      	ldr	r1, [sp, #8]
 80099ac:	600a      	str	r2, [r1, #0]
 80099ae:	681b      	ldr	r3, [r3, #0]
 80099b0:	6018      	str	r0, [r3, #0]
 80099b2:	e008      	b.n	80099c6 <_scanf_i+0x1d6>
 80099b4:	2700      	movs	r7, #0
 80099b6:	e7d4      	b.n	8009962 <_scanf_i+0x172>
 80099b8:	1d1a      	adds	r2, r3, #4
 80099ba:	07ce      	lsls	r6, r1, #31
 80099bc:	d5f5      	bpl.n	80099aa <_scanf_i+0x1ba>
 80099be:	9902      	ldr	r1, [sp, #8]
 80099c0:	600a      	str	r2, [r1, #0]
 80099c2:	681b      	ldr	r3, [r3, #0]
 80099c4:	8018      	strh	r0, [r3, #0]
 80099c6:	68e3      	ldr	r3, [r4, #12]
 80099c8:	3301      	adds	r3, #1
 80099ca:	60e3      	str	r3, [r4, #12]
 80099cc:	2000      	movs	r0, #0
 80099ce:	9b01      	ldr	r3, [sp, #4]
 80099d0:	1aed      	subs	r5, r5, r3
 80099d2:	6923      	ldr	r3, [r4, #16]
 80099d4:	19ef      	adds	r7, r5, r7
 80099d6:	19df      	adds	r7, r3, r7
 80099d8:	6127      	str	r7, [r4, #16]
 80099da:	b00d      	add	sp, #52	; 0x34
 80099dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099de:	46c0      	nop			; (mov r8, r8)
 80099e0:	0800a440 	.word	0x0800a440
 80099e4:	08006e75 	.word	0x08006e75
 80099e8:	08009bdd 	.word	0x08009bdd
 80099ec:	fffffaff 	.word	0xfffffaff
 80099f0:	0800ab16 	.word	0x0800ab16
 80099f4:	fffff6ff 	.word	0xfffff6ff

080099f8 <_read_r>:
 80099f8:	b570      	push	{r4, r5, r6, lr}
 80099fa:	0004      	movs	r4, r0
 80099fc:	0008      	movs	r0, r1
 80099fe:	0011      	movs	r1, r2
 8009a00:	001a      	movs	r2, r3
 8009a02:	2300      	movs	r3, #0
 8009a04:	4d05      	ldr	r5, [pc, #20]	; (8009a1c <_read_r+0x24>)
 8009a06:	602b      	str	r3, [r5, #0]
 8009a08:	f7fa fd54 	bl	80044b4 <_read>
 8009a0c:	1c43      	adds	r3, r0, #1
 8009a0e:	d103      	bne.n	8009a18 <_read_r+0x20>
 8009a10:	682b      	ldr	r3, [r5, #0]
 8009a12:	2b00      	cmp	r3, #0
 8009a14:	d000      	beq.n	8009a18 <_read_r+0x20>
 8009a16:	6023      	str	r3, [r4, #0]
 8009a18:	bd70      	pop	{r4, r5, r6, pc}
 8009a1a:	46c0      	nop			; (mov r8, r8)
 8009a1c:	200003d0 	.word	0x200003d0

08009a20 <nan>:
 8009a20:	2000      	movs	r0, #0
 8009a22:	4901      	ldr	r1, [pc, #4]	; (8009a28 <nan+0x8>)
 8009a24:	4770      	bx	lr
 8009a26:	46c0      	nop			; (mov r8, r8)
 8009a28:	7ff80000 	.word	0x7ff80000

08009a2c <__sccl>:
 8009a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a2e:	780b      	ldrb	r3, [r1, #0]
 8009a30:	0004      	movs	r4, r0
 8009a32:	2b5e      	cmp	r3, #94	; 0x5e
 8009a34:	d00c      	beq.n	8009a50 <__sccl+0x24>
 8009a36:	1c48      	adds	r0, r1, #1
 8009a38:	2100      	movs	r1, #0
 8009a3a:	0022      	movs	r2, r4
 8009a3c:	1c65      	adds	r5, r4, #1
 8009a3e:	35ff      	adds	r5, #255	; 0xff
 8009a40:	7011      	strb	r1, [r2, #0]
 8009a42:	3201      	adds	r2, #1
 8009a44:	42aa      	cmp	r2, r5
 8009a46:	d1fb      	bne.n	8009a40 <__sccl+0x14>
 8009a48:	2b00      	cmp	r3, #0
 8009a4a:	d105      	bne.n	8009a58 <__sccl+0x2c>
 8009a4c:	3801      	subs	r0, #1
 8009a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a50:	784b      	ldrb	r3, [r1, #1]
 8009a52:	1c88      	adds	r0, r1, #2
 8009a54:	2101      	movs	r1, #1
 8009a56:	e7f0      	b.n	8009a3a <__sccl+0xe>
 8009a58:	2201      	movs	r2, #1
 8009a5a:	262d      	movs	r6, #45	; 0x2d
 8009a5c:	4051      	eors	r1, r2
 8009a5e:	0002      	movs	r2, r0
 8009a60:	54e1      	strb	r1, [r4, r3]
 8009a62:	7815      	ldrb	r5, [r2, #0]
 8009a64:	1c50      	adds	r0, r2, #1
 8009a66:	2d2d      	cmp	r5, #45	; 0x2d
 8009a68:	d009      	beq.n	8009a7e <__sccl+0x52>
 8009a6a:	2d5d      	cmp	r5, #93	; 0x5d
 8009a6c:	d0ef      	beq.n	8009a4e <__sccl+0x22>
 8009a6e:	2d00      	cmp	r5, #0
 8009a70:	d101      	bne.n	8009a76 <__sccl+0x4a>
 8009a72:	0010      	movs	r0, r2
 8009a74:	e7eb      	b.n	8009a4e <__sccl+0x22>
 8009a76:	002b      	movs	r3, r5
 8009a78:	e7f1      	b.n	8009a5e <__sccl+0x32>
 8009a7a:	0033      	movs	r3, r6
 8009a7c:	e7ef      	b.n	8009a5e <__sccl+0x32>
 8009a7e:	7855      	ldrb	r5, [r2, #1]
 8009a80:	2d5d      	cmp	r5, #93	; 0x5d
 8009a82:	d0fa      	beq.n	8009a7a <__sccl+0x4e>
 8009a84:	42ab      	cmp	r3, r5
 8009a86:	dcf8      	bgt.n	8009a7a <__sccl+0x4e>
 8009a88:	0018      	movs	r0, r3
 8009a8a:	3202      	adds	r2, #2
 8009a8c:	3001      	adds	r0, #1
 8009a8e:	5421      	strb	r1, [r4, r0]
 8009a90:	4285      	cmp	r5, r0
 8009a92:	dcfb      	bgt.n	8009a8c <__sccl+0x60>
 8009a94:	2000      	movs	r0, #0
 8009a96:	1c5f      	adds	r7, r3, #1
 8009a98:	42ab      	cmp	r3, r5
 8009a9a:	da01      	bge.n	8009aa0 <__sccl+0x74>
 8009a9c:	1ae8      	subs	r0, r5, r3
 8009a9e:	3801      	subs	r0, #1
 8009aa0:	183b      	adds	r3, r7, r0
 8009aa2:	e7de      	b.n	8009a62 <__sccl+0x36>

08009aa4 <strncmp>:
 8009aa4:	b530      	push	{r4, r5, lr}
 8009aa6:	0005      	movs	r5, r0
 8009aa8:	1e10      	subs	r0, r2, #0
 8009aaa:	d008      	beq.n	8009abe <strncmp+0x1a>
 8009aac:	2400      	movs	r4, #0
 8009aae:	3a01      	subs	r2, #1
 8009ab0:	5d2b      	ldrb	r3, [r5, r4]
 8009ab2:	5d08      	ldrb	r0, [r1, r4]
 8009ab4:	4283      	cmp	r3, r0
 8009ab6:	d101      	bne.n	8009abc <strncmp+0x18>
 8009ab8:	4294      	cmp	r4, r2
 8009aba:	d101      	bne.n	8009ac0 <strncmp+0x1c>
 8009abc:	1a18      	subs	r0, r3, r0
 8009abe:	bd30      	pop	{r4, r5, pc}
 8009ac0:	3401      	adds	r4, #1
 8009ac2:	2b00      	cmp	r3, #0
 8009ac4:	d1f4      	bne.n	8009ab0 <strncmp+0xc>
 8009ac6:	e7f9      	b.n	8009abc <strncmp+0x18>

08009ac8 <_strtoul_l.constprop.0>:
 8009ac8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009aca:	b087      	sub	sp, #28
 8009acc:	9202      	str	r2, [sp, #8]
 8009ace:	4a42      	ldr	r2, [pc, #264]	; (8009bd8 <_strtoul_l.constprop.0+0x110>)
 8009ad0:	001e      	movs	r6, r3
 8009ad2:	9101      	str	r1, [sp, #4]
 8009ad4:	000b      	movs	r3, r1
 8009ad6:	4694      	mov	ip, r2
 8009ad8:	2108      	movs	r1, #8
 8009ada:	9005      	str	r0, [sp, #20]
 8009adc:	001a      	movs	r2, r3
 8009ade:	4660      	mov	r0, ip
 8009ae0:	7814      	ldrb	r4, [r2, #0]
 8009ae2:	3301      	adds	r3, #1
 8009ae4:	5d00      	ldrb	r0, [r0, r4]
 8009ae6:	001d      	movs	r5, r3
 8009ae8:	0007      	movs	r7, r0
 8009aea:	400f      	ands	r7, r1
 8009aec:	4208      	tst	r0, r1
 8009aee:	d1f5      	bne.n	8009adc <_strtoul_l.constprop.0+0x14>
 8009af0:	2c2d      	cmp	r4, #45	; 0x2d
 8009af2:	d13a      	bne.n	8009b6a <_strtoul_l.constprop.0+0xa2>
 8009af4:	2701      	movs	r7, #1
 8009af6:	781c      	ldrb	r4, [r3, #0]
 8009af8:	1c95      	adds	r5, r2, #2
 8009afa:	2e00      	cmp	r6, #0
 8009afc:	d067      	beq.n	8009bce <_strtoul_l.constprop.0+0x106>
 8009afe:	2e10      	cmp	r6, #16
 8009b00:	d109      	bne.n	8009b16 <_strtoul_l.constprop.0+0x4e>
 8009b02:	2c30      	cmp	r4, #48	; 0x30
 8009b04:	d107      	bne.n	8009b16 <_strtoul_l.constprop.0+0x4e>
 8009b06:	2220      	movs	r2, #32
 8009b08:	782b      	ldrb	r3, [r5, #0]
 8009b0a:	4393      	bics	r3, r2
 8009b0c:	2b58      	cmp	r3, #88	; 0x58
 8009b0e:	d159      	bne.n	8009bc4 <_strtoul_l.constprop.0+0xfc>
 8009b10:	2610      	movs	r6, #16
 8009b12:	786c      	ldrb	r4, [r5, #1]
 8009b14:	3502      	adds	r5, #2
 8009b16:	2001      	movs	r0, #1
 8009b18:	0031      	movs	r1, r6
 8009b1a:	4240      	negs	r0, r0
 8009b1c:	f7f6 fb16 	bl	800014c <__udivsi3>
 8009b20:	9003      	str	r0, [sp, #12]
 8009b22:	2001      	movs	r0, #1
 8009b24:	0031      	movs	r1, r6
 8009b26:	4240      	negs	r0, r0
 8009b28:	f7f6 fb96 	bl	8000258 <__aeabi_uidivmod>
 8009b2c:	2300      	movs	r3, #0
 8009b2e:	9104      	str	r1, [sp, #16]
 8009b30:	2101      	movs	r1, #1
 8009b32:	2201      	movs	r2, #1
 8009b34:	0018      	movs	r0, r3
 8009b36:	468c      	mov	ip, r1
 8009b38:	4252      	negs	r2, r2
 8009b3a:	0021      	movs	r1, r4
 8009b3c:	3930      	subs	r1, #48	; 0x30
 8009b3e:	2909      	cmp	r1, #9
 8009b40:	d818      	bhi.n	8009b74 <_strtoul_l.constprop.0+0xac>
 8009b42:	000c      	movs	r4, r1
 8009b44:	42a6      	cmp	r6, r4
 8009b46:	dd23      	ble.n	8009b90 <_strtoul_l.constprop.0+0xc8>
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	db1f      	blt.n	8009b8c <_strtoul_l.constprop.0+0xc4>
 8009b4c:	9903      	ldr	r1, [sp, #12]
 8009b4e:	0013      	movs	r3, r2
 8009b50:	4281      	cmp	r1, r0
 8009b52:	d307      	bcc.n	8009b64 <_strtoul_l.constprop.0+0x9c>
 8009b54:	d103      	bne.n	8009b5e <_strtoul_l.constprop.0+0x96>
 8009b56:	9904      	ldr	r1, [sp, #16]
 8009b58:	0013      	movs	r3, r2
 8009b5a:	42a1      	cmp	r1, r4
 8009b5c:	db02      	blt.n	8009b64 <_strtoul_l.constprop.0+0x9c>
 8009b5e:	4663      	mov	r3, ip
 8009b60:	4370      	muls	r0, r6
 8009b62:	1820      	adds	r0, r4, r0
 8009b64:	782c      	ldrb	r4, [r5, #0]
 8009b66:	3501      	adds	r5, #1
 8009b68:	e7e7      	b.n	8009b3a <_strtoul_l.constprop.0+0x72>
 8009b6a:	2c2b      	cmp	r4, #43	; 0x2b
 8009b6c:	d1c5      	bne.n	8009afa <_strtoul_l.constprop.0+0x32>
 8009b6e:	781c      	ldrb	r4, [r3, #0]
 8009b70:	1c95      	adds	r5, r2, #2
 8009b72:	e7c2      	b.n	8009afa <_strtoul_l.constprop.0+0x32>
 8009b74:	0021      	movs	r1, r4
 8009b76:	3941      	subs	r1, #65	; 0x41
 8009b78:	2919      	cmp	r1, #25
 8009b7a:	d801      	bhi.n	8009b80 <_strtoul_l.constprop.0+0xb8>
 8009b7c:	3c37      	subs	r4, #55	; 0x37
 8009b7e:	e7e1      	b.n	8009b44 <_strtoul_l.constprop.0+0x7c>
 8009b80:	0021      	movs	r1, r4
 8009b82:	3961      	subs	r1, #97	; 0x61
 8009b84:	2919      	cmp	r1, #25
 8009b86:	d803      	bhi.n	8009b90 <_strtoul_l.constprop.0+0xc8>
 8009b88:	3c57      	subs	r4, #87	; 0x57
 8009b8a:	e7db      	b.n	8009b44 <_strtoul_l.constprop.0+0x7c>
 8009b8c:	0013      	movs	r3, r2
 8009b8e:	e7e9      	b.n	8009b64 <_strtoul_l.constprop.0+0x9c>
 8009b90:	2b00      	cmp	r3, #0
 8009b92:	da09      	bge.n	8009ba8 <_strtoul_l.constprop.0+0xe0>
 8009b94:	2322      	movs	r3, #34	; 0x22
 8009b96:	2001      	movs	r0, #1
 8009b98:	9a05      	ldr	r2, [sp, #20]
 8009b9a:	4240      	negs	r0, r0
 8009b9c:	6013      	str	r3, [r2, #0]
 8009b9e:	9b02      	ldr	r3, [sp, #8]
 8009ba0:	2b00      	cmp	r3, #0
 8009ba2:	d109      	bne.n	8009bb8 <_strtoul_l.constprop.0+0xf0>
 8009ba4:	b007      	add	sp, #28
 8009ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ba8:	2f00      	cmp	r7, #0
 8009baa:	d000      	beq.n	8009bae <_strtoul_l.constprop.0+0xe6>
 8009bac:	4240      	negs	r0, r0
 8009bae:	9a02      	ldr	r2, [sp, #8]
 8009bb0:	2a00      	cmp	r2, #0
 8009bb2:	d0f7      	beq.n	8009ba4 <_strtoul_l.constprop.0+0xdc>
 8009bb4:	2b00      	cmp	r3, #0
 8009bb6:	d001      	beq.n	8009bbc <_strtoul_l.constprop.0+0xf4>
 8009bb8:	1e6b      	subs	r3, r5, #1
 8009bba:	9301      	str	r3, [sp, #4]
 8009bbc:	9b02      	ldr	r3, [sp, #8]
 8009bbe:	9a01      	ldr	r2, [sp, #4]
 8009bc0:	601a      	str	r2, [r3, #0]
 8009bc2:	e7ef      	b.n	8009ba4 <_strtoul_l.constprop.0+0xdc>
 8009bc4:	2430      	movs	r4, #48	; 0x30
 8009bc6:	2e00      	cmp	r6, #0
 8009bc8:	d1a5      	bne.n	8009b16 <_strtoul_l.constprop.0+0x4e>
 8009bca:	3608      	adds	r6, #8
 8009bcc:	e7a3      	b.n	8009b16 <_strtoul_l.constprop.0+0x4e>
 8009bce:	2c30      	cmp	r4, #48	; 0x30
 8009bd0:	d099      	beq.n	8009b06 <_strtoul_l.constprop.0+0x3e>
 8009bd2:	260a      	movs	r6, #10
 8009bd4:	e79f      	b.n	8009b16 <_strtoul_l.constprop.0+0x4e>
 8009bd6:	46c0      	nop			; (mov r8, r8)
 8009bd8:	0800a7b1 	.word	0x0800a7b1

08009bdc <_strtoul_r>:
 8009bdc:	b510      	push	{r4, lr}
 8009bde:	f7ff ff73 	bl	8009ac8 <_strtoul_l.constprop.0>
 8009be2:	bd10      	pop	{r4, pc}

08009be4 <__submore>:
 8009be4:	000b      	movs	r3, r1
 8009be6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009be8:	6b4d      	ldr	r5, [r1, #52]	; 0x34
 8009bea:	3344      	adds	r3, #68	; 0x44
 8009bec:	000c      	movs	r4, r1
 8009bee:	429d      	cmp	r5, r3
 8009bf0:	d11c      	bne.n	8009c2c <__submore+0x48>
 8009bf2:	2680      	movs	r6, #128	; 0x80
 8009bf4:	00f6      	lsls	r6, r6, #3
 8009bf6:	0031      	movs	r1, r6
 8009bf8:	f7fb fc4c 	bl	8005494 <_malloc_r>
 8009bfc:	2800      	cmp	r0, #0
 8009bfe:	d102      	bne.n	8009c06 <__submore+0x22>
 8009c00:	2001      	movs	r0, #1
 8009c02:	4240      	negs	r0, r0
 8009c04:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009c06:	0023      	movs	r3, r4
 8009c08:	6360      	str	r0, [r4, #52]	; 0x34
 8009c0a:	63a6      	str	r6, [r4, #56]	; 0x38
 8009c0c:	3346      	adds	r3, #70	; 0x46
 8009c0e:	781a      	ldrb	r2, [r3, #0]
 8009c10:	4b10      	ldr	r3, [pc, #64]	; (8009c54 <__submore+0x70>)
 8009c12:	54c2      	strb	r2, [r0, r3]
 8009c14:	0023      	movs	r3, r4
 8009c16:	3345      	adds	r3, #69	; 0x45
 8009c18:	781a      	ldrb	r2, [r3, #0]
 8009c1a:	4b0f      	ldr	r3, [pc, #60]	; (8009c58 <__submore+0x74>)
 8009c1c:	54c2      	strb	r2, [r0, r3]
 8009c1e:	782a      	ldrb	r2, [r5, #0]
 8009c20:	4b0e      	ldr	r3, [pc, #56]	; (8009c5c <__submore+0x78>)
 8009c22:	54c2      	strb	r2, [r0, r3]
 8009c24:	18c0      	adds	r0, r0, r3
 8009c26:	6020      	str	r0, [r4, #0]
 8009c28:	2000      	movs	r0, #0
 8009c2a:	e7eb      	b.n	8009c04 <__submore+0x20>
 8009c2c:	6b8e      	ldr	r6, [r1, #56]	; 0x38
 8009c2e:	0029      	movs	r1, r5
 8009c30:	0073      	lsls	r3, r6, #1
 8009c32:	001a      	movs	r2, r3
 8009c34:	9301      	str	r3, [sp, #4]
 8009c36:	f000 fb48 	bl	800a2ca <_realloc_r>
 8009c3a:	1e05      	subs	r5, r0, #0
 8009c3c:	d0e0      	beq.n	8009c00 <__submore+0x1c>
 8009c3e:	1987      	adds	r7, r0, r6
 8009c40:	0001      	movs	r1, r0
 8009c42:	0032      	movs	r2, r6
 8009c44:	0038      	movs	r0, r7
 8009c46:	f7fe fbc8 	bl	80083da <memcpy>
 8009c4a:	9b01      	ldr	r3, [sp, #4]
 8009c4c:	6027      	str	r7, [r4, #0]
 8009c4e:	6365      	str	r5, [r4, #52]	; 0x34
 8009c50:	63a3      	str	r3, [r4, #56]	; 0x38
 8009c52:	e7e9      	b.n	8009c28 <__submore+0x44>
 8009c54:	000003ff 	.word	0x000003ff
 8009c58:	000003fe 	.word	0x000003fe
 8009c5c:	000003fd 	.word	0x000003fd

08009c60 <__swbuf_r>:
 8009c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009c62:	0005      	movs	r5, r0
 8009c64:	000e      	movs	r6, r1
 8009c66:	0014      	movs	r4, r2
 8009c68:	2800      	cmp	r0, #0
 8009c6a:	d004      	beq.n	8009c76 <__swbuf_r+0x16>
 8009c6c:	6983      	ldr	r3, [r0, #24]
 8009c6e:	2b00      	cmp	r3, #0
 8009c70:	d101      	bne.n	8009c76 <__swbuf_r+0x16>
 8009c72:	f000 fa07 	bl	800a084 <__sinit>
 8009c76:	4b22      	ldr	r3, [pc, #136]	; (8009d00 <__swbuf_r+0xa0>)
 8009c78:	429c      	cmp	r4, r3
 8009c7a:	d12e      	bne.n	8009cda <__swbuf_r+0x7a>
 8009c7c:	686c      	ldr	r4, [r5, #4]
 8009c7e:	69a3      	ldr	r3, [r4, #24]
 8009c80:	60a3      	str	r3, [r4, #8]
 8009c82:	89a3      	ldrh	r3, [r4, #12]
 8009c84:	071b      	lsls	r3, r3, #28
 8009c86:	d532      	bpl.n	8009cee <__swbuf_r+0x8e>
 8009c88:	6923      	ldr	r3, [r4, #16]
 8009c8a:	2b00      	cmp	r3, #0
 8009c8c:	d02f      	beq.n	8009cee <__swbuf_r+0x8e>
 8009c8e:	6823      	ldr	r3, [r4, #0]
 8009c90:	6922      	ldr	r2, [r4, #16]
 8009c92:	b2f7      	uxtb	r7, r6
 8009c94:	1a98      	subs	r0, r3, r2
 8009c96:	6963      	ldr	r3, [r4, #20]
 8009c98:	b2f6      	uxtb	r6, r6
 8009c9a:	4283      	cmp	r3, r0
 8009c9c:	dc05      	bgt.n	8009caa <__swbuf_r+0x4a>
 8009c9e:	0021      	movs	r1, r4
 8009ca0:	0028      	movs	r0, r5
 8009ca2:	f000 f94d 	bl	8009f40 <_fflush_r>
 8009ca6:	2800      	cmp	r0, #0
 8009ca8:	d127      	bne.n	8009cfa <__swbuf_r+0x9a>
 8009caa:	68a3      	ldr	r3, [r4, #8]
 8009cac:	3001      	adds	r0, #1
 8009cae:	3b01      	subs	r3, #1
 8009cb0:	60a3      	str	r3, [r4, #8]
 8009cb2:	6823      	ldr	r3, [r4, #0]
 8009cb4:	1c5a      	adds	r2, r3, #1
 8009cb6:	6022      	str	r2, [r4, #0]
 8009cb8:	701f      	strb	r7, [r3, #0]
 8009cba:	6963      	ldr	r3, [r4, #20]
 8009cbc:	4283      	cmp	r3, r0
 8009cbe:	d004      	beq.n	8009cca <__swbuf_r+0x6a>
 8009cc0:	89a3      	ldrh	r3, [r4, #12]
 8009cc2:	07db      	lsls	r3, r3, #31
 8009cc4:	d507      	bpl.n	8009cd6 <__swbuf_r+0x76>
 8009cc6:	2e0a      	cmp	r6, #10
 8009cc8:	d105      	bne.n	8009cd6 <__swbuf_r+0x76>
 8009cca:	0021      	movs	r1, r4
 8009ccc:	0028      	movs	r0, r5
 8009cce:	f000 f937 	bl	8009f40 <_fflush_r>
 8009cd2:	2800      	cmp	r0, #0
 8009cd4:	d111      	bne.n	8009cfa <__swbuf_r+0x9a>
 8009cd6:	0030      	movs	r0, r6
 8009cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009cda:	4b0a      	ldr	r3, [pc, #40]	; (8009d04 <__swbuf_r+0xa4>)
 8009cdc:	429c      	cmp	r4, r3
 8009cde:	d101      	bne.n	8009ce4 <__swbuf_r+0x84>
 8009ce0:	68ac      	ldr	r4, [r5, #8]
 8009ce2:	e7cc      	b.n	8009c7e <__swbuf_r+0x1e>
 8009ce4:	4b08      	ldr	r3, [pc, #32]	; (8009d08 <__swbuf_r+0xa8>)
 8009ce6:	429c      	cmp	r4, r3
 8009ce8:	d1c9      	bne.n	8009c7e <__swbuf_r+0x1e>
 8009cea:	68ec      	ldr	r4, [r5, #12]
 8009cec:	e7c7      	b.n	8009c7e <__swbuf_r+0x1e>
 8009cee:	0021      	movs	r1, r4
 8009cf0:	0028      	movs	r0, r5
 8009cf2:	f000 f819 	bl	8009d28 <__swsetup_r>
 8009cf6:	2800      	cmp	r0, #0
 8009cf8:	d0c9      	beq.n	8009c8e <__swbuf_r+0x2e>
 8009cfa:	2601      	movs	r6, #1
 8009cfc:	4276      	negs	r6, r6
 8009cfe:	e7ea      	b.n	8009cd6 <__swbuf_r+0x76>
 8009d00:	0800ab48 	.word	0x0800ab48
 8009d04:	0800ab68 	.word	0x0800ab68
 8009d08:	0800ab28 	.word	0x0800ab28

08009d0c <__ascii_wctomb>:
 8009d0c:	0003      	movs	r3, r0
 8009d0e:	1e08      	subs	r0, r1, #0
 8009d10:	d005      	beq.n	8009d1e <__ascii_wctomb+0x12>
 8009d12:	2aff      	cmp	r2, #255	; 0xff
 8009d14:	d904      	bls.n	8009d20 <__ascii_wctomb+0x14>
 8009d16:	228a      	movs	r2, #138	; 0x8a
 8009d18:	2001      	movs	r0, #1
 8009d1a:	601a      	str	r2, [r3, #0]
 8009d1c:	4240      	negs	r0, r0
 8009d1e:	4770      	bx	lr
 8009d20:	2001      	movs	r0, #1
 8009d22:	700a      	strb	r2, [r1, #0]
 8009d24:	e7fb      	b.n	8009d1e <__ascii_wctomb+0x12>
	...

08009d28 <__swsetup_r>:
 8009d28:	4b37      	ldr	r3, [pc, #220]	; (8009e08 <__swsetup_r+0xe0>)
 8009d2a:	b570      	push	{r4, r5, r6, lr}
 8009d2c:	681d      	ldr	r5, [r3, #0]
 8009d2e:	0006      	movs	r6, r0
 8009d30:	000c      	movs	r4, r1
 8009d32:	2d00      	cmp	r5, #0
 8009d34:	d005      	beq.n	8009d42 <__swsetup_r+0x1a>
 8009d36:	69ab      	ldr	r3, [r5, #24]
 8009d38:	2b00      	cmp	r3, #0
 8009d3a:	d102      	bne.n	8009d42 <__swsetup_r+0x1a>
 8009d3c:	0028      	movs	r0, r5
 8009d3e:	f000 f9a1 	bl	800a084 <__sinit>
 8009d42:	4b32      	ldr	r3, [pc, #200]	; (8009e0c <__swsetup_r+0xe4>)
 8009d44:	429c      	cmp	r4, r3
 8009d46:	d10f      	bne.n	8009d68 <__swsetup_r+0x40>
 8009d48:	686c      	ldr	r4, [r5, #4]
 8009d4a:	230c      	movs	r3, #12
 8009d4c:	5ee2      	ldrsh	r2, [r4, r3]
 8009d4e:	b293      	uxth	r3, r2
 8009d50:	0711      	lsls	r1, r2, #28
 8009d52:	d42d      	bmi.n	8009db0 <__swsetup_r+0x88>
 8009d54:	06d9      	lsls	r1, r3, #27
 8009d56:	d411      	bmi.n	8009d7c <__swsetup_r+0x54>
 8009d58:	2309      	movs	r3, #9
 8009d5a:	2001      	movs	r0, #1
 8009d5c:	6033      	str	r3, [r6, #0]
 8009d5e:	3337      	adds	r3, #55	; 0x37
 8009d60:	4313      	orrs	r3, r2
 8009d62:	81a3      	strh	r3, [r4, #12]
 8009d64:	4240      	negs	r0, r0
 8009d66:	bd70      	pop	{r4, r5, r6, pc}
 8009d68:	4b29      	ldr	r3, [pc, #164]	; (8009e10 <__swsetup_r+0xe8>)
 8009d6a:	429c      	cmp	r4, r3
 8009d6c:	d101      	bne.n	8009d72 <__swsetup_r+0x4a>
 8009d6e:	68ac      	ldr	r4, [r5, #8]
 8009d70:	e7eb      	b.n	8009d4a <__swsetup_r+0x22>
 8009d72:	4b28      	ldr	r3, [pc, #160]	; (8009e14 <__swsetup_r+0xec>)
 8009d74:	429c      	cmp	r4, r3
 8009d76:	d1e8      	bne.n	8009d4a <__swsetup_r+0x22>
 8009d78:	68ec      	ldr	r4, [r5, #12]
 8009d7a:	e7e6      	b.n	8009d4a <__swsetup_r+0x22>
 8009d7c:	075b      	lsls	r3, r3, #29
 8009d7e:	d513      	bpl.n	8009da8 <__swsetup_r+0x80>
 8009d80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009d82:	2900      	cmp	r1, #0
 8009d84:	d008      	beq.n	8009d98 <__swsetup_r+0x70>
 8009d86:	0023      	movs	r3, r4
 8009d88:	3344      	adds	r3, #68	; 0x44
 8009d8a:	4299      	cmp	r1, r3
 8009d8c:	d002      	beq.n	8009d94 <__swsetup_r+0x6c>
 8009d8e:	0030      	movs	r0, r6
 8009d90:	f7fb fb14 	bl	80053bc <_free_r>
 8009d94:	2300      	movs	r3, #0
 8009d96:	6363      	str	r3, [r4, #52]	; 0x34
 8009d98:	2224      	movs	r2, #36	; 0x24
 8009d9a:	89a3      	ldrh	r3, [r4, #12]
 8009d9c:	4393      	bics	r3, r2
 8009d9e:	81a3      	strh	r3, [r4, #12]
 8009da0:	2300      	movs	r3, #0
 8009da2:	6063      	str	r3, [r4, #4]
 8009da4:	6923      	ldr	r3, [r4, #16]
 8009da6:	6023      	str	r3, [r4, #0]
 8009da8:	2308      	movs	r3, #8
 8009daa:	89a2      	ldrh	r2, [r4, #12]
 8009dac:	4313      	orrs	r3, r2
 8009dae:	81a3      	strh	r3, [r4, #12]
 8009db0:	6923      	ldr	r3, [r4, #16]
 8009db2:	2b00      	cmp	r3, #0
 8009db4:	d10b      	bne.n	8009dce <__swsetup_r+0xa6>
 8009db6:	21a0      	movs	r1, #160	; 0xa0
 8009db8:	2280      	movs	r2, #128	; 0x80
 8009dba:	89a3      	ldrh	r3, [r4, #12]
 8009dbc:	0089      	lsls	r1, r1, #2
 8009dbe:	0092      	lsls	r2, r2, #2
 8009dc0:	400b      	ands	r3, r1
 8009dc2:	4293      	cmp	r3, r2
 8009dc4:	d003      	beq.n	8009dce <__swsetup_r+0xa6>
 8009dc6:	0021      	movs	r1, r4
 8009dc8:	0030      	movs	r0, r6
 8009dca:	f000 fa27 	bl	800a21c <__smakebuf_r>
 8009dce:	220c      	movs	r2, #12
 8009dd0:	5ea3      	ldrsh	r3, [r4, r2]
 8009dd2:	2001      	movs	r0, #1
 8009dd4:	001a      	movs	r2, r3
 8009dd6:	b299      	uxth	r1, r3
 8009dd8:	4002      	ands	r2, r0
 8009dda:	4203      	tst	r3, r0
 8009ddc:	d00f      	beq.n	8009dfe <__swsetup_r+0xd6>
 8009dde:	2200      	movs	r2, #0
 8009de0:	60a2      	str	r2, [r4, #8]
 8009de2:	6962      	ldr	r2, [r4, #20]
 8009de4:	4252      	negs	r2, r2
 8009de6:	61a2      	str	r2, [r4, #24]
 8009de8:	2000      	movs	r0, #0
 8009dea:	6922      	ldr	r2, [r4, #16]
 8009dec:	4282      	cmp	r2, r0
 8009dee:	d1ba      	bne.n	8009d66 <__swsetup_r+0x3e>
 8009df0:	060a      	lsls	r2, r1, #24
 8009df2:	d5b8      	bpl.n	8009d66 <__swsetup_r+0x3e>
 8009df4:	2240      	movs	r2, #64	; 0x40
 8009df6:	4313      	orrs	r3, r2
 8009df8:	81a3      	strh	r3, [r4, #12]
 8009dfa:	3801      	subs	r0, #1
 8009dfc:	e7b3      	b.n	8009d66 <__swsetup_r+0x3e>
 8009dfe:	0788      	lsls	r0, r1, #30
 8009e00:	d400      	bmi.n	8009e04 <__swsetup_r+0xdc>
 8009e02:	6962      	ldr	r2, [r4, #20]
 8009e04:	60a2      	str	r2, [r4, #8]
 8009e06:	e7ef      	b.n	8009de8 <__swsetup_r+0xc0>
 8009e08:	2000009c 	.word	0x2000009c
 8009e0c:	0800ab48 	.word	0x0800ab48
 8009e10:	0800ab68 	.word	0x0800ab68
 8009e14:	0800ab28 	.word	0x0800ab28

08009e18 <abort>:
 8009e18:	2006      	movs	r0, #6
 8009e1a:	b510      	push	{r4, lr}
 8009e1c:	f000 faae 	bl	800a37c <raise>
 8009e20:	2001      	movs	r0, #1
 8009e22:	f7fa fb41 	bl	80044a8 <_exit>
	...

08009e28 <__sflush_r>:
 8009e28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009e2a:	898b      	ldrh	r3, [r1, #12]
 8009e2c:	0005      	movs	r5, r0
 8009e2e:	000c      	movs	r4, r1
 8009e30:	071a      	lsls	r2, r3, #28
 8009e32:	d45f      	bmi.n	8009ef4 <__sflush_r+0xcc>
 8009e34:	684a      	ldr	r2, [r1, #4]
 8009e36:	2a00      	cmp	r2, #0
 8009e38:	dc04      	bgt.n	8009e44 <__sflush_r+0x1c>
 8009e3a:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8009e3c:	2a00      	cmp	r2, #0
 8009e3e:	dc01      	bgt.n	8009e44 <__sflush_r+0x1c>
 8009e40:	2000      	movs	r0, #0
 8009e42:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009e44:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8009e46:	2f00      	cmp	r7, #0
 8009e48:	d0fa      	beq.n	8009e40 <__sflush_r+0x18>
 8009e4a:	2200      	movs	r2, #0
 8009e4c:	2180      	movs	r1, #128	; 0x80
 8009e4e:	682e      	ldr	r6, [r5, #0]
 8009e50:	602a      	str	r2, [r5, #0]
 8009e52:	001a      	movs	r2, r3
 8009e54:	0149      	lsls	r1, r1, #5
 8009e56:	400a      	ands	r2, r1
 8009e58:	420b      	tst	r3, r1
 8009e5a:	d034      	beq.n	8009ec6 <__sflush_r+0x9e>
 8009e5c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009e5e:	89a3      	ldrh	r3, [r4, #12]
 8009e60:	075b      	lsls	r3, r3, #29
 8009e62:	d506      	bpl.n	8009e72 <__sflush_r+0x4a>
 8009e64:	6863      	ldr	r3, [r4, #4]
 8009e66:	1ac0      	subs	r0, r0, r3
 8009e68:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8009e6a:	2b00      	cmp	r3, #0
 8009e6c:	d001      	beq.n	8009e72 <__sflush_r+0x4a>
 8009e6e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009e70:	1ac0      	subs	r0, r0, r3
 8009e72:	0002      	movs	r2, r0
 8009e74:	6a21      	ldr	r1, [r4, #32]
 8009e76:	2300      	movs	r3, #0
 8009e78:	0028      	movs	r0, r5
 8009e7a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8009e7c:	47b8      	blx	r7
 8009e7e:	89a1      	ldrh	r1, [r4, #12]
 8009e80:	1c43      	adds	r3, r0, #1
 8009e82:	d106      	bne.n	8009e92 <__sflush_r+0x6a>
 8009e84:	682b      	ldr	r3, [r5, #0]
 8009e86:	2b1d      	cmp	r3, #29
 8009e88:	d831      	bhi.n	8009eee <__sflush_r+0xc6>
 8009e8a:	4a2c      	ldr	r2, [pc, #176]	; (8009f3c <__sflush_r+0x114>)
 8009e8c:	40da      	lsrs	r2, r3
 8009e8e:	07d3      	lsls	r3, r2, #31
 8009e90:	d52d      	bpl.n	8009eee <__sflush_r+0xc6>
 8009e92:	2300      	movs	r3, #0
 8009e94:	6063      	str	r3, [r4, #4]
 8009e96:	6923      	ldr	r3, [r4, #16]
 8009e98:	6023      	str	r3, [r4, #0]
 8009e9a:	04cb      	lsls	r3, r1, #19
 8009e9c:	d505      	bpl.n	8009eaa <__sflush_r+0x82>
 8009e9e:	1c43      	adds	r3, r0, #1
 8009ea0:	d102      	bne.n	8009ea8 <__sflush_r+0x80>
 8009ea2:	682b      	ldr	r3, [r5, #0]
 8009ea4:	2b00      	cmp	r3, #0
 8009ea6:	d100      	bne.n	8009eaa <__sflush_r+0x82>
 8009ea8:	6560      	str	r0, [r4, #84]	; 0x54
 8009eaa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009eac:	602e      	str	r6, [r5, #0]
 8009eae:	2900      	cmp	r1, #0
 8009eb0:	d0c6      	beq.n	8009e40 <__sflush_r+0x18>
 8009eb2:	0023      	movs	r3, r4
 8009eb4:	3344      	adds	r3, #68	; 0x44
 8009eb6:	4299      	cmp	r1, r3
 8009eb8:	d002      	beq.n	8009ec0 <__sflush_r+0x98>
 8009eba:	0028      	movs	r0, r5
 8009ebc:	f7fb fa7e 	bl	80053bc <_free_r>
 8009ec0:	2000      	movs	r0, #0
 8009ec2:	6360      	str	r0, [r4, #52]	; 0x34
 8009ec4:	e7bd      	b.n	8009e42 <__sflush_r+0x1a>
 8009ec6:	2301      	movs	r3, #1
 8009ec8:	0028      	movs	r0, r5
 8009eca:	6a21      	ldr	r1, [r4, #32]
 8009ecc:	47b8      	blx	r7
 8009ece:	1c43      	adds	r3, r0, #1
 8009ed0:	d1c5      	bne.n	8009e5e <__sflush_r+0x36>
 8009ed2:	682b      	ldr	r3, [r5, #0]
 8009ed4:	2b00      	cmp	r3, #0
 8009ed6:	d0c2      	beq.n	8009e5e <__sflush_r+0x36>
 8009ed8:	2b1d      	cmp	r3, #29
 8009eda:	d001      	beq.n	8009ee0 <__sflush_r+0xb8>
 8009edc:	2b16      	cmp	r3, #22
 8009ede:	d101      	bne.n	8009ee4 <__sflush_r+0xbc>
 8009ee0:	602e      	str	r6, [r5, #0]
 8009ee2:	e7ad      	b.n	8009e40 <__sflush_r+0x18>
 8009ee4:	2340      	movs	r3, #64	; 0x40
 8009ee6:	89a2      	ldrh	r2, [r4, #12]
 8009ee8:	4313      	orrs	r3, r2
 8009eea:	81a3      	strh	r3, [r4, #12]
 8009eec:	e7a9      	b.n	8009e42 <__sflush_r+0x1a>
 8009eee:	2340      	movs	r3, #64	; 0x40
 8009ef0:	430b      	orrs	r3, r1
 8009ef2:	e7fa      	b.n	8009eea <__sflush_r+0xc2>
 8009ef4:	690f      	ldr	r7, [r1, #16]
 8009ef6:	2f00      	cmp	r7, #0
 8009ef8:	d0a2      	beq.n	8009e40 <__sflush_r+0x18>
 8009efa:	680a      	ldr	r2, [r1, #0]
 8009efc:	600f      	str	r7, [r1, #0]
 8009efe:	1bd2      	subs	r2, r2, r7
 8009f00:	9201      	str	r2, [sp, #4]
 8009f02:	2200      	movs	r2, #0
 8009f04:	079b      	lsls	r3, r3, #30
 8009f06:	d100      	bne.n	8009f0a <__sflush_r+0xe2>
 8009f08:	694a      	ldr	r2, [r1, #20]
 8009f0a:	60a2      	str	r2, [r4, #8]
 8009f0c:	9b01      	ldr	r3, [sp, #4]
 8009f0e:	2b00      	cmp	r3, #0
 8009f10:	dc00      	bgt.n	8009f14 <__sflush_r+0xec>
 8009f12:	e795      	b.n	8009e40 <__sflush_r+0x18>
 8009f14:	003a      	movs	r2, r7
 8009f16:	0028      	movs	r0, r5
 8009f18:	9b01      	ldr	r3, [sp, #4]
 8009f1a:	6a21      	ldr	r1, [r4, #32]
 8009f1c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009f1e:	47b0      	blx	r6
 8009f20:	2800      	cmp	r0, #0
 8009f22:	dc06      	bgt.n	8009f32 <__sflush_r+0x10a>
 8009f24:	2340      	movs	r3, #64	; 0x40
 8009f26:	2001      	movs	r0, #1
 8009f28:	89a2      	ldrh	r2, [r4, #12]
 8009f2a:	4240      	negs	r0, r0
 8009f2c:	4313      	orrs	r3, r2
 8009f2e:	81a3      	strh	r3, [r4, #12]
 8009f30:	e787      	b.n	8009e42 <__sflush_r+0x1a>
 8009f32:	9b01      	ldr	r3, [sp, #4]
 8009f34:	183f      	adds	r7, r7, r0
 8009f36:	1a1b      	subs	r3, r3, r0
 8009f38:	9301      	str	r3, [sp, #4]
 8009f3a:	e7e7      	b.n	8009f0c <__sflush_r+0xe4>
 8009f3c:	20400001 	.word	0x20400001

08009f40 <_fflush_r>:
 8009f40:	690b      	ldr	r3, [r1, #16]
 8009f42:	b570      	push	{r4, r5, r6, lr}
 8009f44:	0005      	movs	r5, r0
 8009f46:	000c      	movs	r4, r1
 8009f48:	2b00      	cmp	r3, #0
 8009f4a:	d102      	bne.n	8009f52 <_fflush_r+0x12>
 8009f4c:	2500      	movs	r5, #0
 8009f4e:	0028      	movs	r0, r5
 8009f50:	bd70      	pop	{r4, r5, r6, pc}
 8009f52:	2800      	cmp	r0, #0
 8009f54:	d004      	beq.n	8009f60 <_fflush_r+0x20>
 8009f56:	6983      	ldr	r3, [r0, #24]
 8009f58:	2b00      	cmp	r3, #0
 8009f5a:	d101      	bne.n	8009f60 <_fflush_r+0x20>
 8009f5c:	f000 f892 	bl	800a084 <__sinit>
 8009f60:	4b14      	ldr	r3, [pc, #80]	; (8009fb4 <_fflush_r+0x74>)
 8009f62:	429c      	cmp	r4, r3
 8009f64:	d11b      	bne.n	8009f9e <_fflush_r+0x5e>
 8009f66:	686c      	ldr	r4, [r5, #4]
 8009f68:	220c      	movs	r2, #12
 8009f6a:	5ea3      	ldrsh	r3, [r4, r2]
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	d0ed      	beq.n	8009f4c <_fflush_r+0xc>
 8009f70:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8009f72:	07d2      	lsls	r2, r2, #31
 8009f74:	d404      	bmi.n	8009f80 <_fflush_r+0x40>
 8009f76:	059b      	lsls	r3, r3, #22
 8009f78:	d402      	bmi.n	8009f80 <_fflush_r+0x40>
 8009f7a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f7c:	f000 f923 	bl	800a1c6 <__retarget_lock_acquire_recursive>
 8009f80:	0028      	movs	r0, r5
 8009f82:	0021      	movs	r1, r4
 8009f84:	f7ff ff50 	bl	8009e28 <__sflush_r>
 8009f88:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009f8a:	0005      	movs	r5, r0
 8009f8c:	07db      	lsls	r3, r3, #31
 8009f8e:	d4de      	bmi.n	8009f4e <_fflush_r+0xe>
 8009f90:	89a3      	ldrh	r3, [r4, #12]
 8009f92:	059b      	lsls	r3, r3, #22
 8009f94:	d4db      	bmi.n	8009f4e <_fflush_r+0xe>
 8009f96:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f98:	f000 f916 	bl	800a1c8 <__retarget_lock_release_recursive>
 8009f9c:	e7d7      	b.n	8009f4e <_fflush_r+0xe>
 8009f9e:	4b06      	ldr	r3, [pc, #24]	; (8009fb8 <_fflush_r+0x78>)
 8009fa0:	429c      	cmp	r4, r3
 8009fa2:	d101      	bne.n	8009fa8 <_fflush_r+0x68>
 8009fa4:	68ac      	ldr	r4, [r5, #8]
 8009fa6:	e7df      	b.n	8009f68 <_fflush_r+0x28>
 8009fa8:	4b04      	ldr	r3, [pc, #16]	; (8009fbc <_fflush_r+0x7c>)
 8009faa:	429c      	cmp	r4, r3
 8009fac:	d1dc      	bne.n	8009f68 <_fflush_r+0x28>
 8009fae:	68ec      	ldr	r4, [r5, #12]
 8009fb0:	e7da      	b.n	8009f68 <_fflush_r+0x28>
 8009fb2:	46c0      	nop			; (mov r8, r8)
 8009fb4:	0800ab48 	.word	0x0800ab48
 8009fb8:	0800ab68 	.word	0x0800ab68
 8009fbc:	0800ab28 	.word	0x0800ab28

08009fc0 <std>:
 8009fc0:	2300      	movs	r3, #0
 8009fc2:	b510      	push	{r4, lr}
 8009fc4:	0004      	movs	r4, r0
 8009fc6:	6003      	str	r3, [r0, #0]
 8009fc8:	6043      	str	r3, [r0, #4]
 8009fca:	6083      	str	r3, [r0, #8]
 8009fcc:	8181      	strh	r1, [r0, #12]
 8009fce:	6643      	str	r3, [r0, #100]	; 0x64
 8009fd0:	0019      	movs	r1, r3
 8009fd2:	81c2      	strh	r2, [r0, #14]
 8009fd4:	6103      	str	r3, [r0, #16]
 8009fd6:	6143      	str	r3, [r0, #20]
 8009fd8:	6183      	str	r3, [r0, #24]
 8009fda:	2208      	movs	r2, #8
 8009fdc:	305c      	adds	r0, #92	; 0x5c
 8009fde:	f7fb f9e5 	bl	80053ac <memset>
 8009fe2:	4b05      	ldr	r3, [pc, #20]	; (8009ff8 <std+0x38>)
 8009fe4:	6224      	str	r4, [r4, #32]
 8009fe6:	6263      	str	r3, [r4, #36]	; 0x24
 8009fe8:	4b04      	ldr	r3, [pc, #16]	; (8009ffc <std+0x3c>)
 8009fea:	62a3      	str	r3, [r4, #40]	; 0x28
 8009fec:	4b04      	ldr	r3, [pc, #16]	; (800a000 <std+0x40>)
 8009fee:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009ff0:	4b04      	ldr	r3, [pc, #16]	; (800a004 <std+0x44>)
 8009ff2:	6323      	str	r3, [r4, #48]	; 0x30
 8009ff4:	bd10      	pop	{r4, pc}
 8009ff6:	46c0      	nop			; (mov r8, r8)
 8009ff8:	08005f11 	.word	0x08005f11
 8009ffc:	08005f3d 	.word	0x08005f3d
 800a000:	08005f75 	.word	0x08005f75
 800a004:	08005fa1 	.word	0x08005fa1

0800a008 <_cleanup_r>:
 800a008:	b510      	push	{r4, lr}
 800a00a:	4902      	ldr	r1, [pc, #8]	; (800a014 <_cleanup_r+0xc>)
 800a00c:	f000 f8ba 	bl	800a184 <_fwalk_reent>
 800a010:	bd10      	pop	{r4, pc}
 800a012:	46c0      	nop			; (mov r8, r8)
 800a014:	08009f41 	.word	0x08009f41

0800a018 <__sfmoreglue>:
 800a018:	b570      	push	{r4, r5, r6, lr}
 800a01a:	2568      	movs	r5, #104	; 0x68
 800a01c:	1e4a      	subs	r2, r1, #1
 800a01e:	4355      	muls	r5, r2
 800a020:	000e      	movs	r6, r1
 800a022:	0029      	movs	r1, r5
 800a024:	3174      	adds	r1, #116	; 0x74
 800a026:	f7fb fa35 	bl	8005494 <_malloc_r>
 800a02a:	1e04      	subs	r4, r0, #0
 800a02c:	d008      	beq.n	800a040 <__sfmoreglue+0x28>
 800a02e:	2100      	movs	r1, #0
 800a030:	002a      	movs	r2, r5
 800a032:	6001      	str	r1, [r0, #0]
 800a034:	6046      	str	r6, [r0, #4]
 800a036:	300c      	adds	r0, #12
 800a038:	60a0      	str	r0, [r4, #8]
 800a03a:	3268      	adds	r2, #104	; 0x68
 800a03c:	f7fb f9b6 	bl	80053ac <memset>
 800a040:	0020      	movs	r0, r4
 800a042:	bd70      	pop	{r4, r5, r6, pc}

0800a044 <__sfp_lock_acquire>:
 800a044:	b510      	push	{r4, lr}
 800a046:	4802      	ldr	r0, [pc, #8]	; (800a050 <__sfp_lock_acquire+0xc>)
 800a048:	f000 f8bd 	bl	800a1c6 <__retarget_lock_acquire_recursive>
 800a04c:	bd10      	pop	{r4, pc}
 800a04e:	46c0      	nop			; (mov r8, r8)
 800a050:	200003d5 	.word	0x200003d5

0800a054 <__sfp_lock_release>:
 800a054:	b510      	push	{r4, lr}
 800a056:	4802      	ldr	r0, [pc, #8]	; (800a060 <__sfp_lock_release+0xc>)
 800a058:	f000 f8b6 	bl	800a1c8 <__retarget_lock_release_recursive>
 800a05c:	bd10      	pop	{r4, pc}
 800a05e:	46c0      	nop			; (mov r8, r8)
 800a060:	200003d5 	.word	0x200003d5

0800a064 <__sinit_lock_acquire>:
 800a064:	b510      	push	{r4, lr}
 800a066:	4802      	ldr	r0, [pc, #8]	; (800a070 <__sinit_lock_acquire+0xc>)
 800a068:	f000 f8ad 	bl	800a1c6 <__retarget_lock_acquire_recursive>
 800a06c:	bd10      	pop	{r4, pc}
 800a06e:	46c0      	nop			; (mov r8, r8)
 800a070:	200003d6 	.word	0x200003d6

0800a074 <__sinit_lock_release>:
 800a074:	b510      	push	{r4, lr}
 800a076:	4802      	ldr	r0, [pc, #8]	; (800a080 <__sinit_lock_release+0xc>)
 800a078:	f000 f8a6 	bl	800a1c8 <__retarget_lock_release_recursive>
 800a07c:	bd10      	pop	{r4, pc}
 800a07e:	46c0      	nop			; (mov r8, r8)
 800a080:	200003d6 	.word	0x200003d6

0800a084 <__sinit>:
 800a084:	b513      	push	{r0, r1, r4, lr}
 800a086:	0004      	movs	r4, r0
 800a088:	f7ff ffec 	bl	800a064 <__sinit_lock_acquire>
 800a08c:	69a3      	ldr	r3, [r4, #24]
 800a08e:	2b00      	cmp	r3, #0
 800a090:	d002      	beq.n	800a098 <__sinit+0x14>
 800a092:	f7ff ffef 	bl	800a074 <__sinit_lock_release>
 800a096:	bd13      	pop	{r0, r1, r4, pc}
 800a098:	64a3      	str	r3, [r4, #72]	; 0x48
 800a09a:	64e3      	str	r3, [r4, #76]	; 0x4c
 800a09c:	6523      	str	r3, [r4, #80]	; 0x50
 800a09e:	4b13      	ldr	r3, [pc, #76]	; (800a0ec <__sinit+0x68>)
 800a0a0:	4a13      	ldr	r2, [pc, #76]	; (800a0f0 <__sinit+0x6c>)
 800a0a2:	681b      	ldr	r3, [r3, #0]
 800a0a4:	62a2      	str	r2, [r4, #40]	; 0x28
 800a0a6:	9301      	str	r3, [sp, #4]
 800a0a8:	42a3      	cmp	r3, r4
 800a0aa:	d101      	bne.n	800a0b0 <__sinit+0x2c>
 800a0ac:	2301      	movs	r3, #1
 800a0ae:	61a3      	str	r3, [r4, #24]
 800a0b0:	0020      	movs	r0, r4
 800a0b2:	f000 f81f 	bl	800a0f4 <__sfp>
 800a0b6:	6060      	str	r0, [r4, #4]
 800a0b8:	0020      	movs	r0, r4
 800a0ba:	f000 f81b 	bl	800a0f4 <__sfp>
 800a0be:	60a0      	str	r0, [r4, #8]
 800a0c0:	0020      	movs	r0, r4
 800a0c2:	f000 f817 	bl	800a0f4 <__sfp>
 800a0c6:	2200      	movs	r2, #0
 800a0c8:	2104      	movs	r1, #4
 800a0ca:	60e0      	str	r0, [r4, #12]
 800a0cc:	6860      	ldr	r0, [r4, #4]
 800a0ce:	f7ff ff77 	bl	8009fc0 <std>
 800a0d2:	2201      	movs	r2, #1
 800a0d4:	2109      	movs	r1, #9
 800a0d6:	68a0      	ldr	r0, [r4, #8]
 800a0d8:	f7ff ff72 	bl	8009fc0 <std>
 800a0dc:	2202      	movs	r2, #2
 800a0de:	2112      	movs	r1, #18
 800a0e0:	68e0      	ldr	r0, [r4, #12]
 800a0e2:	f7ff ff6d 	bl	8009fc0 <std>
 800a0e6:	2301      	movs	r3, #1
 800a0e8:	61a3      	str	r3, [r4, #24]
 800a0ea:	e7d2      	b.n	800a092 <__sinit+0xe>
 800a0ec:	0800a678 	.word	0x0800a678
 800a0f0:	0800a009 	.word	0x0800a009

0800a0f4 <__sfp>:
 800a0f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a0f6:	0007      	movs	r7, r0
 800a0f8:	f7ff ffa4 	bl	800a044 <__sfp_lock_acquire>
 800a0fc:	4b1f      	ldr	r3, [pc, #124]	; (800a17c <__sfp+0x88>)
 800a0fe:	681e      	ldr	r6, [r3, #0]
 800a100:	69b3      	ldr	r3, [r6, #24]
 800a102:	2b00      	cmp	r3, #0
 800a104:	d102      	bne.n	800a10c <__sfp+0x18>
 800a106:	0030      	movs	r0, r6
 800a108:	f7ff ffbc 	bl	800a084 <__sinit>
 800a10c:	3648      	adds	r6, #72	; 0x48
 800a10e:	68b4      	ldr	r4, [r6, #8]
 800a110:	6873      	ldr	r3, [r6, #4]
 800a112:	3b01      	subs	r3, #1
 800a114:	d504      	bpl.n	800a120 <__sfp+0x2c>
 800a116:	6833      	ldr	r3, [r6, #0]
 800a118:	2b00      	cmp	r3, #0
 800a11a:	d022      	beq.n	800a162 <__sfp+0x6e>
 800a11c:	6836      	ldr	r6, [r6, #0]
 800a11e:	e7f6      	b.n	800a10e <__sfp+0x1a>
 800a120:	220c      	movs	r2, #12
 800a122:	5ea5      	ldrsh	r5, [r4, r2]
 800a124:	2d00      	cmp	r5, #0
 800a126:	d11a      	bne.n	800a15e <__sfp+0x6a>
 800a128:	0020      	movs	r0, r4
 800a12a:	4b15      	ldr	r3, [pc, #84]	; (800a180 <__sfp+0x8c>)
 800a12c:	3058      	adds	r0, #88	; 0x58
 800a12e:	60e3      	str	r3, [r4, #12]
 800a130:	6665      	str	r5, [r4, #100]	; 0x64
 800a132:	f000 f847 	bl	800a1c4 <__retarget_lock_init_recursive>
 800a136:	f7ff ff8d 	bl	800a054 <__sfp_lock_release>
 800a13a:	0020      	movs	r0, r4
 800a13c:	2208      	movs	r2, #8
 800a13e:	0029      	movs	r1, r5
 800a140:	6025      	str	r5, [r4, #0]
 800a142:	60a5      	str	r5, [r4, #8]
 800a144:	6065      	str	r5, [r4, #4]
 800a146:	6125      	str	r5, [r4, #16]
 800a148:	6165      	str	r5, [r4, #20]
 800a14a:	61a5      	str	r5, [r4, #24]
 800a14c:	305c      	adds	r0, #92	; 0x5c
 800a14e:	f7fb f92d 	bl	80053ac <memset>
 800a152:	6365      	str	r5, [r4, #52]	; 0x34
 800a154:	63a5      	str	r5, [r4, #56]	; 0x38
 800a156:	64a5      	str	r5, [r4, #72]	; 0x48
 800a158:	64e5      	str	r5, [r4, #76]	; 0x4c
 800a15a:	0020      	movs	r0, r4
 800a15c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a15e:	3468      	adds	r4, #104	; 0x68
 800a160:	e7d7      	b.n	800a112 <__sfp+0x1e>
 800a162:	2104      	movs	r1, #4
 800a164:	0038      	movs	r0, r7
 800a166:	f7ff ff57 	bl	800a018 <__sfmoreglue>
 800a16a:	1e04      	subs	r4, r0, #0
 800a16c:	6030      	str	r0, [r6, #0]
 800a16e:	d1d5      	bne.n	800a11c <__sfp+0x28>
 800a170:	f7ff ff70 	bl	800a054 <__sfp_lock_release>
 800a174:	230c      	movs	r3, #12
 800a176:	603b      	str	r3, [r7, #0]
 800a178:	e7ef      	b.n	800a15a <__sfp+0x66>
 800a17a:	46c0      	nop			; (mov r8, r8)
 800a17c:	0800a678 	.word	0x0800a678
 800a180:	ffff0001 	.word	0xffff0001

0800a184 <_fwalk_reent>:
 800a184:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a186:	0004      	movs	r4, r0
 800a188:	0006      	movs	r6, r0
 800a18a:	2700      	movs	r7, #0
 800a18c:	9101      	str	r1, [sp, #4]
 800a18e:	3448      	adds	r4, #72	; 0x48
 800a190:	6863      	ldr	r3, [r4, #4]
 800a192:	68a5      	ldr	r5, [r4, #8]
 800a194:	9300      	str	r3, [sp, #0]
 800a196:	9b00      	ldr	r3, [sp, #0]
 800a198:	3b01      	subs	r3, #1
 800a19a:	9300      	str	r3, [sp, #0]
 800a19c:	d504      	bpl.n	800a1a8 <_fwalk_reent+0x24>
 800a19e:	6824      	ldr	r4, [r4, #0]
 800a1a0:	2c00      	cmp	r4, #0
 800a1a2:	d1f5      	bne.n	800a190 <_fwalk_reent+0xc>
 800a1a4:	0038      	movs	r0, r7
 800a1a6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a1a8:	89ab      	ldrh	r3, [r5, #12]
 800a1aa:	2b01      	cmp	r3, #1
 800a1ac:	d908      	bls.n	800a1c0 <_fwalk_reent+0x3c>
 800a1ae:	220e      	movs	r2, #14
 800a1b0:	5eab      	ldrsh	r3, [r5, r2]
 800a1b2:	3301      	adds	r3, #1
 800a1b4:	d004      	beq.n	800a1c0 <_fwalk_reent+0x3c>
 800a1b6:	0029      	movs	r1, r5
 800a1b8:	0030      	movs	r0, r6
 800a1ba:	9b01      	ldr	r3, [sp, #4]
 800a1bc:	4798      	blx	r3
 800a1be:	4307      	orrs	r7, r0
 800a1c0:	3568      	adds	r5, #104	; 0x68
 800a1c2:	e7e8      	b.n	800a196 <_fwalk_reent+0x12>

0800a1c4 <__retarget_lock_init_recursive>:
 800a1c4:	4770      	bx	lr

0800a1c6 <__retarget_lock_acquire_recursive>:
 800a1c6:	4770      	bx	lr

0800a1c8 <__retarget_lock_release_recursive>:
 800a1c8:	4770      	bx	lr
	...

0800a1cc <__swhatbuf_r>:
 800a1cc:	b570      	push	{r4, r5, r6, lr}
 800a1ce:	000e      	movs	r6, r1
 800a1d0:	001d      	movs	r5, r3
 800a1d2:	230e      	movs	r3, #14
 800a1d4:	5ec9      	ldrsh	r1, [r1, r3]
 800a1d6:	0014      	movs	r4, r2
 800a1d8:	b096      	sub	sp, #88	; 0x58
 800a1da:	2900      	cmp	r1, #0
 800a1dc:	da08      	bge.n	800a1f0 <__swhatbuf_r+0x24>
 800a1de:	220c      	movs	r2, #12
 800a1e0:	5eb3      	ldrsh	r3, [r6, r2]
 800a1e2:	2200      	movs	r2, #0
 800a1e4:	602a      	str	r2, [r5, #0]
 800a1e6:	061b      	lsls	r3, r3, #24
 800a1e8:	d411      	bmi.n	800a20e <__swhatbuf_r+0x42>
 800a1ea:	2380      	movs	r3, #128	; 0x80
 800a1ec:	00db      	lsls	r3, r3, #3
 800a1ee:	e00f      	b.n	800a210 <__swhatbuf_r+0x44>
 800a1f0:	466a      	mov	r2, sp
 800a1f2:	f000 f8e3 	bl	800a3bc <_fstat_r>
 800a1f6:	2800      	cmp	r0, #0
 800a1f8:	dbf1      	blt.n	800a1de <__swhatbuf_r+0x12>
 800a1fa:	23f0      	movs	r3, #240	; 0xf0
 800a1fc:	9901      	ldr	r1, [sp, #4]
 800a1fe:	021b      	lsls	r3, r3, #8
 800a200:	4019      	ands	r1, r3
 800a202:	4b05      	ldr	r3, [pc, #20]	; (800a218 <__swhatbuf_r+0x4c>)
 800a204:	18c9      	adds	r1, r1, r3
 800a206:	424b      	negs	r3, r1
 800a208:	4159      	adcs	r1, r3
 800a20a:	6029      	str	r1, [r5, #0]
 800a20c:	e7ed      	b.n	800a1ea <__swhatbuf_r+0x1e>
 800a20e:	2340      	movs	r3, #64	; 0x40
 800a210:	2000      	movs	r0, #0
 800a212:	6023      	str	r3, [r4, #0]
 800a214:	b016      	add	sp, #88	; 0x58
 800a216:	bd70      	pop	{r4, r5, r6, pc}
 800a218:	ffffe000 	.word	0xffffe000

0800a21c <__smakebuf_r>:
 800a21c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a21e:	2602      	movs	r6, #2
 800a220:	898b      	ldrh	r3, [r1, #12]
 800a222:	0005      	movs	r5, r0
 800a224:	000c      	movs	r4, r1
 800a226:	4233      	tst	r3, r6
 800a228:	d006      	beq.n	800a238 <__smakebuf_r+0x1c>
 800a22a:	0023      	movs	r3, r4
 800a22c:	3347      	adds	r3, #71	; 0x47
 800a22e:	6023      	str	r3, [r4, #0]
 800a230:	6123      	str	r3, [r4, #16]
 800a232:	2301      	movs	r3, #1
 800a234:	6163      	str	r3, [r4, #20]
 800a236:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800a238:	466a      	mov	r2, sp
 800a23a:	ab01      	add	r3, sp, #4
 800a23c:	f7ff ffc6 	bl	800a1cc <__swhatbuf_r>
 800a240:	9900      	ldr	r1, [sp, #0]
 800a242:	0007      	movs	r7, r0
 800a244:	0028      	movs	r0, r5
 800a246:	f7fb f925 	bl	8005494 <_malloc_r>
 800a24a:	2800      	cmp	r0, #0
 800a24c:	d108      	bne.n	800a260 <__smakebuf_r+0x44>
 800a24e:	220c      	movs	r2, #12
 800a250:	5ea3      	ldrsh	r3, [r4, r2]
 800a252:	059a      	lsls	r2, r3, #22
 800a254:	d4ef      	bmi.n	800a236 <__smakebuf_r+0x1a>
 800a256:	2203      	movs	r2, #3
 800a258:	4393      	bics	r3, r2
 800a25a:	431e      	orrs	r6, r3
 800a25c:	81a6      	strh	r6, [r4, #12]
 800a25e:	e7e4      	b.n	800a22a <__smakebuf_r+0xe>
 800a260:	4b0f      	ldr	r3, [pc, #60]	; (800a2a0 <__smakebuf_r+0x84>)
 800a262:	62ab      	str	r3, [r5, #40]	; 0x28
 800a264:	2380      	movs	r3, #128	; 0x80
 800a266:	89a2      	ldrh	r2, [r4, #12]
 800a268:	6020      	str	r0, [r4, #0]
 800a26a:	4313      	orrs	r3, r2
 800a26c:	81a3      	strh	r3, [r4, #12]
 800a26e:	9b00      	ldr	r3, [sp, #0]
 800a270:	6120      	str	r0, [r4, #16]
 800a272:	6163      	str	r3, [r4, #20]
 800a274:	9b01      	ldr	r3, [sp, #4]
 800a276:	2b00      	cmp	r3, #0
 800a278:	d00d      	beq.n	800a296 <__smakebuf_r+0x7a>
 800a27a:	0028      	movs	r0, r5
 800a27c:	230e      	movs	r3, #14
 800a27e:	5ee1      	ldrsh	r1, [r4, r3]
 800a280:	f000 f8ae 	bl	800a3e0 <_isatty_r>
 800a284:	2800      	cmp	r0, #0
 800a286:	d006      	beq.n	800a296 <__smakebuf_r+0x7a>
 800a288:	2203      	movs	r2, #3
 800a28a:	89a3      	ldrh	r3, [r4, #12]
 800a28c:	4393      	bics	r3, r2
 800a28e:	001a      	movs	r2, r3
 800a290:	2301      	movs	r3, #1
 800a292:	4313      	orrs	r3, r2
 800a294:	81a3      	strh	r3, [r4, #12]
 800a296:	89a0      	ldrh	r0, [r4, #12]
 800a298:	4307      	orrs	r7, r0
 800a29a:	81a7      	strh	r7, [r4, #12]
 800a29c:	e7cb      	b.n	800a236 <__smakebuf_r+0x1a>
 800a29e:	46c0      	nop			; (mov r8, r8)
 800a2a0:	0800a009 	.word	0x0800a009

0800a2a4 <memmove>:
 800a2a4:	b510      	push	{r4, lr}
 800a2a6:	4288      	cmp	r0, r1
 800a2a8:	d902      	bls.n	800a2b0 <memmove+0xc>
 800a2aa:	188b      	adds	r3, r1, r2
 800a2ac:	4298      	cmp	r0, r3
 800a2ae:	d303      	bcc.n	800a2b8 <memmove+0x14>
 800a2b0:	2300      	movs	r3, #0
 800a2b2:	e007      	b.n	800a2c4 <memmove+0x20>
 800a2b4:	5c8b      	ldrb	r3, [r1, r2]
 800a2b6:	5483      	strb	r3, [r0, r2]
 800a2b8:	3a01      	subs	r2, #1
 800a2ba:	d2fb      	bcs.n	800a2b4 <memmove+0x10>
 800a2bc:	bd10      	pop	{r4, pc}
 800a2be:	5ccc      	ldrb	r4, [r1, r3]
 800a2c0:	54c4      	strb	r4, [r0, r3]
 800a2c2:	3301      	adds	r3, #1
 800a2c4:	429a      	cmp	r2, r3
 800a2c6:	d1fa      	bne.n	800a2be <memmove+0x1a>
 800a2c8:	e7f8      	b.n	800a2bc <memmove+0x18>

0800a2ca <_realloc_r>:
 800a2ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a2cc:	0007      	movs	r7, r0
 800a2ce:	000e      	movs	r6, r1
 800a2d0:	0014      	movs	r4, r2
 800a2d2:	2900      	cmp	r1, #0
 800a2d4:	d105      	bne.n	800a2e2 <_realloc_r+0x18>
 800a2d6:	0011      	movs	r1, r2
 800a2d8:	f7fb f8dc 	bl	8005494 <_malloc_r>
 800a2dc:	0005      	movs	r5, r0
 800a2de:	0028      	movs	r0, r5
 800a2e0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a2e2:	2a00      	cmp	r2, #0
 800a2e4:	d103      	bne.n	800a2ee <_realloc_r+0x24>
 800a2e6:	f7fb f869 	bl	80053bc <_free_r>
 800a2ea:	0025      	movs	r5, r4
 800a2ec:	e7f7      	b.n	800a2de <_realloc_r+0x14>
 800a2ee:	f000 f889 	bl	800a404 <_malloc_usable_size_r>
 800a2f2:	9001      	str	r0, [sp, #4]
 800a2f4:	4284      	cmp	r4, r0
 800a2f6:	d803      	bhi.n	800a300 <_realloc_r+0x36>
 800a2f8:	0035      	movs	r5, r6
 800a2fa:	0843      	lsrs	r3, r0, #1
 800a2fc:	42a3      	cmp	r3, r4
 800a2fe:	d3ee      	bcc.n	800a2de <_realloc_r+0x14>
 800a300:	0021      	movs	r1, r4
 800a302:	0038      	movs	r0, r7
 800a304:	f7fb f8c6 	bl	8005494 <_malloc_r>
 800a308:	1e05      	subs	r5, r0, #0
 800a30a:	d0e8      	beq.n	800a2de <_realloc_r+0x14>
 800a30c:	9b01      	ldr	r3, [sp, #4]
 800a30e:	0022      	movs	r2, r4
 800a310:	429c      	cmp	r4, r3
 800a312:	d900      	bls.n	800a316 <_realloc_r+0x4c>
 800a314:	001a      	movs	r2, r3
 800a316:	0031      	movs	r1, r6
 800a318:	0028      	movs	r0, r5
 800a31a:	f7fe f85e 	bl	80083da <memcpy>
 800a31e:	0031      	movs	r1, r6
 800a320:	0038      	movs	r0, r7
 800a322:	f7fb f84b 	bl	80053bc <_free_r>
 800a326:	e7da      	b.n	800a2de <_realloc_r+0x14>

0800a328 <_raise_r>:
 800a328:	b570      	push	{r4, r5, r6, lr}
 800a32a:	0004      	movs	r4, r0
 800a32c:	000d      	movs	r5, r1
 800a32e:	291f      	cmp	r1, #31
 800a330:	d904      	bls.n	800a33c <_raise_r+0x14>
 800a332:	2316      	movs	r3, #22
 800a334:	6003      	str	r3, [r0, #0]
 800a336:	2001      	movs	r0, #1
 800a338:	4240      	negs	r0, r0
 800a33a:	bd70      	pop	{r4, r5, r6, pc}
 800a33c:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800a33e:	2b00      	cmp	r3, #0
 800a340:	d004      	beq.n	800a34c <_raise_r+0x24>
 800a342:	008a      	lsls	r2, r1, #2
 800a344:	189b      	adds	r3, r3, r2
 800a346:	681a      	ldr	r2, [r3, #0]
 800a348:	2a00      	cmp	r2, #0
 800a34a:	d108      	bne.n	800a35e <_raise_r+0x36>
 800a34c:	0020      	movs	r0, r4
 800a34e:	f000 f831 	bl	800a3b4 <_getpid_r>
 800a352:	002a      	movs	r2, r5
 800a354:	0001      	movs	r1, r0
 800a356:	0020      	movs	r0, r4
 800a358:	f000 f81a 	bl	800a390 <_kill_r>
 800a35c:	e7ed      	b.n	800a33a <_raise_r+0x12>
 800a35e:	2000      	movs	r0, #0
 800a360:	2a01      	cmp	r2, #1
 800a362:	d0ea      	beq.n	800a33a <_raise_r+0x12>
 800a364:	1c51      	adds	r1, r2, #1
 800a366:	d103      	bne.n	800a370 <_raise_r+0x48>
 800a368:	2316      	movs	r3, #22
 800a36a:	3001      	adds	r0, #1
 800a36c:	6023      	str	r3, [r4, #0]
 800a36e:	e7e4      	b.n	800a33a <_raise_r+0x12>
 800a370:	2400      	movs	r4, #0
 800a372:	0028      	movs	r0, r5
 800a374:	601c      	str	r4, [r3, #0]
 800a376:	4790      	blx	r2
 800a378:	0020      	movs	r0, r4
 800a37a:	e7de      	b.n	800a33a <_raise_r+0x12>

0800a37c <raise>:
 800a37c:	b510      	push	{r4, lr}
 800a37e:	4b03      	ldr	r3, [pc, #12]	; (800a38c <raise+0x10>)
 800a380:	0001      	movs	r1, r0
 800a382:	6818      	ldr	r0, [r3, #0]
 800a384:	f7ff ffd0 	bl	800a328 <_raise_r>
 800a388:	bd10      	pop	{r4, pc}
 800a38a:	46c0      	nop			; (mov r8, r8)
 800a38c:	2000009c 	.word	0x2000009c

0800a390 <_kill_r>:
 800a390:	2300      	movs	r3, #0
 800a392:	b570      	push	{r4, r5, r6, lr}
 800a394:	4d06      	ldr	r5, [pc, #24]	; (800a3b0 <_kill_r+0x20>)
 800a396:	0004      	movs	r4, r0
 800a398:	0008      	movs	r0, r1
 800a39a:	0011      	movs	r1, r2
 800a39c:	602b      	str	r3, [r5, #0]
 800a39e:	f7fa f87b 	bl	8004498 <_kill>
 800a3a2:	1c43      	adds	r3, r0, #1
 800a3a4:	d103      	bne.n	800a3ae <_kill_r+0x1e>
 800a3a6:	682b      	ldr	r3, [r5, #0]
 800a3a8:	2b00      	cmp	r3, #0
 800a3aa:	d000      	beq.n	800a3ae <_kill_r+0x1e>
 800a3ac:	6023      	str	r3, [r4, #0]
 800a3ae:	bd70      	pop	{r4, r5, r6, pc}
 800a3b0:	200003d0 	.word	0x200003d0

0800a3b4 <_getpid_r>:
 800a3b4:	b510      	push	{r4, lr}
 800a3b6:	f7fa f86d 	bl	8004494 <_getpid>
 800a3ba:	bd10      	pop	{r4, pc}

0800a3bc <_fstat_r>:
 800a3bc:	2300      	movs	r3, #0
 800a3be:	b570      	push	{r4, r5, r6, lr}
 800a3c0:	4d06      	ldr	r5, [pc, #24]	; (800a3dc <_fstat_r+0x20>)
 800a3c2:	0004      	movs	r4, r0
 800a3c4:	0008      	movs	r0, r1
 800a3c6:	0011      	movs	r1, r2
 800a3c8:	602b      	str	r3, [r5, #0]
 800a3ca:	f7fa f890 	bl	80044ee <_fstat>
 800a3ce:	1c43      	adds	r3, r0, #1
 800a3d0:	d103      	bne.n	800a3da <_fstat_r+0x1e>
 800a3d2:	682b      	ldr	r3, [r5, #0]
 800a3d4:	2b00      	cmp	r3, #0
 800a3d6:	d000      	beq.n	800a3da <_fstat_r+0x1e>
 800a3d8:	6023      	str	r3, [r4, #0]
 800a3da:	bd70      	pop	{r4, r5, r6, pc}
 800a3dc:	200003d0 	.word	0x200003d0

0800a3e0 <_isatty_r>:
 800a3e0:	2300      	movs	r3, #0
 800a3e2:	b570      	push	{r4, r5, r6, lr}
 800a3e4:	4d06      	ldr	r5, [pc, #24]	; (800a400 <_isatty_r+0x20>)
 800a3e6:	0004      	movs	r4, r0
 800a3e8:	0008      	movs	r0, r1
 800a3ea:	602b      	str	r3, [r5, #0]
 800a3ec:	f7fa f884 	bl	80044f8 <_isatty>
 800a3f0:	1c43      	adds	r3, r0, #1
 800a3f2:	d103      	bne.n	800a3fc <_isatty_r+0x1c>
 800a3f4:	682b      	ldr	r3, [r5, #0]
 800a3f6:	2b00      	cmp	r3, #0
 800a3f8:	d000      	beq.n	800a3fc <_isatty_r+0x1c>
 800a3fa:	6023      	str	r3, [r4, #0]
 800a3fc:	bd70      	pop	{r4, r5, r6, pc}
 800a3fe:	46c0      	nop			; (mov r8, r8)
 800a400:	200003d0 	.word	0x200003d0

0800a404 <_malloc_usable_size_r>:
 800a404:	1f0b      	subs	r3, r1, #4
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	1f18      	subs	r0, r3, #4
 800a40a:	2b00      	cmp	r3, #0
 800a40c:	da01      	bge.n	800a412 <_malloc_usable_size_r+0xe>
 800a40e:	580b      	ldr	r3, [r1, r0]
 800a410:	18c0      	adds	r0, r0, r3
 800a412:	4770      	bx	lr

0800a414 <_init>:
 800a414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a416:	46c0      	nop			; (mov r8, r8)
 800a418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a41a:	bc08      	pop	{r3}
 800a41c:	469e      	mov	lr, r3
 800a41e:	4770      	bx	lr

0800a420 <_fini>:
 800a420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a422:	46c0      	nop			; (mov r8, r8)
 800a424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a426:	bc08      	pop	{r3}
 800a428:	469e      	mov	lr, r3
 800a42a:	4770      	bx	lr
 800a42c:	0000      	movs	r0, r0
	...

0800a430 <__FLASH_Program_Fast_veneer>:
 800a430:	b401      	push	{r0}
 800a432:	4802      	ldr	r0, [pc, #8]	; (800a43c <__FLASH_Program_Fast_veneer+0xc>)
 800a434:	4684      	mov	ip, r0
 800a436:	bc01      	pop	{r0}
 800a438:	4760      	bx	ip
 800a43a:	bf00      	nop
 800a43c:	20000271 	.word	0x20000271

Disassembly of section .data:

20000000 <time10>:
20000000:	00000012 00000026 0000003a              ....&...:...

2000000c <time12>:
2000000c:	00000010 00000024 00000038              ....$...8...

20000018 <time15>:
20000018:	0000000e 00000022 00000036              ...."...6...

20000024 <time17>:
20000024:	0000000c 00000020 00000034              .... ...4...

20000030 <time20>:
20000030:	0000000a 0000001e 00000032              ........2...

2000003c <time30>:
2000003c:	00000008 0000001c 00000030              ........0...

20000048 <time40>:
20000048:	00000006 0000001a 0000002e              ............

20000054 <time80>:
20000054:	00000002 00000016 0000002a              ........*...

20000060 <timeOff1>:
20000060:	00000000 00000014 00000028              ........(...

2000006c <timeOff2>:
2000006c:	00000004 00000018 0000002c              ........,...

20000078 <nmea_delimiter>:
20000078:	0800a5d0 0800a5d4 0800a5d8 0800a5dc     ................
20000088:	0800a5e0 0800a5e4                       ........

20000090 <SystemCoreClock>:
20000090:	00f42400                                .$..

20000094 <uwTickFreq>:
20000094:	00000001                                ....

20000098 <uwTickPrio>:
20000098:	00000004                                ....

2000009c <_impure_ptr>:
2000009c:	200000a0                                ... 

200000a0 <impure_data>:
200000a0:	00000000 0800ab48 0800ab68 0800ab28     ....H...h...(...
	...

20000100 <numempty>:
20000100:	000000ff                                ....

20000104 <__global_locale>:
20000104:	00000043 00000000 00000000 00000000     C...............
	...
20000124:	00000043 00000000 00000000 00000000     C...............
	...
20000144:	00000043 00000000 00000000 00000000     C...............
	...
20000164:	00000043 00000000 00000000 00000000     C...............
	...
20000184:	00000043 00000000 00000000 00000000     C...............
	...
200001a4:	00000043 00000000 00000000 00000000     C...............
	...
200001c4:	00000043 00000000 00000000 00000000     C...............
	...
200001e4:	08009d0d 080083a1 00000000 0800a7b0     ................
200001f4:	0800a98d 0800a5c5 0800a5c5 0800a5c5     ................
20000204:	0800a5c5 0800a5c5 0800a5c5 0800a5c5     ................
20000214:	0800a5c5 0800a5c5 ffffffff ffffffff     ................
20000224:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
2000024c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000270 <FLASH_Program_Fast>:
  uint32_t dest = Address;
  uint32_t src = DataAddress;
  uint32_t primask_bit;

  /* Set FSTPG bit */
  SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
20000270:	2280      	movs	r2, #128	; 0x80
20000272:	4b0c      	ldr	r3, [pc, #48]	; (200002a4 <FLASH_Program_Fast+0x34>)
{
20000274:	b530      	push	{r4, r5, lr}
  SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
20000276:	695c      	ldr	r4, [r3, #20]
20000278:	02d2      	lsls	r2, r2, #11
2000027a:	4322      	orrs	r2, r4
2000027c:	615a      	str	r2, [r3, #20]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
2000027e:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
20000282:	b672      	cpsid	i
  /* Enter critical section: row programming should not be longer than 7 ms */
  primask_bit = __get_PRIMASK();
  __disable_irq();

  /* Fast Program : 64 words */
  while (index < 64U)
20000284:	1c4c      	adds	r4, r1, #1
20000286:	34ff      	adds	r4, #255	; 0xff
  {
    *(uint32_t *)dest = *(uint32_t *)src;
20000288:	1a40      	subs	r0, r0, r1
2000028a:	680d      	ldr	r5, [r1, #0]
2000028c:	5045      	str	r5, [r0, r1]
    src += 4U;
2000028e:	3104      	adds	r1, #4
  while (index < 64U)
20000290:	42a1      	cmp	r1, r4
20000292:	d1fa      	bne.n	2000028a <FLASH_Program_Fast+0x1a>
     be anyway done later */

#if defined(FLASH_DBANK_SUPPORT)
  while ((FLASH->SR & (FLASH_SR_BSY1 | FLASH_SR_BSY2)) != 0x00U)
#else
  while ((FLASH->SR & FLASH_SR_BSY1) != 0x00U)
20000294:	2180      	movs	r1, #128	; 0x80
20000296:	0249      	lsls	r1, r1, #9
20000298:	6918      	ldr	r0, [r3, #16]
2000029a:	4208      	tst	r0, r1
2000029c:	d1fc      	bne.n	20000298 <FLASH_Program_Fast+0x28>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
2000029e:	f382 8810 	msr	PRIMASK, r2
  {
  }

  /* Exit critical section: restore previous priority mask */
  __set_PRIMASK(primask_bit);
}
200002a2:	bd30      	pop	{r4, r5, pc}
200002a4:	40022000 	.word	0x40022000
